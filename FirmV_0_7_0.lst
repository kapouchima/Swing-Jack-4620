;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 6/20/2015 12:13:41 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF042EF44  	GOTO        33928
_interrupt:
;FirmV_0_7_0.c,206 :: 		void interrupt()
0x0008	0xF019C000  	MOVFF       R0, 25
0x000C	0xF018C001  	MOVFF       R1, 24
0x0010	0xF017C004  	MOVFF       R4, 23
0x0014	0xF016C008  	MOVFF       R8, 22
0x0018	0xF015C00C  	MOVFF       R12, 21
;FirmV_0_7_0.c,208 :: 		if(TMR0IF_bit)
0x001C	0xA4F2      	BTFSS       TMR0IF_bit, 2 
0x001E	0xD02B      	BRA         L_interrupt0
;FirmV_0_7_0.c,210 :: 		msCounter=msCounter+1;
0x0020	0x2A23      	INCF        _msCounter, 1 
;FirmV_0_7_0.c,211 :: 		LCDBackLight=1;
0x0022	0x8880      	BSF         PORTA, 4 
;FirmV_0_7_0.c,212 :: 		Flag20ms=1;
0x0024	0x0E01      	MOVLW       1
0x0026	0x6E24      	MOVWF       _Flag20ms 
;FirmV_0_7_0.c,213 :: 		if(ms20A==255)
0x0028	0x5022      	MOVF        _ms20A, 0 
0x002A	0x0AFF      	XORLW       255
0x002C	0xE103      	BNZ         L_interrupt1
;FirmV_0_7_0.c,214 :: 		{ms20A=0;RemotePulse1=0;}
0x002E	0x6A22      	CLRF        _ms20A 
0x0030	0x6A25      	CLRF        _RemotePulse1 
0x0032	0xD001      	BRA         L_interrupt2
L_interrupt1:
;FirmV_0_7_0.c,216 :: 		ms20A=ms20A+1;
0x0034	0x2A22      	INCF        _ms20A, 1 
L_interrupt2:
;FirmV_0_7_0.c,218 :: 		if(ms20B==255)
0x0036	0x0102      	MOVLB       2
0x0038	0x5148      	MOVF        _ms20B, 0, 1
0x003A	0x0AFF      	XORLW       255
0x003C	0xE103      	BNZ         L_interrupt3
;FirmV_0_7_0.c,219 :: 		{ms20B=0;RemotePulse2=0;}
0x003E	0x6B48      	CLRF        _ms20B, 1
0x0040	0x6A27      	CLRF        _RemotePulse2 
0x0042	0xD001      	BRA         L_interrupt4
L_interrupt3:
;FirmV_0_7_0.c,221 :: 		ms20B=ms20B+1;
0x0044	0x2B48      	INCF        _ms20B, 1, 1
L_interrupt4:
;FirmV_0_7_0.c,223 :: 		if(msCounter>=25)
0x0046	0x0E19      	MOVLW       25
0x0048	0x5C23      	SUBWF       _msCounter, 0 
0x004A	0xE310      	BNC         L_interrupt5
;FirmV_0_7_0.c,225 :: 		msCounter=0;
0x004C	0x6A23      	CLRF        _msCounter 
;FirmV_0_7_0.c,226 :: 		ms500=ms500+1;
0x004E	0x0E01      	MOVLW       1
0x0050	0x0101      	MOVLB       1
0x0052	0x2704      	ADDWF       _ms500, 1, 1
0x0054	0x0E00      	MOVLW       0
0x0056	0x2305      	ADDWFC      _ms500+1, 1, 1
0x0058	0x2306      	ADDWFC      _ms500+2, 1, 1
0x005A	0x2307      	ADDWFC      _ms500+3, 1, 1
;FirmV_0_7_0.c,227 :: 		LCDFlashFlag=!LCDFlashFlag;
0x005C	0x521B      	MOVF        _LCDFlashFlag, 1 
0x005E	0x0E01      	MOVLW       1
0x0060	0xA4D8      	BTFSS       STATUS, 2 
0x0062	0x0E00      	MOVLW       0
0x0064	0x6E1B      	MOVWF       _LCDFlashFlag 
;FirmV_0_7_0.c,228 :: 		LCDBackLight=0;
0x0066	0x9880      	BCF         PORTA, 4 
;FirmV_0_7_0.c,229 :: 		Flag500ms=1;
0x0068	0x0E01      	MOVLW       1
0x006A	0x6E29      	MOVWF       _Flag500ms 
;FirmV_0_7_0.c,230 :: 		}
L_interrupt5:
;FirmV_0_7_0.c,231 :: 		tmr0h=0xF3;
0x006C	0x0EF3      	MOVLW       243
0x006E	0x6ED7      	MOVWF       TMR0H 
;FirmV_0_7_0.c,232 :: 		tmr0l=0xCA;
0x0070	0x0ECA      	MOVLW       202
0x0072	0x6ED6      	MOVWF       TMR0L 
;FirmV_0_7_0.c,233 :: 		TMR0IF_bit=0;
0x0074	0x94F2      	BCF         TMR0IF_bit, 2 
;FirmV_0_7_0.c,234 :: 		}
L_interrupt0:
;FirmV_0_7_0.c,237 :: 		if(INT1F_bit)
0x0076	0xA0F0      	BTFSS       INT1F_bit, 0 
0x0078	0xD016      	BRA         L_interrupt6
;FirmV_0_7_0.c,239 :: 		if(RemotePulse1==0)
0x007A	0x5025      	MOVF        _RemotePulse1, 0 
0x007C	0x0A00      	XORLW       0
0x007E	0xE103      	BNZ         L_interrupt7
;FirmV_0_7_0.c,240 :: 		{ RemotePulse1=RemotePulse1+1;ms20A=0;}
0x0080	0x2A25      	INCF        _RemotePulse1, 1 
0x0082	0x6A22      	CLRF        _ms20A 
0x0084	0xD001      	BRA         L_interrupt8
L_interrupt7:
;FirmV_0_7_0.c,242 :: 		{ RemotePulse1=RemotePulse1+1;}
0x0086	0x2A25      	INCF        _RemotePulse1, 1 
L_interrupt8:
;FirmV_0_7_0.c,243 :: 		if(RemotePulse1>=5)
0x0088	0x0E05      	MOVLW       5
0x008A	0x5C25      	SUBWF       _RemotePulse1, 0 
0x008C	0xE30B      	BNC         L_interrupt9
;FirmV_0_7_0.c,244 :: 		if((ms20A>=19)&&(ms20A<=21))
0x008E	0x0E13      	MOVLW       19
0x0090	0x5C22      	SUBWF       _ms20A, 0 
0x0092	0xE307      	BNC         L_interrupt12
0x0094	0x5022      	MOVF        _ms20A, 0 
0x0096	0x0815      	SUBLW       21
0x0098	0xE304      	BNC         L_interrupt12
L__interrupt808:
;FirmV_0_7_0.c,245 :: 		{RemoteAFlag=1;RemotePulse1=0;}
0x009A	0x0E01      	MOVLW       1
0x009C	0x6E2B      	MOVWF       _RemoteAFlag 
0x009E	0x6A25      	CLRF        _RemotePulse1 
0x00A0	0xD001      	BRA         L_interrupt13
L_interrupt12:
;FirmV_0_7_0.c,247 :: 		RemotePulse1=0;
0x00A2	0x6A25      	CLRF        _RemotePulse1 
L_interrupt13:
L_interrupt9:
;FirmV_0_7_0.c,248 :: 		INT1IF_bit=0;
0x00A4	0x90F0      	BCF         INT1IF_bit, 0 
;FirmV_0_7_0.c,249 :: 		}
L_interrupt6:
;FirmV_0_7_0.c,253 :: 		if(INT2IF_bit)
0x00A6	0xA2F0      	BTFSS       INT2IF_bit, 1 
0x00A8	0xD018      	BRA         L_interrupt14
;FirmV_0_7_0.c,255 :: 		if(RemotePulse2==0)
0x00AA	0x5027      	MOVF        _RemotePulse2, 0 
0x00AC	0x0A00      	XORLW       0
0x00AE	0xE104      	BNZ         L_interrupt15
;FirmV_0_7_0.c,256 :: 		{ RemotePulse2=RemotePulse2+1;ms20B=0;}
0x00B0	0x2A27      	INCF        _RemotePulse2, 1 
0x00B2	0x0102      	MOVLB       2
0x00B4	0x6B48      	CLRF        _ms20B, 1
0x00B6	0xD001      	BRA         L_interrupt16
L_interrupt15:
;FirmV_0_7_0.c,258 :: 		{ RemotePulse2=RemotePulse2+1;}
0x00B8	0x2A27      	INCF        _RemotePulse2, 1 
L_interrupt16:
;FirmV_0_7_0.c,259 :: 		if(RemotePulse2>=5)
0x00BA	0x0E05      	MOVLW       5
0x00BC	0x5C27      	SUBWF       _RemotePulse2, 0 
0x00BE	0xE30C      	BNC         L_interrupt17
;FirmV_0_7_0.c,260 :: 		if((ms20B>=19)&&(ms20B<=21))
0x00C0	0x0102      	MOVLB       2
0x00C2	0x0E13      	MOVLW       19
0x00C4	0x5D48      	SUBWF       _ms20B, 0, 1
0x00C6	0xE307      	BNC         L_interrupt20
0x00C8	0x5148      	MOVF        _ms20B, 0, 1
0x00CA	0x0815      	SUBLW       21
0x00CC	0xE304      	BNC         L_interrupt20
L__interrupt807:
;FirmV_0_7_0.c,261 :: 		{RemoteBFlag=1;RemotePulse2=0;}
0x00CE	0x0E01      	MOVLW       1
0x00D0	0x6E2C      	MOVWF       _RemoteBFlag 
0x00D2	0x6A27      	CLRF        _RemotePulse2 
0x00D4	0xD001      	BRA         L_interrupt21
L_interrupt20:
;FirmV_0_7_0.c,263 :: 		RemotePulse2=0;
0x00D6	0x6A27      	CLRF        _RemotePulse2 
L_interrupt21:
L_interrupt17:
;FirmV_0_7_0.c,264 :: 		INT2IF_bit=0;
0x00D8	0x92F0      	BCF         INT2IF_bit, 1 
;FirmV_0_7_0.c,265 :: 		}
L_interrupt14:
;FirmV_0_7_0.c,270 :: 		if(INT0F_bit==1)
0x00DA	0xA2F2      	BTFSS       INT0F_bit, 1 
0x00DC	0xD031      	BRA         L_interrupt22
;FirmV_0_7_0.c,272 :: 		ZCCounter=ZCCounter+1;
0x00DE	0x2A26      	INCF        _ZCCounter, 1 
;FirmV_0_7_0.c,273 :: 		if(ZCCounter==255)
0x00E0	0x5026      	MOVF        _ZCCounter, 0 
0x00E2	0x0AFF      	XORLW       255
0x00E4	0xE102      	BNZ         L_interrupt23
;FirmV_0_7_0.c,274 :: 		ZCCounter=2;
0x00E6	0x0E02      	MOVLW       2
0x00E8	0x6E26      	MOVWF       _ZCCounter 
L_interrupt23:
;FirmV_0_7_0.c,275 :: 		if(ZCCounter%3==1)
0x00EA	0x0E03      	MOVLW       3
0x00EC	0x6E04      	MOVWF       R4 
0x00EE	0xF000C026  	MOVFF       _ZCCounter, R0
0x00F2	0xD868      	RCALL       _Div_8x8_U
0x00F4	0xF000C008  	MOVFF       R8, R0
0x00F8	0x5000      	MOVF        R0, 0 
0x00FA	0x0A01      	XORLW       1
0x00FC	0xE10F      	BNZ         L_interrupt24
;FirmV_0_7_0.c,277 :: 		if(Motor1Start)
0x00FE	0x0100      	MOVLB       0
0x0100	0x53DF      	MOVF        _Motor1Start, 1, 1
0x0102	0xE005      	BZ          L_interrupt25
;FirmV_0_7_0.c,278 :: 		if(Motor1FullSpeed)
0x0104	0x53B5      	MOVF        _Motor1FullSpeed, 1, 1
0x0106	0xE002      	BZ          L_interrupt26
;FirmV_0_7_0.c,279 :: 		Motor1=1;
0x0108	0x8681      	BSF         PORTB, 3 
0x010A	0xD001      	BRA         L_interrupt27
L_interrupt26:
;FirmV_0_7_0.c,281 :: 		Motor1=0;
0x010C	0x9681      	BCF         PORTB, 3 
L_interrupt27:
L_interrupt25:
;FirmV_0_7_0.c,283 :: 		if(Motor2Start)
0x010E	0x53E0      	MOVF        _Motor2Start, 1, 1
0x0110	0xE005      	BZ          L_interrupt28
;FirmV_0_7_0.c,284 :: 		if(Motor2FullSpeed)
0x0112	0x53B8      	MOVF        _Motor2FullSpeed, 1, 1
0x0114	0xE002      	BZ          L_interrupt29
;FirmV_0_7_0.c,285 :: 		Motor2=1;
0x0116	0x8881      	BSF         PORTB, 4 
0x0118	0xD001      	BRA         L_interrupt30
L_interrupt29:
;FirmV_0_7_0.c,287 :: 		Motor2=0;
0x011A	0x9881      	BCF         PORTB, 4 
L_interrupt30:
L_interrupt28:
;FirmV_0_7_0.c,288 :: 		}
L_interrupt24:
;FirmV_0_7_0.c,289 :: 		if(ZCCounter%3==0)
0x011C	0x0E03      	MOVLW       3
0x011E	0x6E04      	MOVWF       R4 
0x0120	0xF000C026  	MOVFF       _ZCCounter, R0
0x0124	0xD84F      	RCALL       _Div_8x8_U
0x0126	0xF000C008  	MOVFF       R8, R0
0x012A	0x5000      	MOVF        R0, 0 
0x012C	0x0A00      	XORLW       0
0x012E	0xE107      	BNZ         L_interrupt31
;FirmV_0_7_0.c,291 :: 		if(Motor1Start)
0x0130	0x0100      	MOVLB       0
0x0132	0x53DF      	MOVF        _Motor1Start, 1, 1
0x0134	0xE001      	BZ          L_interrupt32
;FirmV_0_7_0.c,292 :: 		Motor1=1;
0x0136	0x8681      	BSF         PORTB, 3 
L_interrupt32:
;FirmV_0_7_0.c,294 :: 		if(Motor2Start)
0x0138	0x53E0      	MOVF        _Motor2Start, 1, 1
0x013A	0xE001      	BZ          L_interrupt33
;FirmV_0_7_0.c,295 :: 		Motor2=1;
0x013C	0x8881      	BSF         PORTB, 4 
L_interrupt33:
;FirmV_0_7_0.c,296 :: 		}
L_interrupt31:
;FirmV_0_7_0.c,297 :: 		INT0F_bit=0;
0x013E	0x92F2      	BCF         INT0F_bit, 1 
;FirmV_0_7_0.c,298 :: 		}
L_interrupt22:
;FirmV_0_7_0.c,299 :: 		}
L__interrupt927:
0x0140	0xF000C019  	MOVFF       25, R0
0x0144	0xF001C018  	MOVFF       24, R1
0x0148	0xF004C017  	MOVFF       23, R4
0x014C	0xF008C016  	MOVFF       22, R8
0x0150	0xF00CC015  	MOVFF       21, R12
0x0154	0x0011      	RETFIE      1
; end of _interrupt
_UART1_Write:
;__Lib_UART_c67.c,58 :: 		
;__Lib_UART_c67.c,59 :: 		
L_UART1_Write3:
0x0156	0xB2AC      	BTFSC       TXSTA, 1 
0x0158	0xD002      	BRA         L_UART1_Write4
;__Lib_UART_c67.c,60 :: 		
0x015A	0x0000      	NOP
0x015C	0xD7FC      	BRA         L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,61 :: 		
0x015E	0xFFADC606  	MOVFF       FARG_UART1_Write_data_, TXREG
;__Lib_UART_c67.c,62 :: 		
L_end_UART1_Write:
0x0162	0x0012      	RETURN      0
; end of _UART1_Write
_SPI1_Write:
;__Lib_SPI_c345.c,76 :: 		
;__Lib_SPI_c345.c,79 :: 		
0x0164	0xFFC9C606  	MOVFF       FARG_SPI1_Write_data_, SSPBUF
;__Lib_SPI_c345.c,80 :: 		
L_SPI1_Write8:
0x0168	0xB0C7      	BTFSC       SSPSTAT, 0 
0x016A	0xD002      	BRA         L_SPI1_Write9
;__Lib_SPI_c345.c,81 :: 		
0x016C	0x0000      	NOP
0x016E	0xD7FC      	BRA         L_SPI1_Write8
L_SPI1_Write9:
;__Lib_SPI_c345.c,82 :: 		
0x0170	0xF000CFC9  	MOVFF       SSPBUF, R0
;__Lib_SPI_c345.c,84 :: 		
L_end_SPI1_Write:
0x0174	0x0012      	RETURN      0
; end of _SPI1_Write
_____DoIFC:
;__Lib_System.c,93 :: 		
;__Lib_System.c,94 :: 		
0x0176	0x50F2      	MOVF        INTCON, 0, 0
;__Lib_System.c,95 :: 		
0x0178	0x6E02      	MOVWF       R2, higher_addr(_CC2D_Loop1)
;__Lib_System.c,96 :: 		
0x017A	0x9EF2      	BCF         INTCON, 7 
;__Lib_System.c,97 :: 		
0x017C	0x0005      	PUSH
;__Lib_System.c,98 :: 		
0x017E	0x6AFF      	CLRF        TOSU, higher_addr(_CC2D_Loop1)
;__Lib_System.c,99 :: 		
0x0180	0x5001      	MOVF        R1, 0, 0
;__Lib_System.c,100 :: 		
0x0182	0x6EFE      	MOVWF       TOSH, higher_addr(_CC2D_Loop1)
;__Lib_System.c,101 :: 		
0x0184	0x5000      	MOVF        R0, 0, 0
;__Lib_System.c,102 :: 		
0x0186	0x6EFD      	MOVWF       TOSL, higher_addr(_CC2D_Loop1)
;__Lib_System.c,103 :: 		
0x0188	0xBE02      	BTFSC       R2, 7, 0
;__Lib_System.c,104 :: 		
0x018A	0x8EF2      	BSF         INTCON, 7, 0
;__Lib_System.c,105 :: 		
;__Lib_System.c,107 :: 		
L_end_____DoIFC:
0x018C	0x0012      	RETURN      0
; end of _____DoIFC
_Div_16x16_U:
;__Lib_Math.c,102 :: 		
;__Lib_Math.c,109 :: 		
0x018E	0x6A08      	CLRF        R8, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,110 :: 		
0x0190	0x6A09      	CLRF        R9, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,111 :: 		
0x0192	0x0E10      	MOVLW       16
;__Lib_Math.c,112 :: 		
0x0194	0x6E0C      	MOVWF       R12, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,113 :: 		
0x0196	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,114 :: 		
0x0198	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,115 :: 		
0x019A	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,116 :: 		
0x019C	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,117 :: 		
0x019E	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,118 :: 		
0x01A0	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,119 :: 		
0x01A2	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,120 :: 		
0x01A4	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,121 :: 		
0x01A6	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,122 :: 		
0x01A8	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,123 :: 		
0x01AA	0xD007      	BRA         $+16
;__Lib_Math.c,124 :: 		
0x01AC	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,125 :: 		
0x01AE	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,126 :: 		
0x01B0	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,127 :: 		
0x01B2	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,128 :: 		
0x01B4	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,129 :: 		
0x01B6	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,130 :: 		
0x01B8	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,131 :: 		
0x01BA	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,132 :: 		
0x01BC	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,133 :: 		
0x01BE	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,134 :: 		
0x01C0	0xD7EA      	BRA         $-42
;__Lib_Math.c,136 :: 		
L_end_Div_16x16_U:
0x01C2	0x0012      	RETURN      0
; end of _Div_16x16_U
_Div_8x8_U:
;__Lib_Math.c,77 :: 		
;__Lib_Math.c,84 :: 		
0x01C4	0x6A08      	CLRF        R8, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,85 :: 		
0x01C6	0x0E08      	MOVLW       8
;__Lib_Math.c,86 :: 		
0x01C8	0x6E0C      	MOVWF       R12, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,87 :: 		
0x01CA	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,88 :: 		
0x01CC	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,89 :: 		
0x01CE	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,90 :: 		
0x01D0	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,91 :: 		
0x01D2	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,92 :: 		
0x01D4	0xD002      	BRA         $+6
;__Lib_Math.c,93 :: 		
0x01D6	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,94 :: 		
0x01D8	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,95 :: 		
0x01DA	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,96 :: 		
0x01DC	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,97 :: 		
0x01DE	0xD7F5      	BRA         $-20
;__Lib_Math.c,99 :: 		
L_end_Div_8x8_U:
0x01E0	0x0012      	RETURN      0
; end of _Div_8x8_U
_EEPROM_Write:
;__Lib_EEPROM_1024.c,23 :: 		
;__Lib_EEPROM_1024.c,26 :: 		
L_EEPROM_Write0:
0x01E2	0xA2A6      	BTFSS       EECON1, 1 
0x01E4	0xD002      	BRA         L_EEPROM_Write1
;__Lib_EEPROM_1024.c,27 :: 		
0x01E6	0x0000      	NOP
0x01E8	0xD7FC      	BRA         L_EEPROM_Write0
L_EEPROM_Write1:
;__Lib_EEPROM_1024.c,28 :: 		
0x01EA	0x9CA6      	BCF         EECON1, 6 
;__Lib_EEPROM_1024.c,29 :: 		
0x01EC	0xFFAAC600  	MOVFF       FARG_EEPROM_Write_address+1, EEADRH
;__Lib_EEPROM_1024.c,30 :: 		
0x01F0	0xFFA9C5FF  	MOVFF       FARG_EEPROM_Write_address, EEADR
;__Lib_EEPROM_1024.c,31 :: 		
0x01F4	0xFFA8C601  	MOVFF       FARG_EEPROM_Write_data_, EEDATA
;__Lib_EEPROM_1024.c,32 :: 		
0x01F8	0x9EA6      	BCF         EECON1, 7 
;__Lib_EEPROM_1024.c,33 :: 		
0x01FA	0x84A6      	BSF         EECON1, 2 
;__Lib_EEPROM_1024.c,35 :: 		
0x01FC	0xF000CFF2  	MOVFF       INTCON, R0
;__Lib_EEPROM_1024.c,38 :: 		
0x0200	0x9EF2      	BCF         INTCON, 7 
;__Lib_EEPROM_1024.c,39 :: 		
0x0202	0x0E55      	MOVLW       85
0x0204	0x6EA7      	MOVWF       EECON2 
;__Lib_EEPROM_1024.c,40 :: 		
0x0206	0x0EAA      	MOVLW       170
0x0208	0x6EA7      	MOVWF       EECON2 
;__Lib_EEPROM_1024.c,41 :: 		
0x020A	0x82A6      	BSF         EECON1, 1 
;__Lib_EEPROM_1024.c,44 :: 		
0x020C	0xBE00      	BTFSC       R0, 7 
0x020E	0xD002      	BRA         L__EEPROM_Write4
0x0210	0x9EF2      	BCF         INTCON, 7 
0x0212	0xD001      	BRA         L__EEPROM_Write5
L__EEPROM_Write4:
0x0214	0x8EF2      	BSF         INTCON, 7 
L__EEPROM_Write5:
;__Lib_EEPROM_1024.c,46 :: 		
0x0216	0x94A6      	BCF         EECON1, 2 
;__Lib_EEPROM_1024.c,48 :: 		
L_end_EEPROM_Write:
0x0218	0x0012      	RETURN      0
; end of _EEPROM_Write
_memcpy:
;__Lib_CString.c,44 :: 		
;__Lib_CString.c,48 :: 		
0x021A	0xF004C601  	MOVFF       FARG_memcpy_s1, R4
0x021E	0xF005C602  	MOVFF       FARG_memcpy_s1+1, R5
;__Lib_CString.c,49 :: 		
0x0222	0xF002C5FF  	MOVFF       FARG_memcpy_d1, R2
0x0226	0xF003C600  	MOVFF       FARG_memcpy_d1+1, R3
;__Lib_CString.c,50 :: 		
L_memcpy7:
0x022A	0xF000C603  	MOVFF       FARG_memcpy_n, R0
0x022E	0xF001C604  	MOVFF       FARG_memcpy_n+1, R1
0x0232	0x0E01      	MOVLW       1
0x0234	0x0106      	MOVLB       6
0x0236	0x5F03      	SUBWF       FARG_memcpy_n, 1, 1
0x0238	0x0E00      	MOVLW       0
0x023A	0x5B04      	SUBWFB      FARG_memcpy_n+1, 1, 1
0x023C	0x5000      	MOVF        R0, 0 
0x023E	0x1001      	IORWF       R1, 0 
0x0240	0xE00F      	BZ          L_memcpy8
;__Lib_CString.c,51 :: 		
0x0242	0xFFE9C004  	MOVFF       R4, FSR0L
0x0246	0xFFEAC005  	MOVFF       R5, FSR0H
0x024A	0xFFE1C002  	MOVFF       R2, FSR1L
0x024E	0xFFE2C003  	MOVFF       R3, FSR1H
0x0252	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x0256	0x4A02      	INFSNZ      R2, 1 
0x0258	0x2A03      	INCF        R3, 1 
0x025A	0x4A04      	INFSNZ      R4, 1 
0x025C	0x2A05      	INCF        R5, 1 
0x025E	0xD7E5      	BRA         L_memcpy7
L_memcpy8:
;__Lib_CString.c,53 :: 		
0x0260	0xF000C5FF  	MOVFF       FARG_memcpy_d1, R0
0x0264	0xF001C600  	MOVFF       FARG_memcpy_d1+1, R1
;__Lib_CString.c,54 :: 		
L_end_memcpy:
0x0268	0x0012      	RETURN      0
; end of _memcpy
_WordToStr:
;__Lib_Conversions.c,84 :: 		
;__Lib_Conversions.c,89 :: 		
0x026A	0x0106      	MOVLB       6
0x026C	0x6B03      	CLRF        WordToStr_len_L0, 1
L_WordToStr6:
0x026E	0x0E05      	MOVLW       5
0x0270	0x5D03      	SUBWF       WordToStr_len_L0, 0, 1
0x0272	0xE20A      	BC          L_WordToStr7
;__Lib_Conversions.c,90 :: 		
0x0274	0x5103      	MOVF        WordToStr_len_L0, 0, 1
0x0276	0x2501      	ADDWF       FARG_WordToStr_output, 0, 1
0x0278	0x6EE1      	MOVWF       FSR1L 
0x027A	0x0E00      	MOVLW       0
0x027C	0x2102      	ADDWFC      FARG_WordToStr_output+1, 0, 1
0x027E	0x6EE2      	MOVWF       FSR1H 
0x0280	0x0E20      	MOVLW       32
0x0282	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,89 :: 		
0x0284	0x2B03      	INCF        WordToStr_len_L0, 1, 1
;__Lib_Conversions.c,90 :: 		
0x0286	0xD7F3      	BRA         L_WordToStr6
L_WordToStr7:
;__Lib_Conversions.c,91 :: 		
0x0288	0x5103      	MOVF        WordToStr_len_L0, 0, 1
0x028A	0x2501      	ADDWF       FARG_WordToStr_output, 0, 1
0x028C	0x6EE1      	MOVWF       FSR1L 
0x028E	0x0E00      	MOVLW       0
0x0290	0x2102      	ADDWFC      FARG_WordToStr_output+1, 0, 1
0x0292	0x6EE2      	MOVWF       FSR1H 
0x0294	0x6AE6      	CLRF        POSTINC1 
0x0296	0x0703      	DECF        WordToStr_len_L0, 1, 1
;__Lib_Conversions.c,93 :: 		
L_WordToStr9:
;__Lib_Conversions.c,94 :: 		
0x0298	0x5103      	MOVF        WordToStr_len_L0, 0, 1
0x029A	0x2501      	ADDWF       FARG_WordToStr_output, 0, 1
0x029C	0x6F04      	MOVWF       FLOC__WordToStr, 1
0x029E	0x0E00      	MOVLW       0
0x02A0	0x2102      	ADDWFC      FARG_WordToStr_output+1, 0, 1
0x02A2	0x6F05      	MOVWF       FLOC__WordToStr+1, 1
0x02A4	0x0E0A      	MOVLW       10
0x02A6	0x6E04      	MOVWF       R4 
0x02A8	0x0E00      	MOVLW       0
0x02AA	0x6E05      	MOVWF       R5 
0x02AC	0xF000C5FF  	MOVFF       FARG_WordToStr_input, R0
0x02B0	0xF001C600  	MOVFF       FARG_WordToStr_input+1, R1
0x02B4	0xDF6C      	RCALL       _Div_16x16_U
0x02B6	0xF000C008  	MOVFF       R8, R0
0x02BA	0xF001C009  	MOVFF       R9, R1
0x02BE	0x0E30      	MOVLW       48
0x02C0	0x2600      	ADDWF       R0, 1 
0x02C2	0xFFE1C604  	MOVFF       FLOC__WordToStr, FSR1L
0x02C6	0xFFE2C605  	MOVFF       FLOC__WordToStr+1, FSR1H
0x02CA	0xFFE6C000  	MOVFF       R0, POSTINC1
;__Lib_Conversions.c,95 :: 		
0x02CE	0x0E0A      	MOVLW       10
0x02D0	0x6E04      	MOVWF       R4 
0x02D2	0x0E00      	MOVLW       0
0x02D4	0x6E05      	MOVWF       R5 
0x02D6	0xF000C5FF  	MOVFF       FARG_WordToStr_input, R0
0x02DA	0xF001C600  	MOVFF       FARG_WordToStr_input+1, R1
0x02DE	0xDF57      	RCALL       _Div_16x16_U
0x02E0	0xF5FFC000  	MOVFF       R0, FARG_WordToStr_input
0x02E4	0xF600C001  	MOVFF       R1, FARG_WordToStr_input+1
;__Lib_Conversions.c,96 :: 		
0x02E8	0x0E00      	MOVLW       0
0x02EA	0x1801      	XORWF       R1, 0 
0x02EC	0xE102      	BNZ         L__WordToStr109
0x02EE	0x0E00      	MOVLW       0
0x02F0	0x1800      	XORWF       R0, 0 
L__WordToStr109:
0x02F2	0xE101      	BNZ         L_WordToStr11
;__Lib_Conversions.c,97 :: 		
0x02F4	0xD002      	BRA         L_WordToStr10
L_WordToStr11:
;__Lib_Conversions.c,98 :: 		
0x02F6	0x0703      	DECF        WordToStr_len_L0, 1, 1
;__Lib_Conversions.c,99 :: 		
0x02F8	0xD7CF      	BRA         L_WordToStr9
L_WordToStr10:
;__Lib_Conversions.c,100 :: 		
L_end_WordToStr:
0x02FA	0x0012      	RETURN      0
; end of _WordToStr
_ByteToStr:
;__Lib_Conversions.c,66 :: 		
;__Lib_Conversions.c,69 :: 		
0x02FC	0x0106      	MOVLB       6
0x02FE	0x6B02      	CLRF        ByteToStr_DigitPos_L0, 1
L_ByteToStr0:
0x0300	0x0E03      	MOVLW       3
0x0302	0x5D02      	SUBWF       ByteToStr_DigitPos_L0, 0, 1
0x0304	0xE20A      	BC          L_ByteToStr1
;__Lib_Conversions.c,70 :: 		
0x0306	0x5102      	MOVF        ByteToStr_DigitPos_L0, 0, 1
0x0308	0x2500      	ADDWF       FARG_ByteToStr_output, 0, 1
0x030A	0x6EE1      	MOVWF       FSR1L 
0x030C	0x0E00      	MOVLW       0
0x030E	0x2101      	ADDWFC      FARG_ByteToStr_output+1, 0, 1
0x0310	0x6EE2      	MOVWF       FSR1H 
0x0312	0x0E20      	MOVLW       32
0x0314	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,69 :: 		
0x0316	0x2B02      	INCF        ByteToStr_DigitPos_L0, 1, 1
;__Lib_Conversions.c,70 :: 		
0x0318	0xD7F3      	BRA         L_ByteToStr0
L_ByteToStr1:
;__Lib_Conversions.c,72 :: 		
0x031A	0x5102      	MOVF        ByteToStr_DigitPos_L0, 0, 1
0x031C	0x2500      	ADDWF       FARG_ByteToStr_output, 0, 1
0x031E	0x6EE1      	MOVWF       FSR1L 
0x0320	0x0E00      	MOVLW       0
0x0322	0x2101      	ADDWFC      FARG_ByteToStr_output+1, 0, 1
0x0324	0x6EE2      	MOVWF       FSR1H 
0x0326	0x6AE6      	CLRF        POSTINC1 
0x0328	0x0702      	DECF        ByteToStr_DigitPos_L0, 1, 1
;__Lib_Conversions.c,74 :: 		
L_ByteToStr3:
;__Lib_Conversions.c,75 :: 		
0x032A	0x5102      	MOVF        ByteToStr_DigitPos_L0, 0, 1
0x032C	0x2500      	ADDWF       FARG_ByteToStr_output, 0, 1
0x032E	0x6F03      	MOVWF       FLOC__ByteToStr, 1
0x0330	0x0E00      	MOVLW       0
0x0332	0x2101      	ADDWFC      FARG_ByteToStr_output+1, 0, 1
0x0334	0x6F04      	MOVWF       FLOC__ByteToStr+1, 1
0x0336	0x0E0A      	MOVLW       10
0x0338	0x6E04      	MOVWF       R4 
0x033A	0xF000C5FF  	MOVFF       FARG_ByteToStr_input, R0
0x033E	0xDF42      	RCALL       _Div_8x8_U
0x0340	0xF000C008  	MOVFF       R8, R0
0x0344	0x0E30      	MOVLW       48
0x0346	0x2600      	ADDWF       R0, 1 
0x0348	0xFFE1C603  	MOVFF       FLOC__ByteToStr, FSR1L
0x034C	0xFFE2C604  	MOVFF       FLOC__ByteToStr+1, FSR1H
0x0350	0xFFE6C000  	MOVFF       R0, POSTINC1
;__Lib_Conversions.c,76 :: 		
0x0354	0x0E0A      	MOVLW       10
0x0356	0x6E04      	MOVWF       R4 
0x0358	0xF000C5FF  	MOVFF       FARG_ByteToStr_input, R0
0x035C	0xDF33      	RCALL       _Div_8x8_U
0x035E	0xF5FFC000  	MOVFF       R0, FARG_ByteToStr_input
;__Lib_Conversions.c,77 :: 		
0x0362	0x5000      	MOVF        R0, 0 
0x0364	0x0A00      	XORLW       0
0x0366	0xE101      	BNZ         L_ByteToStr5
;__Lib_Conversions.c,78 :: 		
0x0368	0xD002      	BRA         L_ByteToStr4
L_ByteToStr5:
;__Lib_Conversions.c,79 :: 		
0x036A	0x0702      	DECF        ByteToStr_DigitPos_L0, 1, 1
;__Lib_Conversions.c,80 :: 		
0x036C	0xD7DE      	BRA         L_ByteToStr3
L_ByteToStr4:
;__Lib_Conversions.c,81 :: 		
L_end_ByteToStr:
0x036E	0x0012      	RETURN      0
; end of _ByteToStr
_SetOverloadParams:
;FirmV_0_7_0.c,2746 :: 		void SetOverloadParams(char p1, char d1,char p2, char d2)
;FirmV_0_7_0.c,2749 :: 		switch(p1)
0x0370	0xD05E      	BRA         L_SetOverloadParams738
;FirmV_0_7_0.c,2751 :: 		case 0: OverloadTreshold1=0; break;
L_SetOverloadParams740:
0x0372	0x0101      	MOVLB       1
0x0374	0x6B89      	CLRF        _OverloadTreshold1, 1
0x0376	0x6B8A      	CLRF        _OverloadTreshold1+1, 1
0x0378	0xD08B      	BRA         L_SetOverloadParams739
;FirmV_0_7_0.c,2753 :: 		case 1: OverloadTreshold1=480; break;
L_SetOverloadParams741:
0x037A	0x0101      	MOVLB       1
0x037C	0x0EE0      	MOVLW       224
0x037E	0x6F89      	MOVWF       _OverloadTreshold1, 1
0x0380	0x0E01      	MOVLW       1
0x0382	0x6F8A      	MOVWF       _OverloadTreshold1+1, 1
0x0384	0xD085      	BRA         L_SetOverloadParams739
;FirmV_0_7_0.c,2755 :: 		case 2: OverloadTreshold1=490; break;
L_SetOverloadParams742:
0x0386	0x0101      	MOVLB       1
0x0388	0x0EEA      	MOVLW       234
0x038A	0x6F89      	MOVWF       _OverloadTreshold1, 1
0x038C	0x0E01      	MOVLW       1
0x038E	0x6F8A      	MOVWF       _OverloadTreshold1+1, 1
0x0390	0xD07F      	BRA         L_SetOverloadParams739
;FirmV_0_7_0.c,2757 :: 		case 3: OverloadTreshold1=500; break;
L_SetOverloadParams743:
0x0392	0x0101      	MOVLB       1
0x0394	0x0EF4      	MOVLW       244
0x0396	0x6F89      	MOVWF       _OverloadTreshold1, 1
0x0398	0x0E01      	MOVLW       1
0x039A	0x6F8A      	MOVWF       _OverloadTreshold1+1, 1
0x039C	0xD079      	BRA         L_SetOverloadParams739
;FirmV_0_7_0.c,2759 :: 		case 4: OverloadTreshold1=530; break;
L_SetOverloadParams744:
0x039E	0x0101      	MOVLB       1
0x03A0	0x0E12      	MOVLW       18
0x03A2	0x6F89      	MOVWF       _OverloadTreshold1, 1
0x03A4	0x0E02      	MOVLW       2
0x03A6	0x6F8A      	MOVWF       _OverloadTreshold1+1, 1
0x03A8	0xD073      	BRA         L_SetOverloadParams739
;FirmV_0_7_0.c,2761 :: 		case 5: OverloadTreshold1=550; break;
L_SetOverloadParams745:
0x03AA	0x0101      	MOVLB       1
0x03AC	0x0E26      	MOVLW       38
0x03AE	0x6F89      	MOVWF       _OverloadTreshold1, 1
0x03B0	0x0E02      	MOVLW       2
0x03B2	0x6F8A      	MOVWF       _OverloadTreshold1+1, 1
0x03B4	0xD06D      	BRA         L_SetOverloadParams739
;FirmV_0_7_0.c,2763 :: 		case 6: OverloadTreshold1=570; break;
L_SetOverloadParams746:
0x03B6	0x0101      	MOVLB       1
0x03B8	0x0E3A      	MOVLW       58
0x03BA	0x6F89      	MOVWF       _OverloadTreshold1, 1
0x03BC	0x0E02      	MOVLW       2
0x03BE	0x6F8A      	MOVWF       _OverloadTreshold1+1, 1
0x03C0	0xD067      	BRA         L_SetOverloadParams739
;FirmV_0_7_0.c,2765 :: 		case 7: OverloadTreshold1=600; break;
L_SetOverloadParams747:
0x03C2	0x0101      	MOVLB       1
0x03C4	0x0E58      	MOVLW       88
0x03C6	0x6F89      	MOVWF       _OverloadTreshold1, 1
0x03C8	0x0E02      	MOVLW       2
0x03CA	0x6F8A      	MOVWF       _OverloadTreshold1+1, 1
0x03CC	0xD061      	BRA         L_SetOverloadParams739
;FirmV_0_7_0.c,2767 :: 		case 8: OverloadTreshold1=630; break;
L_SetOverloadParams748:
0x03CE	0x0101      	MOVLB       1
0x03D0	0x0E76      	MOVLW       118
0x03D2	0x6F89      	MOVWF       _OverloadTreshold1, 1
0x03D4	0x0E02      	MOVLW       2
0x03D6	0x6F8A      	MOVWF       _OverloadTreshold1+1, 1
0x03D8	0xD05B      	BRA         L_SetOverloadParams739
;FirmV_0_7_0.c,2769 :: 		case 9: OverloadTreshold1=650; break;
L_SetOverloadParams749:
0x03DA	0x0101      	MOVLB       1
0x03DC	0x0E8A      	MOVLW       138
0x03DE	0x6F89      	MOVWF       _OverloadTreshold1, 1
0x03E0	0x0E02      	MOVLW       2
0x03E2	0x6F8A      	MOVWF       _OverloadTreshold1+1, 1
0x03E4	0xD055      	BRA         L_SetOverloadParams739
;FirmV_0_7_0.c,2771 :: 		case 10: OverloadTreshold1=670; break;
L_SetOverloadParams750:
0x03E6	0x0101      	MOVLB       1
0x03E8	0x0E9E      	MOVLW       158
0x03EA	0x6F89      	MOVWF       _OverloadTreshold1, 1
0x03EC	0x0E02      	MOVLW       2
0x03EE	0x6F8A      	MOVWF       _OverloadTreshold1+1, 1
0x03F0	0xD04F      	BRA         L_SetOverloadParams739
;FirmV_0_7_0.c,2773 :: 		case 11: OverloadTreshold1=700; break;
L_SetOverloadParams751:
0x03F2	0x0101      	MOVLB       1
0x03F4	0x0EBC      	MOVLW       188
0x03F6	0x6F89      	MOVWF       _OverloadTreshold1, 1
0x03F8	0x0E02      	MOVLW       2
0x03FA	0x6F8A      	MOVWF       _OverloadTreshold1+1, 1
0x03FC	0xD049      	BRA         L_SetOverloadParams739
;FirmV_0_7_0.c,2775 :: 		case 12: OverloadTreshold1=750; break;
L_SetOverloadParams752:
0x03FE	0x0101      	MOVLB       1
0x0400	0x0EEE      	MOVLW       238
0x0402	0x6F89      	MOVWF       _OverloadTreshold1, 1
0x0404	0x0E02      	MOVLW       2
0x0406	0x6F8A      	MOVWF       _OverloadTreshold1+1, 1
0x0408	0xD043      	BRA         L_SetOverloadParams739
;FirmV_0_7_0.c,2777 :: 		case 13: OverloadTreshold1=800; break;
L_SetOverloadParams753:
0x040A	0x0101      	MOVLB       1
0x040C	0x0E20      	MOVLW       32
0x040E	0x6F89      	MOVWF       _OverloadTreshold1, 1
0x0410	0x0E03      	MOVLW       3
0x0412	0x6F8A      	MOVWF       _OverloadTreshold1+1, 1
0x0414	0xD03D      	BRA         L_SetOverloadParams739
;FirmV_0_7_0.c,2779 :: 		case 14: OverloadTreshold1=850; break;
L_SetOverloadParams754:
0x0416	0x0101      	MOVLB       1
0x0418	0x0E52      	MOVLW       82
0x041A	0x6F89      	MOVWF       _OverloadTreshold1, 1
0x041C	0x0E03      	MOVLW       3
0x041E	0x6F8A      	MOVWF       _OverloadTreshold1+1, 1
0x0420	0xD037      	BRA         L_SetOverloadParams739
;FirmV_0_7_0.c,2781 :: 		case 15: OverloadTreshold1=900; break;
L_SetOverloadParams755:
0x0422	0x0101      	MOVLB       1
0x0424	0x0E84      	MOVLW       132
0x0426	0x6F89      	MOVWF       _OverloadTreshold1, 1
0x0428	0x0E03      	MOVLW       3
0x042A	0x6F8A      	MOVWF       _OverloadTreshold1+1, 1
0x042C	0xD031      	BRA         L_SetOverloadParams739
;FirmV_0_7_0.c,2783 :: 		}
L_SetOverloadParams738:
0x042E	0x0105      	MOVLB       5
0x0430	0x51FF      	MOVF        FARG_SetOverloadParams_p1, 0, 1
0x0432	0x0A00      	XORLW       0
0x0434	0xE09E      	BZ          L_SetOverloadParams740
0x0436	0x51FF      	MOVF        FARG_SetOverloadParams_p1, 0, 1
0x0438	0x0A01      	XORLW       1
0x043A	0xE09F      	BZ          L_SetOverloadParams741
0x043C	0x51FF      	MOVF        FARG_SetOverloadParams_p1, 0, 1
0x043E	0x0A02      	XORLW       2
0x0440	0xE0A2      	BZ          L_SetOverloadParams742
0x0442	0x51FF      	MOVF        FARG_SetOverloadParams_p1, 0, 1
0x0444	0x0A03      	XORLW       3
0x0446	0xE0A5      	BZ          L_SetOverloadParams743
0x0448	0x51FF      	MOVF        FARG_SetOverloadParams_p1, 0, 1
0x044A	0x0A04      	XORLW       4
0x044C	0xE0A8      	BZ          L_SetOverloadParams744
0x044E	0x51FF      	MOVF        FARG_SetOverloadParams_p1, 0, 1
0x0450	0x0A05      	XORLW       5
0x0452	0xE0AB      	BZ          L_SetOverloadParams745
0x0454	0x51FF      	MOVF        FARG_SetOverloadParams_p1, 0, 1
0x0456	0x0A06      	XORLW       6
0x0458	0xE0AE      	BZ          L_SetOverloadParams746
0x045A	0x51FF      	MOVF        FARG_SetOverloadParams_p1, 0, 1
0x045C	0x0A07      	XORLW       7
0x045E	0xE0B1      	BZ          L_SetOverloadParams747
0x0460	0x51FF      	MOVF        FARG_SetOverloadParams_p1, 0, 1
0x0462	0x0A08      	XORLW       8
0x0464	0xE0B4      	BZ          L_SetOverloadParams748
0x0466	0x51FF      	MOVF        FARG_SetOverloadParams_p1, 0, 1
0x0468	0x0A09      	XORLW       9
0x046A	0xE0B7      	BZ          L_SetOverloadParams749
0x046C	0x51FF      	MOVF        FARG_SetOverloadParams_p1, 0, 1
0x046E	0x0A0A      	XORLW       10
0x0470	0xE0BA      	BZ          L_SetOverloadParams750
0x0472	0x51FF      	MOVF        FARG_SetOverloadParams_p1, 0, 1
0x0474	0x0A0B      	XORLW       11
0x0476	0xE0BD      	BZ          L_SetOverloadParams751
0x0478	0x51FF      	MOVF        FARG_SetOverloadParams_p1, 0, 1
0x047A	0x0A0C      	XORLW       12
0x047C	0xE0C0      	BZ          L_SetOverloadParams752
0x047E	0x51FF      	MOVF        FARG_SetOverloadParams_p1, 0, 1
0x0480	0x0A0D      	XORLW       13
0x0482	0xE0C3      	BZ          L_SetOverloadParams753
0x0484	0x51FF      	MOVF        FARG_SetOverloadParams_p1, 0, 1
0x0486	0x0A0E      	XORLW       14
0x0488	0xE0C6      	BZ          L_SetOverloadParams754
0x048A	0x51FF      	MOVF        FARG_SetOverloadParams_p1, 0, 1
0x048C	0x0A0F      	XORLW       15
0x048E	0xE0C9      	BZ          L_SetOverloadParams755
L_SetOverloadParams739:
;FirmV_0_7_0.c,2786 :: 		switch(d1)
0x0490	0xD042      	BRA         L_SetOverloadParams756
;FirmV_0_7_0.c,2788 :: 		case 0: OverloadDuration1=100; break;
L_SetOverloadParams758:
0x0492	0x0E64      	MOVLW       100
0x0494	0x0101      	MOVLB       1
0x0496	0x6F8B      	MOVWF       _OverloadDuration1, 1
0x0498	0x0E00      	MOVLW       0
0x049A	0x6F8C      	MOVWF       _OverloadDuration1+1, 1
0x049C	0xD05E      	BRA         L_SetOverloadParams757
;FirmV_0_7_0.c,2790 :: 		case 1: OverloadDuration1=500; break;
L_SetOverloadParams759:
0x049E	0x0101      	MOVLB       1
0x04A0	0x0EF4      	MOVLW       244
0x04A2	0x6F8B      	MOVWF       _OverloadDuration1, 1
0x04A4	0x0E01      	MOVLW       1
0x04A6	0x6F8C      	MOVWF       _OverloadDuration1+1, 1
0x04A8	0xD058      	BRA         L_SetOverloadParams757
;FirmV_0_7_0.c,2792 :: 		case 2: OverloadDuration1=1000; break;
L_SetOverloadParams760:
0x04AA	0x0101      	MOVLB       1
0x04AC	0x0EE8      	MOVLW       232
0x04AE	0x6F8B      	MOVWF       _OverloadDuration1, 1
0x04B0	0x0E03      	MOVLW       3
0x04B2	0x6F8C      	MOVWF       _OverloadDuration1+1, 1
0x04B4	0xD052      	BRA         L_SetOverloadParams757
;FirmV_0_7_0.c,2794 :: 		case 3: OverloadDuration1=1500; break;
L_SetOverloadParams761:
0x04B6	0x0101      	MOVLB       1
0x04B8	0x0EDC      	MOVLW       220
0x04BA	0x6F8B      	MOVWF       _OverloadDuration1, 1
0x04BC	0x0E05      	MOVLW       5
0x04BE	0x6F8C      	MOVWF       _OverloadDuration1+1, 1
0x04C0	0xD04C      	BRA         L_SetOverloadParams757
;FirmV_0_7_0.c,2796 :: 		case 4: OverloadDuration1=2000; break;
L_SetOverloadParams762:
0x04C2	0x0101      	MOVLB       1
0x04C4	0x0ED0      	MOVLW       208
0x04C6	0x6F8B      	MOVWF       _OverloadDuration1, 1
0x04C8	0x0E07      	MOVLW       7
0x04CA	0x6F8C      	MOVWF       _OverloadDuration1+1, 1
0x04CC	0xD046      	BRA         L_SetOverloadParams757
;FirmV_0_7_0.c,2798 :: 		case 5: OverloadDuration1=2500; break;
L_SetOverloadParams763:
0x04CE	0x0101      	MOVLB       1
0x04D0	0x0EC4      	MOVLW       196
0x04D2	0x6F8B      	MOVWF       _OverloadDuration1, 1
0x04D4	0x0E09      	MOVLW       9
0x04D6	0x6F8C      	MOVWF       _OverloadDuration1+1, 1
0x04D8	0xD040      	BRA         L_SetOverloadParams757
;FirmV_0_7_0.c,2800 :: 		case 6: OverloadDuration1=3000; break;
L_SetOverloadParams764:
0x04DA	0x0101      	MOVLB       1
0x04DC	0x0EB8      	MOVLW       184
0x04DE	0x6F8B      	MOVWF       _OverloadDuration1, 1
0x04E0	0x0E0B      	MOVLW       11
0x04E2	0x6F8C      	MOVWF       _OverloadDuration1+1, 1
0x04E4	0xD03A      	BRA         L_SetOverloadParams757
;FirmV_0_7_0.c,2802 :: 		case 7: OverloadDuration1=3500; break;
L_SetOverloadParams765:
0x04E6	0x0101      	MOVLB       1
0x04E8	0x0EAC      	MOVLW       172
0x04EA	0x6F8B      	MOVWF       _OverloadDuration1, 1
0x04EC	0x0E0D      	MOVLW       13
0x04EE	0x6F8C      	MOVWF       _OverloadDuration1+1, 1
0x04F0	0xD034      	BRA         L_SetOverloadParams757
;FirmV_0_7_0.c,2804 :: 		case 8: OverloadDuration1=4000; break;
L_SetOverloadParams766:
0x04F2	0x0101      	MOVLB       1
0x04F4	0x0EA0      	MOVLW       160
0x04F6	0x6F8B      	MOVWF       _OverloadDuration1, 1
0x04F8	0x0E0F      	MOVLW       15
0x04FA	0x6F8C      	MOVWF       _OverloadDuration1+1, 1
0x04FC	0xD02E      	BRA         L_SetOverloadParams757
;FirmV_0_7_0.c,2806 :: 		case 9: OverloadDuration1=4500; break;
L_SetOverloadParams767:
0x04FE	0x0101      	MOVLB       1
0x0500	0x0E94      	MOVLW       148
0x0502	0x6F8B      	MOVWF       _OverloadDuration1, 1
0x0504	0x0E11      	MOVLW       17
0x0506	0x6F8C      	MOVWF       _OverloadDuration1+1, 1
0x0508	0xD028      	BRA         L_SetOverloadParams757
;FirmV_0_7_0.c,2808 :: 		case 10: OverloadDuration1=5000; break;
L_SetOverloadParams768:
0x050A	0x0101      	MOVLB       1
0x050C	0x0E88      	MOVLW       136
0x050E	0x6F8B      	MOVWF       _OverloadDuration1, 1
0x0510	0x0E13      	MOVLW       19
0x0512	0x6F8C      	MOVWF       _OverloadDuration1+1, 1
0x0514	0xD022      	BRA         L_SetOverloadParams757
;FirmV_0_7_0.c,2809 :: 		}
L_SetOverloadParams756:
0x0516	0x0106      	MOVLB       6
0x0518	0x5100      	MOVF        FARG_SetOverloadParams_d1, 0, 1
0x051A	0x0A00      	XORLW       0
0x051C	0xE0BA      	BZ          L_SetOverloadParams758
0x051E	0x5100      	MOVF        FARG_SetOverloadParams_d1, 0, 1
0x0520	0x0A01      	XORLW       1
0x0522	0xE0BD      	BZ          L_SetOverloadParams759
0x0524	0x5100      	MOVF        FARG_SetOverloadParams_d1, 0, 1
0x0526	0x0A02      	XORLW       2
0x0528	0xE0C0      	BZ          L_SetOverloadParams760
0x052A	0x5100      	MOVF        FARG_SetOverloadParams_d1, 0, 1
0x052C	0x0A03      	XORLW       3
0x052E	0xE0C3      	BZ          L_SetOverloadParams761
0x0530	0x5100      	MOVF        FARG_SetOverloadParams_d1, 0, 1
0x0532	0x0A04      	XORLW       4
0x0534	0xE0C6      	BZ          L_SetOverloadParams762
0x0536	0x5100      	MOVF        FARG_SetOverloadParams_d1, 0, 1
0x0538	0x0A05      	XORLW       5
0x053A	0xE0C9      	BZ          L_SetOverloadParams763
0x053C	0x5100      	MOVF        FARG_SetOverloadParams_d1, 0, 1
0x053E	0x0A06      	XORLW       6
0x0540	0xE0CC      	BZ          L_SetOverloadParams764
0x0542	0x5100      	MOVF        FARG_SetOverloadParams_d1, 0, 1
0x0544	0x0A07      	XORLW       7
0x0546	0xE0CF      	BZ          L_SetOverloadParams765
0x0548	0x5100      	MOVF        FARG_SetOverloadParams_d1, 0, 1
0x054A	0x0A08      	XORLW       8
0x054C	0xE0D2      	BZ          L_SetOverloadParams766
0x054E	0x5100      	MOVF        FARG_SetOverloadParams_d1, 0, 1
0x0550	0x0A09      	XORLW       9
0x0552	0xE0D5      	BZ          L_SetOverloadParams767
0x0554	0x5100      	MOVF        FARG_SetOverloadParams_d1, 0, 1
0x0556	0x0A0A      	XORLW       10
0x0558	0xE0D8      	BZ          L_SetOverloadParams768
L_SetOverloadParams757:
;FirmV_0_7_0.c,2815 :: 		switch(p2)
0x055A	0xD05E      	BRA         L_SetOverloadParams769
;FirmV_0_7_0.c,2817 :: 		case 0: OverloadTreshold2=0; break;
L_SetOverloadParams771:
0x055C	0x0101      	MOVLB       1
0x055E	0x6B8D      	CLRF        _OverloadTreshold2, 1
0x0560	0x6B8E      	CLRF        _OverloadTreshold2+1, 1
0x0562	0xD08B      	BRA         L_SetOverloadParams770
;FirmV_0_7_0.c,2819 :: 		case 1: OverloadTreshold2=480; break;
L_SetOverloadParams772:
0x0564	0x0101      	MOVLB       1
0x0566	0x0EE0      	MOVLW       224
0x0568	0x6F8D      	MOVWF       _OverloadTreshold2, 1
0x056A	0x0E01      	MOVLW       1
0x056C	0x6F8E      	MOVWF       _OverloadTreshold2+1, 1
0x056E	0xD085      	BRA         L_SetOverloadParams770
;FirmV_0_7_0.c,2821 :: 		case 2: OverloadTreshold2=490; break;
L_SetOverloadParams773:
0x0570	0x0101      	MOVLB       1
0x0572	0x0EEA      	MOVLW       234
0x0574	0x6F8D      	MOVWF       _OverloadTreshold2, 1
0x0576	0x0E01      	MOVLW       1
0x0578	0x6F8E      	MOVWF       _OverloadTreshold2+1, 1
0x057A	0xD07F      	BRA         L_SetOverloadParams770
;FirmV_0_7_0.c,2823 :: 		case 3: OverloadTreshold2=500; break;
L_SetOverloadParams774:
0x057C	0x0101      	MOVLB       1
0x057E	0x0EF4      	MOVLW       244
0x0580	0x6F8D      	MOVWF       _OverloadTreshold2, 1
0x0582	0x0E01      	MOVLW       1
0x0584	0x6F8E      	MOVWF       _OverloadTreshold2+1, 1
0x0586	0xD079      	BRA         L_SetOverloadParams770
;FirmV_0_7_0.c,2825 :: 		case 4: OverloadTreshold2=530; break;
L_SetOverloadParams775:
0x0588	0x0101      	MOVLB       1
0x058A	0x0E12      	MOVLW       18
0x058C	0x6F8D      	MOVWF       _OverloadTreshold2, 1
0x058E	0x0E02      	MOVLW       2
0x0590	0x6F8E      	MOVWF       _OverloadTreshold2+1, 1
0x0592	0xD073      	BRA         L_SetOverloadParams770
;FirmV_0_7_0.c,2827 :: 		case 5: OverloadTreshold2=550; break;
L_SetOverloadParams776:
0x0594	0x0101      	MOVLB       1
0x0596	0x0E26      	MOVLW       38
0x0598	0x6F8D      	MOVWF       _OverloadTreshold2, 1
0x059A	0x0E02      	MOVLW       2
0x059C	0x6F8E      	MOVWF       _OverloadTreshold2+1, 1
0x059E	0xD06D      	BRA         L_SetOverloadParams770
;FirmV_0_7_0.c,2829 :: 		case 6: OverloadTreshold2=570; break;
L_SetOverloadParams777:
0x05A0	0x0101      	MOVLB       1
0x05A2	0x0E3A      	MOVLW       58
0x05A4	0x6F8D      	MOVWF       _OverloadTreshold2, 1
0x05A6	0x0E02      	MOVLW       2
0x05A8	0x6F8E      	MOVWF       _OverloadTreshold2+1, 1
0x05AA	0xD067      	BRA         L_SetOverloadParams770
;FirmV_0_7_0.c,2831 :: 		case 7: OverloadTreshold2=600; break;
L_SetOverloadParams778:
0x05AC	0x0101      	MOVLB       1
0x05AE	0x0E58      	MOVLW       88
0x05B0	0x6F8D      	MOVWF       _OverloadTreshold2, 1
0x05B2	0x0E02      	MOVLW       2
0x05B4	0x6F8E      	MOVWF       _OverloadTreshold2+1, 1
0x05B6	0xD061      	BRA         L_SetOverloadParams770
;FirmV_0_7_0.c,2833 :: 		case 8: OverloadTreshold2=630; break;
L_SetOverloadParams779:
0x05B8	0x0101      	MOVLB       1
0x05BA	0x0E76      	MOVLW       118
0x05BC	0x6F8D      	MOVWF       _OverloadTreshold2, 1
0x05BE	0x0E02      	MOVLW       2
0x05C0	0x6F8E      	MOVWF       _OverloadTreshold2+1, 1
0x05C2	0xD05B      	BRA         L_SetOverloadParams770
;FirmV_0_7_0.c,2835 :: 		case 9: OverloadTreshold2=650; break;
L_SetOverloadParams780:
0x05C4	0x0101      	MOVLB       1
0x05C6	0x0E8A      	MOVLW       138
0x05C8	0x6F8D      	MOVWF       _OverloadTreshold2, 1
0x05CA	0x0E02      	MOVLW       2
0x05CC	0x6F8E      	MOVWF       _OverloadTreshold2+1, 1
0x05CE	0xD055      	BRA         L_SetOverloadParams770
;FirmV_0_7_0.c,2837 :: 		case 10: OverloadTreshold2=670; break;
L_SetOverloadParams781:
0x05D0	0x0101      	MOVLB       1
0x05D2	0x0E9E      	MOVLW       158
0x05D4	0x6F8D      	MOVWF       _OverloadTreshold2, 1
0x05D6	0x0E02      	MOVLW       2
0x05D8	0x6F8E      	MOVWF       _OverloadTreshold2+1, 1
0x05DA	0xD04F      	BRA         L_SetOverloadParams770
;FirmV_0_7_0.c,2839 :: 		case 11: OverloadTreshold2=700; break;
L_SetOverloadParams782:
0x05DC	0x0101      	MOVLB       1
0x05DE	0x0EBC      	MOVLW       188
0x05E0	0x6F8D      	MOVWF       _OverloadTreshold2, 1
0x05E2	0x0E02      	MOVLW       2
0x05E4	0x6F8E      	MOVWF       _OverloadTreshold2+1, 1
0x05E6	0xD049      	BRA         L_SetOverloadParams770
;FirmV_0_7_0.c,2841 :: 		case 12: OverloadTreshold2=750; break;
L_SetOverloadParams783:
0x05E8	0x0101      	MOVLB       1
0x05EA	0x0EEE      	MOVLW       238
0x05EC	0x6F8D      	MOVWF       _OverloadTreshold2, 1
0x05EE	0x0E02      	MOVLW       2
0x05F0	0x6F8E      	MOVWF       _OverloadTreshold2+1, 1
0x05F2	0xD043      	BRA         L_SetOverloadParams770
;FirmV_0_7_0.c,2843 :: 		case 13: OverloadTreshold2=800; break;
L_SetOverloadParams784:
0x05F4	0x0101      	MOVLB       1
0x05F6	0x0E20      	MOVLW       32
0x05F8	0x6F8D      	MOVWF       _OverloadTreshold2, 1
0x05FA	0x0E03      	MOVLW       3
0x05FC	0x6F8E      	MOVWF       _OverloadTreshold2+1, 1
0x05FE	0xD03D      	BRA         L_SetOverloadParams770
;FirmV_0_7_0.c,2845 :: 		case 14: OverloadTreshold2=850; break;
L_SetOverloadParams785:
0x0600	0x0101      	MOVLB       1
0x0602	0x0E52      	MOVLW       82
0x0604	0x6F8D      	MOVWF       _OverloadTreshold2, 1
0x0606	0x0E03      	MOVLW       3
0x0608	0x6F8E      	MOVWF       _OverloadTreshold2+1, 1
0x060A	0xD037      	BRA         L_SetOverloadParams770
;FirmV_0_7_0.c,2847 :: 		case 15: OverloadTreshold2=900; break;
L_SetOverloadParams786:
0x060C	0x0101      	MOVLB       1
0x060E	0x0E84      	MOVLW       132
0x0610	0x6F8D      	MOVWF       _OverloadTreshold2, 1
0x0612	0x0E03      	MOVLW       3
0x0614	0x6F8E      	MOVWF       _OverloadTreshold2+1, 1
0x0616	0xD031      	BRA         L_SetOverloadParams770
;FirmV_0_7_0.c,2849 :: 		}
L_SetOverloadParams769:
0x0618	0x0106      	MOVLB       6
0x061A	0x5101      	MOVF        FARG_SetOverloadParams_p2, 0, 1
0x061C	0x0A00      	XORLW       0
0x061E	0xE09E      	BZ          L_SetOverloadParams771
0x0620	0x5101      	MOVF        FARG_SetOverloadParams_p2, 0, 1
0x0622	0x0A01      	XORLW       1
0x0624	0xE09F      	BZ          L_SetOverloadParams772
0x0626	0x5101      	MOVF        FARG_SetOverloadParams_p2, 0, 1
0x0628	0x0A02      	XORLW       2
0x062A	0xE0A2      	BZ          L_SetOverloadParams773
0x062C	0x5101      	MOVF        FARG_SetOverloadParams_p2, 0, 1
0x062E	0x0A03      	XORLW       3
0x0630	0xE0A5      	BZ          L_SetOverloadParams774
0x0632	0x5101      	MOVF        FARG_SetOverloadParams_p2, 0, 1
0x0634	0x0A04      	XORLW       4
0x0636	0xE0A8      	BZ          L_SetOverloadParams775
0x0638	0x5101      	MOVF        FARG_SetOverloadParams_p2, 0, 1
0x063A	0x0A05      	XORLW       5
0x063C	0xE0AB      	BZ          L_SetOverloadParams776
0x063E	0x5101      	MOVF        FARG_SetOverloadParams_p2, 0, 1
0x0640	0x0A06      	XORLW       6
0x0642	0xE0AE      	BZ          L_SetOverloadParams777
0x0644	0x5101      	MOVF        FARG_SetOverloadParams_p2, 0, 1
0x0646	0x0A07      	XORLW       7
0x0648	0xE0B1      	BZ          L_SetOverloadParams778
0x064A	0x5101      	MOVF        FARG_SetOverloadParams_p2, 0, 1
0x064C	0x0A08      	XORLW       8
0x064E	0xE0B4      	BZ          L_SetOverloadParams779
0x0650	0x5101      	MOVF        FARG_SetOverloadParams_p2, 0, 1
0x0652	0x0A09      	XORLW       9
0x0654	0xE0B7      	BZ          L_SetOverloadParams780
0x0656	0x5101      	MOVF        FARG_SetOverloadParams_p2, 0, 1
0x0658	0x0A0A      	XORLW       10
0x065A	0xE0BA      	BZ          L_SetOverloadParams781
0x065C	0x5101      	MOVF        FARG_SetOverloadParams_p2, 0, 1
0x065E	0x0A0B      	XORLW       11
0x0660	0xE0BD      	BZ          L_SetOverloadParams782
0x0662	0x5101      	MOVF        FARG_SetOverloadParams_p2, 0, 1
0x0664	0x0A0C      	XORLW       12
0x0666	0xE0C0      	BZ          L_SetOverloadParams783
0x0668	0x5101      	MOVF        FARG_SetOverloadParams_p2, 0, 1
0x066A	0x0A0D      	XORLW       13
0x066C	0xE0C3      	BZ          L_SetOverloadParams784
0x066E	0x5101      	MOVF        FARG_SetOverloadParams_p2, 0, 1
0x0670	0x0A0E      	XORLW       14
0x0672	0xE0C6      	BZ          L_SetOverloadParams785
0x0674	0x5101      	MOVF        FARG_SetOverloadParams_p2, 0, 1
0x0676	0x0A0F      	XORLW       15
0x0678	0xE0C9      	BZ          L_SetOverloadParams786
L_SetOverloadParams770:
;FirmV_0_7_0.c,2852 :: 		switch(d2)
0x067A	0xD042      	BRA         L_SetOverloadParams787
;FirmV_0_7_0.c,2854 :: 		case 0: OverloadDuration2=100; break;
L_SetOverloadParams789:
0x067C	0x0E64      	MOVLW       100
0x067E	0x0101      	MOVLB       1
0x0680	0x6FA2      	MOVWF       _OverloadDuration2, 1
0x0682	0x0E00      	MOVLW       0
0x0684	0x6FA3      	MOVWF       _OverloadDuration2+1, 1
0x0686	0xD05E      	BRA         L_SetOverloadParams788
;FirmV_0_7_0.c,2856 :: 		case 1: OverloadDuration2=500; break;
L_SetOverloadParams790:
0x0688	0x0101      	MOVLB       1
0x068A	0x0EF4      	MOVLW       244
0x068C	0x6FA2      	MOVWF       _OverloadDuration2, 1
0x068E	0x0E01      	MOVLW       1
0x0690	0x6FA3      	MOVWF       _OverloadDuration2+1, 1
0x0692	0xD058      	BRA         L_SetOverloadParams788
;FirmV_0_7_0.c,2858 :: 		case 2: OverloadDuration2=1000; break;
L_SetOverloadParams791:
0x0694	0x0101      	MOVLB       1
0x0696	0x0EE8      	MOVLW       232
0x0698	0x6FA2      	MOVWF       _OverloadDuration2, 1
0x069A	0x0E03      	MOVLW       3
0x069C	0x6FA3      	MOVWF       _OverloadDuration2+1, 1
0x069E	0xD052      	BRA         L_SetOverloadParams788
;FirmV_0_7_0.c,2860 :: 		case 3: OverloadDuration2=1500; break;
L_SetOverloadParams792:
0x06A0	0x0101      	MOVLB       1
0x06A2	0x0EDC      	MOVLW       220
0x06A4	0x6FA2      	MOVWF       _OverloadDuration2, 1
0x06A6	0x0E05      	MOVLW       5
0x06A8	0x6FA3      	MOVWF       _OverloadDuration2+1, 1
0x06AA	0xD04C      	BRA         L_SetOverloadParams788
;FirmV_0_7_0.c,2862 :: 		case 4: OverloadDuration2=2000; break;
L_SetOverloadParams793:
0x06AC	0x0101      	MOVLB       1
0x06AE	0x0ED0      	MOVLW       208
0x06B0	0x6FA2      	MOVWF       _OverloadDuration2, 1
0x06B2	0x0E07      	MOVLW       7
0x06B4	0x6FA3      	MOVWF       _OverloadDuration2+1, 1
0x06B6	0xD046      	BRA         L_SetOverloadParams788
;FirmV_0_7_0.c,2864 :: 		case 5: OverloadDuration2=2500; break;
L_SetOverloadParams794:
0x06B8	0x0101      	MOVLB       1
0x06BA	0x0EC4      	MOVLW       196
0x06BC	0x6FA2      	MOVWF       _OverloadDuration2, 1
0x06BE	0x0E09      	MOVLW       9
0x06C0	0x6FA3      	MOVWF       _OverloadDuration2+1, 1
0x06C2	0xD040      	BRA         L_SetOverloadParams788
;FirmV_0_7_0.c,2866 :: 		case 6: OverloadDuration2=3000; break;
L_SetOverloadParams795:
0x06C4	0x0101      	MOVLB       1
0x06C6	0x0EB8      	MOVLW       184
0x06C8	0x6FA2      	MOVWF       _OverloadDuration2, 1
0x06CA	0x0E0B      	MOVLW       11
0x06CC	0x6FA3      	MOVWF       _OverloadDuration2+1, 1
0x06CE	0xD03A      	BRA         L_SetOverloadParams788
;FirmV_0_7_0.c,2868 :: 		case 7: OverloadDuration2=3500; break;
L_SetOverloadParams796:
0x06D0	0x0101      	MOVLB       1
0x06D2	0x0EAC      	MOVLW       172
0x06D4	0x6FA2      	MOVWF       _OverloadDuration2, 1
0x06D6	0x0E0D      	MOVLW       13
0x06D8	0x6FA3      	MOVWF       _OverloadDuration2+1, 1
0x06DA	0xD034      	BRA         L_SetOverloadParams788
;FirmV_0_7_0.c,2870 :: 		case 8: OverloadDuration2=4000; break;
L_SetOverloadParams797:
0x06DC	0x0101      	MOVLB       1
0x06DE	0x0EA0      	MOVLW       160
0x06E0	0x6FA2      	MOVWF       _OverloadDuration2, 1
0x06E2	0x0E0F      	MOVLW       15
0x06E4	0x6FA3      	MOVWF       _OverloadDuration2+1, 1
0x06E6	0xD02E      	BRA         L_SetOverloadParams788
;FirmV_0_7_0.c,2872 :: 		case 9: OverloadDuration2=4500; break;
L_SetOverloadParams798:
0x06E8	0x0101      	MOVLB       1
0x06EA	0x0E94      	MOVLW       148
0x06EC	0x6FA2      	MOVWF       _OverloadDuration2, 1
0x06EE	0x0E11      	MOVLW       17
0x06F0	0x6FA3      	MOVWF       _OverloadDuration2+1, 1
0x06F2	0xD028      	BRA         L_SetOverloadParams788
;FirmV_0_7_0.c,2874 :: 		case 10: OverloadDuration2=5000; break;
L_SetOverloadParams799:
0x06F4	0x0101      	MOVLB       1
0x06F6	0x0E88      	MOVLW       136
0x06F8	0x6FA2      	MOVWF       _OverloadDuration2, 1
0x06FA	0x0E13      	MOVLW       19
0x06FC	0x6FA3      	MOVWF       _OverloadDuration2+1, 1
0x06FE	0xD022      	BRA         L_SetOverloadParams788
;FirmV_0_7_0.c,2875 :: 		}
L_SetOverloadParams787:
0x0700	0x0106      	MOVLB       6
0x0702	0x5102      	MOVF        FARG_SetOverloadParams_d2, 0, 1
0x0704	0x0A00      	XORLW       0
0x0706	0xE0BA      	BZ          L_SetOverloadParams789
0x0708	0x5102      	MOVF        FARG_SetOverloadParams_d2, 0, 1
0x070A	0x0A01      	XORLW       1
0x070C	0xE0BD      	BZ          L_SetOverloadParams790
0x070E	0x5102      	MOVF        FARG_SetOverloadParams_d2, 0, 1
0x0710	0x0A02      	XORLW       2
0x0712	0xE0C0      	BZ          L_SetOverloadParams791
0x0714	0x5102      	MOVF        FARG_SetOverloadParams_d2, 0, 1
0x0716	0x0A03      	XORLW       3
0x0718	0xE0C3      	BZ          L_SetOverloadParams792
0x071A	0x5102      	MOVF        FARG_SetOverloadParams_d2, 0, 1
0x071C	0x0A04      	XORLW       4
0x071E	0xE0C6      	BZ          L_SetOverloadParams793
0x0720	0x5102      	MOVF        FARG_SetOverloadParams_d2, 0, 1
0x0722	0x0A05      	XORLW       5
0x0724	0xE0C9      	BZ          L_SetOverloadParams794
0x0726	0x5102      	MOVF        FARG_SetOverloadParams_d2, 0, 1
0x0728	0x0A06      	XORLW       6
0x072A	0xE0CC      	BZ          L_SetOverloadParams795
0x072C	0x5102      	MOVF        FARG_SetOverloadParams_d2, 0, 1
0x072E	0x0A07      	XORLW       7
0x0730	0xE0CF      	BZ          L_SetOverloadParams796
0x0732	0x5102      	MOVF        FARG_SetOverloadParams_d2, 0, 1
0x0734	0x0A08      	XORLW       8
0x0736	0xE0D2      	BZ          L_SetOverloadParams797
0x0738	0x5102      	MOVF        FARG_SetOverloadParams_d2, 0, 1
0x073A	0x0A09      	XORLW       9
0x073C	0xE0D5      	BZ          L_SetOverloadParams798
0x073E	0x5102      	MOVF        FARG_SetOverloadParams_d2, 0, 1
0x0740	0x0A0A      	XORLW       10
0x0742	0xE0D8      	BZ          L_SetOverloadParams799
L_SetOverloadParams788:
;FirmV_0_7_0.c,2876 :: 		}
0x0744	0x0012      	RETURN      0
; end of _SetOverloadParams
_Div_32x32_U:
;__Lib_Math.c,1162 :: 		
;__Lib_Math.c,1173 :: 		
0x0746	0x6A0B      	CLRF        R11, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1174 :: 		
0x0748	0x6A0A      	CLRF        R10, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1175 :: 		
0x074A	0x6A09      	CLRF        R9, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1176 :: 		
0x074C	0x6A08      	CLRF        R8, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1178 :: 		
0x074E	0x6A0E      	CLRF        R14, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1180 :: 		
0x0750	0x3403      	RLCF        R3, 0, 0
;__Lib_Math.c,1181 :: 		
0x0752	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1182 :: 		
0x0754	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1183 :: 		
0x0756	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1184 :: 		
0x0758	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1185 :: 		
0x075A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1186 :: 		
0x075C	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1187 :: 		
0x075E	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1188 :: 		
0x0760	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1189 :: 		
0x0762	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1190 :: 		
0x0764	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1191 :: 		
0x0766	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1192 :: 		
0x0768	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1193 :: 		
0x076A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1194 :: 		
0x076C	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1195 :: 		
0x076E	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1197 :: 		
0x0770	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1198 :: 		
0x0772	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1199 :: 		
0x0774	0x0E01      	MOVLW       1
;__Lib_Math.c,1200 :: 		
0x0776	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1201 :: 		
0x0778	0x3603      	RLCF        R3, 1, 0
;__Lib_Math.c,1203 :: 		
0x077A	0x0E07      	MOVLW       7
;__Lib_Math.c,1204 :: 		
0x077C	0x6E0C      	MOVWF       R12, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1206 :: 		
LOOPU3232A:
;__Lib_Math.c,1207 :: 		
0x077E	0x3403      	RLCF        R3, 0, 0
;__Lib_Math.c,1208 :: 		
0x0780	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1209 :: 		
0x0782	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1210 :: 		
0x0784	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1211 :: 		
0x0786	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1212 :: 		
0x0788	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1213 :: 		
0x078A	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1214 :: 		
0x078C	0xA003      	BTFSS       R3, 0, 0
;__Lib_Math.c,1215 :: 		
0x078E	0xD012      	BRA         UADD22LA
;__Lib_Math.c,1217 :: 		
0x0790	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1218 :: 		
0x0792	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1219 :: 		
0x0794	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1220 :: 		
0x0796	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1221 :: 		
0x0798	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1222 :: 		
0x079A	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1223 :: 		
0x079C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1224 :: 		
0x079E	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1225 :: 		
0x07A0	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1226 :: 		
0x07A2	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1227 :: 		
0x07A4	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1228 :: 		
0x07A6	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1229 :: 		
0x07A8	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1230 :: 		
0x07AA	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1231 :: 		
0x07AC	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1232 :: 		
0x07AE	0x0E01      	MOVLW       1
;__Lib_Math.c,1233 :: 		
0x07B0	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1234 :: 		
0x07B2	0xD011      	BRA         UOK22LA
;__Lib_Math.c,1236 :: 		
UADD22LA:
;__Lib_Math.c,1237 :: 		
0x07B4	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1238 :: 		
0x07B6	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1239 :: 		
0x07B8	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1240 :: 		
0x07BA	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1241 :: 		
0x07BC	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1242 :: 		
0x07BE	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1243 :: 		
0x07C0	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1244 :: 		
0x07C2	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1245 :: 		
0x07C4	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1246 :: 		
0x07C6	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1247 :: 		
0x07C8	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1248 :: 		
0x07CA	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1249 :: 		
0x07CC	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1250 :: 		
0x07CE	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1251 :: 		
0x07D0	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1252 :: 		
0x07D2	0x0E01      	MOVLW       1
;__Lib_Math.c,1253 :: 		
0x07D4	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1255 :: 		
UOK22LA:
;__Lib_Math.c,1256 :: 		
0x07D6	0x3603      	RLCF        R3, 1, 0
;__Lib_Math.c,1258 :: 		
0x07D8	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,1259 :: 		
0x07DA	0xD7D1      	BRA         LOOPU3232A
;__Lib_Math.c,1261 :: 		
0x07DC	0x3402      	RLCF        R2, 0, 0
;__Lib_Math.c,1262 :: 		
0x07DE	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1263 :: 		
0x07E0	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1264 :: 		
0x07E2	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1265 :: 		
0x07E4	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1266 :: 		
0x07E6	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1267 :: 		
0x07E8	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1268 :: 		
0x07EA	0xA003      	BTFSS       R3, 0, 0
;__Lib_Math.c,1269 :: 		
0x07EC	0xD012      	BRA         UADD22L8
;__Lib_Math.c,1271 :: 		
0x07EE	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1272 :: 		
0x07F0	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1273 :: 		
0x07F2	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1274 :: 		
0x07F4	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1275 :: 		
0x07F6	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1276 :: 		
0x07F8	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1277 :: 		
0x07FA	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1278 :: 		
0x07FC	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1279 :: 		
0x07FE	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1280 :: 		
0x0800	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1281 :: 		
0x0802	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1282 :: 		
0x0804	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1283 :: 		
0x0806	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1284 :: 		
0x0808	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1285 :: 		
0x080A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1286 :: 		
0x080C	0x0E01      	MOVLW       1
;__Lib_Math.c,1287 :: 		
0x080E	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1288 :: 		
0x0810	0xD011      	BRA         UOK22L8
;__Lib_Math.c,1290 :: 		
UADD22L8:
;__Lib_Math.c,1291 :: 		
0x0812	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1292 :: 		
0x0814	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1293 :: 		
0x0816	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1294 :: 		
0x0818	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1295 :: 		
0x081A	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1296 :: 		
0x081C	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1297 :: 		
0x081E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1298 :: 		
0x0820	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1299 :: 		
0x0822	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1300 :: 		
0x0824	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1301 :: 		
0x0826	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1302 :: 		
0x0828	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1303 :: 		
0x082A	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1304 :: 		
0x082C	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1305 :: 		
0x082E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1306 :: 		
0x0830	0x0E01      	MOVLW       1
;__Lib_Math.c,1307 :: 		
0x0832	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1309 :: 		
UOK22L8:
;__Lib_Math.c,1310 :: 		
0x0834	0x3602      	RLCF        R2, 1, 0
;__Lib_Math.c,1312 :: 		
0x0836	0x0E07      	MOVLW       7
;__Lib_Math.c,1313 :: 		
0x0838	0x6E0C      	MOVWF       R12, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1315 :: 		
LOOPU3232B:
;__Lib_Math.c,1316 :: 		
0x083A	0x3402      	RLCF        R2, 0, 0
;__Lib_Math.c,1317 :: 		
0x083C	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1318 :: 		
0x083E	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1319 :: 		
0x0840	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1320 :: 		
0x0842	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1321 :: 		
0x0844	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1322 :: 		
0x0846	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1323 :: 		
0x0848	0xA002      	BTFSS       R2, 0, 0
;__Lib_Math.c,1324 :: 		
0x084A	0xD012      	BRA         UADD22LB
;__Lib_Math.c,1326 :: 		
0x084C	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1327 :: 		
0x084E	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1328 :: 		
0x0850	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1329 :: 		
0x0852	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1330 :: 		
0x0854	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1331 :: 		
0x0856	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1332 :: 		
0x0858	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1333 :: 		
0x085A	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1334 :: 		
0x085C	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1335 :: 		
0x085E	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1336 :: 		
0x0860	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1337 :: 		
0x0862	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1338 :: 		
0x0864	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1339 :: 		
0x0866	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1340 :: 		
0x0868	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1341 :: 		
0x086A	0x0E01      	MOVLW       1
;__Lib_Math.c,1342 :: 		
0x086C	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1343 :: 		
0x086E	0xD011      	BRA         UOK22LB
;__Lib_Math.c,1345 :: 		
UADD22LB:
;__Lib_Math.c,1346 :: 		
0x0870	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1347 :: 		
0x0872	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1348 :: 		
0x0874	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1349 :: 		
0x0876	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1350 :: 		
0x0878	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1351 :: 		
0x087A	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1352 :: 		
0x087C	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1353 :: 		
0x087E	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1354 :: 		
0x0880	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1355 :: 		
0x0882	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1356 :: 		
0x0884	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1357 :: 		
0x0886	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1358 :: 		
0x0888	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1359 :: 		
0x088A	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1360 :: 		
0x088C	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1361 :: 		
0x088E	0x0E01      	MOVLW       1
;__Lib_Math.c,1362 :: 		
0x0890	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1364 :: 		
UOK22LB:
;__Lib_Math.c,1365 :: 		
0x0892	0x3602      	RLCF        R2, 1, 0
;__Lib_Math.c,1367 :: 		
0x0894	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,1368 :: 		
0x0896	0xD7D1      	BRA         LOOPU3232B
;__Lib_Math.c,1370 :: 		
0x0898	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,1371 :: 		
0x089A	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1372 :: 		
0x089C	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1373 :: 		
0x089E	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1374 :: 		
0x08A0	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1375 :: 		
0x08A2	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1376 :: 		
0x08A4	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1377 :: 		
0x08A6	0xA002      	BTFSS       R2, 0, 0
;__Lib_Math.c,1378 :: 		
0x08A8	0xD012      	BRA         UADD22L16
;__Lib_Math.c,1380 :: 		
0x08AA	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1381 :: 		
0x08AC	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1382 :: 		
0x08AE	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1383 :: 		
0x08B0	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1384 :: 		
0x08B2	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1385 :: 		
0x08B4	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1386 :: 		
0x08B6	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1387 :: 		
0x08B8	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1388 :: 		
0x08BA	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1389 :: 		
0x08BC	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1390 :: 		
0x08BE	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1391 :: 		
0x08C0	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1392 :: 		
0x08C2	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1393 :: 		
0x08C4	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1394 :: 		
0x08C6	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1395 :: 		
0x08C8	0x0E01      	MOVLW       1
;__Lib_Math.c,1396 :: 		
0x08CA	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1397 :: 		
0x08CC	0xD011      	BRA         UOK22L16
;__Lib_Math.c,1399 :: 		
UADD22L16:
;__Lib_Math.c,1400 :: 		
0x08CE	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1401 :: 		
0x08D0	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1402 :: 		
0x08D2	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1403 :: 		
0x08D4	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1404 :: 		
0x08D6	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1405 :: 		
0x08D8	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1406 :: 		
0x08DA	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1407 :: 		
0x08DC	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1408 :: 		
0x08DE	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1409 :: 		
0x08E0	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1410 :: 		
0x08E2	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1411 :: 		
0x08E4	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1412 :: 		
0x08E6	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1413 :: 		
0x08E8	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1414 :: 		
0x08EA	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1415 :: 		
0x08EC	0x0E01      	MOVLW       1
;__Lib_Math.c,1416 :: 		
0x08EE	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1418 :: 		
UOK22L16:
;__Lib_Math.c,1419 :: 		
0x08F0	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,1421 :: 		
0x08F2	0x0E07      	MOVLW       7
;__Lib_Math.c,1422 :: 		
0x08F4	0x6E0C      	MOVWF       R12, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1424 :: 		
LOOPU3232C:
;__Lib_Math.c,1425 :: 		
0x08F6	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,1426 :: 		
0x08F8	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1427 :: 		
0x08FA	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1428 :: 		
0x08FC	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1429 :: 		
0x08FE	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1430 :: 		
0x0900	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1431 :: 		
0x0902	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1432 :: 		
0x0904	0xA001      	BTFSS       R1, 0, 0
;__Lib_Math.c,1433 :: 		
0x0906	0xD012      	BRA         UADD22LC
;__Lib_Math.c,1435 :: 		
0x0908	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1436 :: 		
0x090A	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1437 :: 		
0x090C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1438 :: 		
0x090E	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1439 :: 		
0x0910	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1440 :: 		
0x0912	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1441 :: 		
0x0914	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1442 :: 		
0x0916	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1443 :: 		
0x0918	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1444 :: 		
0x091A	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1445 :: 		
0x091C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1446 :: 		
0x091E	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1447 :: 		
0x0920	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1448 :: 		
0x0922	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1449 :: 		
0x0924	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1450 :: 		
0x0926	0x0E01      	MOVLW       1
;__Lib_Math.c,1451 :: 		
0x0928	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1452 :: 		
0x092A	0xD011      	BRA         UOK22LC
;__Lib_Math.c,1454 :: 		
UADD22LC:
;__Lib_Math.c,1455 :: 		
0x092C	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1456 :: 		
0x092E	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1457 :: 		
0x0930	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1458 :: 		
0x0932	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1459 :: 		
0x0934	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1460 :: 		
0x0936	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1461 :: 		
0x0938	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1462 :: 		
0x093A	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1463 :: 		
0x093C	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1464 :: 		
0x093E	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1465 :: 		
0x0940	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1466 :: 		
0x0942	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1467 :: 		
0x0944	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1468 :: 		
0x0946	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1469 :: 		
0x0948	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1470 :: 		
0x094A	0x0E01      	MOVLW       1
;__Lib_Math.c,1471 :: 		
0x094C	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1473 :: 		
UOK22LC:
;__Lib_Math.c,1474 :: 		
0x094E	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,1476 :: 		
0x0950	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,1477 :: 		
0x0952	0xD7D1      	BRA         LOOPU3232C
;__Lib_Math.c,1479 :: 		
0x0954	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,1480 :: 		
0x0956	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1481 :: 		
0x0958	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1482 :: 		
0x095A	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1483 :: 		
0x095C	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1484 :: 		
0x095E	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1485 :: 		
0x0960	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1486 :: 		
0x0962	0xA001      	BTFSS       R1, 0, 0
;__Lib_Math.c,1487 :: 		
0x0964	0xD012      	BRA         UADD22L24
;__Lib_Math.c,1489 :: 		
0x0966	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1490 :: 		
0x0968	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1491 :: 		
0x096A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1492 :: 		
0x096C	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1493 :: 		
0x096E	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1494 :: 		
0x0970	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1495 :: 		
0x0972	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1496 :: 		
0x0974	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1497 :: 		
0x0976	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1498 :: 		
0x0978	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1499 :: 		
0x097A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1500 :: 		
0x097C	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1501 :: 		
0x097E	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1502 :: 		
0x0980	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1503 :: 		
0x0982	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1504 :: 		
0x0984	0x0E01      	MOVLW       1
;__Lib_Math.c,1505 :: 		
0x0986	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1506 :: 		
0x0988	0xD011      	BRA         UOK22L24
;__Lib_Math.c,1508 :: 		
UADD22L24:
;__Lib_Math.c,1509 :: 		
0x098A	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1510 :: 		
0x098C	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1511 :: 		
0x098E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1512 :: 		
0x0990	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1513 :: 		
0x0992	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1514 :: 		
0x0994	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1515 :: 		
0x0996	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1516 :: 		
0x0998	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1517 :: 		
0x099A	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1518 :: 		
0x099C	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1519 :: 		
0x099E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1520 :: 		
0x09A0	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1521 :: 		
0x09A2	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1522 :: 		
0x09A4	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1523 :: 		
0x09A6	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1524 :: 		
0x09A8	0x0E01      	MOVLW       1
;__Lib_Math.c,1525 :: 		
0x09AA	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1527 :: 		
UOK22L24:
;__Lib_Math.c,1528 :: 		
0x09AC	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,1530 :: 		
0x09AE	0x0E07      	MOVLW       7
;__Lib_Math.c,1531 :: 		
0x09B0	0x6E0C      	MOVWF       R12, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1533 :: 		
LOOPU3232D:
;__Lib_Math.c,1534 :: 		
0x09B2	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,1535 :: 		
0x09B4	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,1536 :: 		
0x09B6	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,1537 :: 		
0x09B8	0x360A      	RLCF        R10, 1, 0
;__Lib_Math.c,1538 :: 		
0x09BA	0x360B      	RLCF        R11, 1, 0
;__Lib_Math.c,1539 :: 		
0x09BC	0x360E      	RLCF        R14, 1, 0
;__Lib_Math.c,1540 :: 		
0x09BE	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1541 :: 		
0x09C0	0xA000      	BTFSS       R0, 0, 0
;__Lib_Math.c,1542 :: 		
0x09C2	0xD012      	BRA         UADD22LD
;__Lib_Math.c,1544 :: 		
0x09C4	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,1545 :: 		
0x09C6	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1546 :: 		
0x09C8	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1547 :: 		
0x09CA	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1548 :: 		
0x09CC	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,1549 :: 		
0x09CE	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1550 :: 		
0x09D0	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1551 :: 		
0x09D2	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1552 :: 		
0x09D4	0x5E0A      	SUBWF       R10, 1, 0
;__Lib_Math.c,1553 :: 		
0x09D6	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1554 :: 		
0x09D8	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1555 :: 		
0x09DA	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1556 :: 		
0x09DC	0x5E0B      	SUBWF       R11, 1, 0
;__Lib_Math.c,1557 :: 		
0x09DE	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1558 :: 		
0x09E0	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1559 :: 		
0x09E2	0x0E01      	MOVLW       1
;__Lib_Math.c,1560 :: 		
0x09E4	0x5E0E      	SUBWF       R14, 1, 0
;__Lib_Math.c,1561 :: 		
0x09E6	0xD011      	BRA         UOK22LD
;__Lib_Math.c,1563 :: 		
UADD22LD:
;__Lib_Math.c,1564 :: 		
0x09E8	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1565 :: 		
0x09EA	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1566 :: 		
0x09EC	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1567 :: 		
0x09EE	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1568 :: 		
0x09F0	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1569 :: 		
0x09F2	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1570 :: 		
0x09F4	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1571 :: 		
0x09F6	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1572 :: 		
0x09F8	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1573 :: 		
0x09FA	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1574 :: 		
0x09FC	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1575 :: 		
0x09FE	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1576 :: 		
0x0A00	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1577 :: 		
0x0A02	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,1578 :: 		
0x0A04	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1579 :: 		
0x0A06	0x0E01      	MOVLW       1
;__Lib_Math.c,1580 :: 		
0x0A08	0x260E      	ADDWF       R14, 1, 0
;__Lib_Math.c,1582 :: 		
UOK22LD:
;__Lib_Math.c,1583 :: 		
0x0A0A	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,1585 :: 		
0x0A0C	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,1586 :: 		
0x0A0E	0xD7D1      	BRA         LOOPU3232D
;__Lib_Math.c,1588 :: 		
0x0A10	0xB000      	BTFSC       R0, 0, 0
;__Lib_Math.c,1589 :: 		
0x0A12	0xD00E      	BRA         UOK22L
;__Lib_Math.c,1590 :: 		
0x0A14	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1591 :: 		
0x0A16	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1592 :: 		
0x0A18	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1593 :: 		
0x0A1A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1594 :: 		
0x0A1C	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,1595 :: 		
0x0A1E	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,1596 :: 		
0x0A20	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1597 :: 		
0x0A22	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1598 :: 		
0x0A24	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_Math.c,1599 :: 		
0x0A26	0x260A      	ADDWF       R10, 1, 0
;__Lib_Math.c,1600 :: 		
0x0A28	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1601 :: 		
0x0A2A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,1602 :: 		
0x0A2C	0x3C07      	INCFSZ      R7, 0, 0
;__Lib_Math.c,1603 :: 		
0x0A2E	0x260B      	ADDWF       R11, 1, 0
;__Lib_Math.c,1605 :: 		
UOK22L:
;__Lib_Math.c,1607 :: 		
L_end_Div_32x32_U:
0x0A30	0x0012      	RETURN      0
; end of _Div_32x32_U
_UART_Write:
;__Lib_UART_c67.c,119 :: 		
;__Lib_UART_c67.c,120 :: 		
0x0A32	0xFFE1C253  	MOVFF       _UART_Wr_Ptr+2, FSR1L
0x0A36	0xFFE2C254  	MOVFF       _UART_Wr_Ptr+3, FSR1H
0x0A3A	0xFFE6C5FF  	MOVFF       FARG_UART_Write__data, POSTINC1
0x0A3E	0xF000C251  	MOVFF       _UART_Wr_Ptr, R0
0x0A42	0xF001C252  	MOVFF       _UART_Wr_Ptr+1, R1
0x0A46	0xF000ECBB  	CALL        _____DoIFC, 0
;__Lib_UART_c67.c,121 :: 		
L_end_UART_Write:
0x0A4A	0x0012      	RETURN      0
; end of _UART_Write
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x0A4C	0x0E49      	MOVLW       73
0x0A4E	0x6E0D      	MOVWF       R13, 0
L_Delay_22us2:
0x0A50	0x2E0D      	DECFSZ      R13, 1, 0
0x0A52	0xD7FE      	BRA         L_Delay_22us2
;__Lib_Delays.c,17 :: 		}
0x0A54	0x0012      	RETURN      0
; end of _Delay_22us
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0A56	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0A58	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0A5C	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0A5E	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0A60	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x0A62	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x0A64	0x0012      	RETURN      0
; end of ___CC2DW
_LongWordToStrWithZeros:
;__Lib_Conversions.c,226 :: 		
;__Lib_Conversions.c,229 :: 		
0x0A66	0x0105      	MOVLB       5
0x0A68	0x6BF9      	CLRF        LongWordToStrWithZeros_len_L0, 1
L_LongWordToStrWithZeros44:
0x0A6A	0x0E0A      	MOVLW       10
0x0A6C	0x5DF9      	SUBWF       LongWordToStrWithZeros_len_L0, 0, 1
0x0A6E	0xE20A      	BC          L_LongWordToStrWithZeros45
;__Lib_Conversions.c,230 :: 		
0x0A70	0x51F9      	MOVF        LongWordToStrWithZeros_len_L0, 0, 1
0x0A72	0x25F7      	ADDWF       FARG_LongWordToStrWithZeros_output, 0, 1
0x0A74	0x6EE1      	MOVWF       FSR1L 
0x0A76	0x0E00      	MOVLW       0
0x0A78	0x21F8      	ADDWFC      FARG_LongWordToStrWithZeros_output+1, 0, 1
0x0A7A	0x6EE2      	MOVWF       FSR1H 
0x0A7C	0x0E30      	MOVLW       48
0x0A7E	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,229 :: 		
0x0A80	0x2BF9      	INCF        LongWordToStrWithZeros_len_L0, 1, 1
;__Lib_Conversions.c,230 :: 		
0x0A82	0xD7F3      	BRA         L_LongWordToStrWithZeros44
L_LongWordToStrWithZeros45:
;__Lib_Conversions.c,231 :: 		
0x0A84	0x51F9      	MOVF        LongWordToStrWithZeros_len_L0, 0, 1
0x0A86	0x25F7      	ADDWF       FARG_LongWordToStrWithZeros_output, 0, 1
0x0A88	0x6EE1      	MOVWF       FSR1L 
0x0A8A	0x0E00      	MOVLW       0
0x0A8C	0x21F8      	ADDWFC      FARG_LongWordToStrWithZeros_output+1, 0, 1
0x0A8E	0x6EE2      	MOVWF       FSR1H 
0x0A90	0x6AE6      	CLRF        POSTINC1 
0x0A92	0x07F9      	DECF        LongWordToStrWithZeros_len_L0, 1, 1
;__Lib_Conversions.c,233 :: 		
L_LongWordToStrWithZeros47:
0x0A94	0x0E00      	MOVLW       0
0x0A96	0x6E00      	MOVWF       R0 
0x0A98	0x19F6      	XORWF       FARG_LongWordToStrWithZeros_input+3, 0, 1
0x0A9A	0xE108      	BNZ         L__LongWordToStrWithZeros125
0x0A9C	0x5000      	MOVF        R0, 0 
0x0A9E	0x19F5      	XORWF       FARG_LongWordToStrWithZeros_input+2, 0, 1
0x0AA0	0xE105      	BNZ         L__LongWordToStrWithZeros125
0x0AA2	0x5000      	MOVF        R0, 0 
0x0AA4	0x19F4      	XORWF       FARG_LongWordToStrWithZeros_input+1, 0, 1
0x0AA6	0xE102      	BNZ         L__LongWordToStrWithZeros125
0x0AA8	0x51F3      	MOVF        FARG_LongWordToStrWithZeros_input, 0, 1
0x0AAA	0x0A00      	XORLW       0
L__LongWordToStrWithZeros125:
0x0AAC	0xE03E      	BZ          L_LongWordToStrWithZeros48
;__Lib_Conversions.c,234 :: 		
0x0AAE	0x51F9      	MOVF        LongWordToStrWithZeros_len_L0, 0, 1
0x0AB0	0x25F7      	ADDWF       FARG_LongWordToStrWithZeros_output, 0, 1
0x0AB2	0x6FFA      	MOVWF       FLOC__LongWordToStrWithZeros, 1
0x0AB4	0x0E00      	MOVLW       0
0x0AB6	0x21F8      	ADDWFC      FARG_LongWordToStrWithZeros_output+1, 0, 1
0x0AB8	0x6FFB      	MOVWF       FLOC__LongWordToStrWithZeros+1, 1
0x0ABA	0x0E0A      	MOVLW       10
0x0ABC	0x6E04      	MOVWF       R4 
0x0ABE	0x0E00      	MOVLW       0
0x0AC0	0x6E05      	MOVWF       R5 
0x0AC2	0x6E06      	MOVWF       R6 
0x0AC4	0x6E07      	MOVWF       R7 
0x0AC6	0xF000C5F3  	MOVFF       FARG_LongWordToStrWithZeros_input, R0
0x0ACA	0xF001C5F4  	MOVFF       FARG_LongWordToStrWithZeros_input+1, R1
0x0ACE	0xF002C5F5  	MOVFF       FARG_LongWordToStrWithZeros_input+2, R2
0x0AD2	0xF003C5F6  	MOVFF       FARG_LongWordToStrWithZeros_input+3, R3
0x0AD6	0xDE37      	RCALL       _Div_32x32_U
0x0AD8	0xF000C008  	MOVFF       R8, R0
0x0ADC	0xF001C009  	MOVFF       R9, R1
0x0AE0	0xF002C00A  	MOVFF       R10, R2
0x0AE4	0xF003C00B  	MOVFF       R11, R3
0x0AE8	0x0E30      	MOVLW       48
0x0AEA	0x2600      	ADDWF       R0, 1 
0x0AEC	0xFFE1C5FA  	MOVFF       FLOC__LongWordToStrWithZeros, FSR1L
0x0AF0	0xFFE2C5FB  	MOVFF       FLOC__LongWordToStrWithZeros+1, FSR1H
0x0AF4	0xFFE6C000  	MOVFF       R0, POSTINC1
0x0AF8	0x07F9      	DECF        LongWordToStrWithZeros_len_L0, 1, 1
;__Lib_Conversions.c,235 :: 		
0x0AFA	0x0E0A      	MOVLW       10
0x0AFC	0x6E04      	MOVWF       R4 
0x0AFE	0x0E00      	MOVLW       0
0x0B00	0x6E05      	MOVWF       R5 
0x0B02	0x6E06      	MOVWF       R6 
0x0B04	0x6E07      	MOVWF       R7 
0x0B06	0xF000C5F3  	MOVFF       FARG_LongWordToStrWithZeros_input, R0
0x0B0A	0xF001C5F4  	MOVFF       FARG_LongWordToStrWithZeros_input+1, R1
0x0B0E	0xF002C5F5  	MOVFF       FARG_LongWordToStrWithZeros_input+2, R2
0x0B12	0xF003C5F6  	MOVFF       FARG_LongWordToStrWithZeros_input+3, R3
0x0B16	0xDE17      	RCALL       _Div_32x32_U
0x0B18	0xF5F3C000  	MOVFF       R0, FARG_LongWordToStrWithZeros_input
0x0B1C	0xF5F4C001  	MOVFF       R1, FARG_LongWordToStrWithZeros_input+1
0x0B20	0xF5F5C002  	MOVFF       R2, FARG_LongWordToStrWithZeros_input+2
0x0B24	0xF5F6C003  	MOVFF       R3, FARG_LongWordToStrWithZeros_input+3
;__Lib_Conversions.c,236 :: 		
0x0B28	0xD7B5      	BRA         L_LongWordToStrWithZeros47
L_LongWordToStrWithZeros48:
;__Lib_Conversions.c,237 :: 		
L_end_LongWordToStrWithZeros:
0x0B2A	0x0012      	RETURN      0
; end of _LongWordToStrWithZeros
_UART1_Write_Text:
;__Lib_UART_c67.c,66 :: 		
;__Lib_UART_c67.c,67 :: 		
0x0B2C	0x0105      	MOVLB       5
0x0B2E	0x6BF6      	CLRF        UART1_Write_Text_counter_L0, 1
;__Lib_UART_c67.c,69 :: 		
0x0B30	0xFFE9C5F3  	MOVFF       FARG_UART1_Write_Text_uart_text, FSR0L
0x0B34	0xFFEAC5F4  	MOVFF       FARG_UART1_Write_Text_uart_text+1, FSR0H
0x0B38	0xF5F5CFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,70 :: 		
L_UART1_Write_Text5:
0x0B3C	0x51F5      	MOVF        UART1_Write_Text_data__L0, 0, 1
0x0B3E	0x0A00      	XORLW       0
0x0B40	0xE00F      	BZ          L_UART1_Write_Text6
;__Lib_UART_c67.c,71 :: 		
0x0B42	0xF606C5F5  	MOVFF       UART1_Write_Text_data__L0, FARG_UART1_Write_data_
0x0B46	0xF000ECAB  	CALL        _UART1_Write, 0
;__Lib_UART_c67.c,72 :: 		
0x0B4A	0x0105      	MOVLB       5
0x0B4C	0x2BF6      	INCF        UART1_Write_Text_counter_L0, 1, 1
;__Lib_UART_c67.c,73 :: 		
0x0B4E	0x51F6      	MOVF        UART1_Write_Text_counter_L0, 0, 1
0x0B50	0x25F3      	ADDWF       FARG_UART1_Write_Text_uart_text, 0, 1
0x0B52	0x6EE9      	MOVWF       FSR0L 
0x0B54	0x0E00      	MOVLW       0
0x0B56	0x21F4      	ADDWFC      FARG_UART1_Write_Text_uart_text+1, 0, 1
0x0B58	0x6EEA      	MOVWF       FSR0H 
0x0B5A	0xF5F5CFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,74 :: 		
0x0B5E	0xD7EE      	BRA         L_UART1_Write_Text5
L_UART1_Write_Text6:
;__Lib_UART_c67.c,75 :: 		
L_end_UART1_Write_Text:
0x0B60	0x0012      	RETURN      0
; end of _UART1_Write_Text
_UART_Write_Text:
;__Lib_UART_c67.c,123 :: 		
;__Lib_UART_c67.c,124 :: 		
0x0B62	0x0105      	MOVLB       5
0x0B64	0x6BF6      	CLRF        UART_Write_Text_counter_L0, 1
;__Lib_UART_c67.c,126 :: 		
0x0B66	0xFFE9C5F3  	MOVFF       FARG_UART_Write_Text_uart_text, FSR0L
0x0B6A	0xFFEAC5F4  	MOVFF       FARG_UART_Write_Text_uart_text+1, FSR0H
0x0B6E	0xF5F5CFEE  	MOVFF       POSTINC0, UART_Write_Text_data__L0
;__Lib_UART_c67.c,127 :: 		
L_UART_Write_Text16:
0x0B72	0x51F5      	MOVF        UART_Write_Text_data__L0, 0, 1
0x0B74	0x0A00      	XORLW       0
0x0B76	0xE00E      	BZ          L_UART_Write_Text17
;__Lib_UART_c67.c,128 :: 		
0x0B78	0xF5FFC5F5  	MOVFF       UART_Write_Text_data__L0, FARG_UART_Write__data
0x0B7C	0xDF5A      	RCALL       _UART_Write
;__Lib_UART_c67.c,129 :: 		
0x0B7E	0x0105      	MOVLB       5
0x0B80	0x2BF6      	INCF        UART_Write_Text_counter_L0, 1, 1
;__Lib_UART_c67.c,130 :: 		
0x0B82	0x51F6      	MOVF        UART_Write_Text_counter_L0, 0, 1
0x0B84	0x25F3      	ADDWF       FARG_UART_Write_Text_uart_text, 0, 1
0x0B86	0x6EE9      	MOVWF       FSR0L 
0x0B88	0x0E00      	MOVLW       0
0x0B8A	0x21F4      	ADDWFC      FARG_UART_Write_Text_uart_text+1, 0, 1
0x0B8C	0x6EEA      	MOVWF       FSR0H 
0x0B8E	0xF5F5CFEE  	MOVFF       POSTINC0, UART_Write_Text_data__L0
;__Lib_UART_c67.c,131 :: 		
0x0B92	0xD7EF      	BRA         L_UART_Write_Text16
L_UART_Write_Text17:
;__Lib_UART_c67.c,132 :: 		
L_end_UART_Write_Text:
0x0B94	0x0012      	RETURN      0
; end of _UART_Write_Text
_I2C1_Is_Idle:
;__Lib_I2C_c34.c,29 :: 		
;__Lib_I2C_c34.c,30 :: 		
0x0B96	0xB4C7      	BTFSC       SSPSTAT, 2 
0x0B98	0xD009      	BRA         L_I2C1_Is_Idle0
;__Lib_I2C_c34.c,31 :: 		
0x0B9A	0x0E1F      	MOVLW       31
0x0B9C	0x14C5      	ANDWF       SSPCON2, 0 
0x0B9E	0x6E01      	MOVWF       R1 
0x0BA0	0x5001      	MOVF        R1, 0 
0x0BA2	0x0A00      	XORLW       0
0x0BA4	0xE103      	BNZ         L_I2C1_Is_Idle1
;__Lib_I2C_c34.c,32 :: 		
0x0BA6	0x0E01      	MOVLW       1
0x0BA8	0x6E00      	MOVWF       R0 
0x0BAA	0xD001      	BRA         L_end_I2C1_Is_Idle
L_I2C1_Is_Idle1:
L_I2C1_Is_Idle0:
;__Lib_I2C_c34.c,33 :: 		
0x0BAC	0x6A00      	CLRF        R0 
;__Lib_I2C_c34.c,34 :: 		
L_end_I2C1_Is_Idle:
0x0BAE	0x0012      	RETURN      0
; end of _I2C1_Is_Idle
_Mul_16x16_U:
;__Lib_Math.c,440 :: 		
;__Lib_Math.c,447 :: 		
0x0BB0	0x6A0B      	CLRF        R11, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,448 :: 		
0x0BB2	0x6A0A      	CLRF        R10, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,449 :: 		
0x0BB4	0x6A09      	CLRF        R9, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,450 :: 		
0x0BB6	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,451 :: 		
0x0BB8	0x0204      	MULWF       R4, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,453 :: 		
0x0BBA	0xF009CFF4  	MOVFF       PRODH, R9
;__Lib_Math.c,454 :: 		
0x0BBE	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_Math.c,455 :: 		
0x0BC2	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,456 :: 		
0x0BC4	0x0205      	MULWF       R5, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,458 :: 		
0x0BC6	0xF00BCFF4  	MOVFF       PRODH, R11
;__Lib_Math.c,459 :: 		
0x0BCA	0xF00ACFF3  	MOVFF       PRODL, R10
;__Lib_Math.c,460 :: 		
0x0BCE	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,461 :: 		
0x0BD0	0x0205      	MULWF       R5, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,463 :: 		
0x0BD2	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,464 :: 		
0x0BD4	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,465 :: 		
0x0BD6	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,466 :: 		
0x0BD8	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,467 :: 		
0x0BDA	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,468 :: 		
0x0BDC	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,469 :: 		
0x0BDE	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,470 :: 		
0x0BE0	0x0204      	MULWF       R4, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,472 :: 		
0x0BE2	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,473 :: 		
0x0BE4	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,474 :: 		
0x0BE6	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,475 :: 		
0x0BE8	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,476 :: 		
0x0BEA	0x6AE8      	CLRF        WREG, higher_addr(L_Div_16x16_S0)
;__Lib_Math.c,477 :: 		
0x0BEC	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,479 :: 		
0x0BEE	0xF000C008  	MOVFF       R8, R0
;__Lib_Math.c,480 :: 		
0x0BF2	0xF001C009  	MOVFF       R9, R1
;__Lib_Math.c,481 :: 		
0x0BF6	0xF002C00A  	MOVFF       R10, R2
;__Lib_Math.c,482 :: 		
0x0BFA	0xF003C00B  	MOVFF       R11, R3
;__Lib_Math.c,485 :: 		
L_end_Mul_16x16_U:
0x0BFE	0x0012      	RETURN      0
; end of _Mul_16x16_U
_charValueToStr:
;FirmV_0_7_0.c,2694 :: 		void charValueToStr(char val, char * string)
;FirmV_0_7_0.c,2696 :: 		bytetostr(val>>1,string);
0x0C00	0xF5FFC5F3  	MOVFF       FARG_charValueToStr_val, FARG_ByteToStr_input
0x0C04	0x0105      	MOVLB       5
0x0C06	0x33FF      	RRCF        FARG_ByteToStr_input, 1, 1
0x0C08	0x9FFF      	BCF         FARG_ByteToStr_input, 7, 1
0x0C0A	0xF600C5F4  	MOVFF       FARG_charValueToStr_string, FARG_ByteToStr_output
0x0C0E	0xF601C5F5  	MOVFF       FARG_charValueToStr_string+1, FARG_ByteToStr_output+1
0x0C12	0xF001EC7E  	CALL        _ByteToStr, 0
;FirmV_0_7_0.c,2697 :: 		if((val%2)==1)
0x0C16	0x0E01      	MOVLW       1
0x0C18	0x0105      	MOVLB       5
0x0C1A	0x15F3      	ANDWF       FARG_charValueToStr_val, 0, 1
0x0C1C	0x6E01      	MOVWF       R1 
0x0C1E	0x5001      	MOVF        R1, 0 
0x0C20	0x0A01      	XORLW       1
0x0C22	0xE11B      	BNZ         L_charValueToStr734
;FirmV_0_7_0.c,2698 :: 		memcpy(string+3,".5s",4);
0x0C24	0x0E03      	MOVLW       3
0x0C26	0x25F4      	ADDWF       FARG_charValueToStr_string, 0, 1
0x0C28	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x0C2A	0x0E00      	MOVLW       0
0x0C2C	0x21F5      	ADDWFC      FARG_charValueToStr_string+1, 0, 1
0x0C2E	0x0106      	MOVLB       6
0x0C30	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x0C32	0x0E2E      	MOVLW       46
0x0C34	0x0105      	MOVLB       5
0x0C36	0x6FF6      	MOVWF       ?lstr111_FirmV_0_7_0, 1
0x0C38	0x0E35      	MOVLW       53
0x0C3A	0x6FF7      	MOVWF       ?lstr111_FirmV_0_7_0+1, 1
0x0C3C	0x0E73      	MOVLW       115
0x0C3E	0x6FF8      	MOVWF       ?lstr111_FirmV_0_7_0+2, 1
0x0C40	0x6BF9      	CLRF        ?lstr111_FirmV_0_7_0+3, 1
0x0C42	0x0EF6      	MOVLW       ?lstr111_FirmV_0_7_0
0x0C44	0x0106      	MOVLB       6
0x0C46	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x0C48	0x0E05      	MOVLW       hi_addr(?lstr111_FirmV_0_7_0)
0x0C4A	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x0C4C	0x0E04      	MOVLW       4
0x0C4E	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x0C50	0x0E00      	MOVLW       0
0x0C52	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x0C54	0xF001EC0D  	CALL        _memcpy, 0
0x0C58	0xD01B      	BRA         L_charValueToStr735
L_charValueToStr734:
;FirmV_0_7_0.c,2700 :: 		memcpy(string+3,".0s",4);
0x0C5A	0x0E03      	MOVLW       3
0x0C5C	0x0105      	MOVLB       5
0x0C5E	0x25F4      	ADDWF       FARG_charValueToStr_string, 0, 1
0x0C60	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x0C62	0x0E00      	MOVLW       0
0x0C64	0x21F5      	ADDWFC      FARG_charValueToStr_string+1, 0, 1
0x0C66	0x0106      	MOVLB       6
0x0C68	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x0C6A	0x0E2E      	MOVLW       46
0x0C6C	0x0105      	MOVLB       5
0x0C6E	0x6FFA      	MOVWF       ?lstr112_FirmV_0_7_0, 1
0x0C70	0x0E30      	MOVLW       48
0x0C72	0x6FFB      	MOVWF       ?lstr112_FirmV_0_7_0+1, 1
0x0C74	0x0E73      	MOVLW       115
0x0C76	0x6FFC      	MOVWF       ?lstr112_FirmV_0_7_0+2, 1
0x0C78	0x6BFD      	CLRF        ?lstr112_FirmV_0_7_0+3, 1
0x0C7A	0x0EFA      	MOVLW       ?lstr112_FirmV_0_7_0
0x0C7C	0x0106      	MOVLB       6
0x0C7E	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x0C80	0x0E05      	MOVLW       hi_addr(?lstr112_FirmV_0_7_0)
0x0C82	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x0C84	0x0E04      	MOVLW       4
0x0C86	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x0C88	0x0E00      	MOVLW       0
0x0C8A	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x0C8C	0xF001EC0D  	CALL        _memcpy, 0
L_charValueToStr735:
;FirmV_0_7_0.c,2701 :: 		}
0x0C90	0x0012      	RETURN      0
; end of _charValueToStr
_EEPROM_Read:
;__Lib_EEPROM_1024.c,8 :: 		
;__Lib_EEPROM_1024.c,10 :: 		
0x0C92	0x9CA6      	BCF         EECON1, 6 
;__Lib_EEPROM_1024.c,11 :: 		
0x0C94	0xFFAAC5F4  	MOVFF       FARG_EEPROM_Read_address+1, EEADRH
;__Lib_EEPROM_1024.c,12 :: 		
0x0C98	0xFFA9C5F3  	MOVFF       FARG_EEPROM_Read_address, EEADR
;__Lib_EEPROM_1024.c,13 :: 		
0x0C9C	0x9EA6      	BCF         EECON1, 7 
;__Lib_EEPROM_1024.c,14 :: 		
0x0C9E	0x80A6      	BSF         EECON1, 0 
;__Lib_EEPROM_1024.c,16 :: 		
0x0CA0	0xF000CFA8  	MOVFF       EEDATA, R0
;__Lib_EEPROM_1024.c,18 :: 		
L_end_EEPROM_Read:
0x0CA4	0x0012      	RETURN      0
; end of _EEPROM_Read
_intValueToStr:
;FirmV_0_7_0.c,2727 :: 		void intValueToStr(unsigned val, char * string)
;FirmV_0_7_0.c,2729 :: 		wordtostr(val>>1,string);
0x0CA6	0xF5FFC5F3  	MOVFF       FARG_intValueToStr_val, FARG_WordToStr_input
0x0CAA	0xF600C5F4  	MOVFF       FARG_intValueToStr_val+1, FARG_WordToStr_input+1
0x0CAE	0x0106      	MOVLB       6
0x0CB0	0x3300      	RRCF        FARG_WordToStr_input+1, 1, 1
0x0CB2	0x0105      	MOVLB       5
0x0CB4	0x33FF      	RRCF        FARG_WordToStr_input, 1, 1
0x0CB6	0x0106      	MOVLB       6
0x0CB8	0x9F00      	BCF         FARG_WordToStr_input+1, 7, 1
0x0CBA	0xF601C5F5  	MOVFF       FARG_intValueToStr_string, FARG_WordToStr_output
0x0CBE	0xF602C5F6  	MOVFF       FARG_intValueToStr_string+1, FARG_WordToStr_output+1
0x0CC2	0xF001EC35  	CALL        _WordToStr, 0
;FirmV_0_7_0.c,2730 :: 		if((val%2)==1)
0x0CC6	0x0E01      	MOVLW       1
0x0CC8	0x0105      	MOVLB       5
0x0CCA	0x15F3      	ANDWF       FARG_intValueToStr_val, 0, 1
0x0CCC	0x6E01      	MOVWF       R1 
0x0CCE	0xF002C5F4  	MOVFF       FARG_intValueToStr_val+1, R2
0x0CD2	0x0E00      	MOVLW       0
0x0CD4	0x1602      	ANDWF       R2, 1 
0x0CD6	0x0E00      	MOVLW       0
0x0CD8	0x1802      	XORWF       R2, 0 
0x0CDA	0xE102      	BNZ         L__intValueToStr969
0x0CDC	0x0E01      	MOVLW       1
0x0CDE	0x1801      	XORWF       R1, 0 
L__intValueToStr969:
0x0CE0	0xE11B      	BNZ         L_intValueToStr736
;FirmV_0_7_0.c,2731 :: 		memcpy(string+5,".5s",4);
0x0CE2	0x0E05      	MOVLW       5
0x0CE4	0x25F5      	ADDWF       FARG_intValueToStr_string, 0, 1
0x0CE6	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x0CE8	0x0E00      	MOVLW       0
0x0CEA	0x21F6      	ADDWFC      FARG_intValueToStr_string+1, 0, 1
0x0CEC	0x0106      	MOVLB       6
0x0CEE	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x0CF0	0x0E2E      	MOVLW       46
0x0CF2	0x0105      	MOVLB       5
0x0CF4	0x6FF7      	MOVWF       ?lstr114_FirmV_0_7_0, 1
0x0CF6	0x0E35      	MOVLW       53
0x0CF8	0x6FF8      	MOVWF       ?lstr114_FirmV_0_7_0+1, 1
0x0CFA	0x0E73      	MOVLW       115
0x0CFC	0x6FF9      	MOVWF       ?lstr114_FirmV_0_7_0+2, 1
0x0CFE	0x6BFA      	CLRF        ?lstr114_FirmV_0_7_0+3, 1
0x0D00	0x0EF7      	MOVLW       ?lstr114_FirmV_0_7_0
0x0D02	0x0106      	MOVLB       6
0x0D04	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x0D06	0x0E05      	MOVLW       hi_addr(?lstr114_FirmV_0_7_0)
0x0D08	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x0D0A	0x0E04      	MOVLW       4
0x0D0C	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x0D0E	0x0E00      	MOVLW       0
0x0D10	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x0D12	0xF001EC0D  	CALL        _memcpy, 0
0x0D16	0xD01B      	BRA         L_intValueToStr737
L_intValueToStr736:
;FirmV_0_7_0.c,2733 :: 		memcpy(string+5,".0s",4);
0x0D18	0x0E05      	MOVLW       5
0x0D1A	0x0105      	MOVLB       5
0x0D1C	0x25F5      	ADDWF       FARG_intValueToStr_string, 0, 1
0x0D1E	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x0D20	0x0E00      	MOVLW       0
0x0D22	0x21F6      	ADDWFC      FARG_intValueToStr_string+1, 0, 1
0x0D24	0x0106      	MOVLB       6
0x0D26	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x0D28	0x0E2E      	MOVLW       46
0x0D2A	0x0105      	MOVLB       5
0x0D2C	0x6FFB      	MOVWF       ?lstr115_FirmV_0_7_0, 1
0x0D2E	0x0E30      	MOVLW       48
0x0D30	0x6FFC      	MOVWF       ?lstr115_FirmV_0_7_0+1, 1
0x0D32	0x0E73      	MOVLW       115
0x0D34	0x6FFD      	MOVWF       ?lstr115_FirmV_0_7_0+2, 1
0x0D36	0x6BFE      	CLRF        ?lstr115_FirmV_0_7_0+3, 1
0x0D38	0x0EFB      	MOVLW       ?lstr115_FirmV_0_7_0
0x0D3A	0x0106      	MOVLB       6
0x0D3C	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x0D3E	0x0E05      	MOVLW       hi_addr(?lstr115_FirmV_0_7_0)
0x0D40	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x0D42	0x0E04      	MOVLW       4
0x0D44	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x0D46	0x0E00      	MOVLW       0
0x0D48	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x0D4A	0xF001EC0D  	CALL        _memcpy, 0
L_intValueToStr737:
;FirmV_0_7_0.c,2734 :: 		}
0x0D4E	0x0012      	RETURN      0
; end of _intValueToStr
_SaveConfigs:
;FirmV_0_7_0.c,1723 :: 		void SaveConfigs()
;FirmV_0_7_0.c,1726 :: 		EEPROM_Write(1,Door1OpenTime);
0x0D50	0x0E01      	MOVLW       1
0x0D52	0x0105      	MOVLB       5
0x0D54	0x6FFF      	MOVWF       FARG_EEPROM_Write_address, 1
0x0D56	0x0E00      	MOVLW       0
0x0D58	0x0106      	MOVLB       6
0x0D5A	0x6F00      	MOVWF       FARG_EEPROM_Write_address+1, 1
0x0D5C	0xF601C234  	MOVFF       _Door1OpenTime, FARG_EEPROM_Write_data_
0x0D60	0xF000ECF1  	CALL        _EEPROM_Write, 0
;FirmV_0_7_0.c,1727 :: 		EEPROM_Write(2,Door2OpenTime);
0x0D64	0x0E02      	MOVLW       2
0x0D66	0x0105      	MOVLB       5
0x0D68	0x6FFF      	MOVWF       FARG_EEPROM_Write_address, 1
0x0D6A	0x0E00      	MOVLW       0
0x0D6C	0x0106      	MOVLB       6
0x0D6E	0x6F00      	MOVWF       FARG_EEPROM_Write_address+1, 1
0x0D70	0xF601C298  	MOVFF       _Door2OpenTime, FARG_EEPROM_Write_data_
0x0D74	0xF000ECF1  	CALL        _EEPROM_Write, 0
;FirmV_0_7_0.c,1728 :: 		EEPROM_Write(3,Door1CloseTime);
0x0D78	0x0E03      	MOVLW       3
0x0D7A	0x0105      	MOVLB       5
0x0D7C	0x6FFF      	MOVWF       FARG_EEPROM_Write_address, 1
0x0D7E	0x0E00      	MOVLW       0
0x0D80	0x0106      	MOVLB       6
0x0D82	0x6F00      	MOVWF       FARG_EEPROM_Write_address+1, 1
0x0D84	0xF601C235  	MOVFF       _Door1CloseTime, FARG_EEPROM_Write_data_
0x0D88	0xF000ECF1  	CALL        _EEPROM_Write, 0
;FirmV_0_7_0.c,1729 :: 		EEPROM_Write(4,Door2CloseTime);
0x0D8C	0x0E04      	MOVLW       4
0x0D8E	0x0105      	MOVLB       5
0x0D90	0x6FFF      	MOVWF       FARG_EEPROM_Write_address, 1
0x0D92	0x0E00      	MOVLW       0
0x0D94	0x0106      	MOVLB       6
0x0D96	0x6F00      	MOVWF       FARG_EEPROM_Write_address+1, 1
0x0D98	0xF601C1A7  	MOVFF       _Door2CloseTime, FARG_EEPROM_Write_data_
0x0D9C	0xF000ECF1  	CALL        _EEPROM_Write, 0
;FirmV_0_7_0.c,1730 :: 		EEPROM_Write(5,ActionTimeDiff);
0x0DA0	0x0E05      	MOVLW       5
0x0DA2	0x0105      	MOVLB       5
0x0DA4	0x6FFF      	MOVWF       FARG_EEPROM_Write_address, 1
0x0DA6	0x0E00      	MOVLW       0
0x0DA8	0x0106      	MOVLB       6
0x0DAA	0x6F00      	MOVWF       FARG_EEPROM_Write_address+1, 1
0x0DAC	0xF601C247  	MOVFF       _ActionTimeDiff, FARG_EEPROM_Write_data_
0x0DB0	0xF000ECF1  	CALL        _EEPROM_Write, 0
;FirmV_0_7_0.c,1731 :: 		EEPROM_Write(6,OpenSoftStartTime);
0x0DB4	0x0E06      	MOVLW       6
0x0DB6	0x0105      	MOVLB       5
0x0DB8	0x6FFF      	MOVWF       FARG_EEPROM_Write_address, 1
0x0DBA	0x0E00      	MOVLW       0
0x0DBC	0x0106      	MOVLB       6
0x0DBE	0x6F00      	MOVWF       FARG_EEPROM_Write_address+1, 1
0x0DC0	0xF601C1A4  	MOVFF       _OpenSoftStartTime, FARG_EEPROM_Write_data_
0x0DC4	0xF000ECF1  	CALL        _EEPROM_Write, 0
;FirmV_0_7_0.c,1732 :: 		EEPROM_Write(7,OpenSoftStopTime);
0x0DC8	0x0E07      	MOVLW       7
0x0DCA	0x0105      	MOVLB       5
0x0DCC	0x6FFF      	MOVWF       FARG_EEPROM_Write_address, 1
0x0DCE	0x0E00      	MOVLW       0
0x0DD0	0x0106      	MOVLB       6
0x0DD2	0x6F00      	MOVWF       FARG_EEPROM_Write_address+1, 1
0x0DD4	0xF601C1A5  	MOVFF       _OpenSoftStopTime, FARG_EEPROM_Write_data_
0x0DD8	0xF000ECF1  	CALL        _EEPROM_Write, 0
;FirmV_0_7_0.c,1733 :: 		EEPROM_Write(8,CloseSoftStartTime);
0x0DDC	0x0E08      	MOVLW       8
0x0DDE	0x0105      	MOVLB       5
0x0DE0	0x6FFF      	MOVWF       FARG_EEPROM_Write_address, 1
0x0DE2	0x0E00      	MOVLW       0
0x0DE4	0x0106      	MOVLB       6
0x0DE6	0x6F00      	MOVWF       FARG_EEPROM_Write_address+1, 1
0x0DE8	0xF601C1A6  	MOVFF       _CloseSoftStartTime, FARG_EEPROM_Write_data_
0x0DEC	0xF000ECF1  	CALL        _EEPROM_Write, 0
;FirmV_0_7_0.c,1734 :: 		EEPROM_Write(9,CloseSoftStopTime);
0x0DF0	0x0E09      	MOVLW       9
0x0DF2	0x0105      	MOVLB       5
0x0DF4	0x6FFF      	MOVWF       FARG_EEPROM_Write_address, 1
0x0DF6	0x0E00      	MOVLW       0
0x0DF8	0x0106      	MOVLB       6
0x0DFA	0x6F00      	MOVWF       FARG_EEPROM_Write_address+1, 1
0x0DFC	0xF601C242  	MOVFF       _CloseSoftStopTime, FARG_EEPROM_Write_data_
0x0E00	0xF000ECF1  	CALL        _EEPROM_Write, 0
;FirmV_0_7_0.c,1735 :: 		EEPROM_Write(10,Hi(AutoCloseTime));
0x0E04	0x0E0A      	MOVLW       10
0x0E06	0x0105      	MOVLB       5
0x0E08	0x6FFF      	MOVWF       FARG_EEPROM_Write_address, 1
0x0E0A	0x0E00      	MOVLW       0
0x0E0C	0x0106      	MOVLB       6
0x0E0E	0x6F00      	MOVWF       FARG_EEPROM_Write_address+1, 1
0x0E10	0xF601C296  	MOVFF       _AutoCloseTime+1, FARG_EEPROM_Write_data_
0x0E14	0xF000ECF1  	CALL        _EEPROM_Write, 0
;FirmV_0_7_0.c,1736 :: 		EEPROM_Write(11,Lo(AutoCloseTime));
0x0E18	0x0E0B      	MOVLW       11
0x0E1A	0x0105      	MOVLB       5
0x0E1C	0x6FFF      	MOVWF       FARG_EEPROM_Write_address, 1
0x0E1E	0x0E00      	MOVLW       0
0x0E20	0x0106      	MOVLB       6
0x0E22	0x6F00      	MOVWF       FARG_EEPROM_Write_address+1, 1
0x0E24	0xF601C295  	MOVFF       _AutoCloseTime, FARG_EEPROM_Write_data_
0x0E28	0xF000ECF1  	CALL        _EEPROM_Write, 0
;FirmV_0_7_0.c,1737 :: 		EEPROM_Write(12,OverloadSens1);
0x0E2C	0x0E0C      	MOVLW       12
0x0E2E	0x0105      	MOVLB       5
0x0E30	0x6FFF      	MOVWF       FARG_EEPROM_Write_address, 1
0x0E32	0x0E00      	MOVLW       0
0x0E34	0x0106      	MOVLB       6
0x0E36	0x6F00      	MOVWF       FARG_EEPROM_Write_address+1, 1
0x0E38	0xF601C020  	MOVFF       _OverloadSens1, FARG_EEPROM_Write_data_
0x0E3C	0xF000ECF1  	CALL        _EEPROM_Write, 0
;FirmV_0_7_0.c,1738 :: 		EEPROM_Write(13,CloseAfterPass);
0x0E40	0x0E0D      	MOVLW       13
0x0E42	0x0105      	MOVLB       5
0x0E44	0x6FFF      	MOVWF       FARG_EEPROM_Write_address, 1
0x0E46	0x0E00      	MOVLW       0
0x0E48	0x0106      	MOVLB       6
0x0E4A	0x6F00      	MOVWF       FARG_EEPROM_Write_address+1, 1
0x0E4C	0xF601C241  	MOVFF       _CloseAfterPass, FARG_EEPROM_Write_data_
0x0E50	0xF000ECF1  	CALL        _EEPROM_Write, 0
;FirmV_0_7_0.c,1739 :: 		EEPROM_Write(14,LockForce);
0x0E54	0x0E0E      	MOVLW       14
0x0E56	0x0105      	MOVLB       5
0x0E58	0x6FFF      	MOVWF       FARG_EEPROM_Write_address, 1
0x0E5A	0x0E00      	MOVLW       0
0x0E5C	0x0106      	MOVLB       6
0x0E5E	0x6F00      	MOVWF       FARG_EEPROM_Write_address+1, 1
0x0E60	0xF601C18F  	MOVFF       _LockForce, FARG_EEPROM_Write_data_
0x0E64	0xF000ECF1  	CALL        _EEPROM_Write, 0
;FirmV_0_7_0.c,1740 :: 		EEPROM_Write(15,OpenPhEnable);
0x0E68	0x0E0F      	MOVLW       15
0x0E6A	0x0105      	MOVLB       5
0x0E6C	0x6FFF      	MOVWF       FARG_EEPROM_Write_address, 1
0x0E6E	0x0E00      	MOVLW       0
0x0E70	0x0106      	MOVLB       6
0x0E72	0x6F00      	MOVWF       FARG_EEPROM_Write_address+1, 1
0x0E74	0xF601C299  	MOVFF       _OpenPhEnable, FARG_EEPROM_Write_data_
0x0E78	0xF000ECF1  	CALL        _EEPROM_Write, 0
;FirmV_0_7_0.c,1741 :: 		EEPROM_Write(16,LimiterEnable);
0x0E7C	0x0E10      	MOVLW       16
0x0E7E	0x0105      	MOVLB       5
0x0E80	0x6FFF      	MOVWF       FARG_EEPROM_Write_address, 1
0x0E82	0x0E00      	MOVLW       0
0x0E84	0x0106      	MOVLB       6
0x0E86	0x6F00      	MOVWF       FARG_EEPROM_Write_address+1, 1
0x0E88	0xF601C2A4  	MOVFF       _LimiterEnable, FARG_EEPROM_Write_data_
0x0E8C	0xF000ECF1  	CALL        _EEPROM_Write, 0
;FirmV_0_7_0.c,1742 :: 		EEPROM_Write(17,LockEnable);
0x0E90	0x0E11      	MOVLW       17
0x0E92	0x0105      	MOVLB       5
0x0E94	0x6FFF      	MOVWF       FARG_EEPROM_Write_address, 1
0x0E96	0x0E00      	MOVLW       0
0x0E98	0x0106      	MOVLB       6
0x0E9A	0x6F00      	MOVWF       FARG_EEPROM_Write_address+1, 1
0x0E9C	0xF601C2A3  	MOVFF       _LockEnable, FARG_EEPROM_Write_data_
0x0EA0	0xF000ECF1  	CALL        _EEPROM_Write, 0
;FirmV_0_7_0.c,1743 :: 		EEPROM_Write(18,OverloadTime1);
0x0EA4	0x0E12      	MOVLW       18
0x0EA6	0x0105      	MOVLB       5
0x0EA8	0x6FFF      	MOVWF       FARG_EEPROM_Write_address, 1
0x0EAA	0x0E00      	MOVLW       0
0x0EAC	0x0106      	MOVLB       6
0x0EAE	0x6F00      	MOVWF       FARG_EEPROM_Write_address+1, 1
0x0EB0	0xF601C190  	MOVFF       _OverloadTime1, FARG_EEPROM_Write_data_
0x0EB4	0xF000ECF1  	CALL        _EEPROM_Write, 0
;FirmV_0_7_0.c,1744 :: 		EEPROM_Write(19,OverloadSens2);
0x0EB8	0x0E13      	MOVLW       19
0x0EBA	0x0105      	MOVLB       5
0x0EBC	0x6FFF      	MOVWF       FARG_EEPROM_Write_address, 1
0x0EBE	0x0E00      	MOVLW       0
0x0EC0	0x0106      	MOVLB       6
0x0EC2	0x6F00      	MOVWF       FARG_EEPROM_Write_address+1, 1
0x0EC4	0xF601C01A  	MOVFF       _OverloadSens2, FARG_EEPROM_Write_data_
0x0EC8	0xF000ECF1  	CALL        _EEPROM_Write, 0
;FirmV_0_7_0.c,1745 :: 		EEPROM_Write(20,OverloadTime2);
0x0ECC	0x0E14      	MOVLW       20
0x0ECE	0x0105      	MOVLB       5
0x0ED0	0x6FFF      	MOVWF       FARG_EEPROM_Write_address, 1
0x0ED2	0x0E00      	MOVLW       0
0x0ED4	0x0106      	MOVLB       6
0x0ED6	0x6F00      	MOVWF       FARG_EEPROM_Write_address+1, 1
0x0ED8	0xF601C191  	MOVFF       _OverloadTime2, FARG_EEPROM_Write_data_
0x0EDC	0xF000ECF1  	CALL        _EEPROM_Write, 0
;FirmV_0_7_0.c,1746 :: 		SetOverloadParams(OverloadSens1,OverloadTime1,OverloadSens2,OverloadTime2);
0x0EE0	0xF5FFC020  	MOVFF       _OverloadSens1, FARG_SetOverloadParams_p1
0x0EE4	0xF600C190  	MOVFF       _OverloadTime1, FARG_SetOverloadParams_d1
0x0EE8	0xF601C01A  	MOVFF       _OverloadSens2, FARG_SetOverloadParams_p2
0x0EEC	0xF602C191  	MOVFF       _OverloadTime2, FARG_SetOverloadParams_d2
0x0EF0	0xF001ECB8  	CALL        _SetOverloadParams, 0
;FirmV_0_7_0.c,1748 :: 		}
0x0EF4	0x0012      	RETURN      0
; end of _SaveConfigs
_LoadConfigs:
;FirmV_0_7_0.c,1761 :: 		void LoadConfigs()
;FirmV_0_7_0.c,1763 :: 		Door1OpenTime=EEPROM_Read(1);
0x0EF6	0x0E01      	MOVLW       1
0x0EF8	0x0105      	MOVLB       5
0x0EFA	0x6FF3      	MOVWF       FARG_EEPROM_Read_address, 1
0x0EFC	0x0E00      	MOVLW       0
0x0EFE	0x6FF4      	MOVWF       FARG_EEPROM_Read_address+1, 1
0x0F00	0xDEC8      	RCALL       _EEPROM_Read
0x0F02	0xF234C000  	MOVFF       R0, _Door1OpenTime
;FirmV_0_7_0.c,1764 :: 		Door2OpenTime=EEPROM_Read(2);
0x0F06	0x0E02      	MOVLW       2
0x0F08	0x6FF3      	MOVWF       FARG_EEPROM_Read_address, 1
0x0F0A	0x0E00      	MOVLW       0
0x0F0C	0x6FF4      	MOVWF       FARG_EEPROM_Read_address+1, 1
0x0F0E	0xDEC1      	RCALL       _EEPROM_Read
0x0F10	0xF298C000  	MOVFF       R0, _Door2OpenTime
;FirmV_0_7_0.c,1765 :: 		Door1CloseTime=EEPROM_Read(3);
0x0F14	0x0E03      	MOVLW       3
0x0F16	0x6FF3      	MOVWF       FARG_EEPROM_Read_address, 1
0x0F18	0x0E00      	MOVLW       0
0x0F1A	0x6FF4      	MOVWF       FARG_EEPROM_Read_address+1, 1
0x0F1C	0xDEBA      	RCALL       _EEPROM_Read
0x0F1E	0xF235C000  	MOVFF       R0, _Door1CloseTime
;FirmV_0_7_0.c,1766 :: 		Door2CloseTime=EEPROM_Read(4);
0x0F22	0x0E04      	MOVLW       4
0x0F24	0x6FF3      	MOVWF       FARG_EEPROM_Read_address, 1
0x0F26	0x0E00      	MOVLW       0
0x0F28	0x6FF4      	MOVWF       FARG_EEPROM_Read_address+1, 1
0x0F2A	0xDEB3      	RCALL       _EEPROM_Read
0x0F2C	0xF1A7C000  	MOVFF       R0, _Door2CloseTime
;FirmV_0_7_0.c,1767 :: 		ActionTimeDiff=EEPROM_Read(5);
0x0F30	0x0E05      	MOVLW       5
0x0F32	0x6FF3      	MOVWF       FARG_EEPROM_Read_address, 1
0x0F34	0x0E00      	MOVLW       0
0x0F36	0x6FF4      	MOVWF       FARG_EEPROM_Read_address+1, 1
0x0F38	0xDEAC      	RCALL       _EEPROM_Read
0x0F3A	0xF247C000  	MOVFF       R0, _ActionTimeDiff
;FirmV_0_7_0.c,1768 :: 		OpenSoftStartTime=EEPROM_Read(6);
0x0F3E	0x0E06      	MOVLW       6
0x0F40	0x6FF3      	MOVWF       FARG_EEPROM_Read_address, 1
0x0F42	0x0E00      	MOVLW       0
0x0F44	0x6FF4      	MOVWF       FARG_EEPROM_Read_address+1, 1
0x0F46	0xDEA5      	RCALL       _EEPROM_Read
0x0F48	0xF1A4C000  	MOVFF       R0, _OpenSoftStartTime
;FirmV_0_7_0.c,1769 :: 		OpenSoftStopTime=EEPROM_Read(7);
0x0F4C	0x0E07      	MOVLW       7
0x0F4E	0x6FF3      	MOVWF       FARG_EEPROM_Read_address, 1
0x0F50	0x0E00      	MOVLW       0
0x0F52	0x6FF4      	MOVWF       FARG_EEPROM_Read_address+1, 1
0x0F54	0xDE9E      	RCALL       _EEPROM_Read
0x0F56	0xF1A5C000  	MOVFF       R0, _OpenSoftStopTime
;FirmV_0_7_0.c,1770 :: 		CloseSoftStartTime=EEPROM_Read(8);
0x0F5A	0x0E08      	MOVLW       8
0x0F5C	0x6FF3      	MOVWF       FARG_EEPROM_Read_address, 1
0x0F5E	0x0E00      	MOVLW       0
0x0F60	0x6FF4      	MOVWF       FARG_EEPROM_Read_address+1, 1
0x0F62	0xDE97      	RCALL       _EEPROM_Read
0x0F64	0xF1A6C000  	MOVFF       R0, _CloseSoftStartTime
;FirmV_0_7_0.c,1771 :: 		CloseSoftStopTime=EEPROM_Read(9);
0x0F68	0x0E09      	MOVLW       9
0x0F6A	0x6FF3      	MOVWF       FARG_EEPROM_Read_address, 1
0x0F6C	0x0E00      	MOVLW       0
0x0F6E	0x6FF4      	MOVWF       FARG_EEPROM_Read_address+1, 1
0x0F70	0xDE90      	RCALL       _EEPROM_Read
0x0F72	0xF242C000  	MOVFF       R0, _CloseSoftStopTime
;FirmV_0_7_0.c,1772 :: 		AutoCloseTime=EEPROM_Read(10);
0x0F76	0x0E0A      	MOVLW       10
0x0F78	0x6FF3      	MOVWF       FARG_EEPROM_Read_address, 1
0x0F7A	0x0E00      	MOVLW       0
0x0F7C	0x6FF4      	MOVWF       FARG_EEPROM_Read_address+1, 1
0x0F7E	0xDE89      	RCALL       _EEPROM_Read
0x0F80	0xF295C000  	MOVFF       R0, _AutoCloseTime
0x0F84	0x0E00      	MOVLW       0
0x0F86	0x0102      	MOVLB       2
0x0F88	0x6F96      	MOVWF       _AutoCloseTime+1, 1
;FirmV_0_7_0.c,1773 :: 		AutoCloseTime=AutoCloseTime<<8;
0x0F8A	0xF296C295  	MOVFF       _AutoCloseTime, _AutoCloseTime+1
0x0F8E	0x6B95      	CLRF        _AutoCloseTime, 1
;FirmV_0_7_0.c,1774 :: 		AutoCloseTime=AutocloseTime|EEPROM_Read(11);
0x0F90	0x0E0B      	MOVLW       11
0x0F92	0x0105      	MOVLB       5
0x0F94	0x6FF3      	MOVWF       FARG_EEPROM_Read_address, 1
0x0F96	0x0E00      	MOVLW       0
0x0F98	0x6FF4      	MOVWF       FARG_EEPROM_Read_address+1, 1
0x0F9A	0xDE7B      	RCALL       _EEPROM_Read
0x0F9C	0x5000      	MOVF        R0, 0 
0x0F9E	0x0102      	MOVLB       2
0x0FA0	0x1395      	IORWF       _AutoCloseTime, 1, 1
0x0FA2	0x0E00      	MOVLW       0
0x0FA4	0x1396      	IORWF       _AutoCloseTime+1, 1, 1
;FirmV_0_7_0.c,1775 :: 		OverloadSens1=EEPROM_Read(12);
0x0FA6	0x0E0C      	MOVLW       12
0x0FA8	0x0105      	MOVLB       5
0x0FAA	0x6FF3      	MOVWF       FARG_EEPROM_Read_address, 1
0x0FAC	0x0E00      	MOVLW       0
0x0FAE	0x6FF4      	MOVWF       FARG_EEPROM_Read_address+1, 1
0x0FB0	0xDE70      	RCALL       _EEPROM_Read
0x0FB2	0xF020C000  	MOVFF       R0, _OverloadSens1
;FirmV_0_7_0.c,1776 :: 		CloseAfterPass=EEPROM_Read(13);
0x0FB6	0x0E0D      	MOVLW       13
0x0FB8	0x6FF3      	MOVWF       FARG_EEPROM_Read_address, 1
0x0FBA	0x0E00      	MOVLW       0
0x0FBC	0x6FF4      	MOVWF       FARG_EEPROM_Read_address+1, 1
0x0FBE	0xDE69      	RCALL       _EEPROM_Read
0x0FC0	0xF241C000  	MOVFF       R0, _CloseAfterPass
;FirmV_0_7_0.c,1777 :: 		LockForce=EEPROM_Read(14);
0x0FC4	0x0E0E      	MOVLW       14
0x0FC6	0x6FF3      	MOVWF       FARG_EEPROM_Read_address, 1
0x0FC8	0x0E00      	MOVLW       0
0x0FCA	0x6FF4      	MOVWF       FARG_EEPROM_Read_address+1, 1
0x0FCC	0xDE62      	RCALL       _EEPROM_Read
0x0FCE	0xF18FC000  	MOVFF       R0, _LockForce
;FirmV_0_7_0.c,1778 :: 		OpenPhEnable=EEPROM_Read(15);
0x0FD2	0x0E0F      	MOVLW       15
0x0FD4	0x6FF3      	MOVWF       FARG_EEPROM_Read_address, 1
0x0FD6	0x0E00      	MOVLW       0
0x0FD8	0x6FF4      	MOVWF       FARG_EEPROM_Read_address+1, 1
0x0FDA	0xDE5B      	RCALL       _EEPROM_Read
0x0FDC	0xF299C000  	MOVFF       R0, _OpenPhEnable
;FirmV_0_7_0.c,1779 :: 		LimiterEnable=EEPROM_Read(16);
0x0FE0	0x0E10      	MOVLW       16
0x0FE2	0x6FF3      	MOVWF       FARG_EEPROM_Read_address, 1
0x0FE4	0x0E00      	MOVLW       0
0x0FE6	0x6FF4      	MOVWF       FARG_EEPROM_Read_address+1, 1
0x0FE8	0xDE54      	RCALL       _EEPROM_Read
0x0FEA	0xF2A4C000  	MOVFF       R0, _LimiterEnable
;FirmV_0_7_0.c,1780 :: 		LockEnable=EEPROM_Read(17);
0x0FEE	0x0E11      	MOVLW       17
0x0FF0	0x6FF3      	MOVWF       FARG_EEPROM_Read_address, 1
0x0FF2	0x0E00      	MOVLW       0
0x0FF4	0x6FF4      	MOVWF       FARG_EEPROM_Read_address+1, 1
0x0FF6	0xDE4D      	RCALL       _EEPROM_Read
0x0FF8	0xF2A3C000  	MOVFF       R0, _LockEnable
;FirmV_0_7_0.c,1781 :: 		OverloadTime1=EEPROM_Read(18);
0x0FFC	0x0E12      	MOVLW       18
0x0FFE	0x6FF3      	MOVWF       FARG_EEPROM_Read_address, 1
0x1000	0x0E00      	MOVLW       0
0x1002	0x6FF4      	MOVWF       FARG_EEPROM_Read_address+1, 1
0x1004	0xDE46      	RCALL       _EEPROM_Read
0x1006	0xF190C000  	MOVFF       R0, _OverloadTime1
;FirmV_0_7_0.c,1782 :: 		OverloadSens2=EEPROM_Read(19);
0x100A	0x0E13      	MOVLW       19
0x100C	0x6FF3      	MOVWF       FARG_EEPROM_Read_address, 1
0x100E	0x0E00      	MOVLW       0
0x1010	0x6FF4      	MOVWF       FARG_EEPROM_Read_address+1, 1
0x1012	0xDE3F      	RCALL       _EEPROM_Read
0x1014	0xF01AC000  	MOVFF       R0, _OverloadSens2
;FirmV_0_7_0.c,1783 :: 		OverloadTime2=EEPROM_Read(20);
0x1018	0x0E14      	MOVLW       20
0x101A	0x6FF3      	MOVWF       FARG_EEPROM_Read_address, 1
0x101C	0x0E00      	MOVLW       0
0x101E	0x6FF4      	MOVWF       FARG_EEPROM_Read_address+1, 1
0x1020	0xDE38      	RCALL       _EEPROM_Read
0x1022	0xF191C000  	MOVFF       R0, _OverloadTime2
;FirmV_0_7_0.c,1784 :: 		SetOverloadParams(OverloadSens1,OverloadTime1,OverloadSens2,OverloadTime2);
0x1026	0xF5FFC020  	MOVFF       _OverloadSens1, FARG_SetOverloadParams_p1
0x102A	0xF600C190  	MOVFF       _OverloadTime1, FARG_SetOverloadParams_d1
0x102E	0xF601C01A  	MOVFF       _OverloadSens2, FARG_SetOverloadParams_p2
0x1032	0xF602C000  	MOVFF       R0, FARG_SetOverloadParams_d2
0x1036	0xF001ECB8  	CALL        _SetOverloadParams, 0
;FirmV_0_7_0.c,1786 :: 		}
0x103A	0x0012      	RETURN      0
; end of _LoadConfigs
_AutoLearnCalculator:
;FirmV_0_7_0.c,2480 :: 		void AutoLearnCalculator(Learn *raw)
;FirmV_0_7_0.c,2483 :: 		(*raw).D1OpenTime=(*raw).D1OpenTime+10;
0x103C	0x0E01      	MOVLW       1
0x103E	0x0103      	MOVLB       3
0x1040	0x25D9      	ADDWF       FARG_AutoLearnCalculator_raw, 0, 1
0x1042	0x6E01      	MOVWF       R1 
0x1044	0x0E00      	MOVLW       0
0x1046	0x21DA      	ADDWFC      FARG_AutoLearnCalculator_raw+1, 0, 1
0x1048	0x6E02      	MOVWF       R2 
0x104A	0xFFE9C001  	MOVFF       R1, FSR0L
0x104E	0xFFEAC002  	MOVFF       R2, FSR0H
0x1052	0x0E0A      	MOVLW       10
0x1054	0x24EE      	ADDWF       POSTINC0, 0 
0x1056	0x6E00      	MOVWF       R0 
0x1058	0xFFE1C001  	MOVFF       R1, FSR1L
0x105C	0xFFE2C002  	MOVFF       R2, FSR1H
0x1060	0xFFE6C000  	MOVFF       R0, POSTINC1
;FirmV_0_7_0.c,2484 :: 		(*raw).D2OpenTime=(*raw).D2OpenTime+10;
0x1064	0x0E03      	MOVLW       3
0x1066	0x25D9      	ADDWF       FARG_AutoLearnCalculator_raw, 0, 1
0x1068	0x6E01      	MOVWF       R1 
0x106A	0x0E00      	MOVLW       0
0x106C	0x21DA      	ADDWFC      FARG_AutoLearnCalculator_raw+1, 0, 1
0x106E	0x6E02      	MOVWF       R2 
0x1070	0xFFE9C001  	MOVFF       R1, FSR0L
0x1074	0xFFEAC002  	MOVFF       R2, FSR0H
0x1078	0x0E0A      	MOVLW       10
0x107A	0x24EE      	ADDWF       POSTINC0, 0 
0x107C	0x6E00      	MOVWF       R0 
0x107E	0xFFE1C001  	MOVFF       R1, FSR1L
0x1082	0xFFE2C002  	MOVFF       R2, FSR1H
0x1086	0xFFE6C000  	MOVFF       R0, POSTINC1
;FirmV_0_7_0.c,2485 :: 		(*raw).D1CloseTime=(*raw).D1CloseTime+10;
0x108A	0xFFE9C3D9  	MOVFF       FARG_AutoLearnCalculator_raw, FSR0L
0x108E	0xFFEAC3DA  	MOVFF       FARG_AutoLearnCalculator_raw+1, FSR0H
0x1092	0xF000CFEE  	MOVFF       POSTINC0, R0
0x1096	0xFFE1C3D9  	MOVFF       FARG_AutoLearnCalculator_raw, FSR1L
0x109A	0xFFE2C3DA  	MOVFF       FARG_AutoLearnCalculator_raw+1, FSR1H
0x109E	0x0E0A      	MOVLW       10
0x10A0	0x2400      	ADDWF       R0, 0 
0x10A2	0x6EE6      	MOVWF       POSTINC1 
;FirmV_0_7_0.c,2486 :: 		(*raw).D2CloseTime=(*raw).D2CloseTime+10;
0x10A4	0x0E02      	MOVLW       2
0x10A6	0x25D9      	ADDWF       FARG_AutoLearnCalculator_raw, 0, 1
0x10A8	0x6E01      	MOVWF       R1 
0x10AA	0x0E00      	MOVLW       0
0x10AC	0x21DA      	ADDWFC      FARG_AutoLearnCalculator_raw+1, 0, 1
0x10AE	0x6E02      	MOVWF       R2 
0x10B0	0xFFE9C001  	MOVFF       R1, FSR0L
0x10B4	0xFFEAC002  	MOVFF       R2, FSR0H
0x10B8	0x0E0A      	MOVLW       10
0x10BA	0x24EE      	ADDWF       POSTINC0, 0 
0x10BC	0x6E00      	MOVWF       R0 
0x10BE	0xFFE1C001  	MOVFF       R1, FSR1L
0x10C2	0xFFE2C002  	MOVFF       R2, FSR1H
0x10C6	0xFFE6C000  	MOVFF       R0, POSTINC1
;FirmV_0_7_0.c,2488 :: 		(*raw).D1OpenSoftStart=4;
0x10CA	0x0E04      	MOVLW       4
0x10CC	0x25D9      	ADDWF       FARG_AutoLearnCalculator_raw, 0, 1
0x10CE	0x6EE1      	MOVWF       FSR1L 
0x10D0	0x0E00      	MOVLW       0
0x10D2	0x21DA      	ADDWFC      FARG_AutoLearnCalculator_raw+1, 0, 1
0x10D4	0x6EE2      	MOVWF       FSR1H 
0x10D6	0x0E04      	MOVLW       4
0x10D8	0x6EE6      	MOVWF       POSTINC1 
;FirmV_0_7_0.c,2489 :: 		(*raw).D1CloseSoftStart=4;
0x10DA	0x0E06      	MOVLW       6
0x10DC	0x25D9      	ADDWF       FARG_AutoLearnCalculator_raw, 0, 1
0x10DE	0x6EE1      	MOVWF       FSR1L 
0x10E0	0x0E00      	MOVLW       0
0x10E2	0x21DA      	ADDWFC      FARG_AutoLearnCalculator_raw+1, 0, 1
0x10E4	0x6EE2      	MOVWF       FSR1H 
0x10E6	0x0E04      	MOVLW       4
0x10E8	0x6EE6      	MOVWF       POSTINC1 
;FirmV_0_7_0.c,2490 :: 		(*raw).D2OpenSoftStart=4;
0x10EA	0x0E08      	MOVLW       8
0x10EC	0x25D9      	ADDWF       FARG_AutoLearnCalculator_raw, 0, 1
0x10EE	0x6EE1      	MOVWF       FSR1L 
0x10F0	0x0E00      	MOVLW       0
0x10F2	0x21DA      	ADDWFC      FARG_AutoLearnCalculator_raw+1, 0, 1
0x10F4	0x6EE2      	MOVWF       FSR1H 
0x10F6	0x0E04      	MOVLW       4
0x10F8	0x6EE6      	MOVWF       POSTINC1 
;FirmV_0_7_0.c,2491 :: 		(*raw).D2CloseSoftStart=4;
0x10FA	0x0E0A      	MOVLW       10
0x10FC	0x25D9      	ADDWF       FARG_AutoLearnCalculator_raw, 0, 1
0x10FE	0x6EE1      	MOVWF       FSR1L 
0x1100	0x0E00      	MOVLW       0
0x1102	0x21DA      	ADDWFC      FARG_AutoLearnCalculator_raw+1, 0, 1
0x1104	0x6EE2      	MOVWF       FSR1H 
0x1106	0x0E04      	MOVLW       4
0x1108	0x6EE6      	MOVWF       POSTINC1 
;FirmV_0_7_0.c,2493 :: 		(*raw).D1OpenSoftStop=10;
0x110A	0x0E05      	MOVLW       5
0x110C	0x25D9      	ADDWF       FARG_AutoLearnCalculator_raw, 0, 1
0x110E	0x6EE1      	MOVWF       FSR1L 
0x1110	0x0E00      	MOVLW       0
0x1112	0x21DA      	ADDWFC      FARG_AutoLearnCalculator_raw+1, 0, 1
0x1114	0x6EE2      	MOVWF       FSR1H 
0x1116	0x0E0A      	MOVLW       10
0x1118	0x6EE6      	MOVWF       POSTINC1 
;FirmV_0_7_0.c,2494 :: 		(*raw).D2OpenSoftStop=10;
0x111A	0x0E09      	MOVLW       9
0x111C	0x25D9      	ADDWF       FARG_AutoLearnCalculator_raw, 0, 1
0x111E	0x6EE1      	MOVWF       FSR1L 
0x1120	0x0E00      	MOVLW       0
0x1122	0x21DA      	ADDWFC      FARG_AutoLearnCalculator_raw+1, 0, 1
0x1124	0x6EE2      	MOVWF       FSR1H 
0x1126	0x0E0A      	MOVLW       10
0x1128	0x6EE6      	MOVWF       POSTINC1 
;FirmV_0_7_0.c,2495 :: 		(*raw).D1CloseSoftStop=10;
0x112A	0x0E07      	MOVLW       7
0x112C	0x25D9      	ADDWF       FARG_AutoLearnCalculator_raw, 0, 1
0x112E	0x6EE1      	MOVWF       FSR1L 
0x1130	0x0E00      	MOVLW       0
0x1132	0x21DA      	ADDWFC      FARG_AutoLearnCalculator_raw+1, 0, 1
0x1134	0x6EE2      	MOVWF       FSR1H 
0x1136	0x0E0A      	MOVLW       10
0x1138	0x6EE6      	MOVWF       POSTINC1 
;FirmV_0_7_0.c,2496 :: 		(*raw).D2CloseSoftStop=10;
0x113A	0x0E0B      	MOVLW       11
0x113C	0x25D9      	ADDWF       FARG_AutoLearnCalculator_raw, 0, 1
0x113E	0x6EE1      	MOVWF       FSR1L 
0x1140	0x0E00      	MOVLW       0
0x1142	0x21DA      	ADDWFC      FARG_AutoLearnCalculator_raw+1, 0, 1
0x1144	0x6EE2      	MOVWF       FSR1H 
0x1146	0x0E0A      	MOVLW       10
0x1148	0x6EE6      	MOVWF       POSTINC1 
;FirmV_0_7_0.c,2498 :: 		}
0x114A	0x0012      	RETURN      0
; end of _AutoLearnCalculator
_StopMotor:
;FirmV_0_7_0.c,1849 :: 		void StopMotor(char Mx)
;FirmV_0_7_0.c,1851 :: 		if(Mx==1)
0x114C	0x0103      	MOVLB       3
0x114E	0x51D9      	MOVF        FARG_StopMotor_Mx, 0, 1
0x1150	0x0A01      	XORLW       1
0x1152	0xE103      	BNZ         L_StopMotor412
;FirmV_0_7_0.c,1853 :: 		Motor1Start=0;
0x1154	0x0100      	MOVLB       0
0x1156	0x6BDF      	CLRF        _Motor1Start, 1
;FirmV_0_7_0.c,1854 :: 		Motor1=0;
0x1158	0x9681      	BCF         PORTB, 3 
;FirmV_0_7_0.c,1855 :: 		}
L_StopMotor412:
;FirmV_0_7_0.c,1857 :: 		if(Mx==2)
0x115A	0x0103      	MOVLB       3
0x115C	0x51D9      	MOVF        FARG_StopMotor_Mx, 0, 1
0x115E	0x0A02      	XORLW       2
0x1160	0xE103      	BNZ         L_StopMotor413
;FirmV_0_7_0.c,1859 :: 		Motor2Start=0;
0x1162	0x0100      	MOVLB       0
0x1164	0x6BE0      	CLRF        _Motor2Start, 1
;FirmV_0_7_0.c,1860 :: 		Motor2=0;
0x1166	0x9881      	BCF         PORTB, 4 
;FirmV_0_7_0.c,1861 :: 		}
L_StopMotor413:
;FirmV_0_7_0.c,1862 :: 		}
0x1168	0x0012      	RETURN      0
; end of _StopMotor
_AddTask:
;FirmV_0_7_0.c,1406 :: 		void AddTask(unsigned long OccTime,char tcode)
;FirmV_0_7_0.c,1409 :: 		for(i=0;i<20;i++)
0x116A	0x0103      	MOVLB       3
0x116C	0x6BDE      	CLRF        AddTask_i_L0, 1
L_AddTask338:
0x116E	0x0E14      	MOVLW       20
0x1170	0x5DDE      	SUBWF       AddTask_i_L0, 0, 1
0x1172	0xE26D      	BC          L_AddTask339
;FirmV_0_7_0.c,1410 :: 		if(Tasks[i].Expired==1)
0x1174	0xF000C3DE  	MOVFF       AddTask_i_L0, R0
0x1178	0x0E00      	MOVLW       0
0x117A	0x6E01      	MOVWF       R1 
0x117C	0x0E07      	MOVLW       7
0x117E	0x6E04      	MOVWF       R4 
0x1180	0x0E00      	MOVLW       0
0x1182	0x6E05      	MOVWF       R5 
0x1184	0xDD15      	RCALL       _Mul_16x16_U
0x1186	0x0EA8      	MOVLW       _Tasks
0x1188	0x2600      	ADDWF       R0, 1 
0x118A	0x0E01      	MOVLW       hi_addr(_Tasks)
0x118C	0x2201      	ADDWFC      R1, 1 
0x118E	0x0E05      	MOVLW       5
0x1190	0x2400      	ADDWF       R0, 0 
0x1192	0x6EE9      	MOVWF       FSR0L 
0x1194	0x0E00      	MOVLW       0
0x1196	0x2001      	ADDWFC      R1, 0 
0x1198	0x6EEA      	MOVWF       FSR0H 
0x119A	0x50EE      	MOVF        POSTINC0, 0 
0x119C	0x0A01      	XORLW       1
0x119E	0xE155      	BNZ         L_AddTask341
;FirmV_0_7_0.c,1412 :: 		Tasks[i].TaskCode=tcode;
0x11A0	0xF000C3DE  	MOVFF       AddTask_i_L0, R0
0x11A4	0x0E00      	MOVLW       0
0x11A6	0x6E01      	MOVWF       R1 
0x11A8	0x0E07      	MOVLW       7
0x11AA	0x6E04      	MOVWF       R4 
0x11AC	0x0E00      	MOVLW       0
0x11AE	0x6E05      	MOVWF       R5 
0x11B0	0xDCFF      	RCALL       _Mul_16x16_U
0x11B2	0x0EA8      	MOVLW       _Tasks
0x11B4	0x2400      	ADDWF       R0, 0 
0x11B6	0x6EE1      	MOVWF       FSR1L 
0x11B8	0x0E01      	MOVLW       hi_addr(_Tasks)
0x11BA	0x2001      	ADDWFC      R1, 0 
0x11BC	0x6EE2      	MOVWF       FSR1H 
0x11BE	0xFFE6C3DD  	MOVFF       FARG_AddTask_tcode, POSTINC1
;FirmV_0_7_0.c,1413 :: 		Tasks[i].Time=OccTime;
0x11C2	0xF000C3DE  	MOVFF       AddTask_i_L0, R0
0x11C6	0x0E00      	MOVLW       0
0x11C8	0x6E01      	MOVWF       R1 
0x11CA	0x0E07      	MOVLW       7
0x11CC	0x6E04      	MOVWF       R4 
0x11CE	0x0E00      	MOVLW       0
0x11D0	0x6E05      	MOVWF       R5 
0x11D2	0xDCEE      	RCALL       _Mul_16x16_U
0x11D4	0x0EA8      	MOVLW       _Tasks
0x11D6	0x2600      	ADDWF       R0, 1 
0x11D8	0x0E01      	MOVLW       hi_addr(_Tasks)
0x11DA	0x2201      	ADDWFC      R1, 1 
0x11DC	0x0E01      	MOVLW       1
0x11DE	0x2400      	ADDWF       R0, 0 
0x11E0	0x6EE1      	MOVWF       FSR1L 
0x11E2	0x0E00      	MOVLW       0
0x11E4	0x2001      	ADDWFC      R1, 0 
0x11E6	0x6EE2      	MOVWF       FSR1H 
0x11E8	0xFFE6C3D9  	MOVFF       FARG_AddTask_OccTime, POSTINC1
0x11EC	0xFFE6C3DA  	MOVFF       FARG_AddTask_OccTime+1, POSTINC1
0x11F0	0xFFE6C3DB  	MOVFF       FARG_AddTask_OccTime+2, POSTINC1
0x11F4	0xFFE6C3DC  	MOVFF       FARG_AddTask_OccTime+3, POSTINC1
;FirmV_0_7_0.c,1414 :: 		Tasks[i].Expired=0;
0x11F8	0xF000C3DE  	MOVFF       AddTask_i_L0, R0
0x11FC	0x0E00      	MOVLW       0
0x11FE	0x6E01      	MOVWF       R1 
0x1200	0x0E07      	MOVLW       7
0x1202	0x6E04      	MOVWF       R4 
0x1204	0x0E00      	MOVLW       0
0x1206	0x6E05      	MOVWF       R5 
0x1208	0xDCD3      	RCALL       _Mul_16x16_U
0x120A	0x0EA8      	MOVLW       _Tasks
0x120C	0x2600      	ADDWF       R0, 1 
0x120E	0x0E01      	MOVLW       hi_addr(_Tasks)
0x1210	0x2201      	ADDWFC      R1, 1 
0x1212	0x0E05      	MOVLW       5
0x1214	0x2400      	ADDWF       R0, 0 
0x1216	0x6EE1      	MOVWF       FSR1L 
0x1218	0x0E00      	MOVLW       0
0x121A	0x2001      	ADDWFC      R1, 0 
0x121C	0x6EE2      	MOVWF       FSR1H 
0x121E	0x6AE6      	CLRF        POSTINC1 
;FirmV_0_7_0.c,1415 :: 		Tasks[i].Fired=0;
0x1220	0xF000C3DE  	MOVFF       AddTask_i_L0, R0
0x1224	0x0E00      	MOVLW       0
0x1226	0x6E01      	MOVWF       R1 
0x1228	0x0E07      	MOVLW       7
0x122A	0x6E04      	MOVWF       R4 
0x122C	0x0E00      	MOVLW       0
0x122E	0x6E05      	MOVWF       R5 
0x1230	0xDCBF      	RCALL       _Mul_16x16_U
0x1232	0x0EA8      	MOVLW       _Tasks
0x1234	0x2600      	ADDWF       R0, 1 
0x1236	0x0E01      	MOVLW       hi_addr(_Tasks)
0x1238	0x2201      	ADDWFC      R1, 1 
0x123A	0x0E06      	MOVLW       6
0x123C	0x2400      	ADDWF       R0, 0 
0x123E	0x6EE1      	MOVWF       FSR1L 
0x1240	0x0E00      	MOVLW       0
0x1242	0x2001      	ADDWFC      R1, 0 
0x1244	0x6EE2      	MOVWF       FSR1H 
0x1246	0x6AE6      	CLRF        POSTINC1 
;FirmV_0_7_0.c,1416 :: 		break;
0x1248	0xD002      	BRA         L_AddTask339
;FirmV_0_7_0.c,1417 :: 		}
L_AddTask341:
;FirmV_0_7_0.c,1409 :: 		for(i=0;i<20;i++)
0x124A	0x2BDE      	INCF        AddTask_i_L0, 1, 1
;FirmV_0_7_0.c,1417 :: 		}
0x124C	0xD790      	BRA         L_AddTask338
L_AddTask339:
;FirmV_0_7_0.c,1418 :: 		}
0x124E	0x0012      	RETURN      0
; end of _AddTask
_CheckTask:
;FirmV_0_7_0.c,1874 :: 		char CheckTask(char TaskCode)
;FirmV_0_7_0.c,1876 :: 		if(Events.Task1==TaskCode)
0x1250	0x0102      	MOVLB       2
0x1252	0x519B      	MOVF        _Events+1, 0, 1
0x1254	0x0103      	MOVLB       3
0x1256	0x19D9      	XORWF       FARG_CheckTask_TaskCode, 0, 1
0x1258	0xE105      	BNZ         L_CheckTask414
;FirmV_0_7_0.c,1877 :: 		{Events.Task1=0; return 1;}
0x125A	0x0102      	MOVLB       2
0x125C	0x6B9B      	CLRF        _Events+1, 1
0x125E	0x0E01      	MOVLW       1
0x1260	0x6E00      	MOVWF       R0 
0x1262	0x0012      	RETURN      0
L_CheckTask414:
0x1264	0x0102      	MOVLB       2
;FirmV_0_7_0.c,1879 :: 		if(Events.Task2==TaskCode)
0x1266	0x519C      	MOVF        _Events+2, 0, 1
0x1268	0x0103      	MOVLB       3
0x126A	0x19D9      	XORWF       FARG_CheckTask_TaskCode, 0, 1
0x126C	0xE105      	BNZ         L_CheckTask415
;FirmV_0_7_0.c,1880 :: 		{Events.Task2=0; return 1;}
0x126E	0x0102      	MOVLB       2
0x1270	0x6B9C      	CLRF        _Events+2, 1
0x1272	0x0E01      	MOVLW       1
0x1274	0x6E00      	MOVWF       R0 
0x1276	0x0012      	RETURN      0
L_CheckTask415:
0x1278	0x0102      	MOVLB       2
;FirmV_0_7_0.c,1882 :: 		if(Events.Task3==TaskCode)
0x127A	0x519D      	MOVF        _Events+3, 0, 1
0x127C	0x0103      	MOVLB       3
0x127E	0x19D9      	XORWF       FARG_CheckTask_TaskCode, 0, 1
0x1280	0xE105      	BNZ         L_CheckTask416
;FirmV_0_7_0.c,1883 :: 		{Events.Task3=0; return 1;}
0x1282	0x0102      	MOVLB       2
0x1284	0x6B9D      	CLRF        _Events+3, 1
0x1286	0x0E01      	MOVLW       1
0x1288	0x6E00      	MOVWF       R0 
0x128A	0x0012      	RETURN      0
L_CheckTask416:
;FirmV_0_7_0.c,1885 :: 		return 0;
0x128C	0x6A00      	CLRF        R0 
;FirmV_0_7_0.c,1887 :: 		}
0x128E	0x0012      	RETURN      0
; end of _CheckTask
_I2C1_Start:
;__Lib_I2C_c34.c,36 :: 		
;__Lib_I2C_c34.c,39 :: 		
0x1290	0x0103      	MOVLB       3
0x1292	0x6BD9      	CLRF        I2C1_Start_j_L0, 1
0x1294	0x6BDA      	CLRF        I2C1_Start_j_L0+1, 1
L_I2C1_Start2:
0x1296	0x51DA      	MOVF        I2C1_Start_j_L0+1, 0, 1
0x1298	0x0812      	SUBLW       18
0x129A	0xE102      	BNZ         L__I2C1_Start27
0x129C	0x51D9      	MOVF        I2C1_Start_j_L0, 0, 1
0x129E	0x088E      	SUBLW       142
L__I2C1_Start27:
0x12A0	0xE308      	BNC         L_I2C1_Start3
;__Lib_I2C_c34.c,40 :: 		
0x12A2	0xDC79      	RCALL       _I2C1_Is_Idle
0x12A4	0x5200      	MOVF        R0, 1 
0x12A6	0xE001      	BZ          L_I2C1_Start5
;__Lib_I2C_c34.c,41 :: 		
0x12A8	0xD004      	BRA         L_I2C1_Start3
L_I2C1_Start5:
;__Lib_I2C_c34.c,39 :: 		
0x12AA	0x0103      	MOVLB       3
0x12AC	0x4BD9      	INFSNZ      I2C1_Start_j_L0, 1, 1
0x12AE	0x2BDA      	INCF        I2C1_Start_j_L0+1, 1, 1
;__Lib_I2C_c34.c,42 :: 		
0x12B0	0xD7F2      	BRA         L_I2C1_Start2
L_I2C1_Start3:
0x12B2	0x0103      	MOVLB       3
;__Lib_I2C_c34.c,44 :: 		
0x12B4	0x0E12      	MOVLW       18
0x12B6	0x5DDA      	SUBWF       I2C1_Start_j_L0+1, 0, 1
0x12B8	0xE102      	BNZ         L__I2C1_Start28
0x12BA	0x0E8F      	MOVLW       143
0x12BC	0x5DD9      	SUBWF       I2C1_Start_j_L0, 0, 1
L__I2C1_Start28:
0x12BE	0xE303      	BNC         L_I2C1_Start6
;__Lib_I2C_c34.c,45 :: 		
0x12C0	0x0E7B      	MOVLW       123
0x12C2	0x6E00      	MOVWF       R0 
0x12C4	0xD005      	BRA         L_end_I2C1_Start
L_I2C1_Start6:
;__Lib_I2C_c34.c,47 :: 		
0x12C6	0x80C5      	BSF         SSPCON2, 0 
;__Lib_I2C_c34.c,48 :: 		
L_I2C1_Start8:
0x12C8	0xA0C5      	BTFSS       SSPCON2, 0 
0x12CA	0xD001      	BRA         L_I2C1_Start9
;__Lib_I2C_c34.c,49 :: 		
0x12CC	0xD7FD      	BRA         L_I2C1_Start8
L_I2C1_Start9:
;__Lib_I2C_c34.c,50 :: 		
0x12CE	0x6A00      	CLRF        R0 
;__Lib_I2C_c34.c,52 :: 		
L_end_I2C1_Start:
0x12D0	0x0012      	RETURN      0
; end of _I2C1_Start
_Logger:
;FirmV_0_7_0.c,356 :: 		void Logger(char* text, char TimeStampFlag)
;FirmV_0_7_0.c,359 :: 		if(TimeStampFlag)
0x12D2	0x0103      	MOVLB       3
0x12D4	0x53DB      	MOVF        FARG_Logger_TimeStampFlag, 1, 1
0x12D6	0xE020      	BZ          L_Logger34
;FirmV_0_7_0.c,361 :: 		longwordtostrwithzeros(ms500,time);
0x12D8	0xF5F3C104  	MOVFF       _ms500, FARG_LongWordToStrWithZeros_input
0x12DC	0xF5F4C105  	MOVFF       _ms500+1, FARG_LongWordToStrWithZeros_input+1
0x12E0	0xF5F5C106  	MOVFF       _ms500+2, FARG_LongWordToStrWithZeros_input+2
0x12E4	0xF5F6C107  	MOVFF       _ms500+3, FARG_LongWordToStrWithZeros_input+3
0x12E8	0x0EDC      	MOVLW       Logger_time_L0
0x12EA	0x0105      	MOVLB       5
0x12EC	0x6FF7      	MOVWF       FARG_LongWordToStrWithZeros_output, 1
0x12EE	0x0E03      	MOVLW       hi_addr(Logger_time_L0)
0x12F0	0x6FF8      	MOVWF       FARG_LongWordToStrWithZeros_output+1, 1
0x12F2	0xF005EC33  	CALL        _LongWordToStrWithZeros, 0
;FirmV_0_7_0.c,362 :: 		uart_write_text(time);
0x12F6	0x0EDC      	MOVLW       Logger_time_L0
0x12F8	0x6FF3      	MOVWF       FARG_UART_Write_Text_uart_text, 1
0x12FA	0x0E03      	MOVLW       hi_addr(Logger_time_L0)
0x12FC	0x6FF4      	MOVWF       FARG_UART_Write_Text_uart_text+1, 1
0x12FE	0xDC31      	RCALL       _UART_Write_Text
;FirmV_0_7_0.c,363 :: 		uart1_write_text(": ");
0x1300	0x0E3A      	MOVLW       58
0x1302	0x0103      	MOVLB       3
0x1304	0x6FE7      	MOVWF       ?lstr1_FirmV_0_7_0, 1
0x1306	0x0E20      	MOVLW       32
0x1308	0x6FE8      	MOVWF       ?lstr1_FirmV_0_7_0+1, 1
0x130A	0x6BE9      	CLRF        ?lstr1_FirmV_0_7_0+2, 1
0x130C	0x0EE7      	MOVLW       ?lstr1_FirmV_0_7_0
0x130E	0x0105      	MOVLB       5
0x1310	0x6FF3      	MOVWF       FARG_UART1_Write_Text_uart_text, 1
0x1312	0x0E03      	MOVLW       hi_addr(?lstr1_FirmV_0_7_0)
0x1314	0x6FF4      	MOVWF       FARG_UART1_Write_Text_uart_text+1, 1
0x1316	0xDC0A      	RCALL       _UART1_Write_Text
;FirmV_0_7_0.c,364 :: 		}
L_Logger34:
;FirmV_0_7_0.c,365 :: 		uart1_write_text(text);
0x1318	0xF5F3C3D9  	MOVFF       FARG_Logger_text, FARG_UART1_Write_Text_uart_text
0x131C	0xF5F4C3DA  	MOVFF       FARG_Logger_text+1, FARG_UART1_Write_Text_uart_text+1
0x1320	0xDC05      	RCALL       _UART1_Write_Text
;FirmV_0_7_0.c,366 :: 		uart1_write(0x0D);
0x1322	0x0E0D      	MOVLW       13
0x1324	0x0106      	MOVLB       6
0x1326	0x6F06      	MOVWF       FARG_UART1_Write_data_, 1
0x1328	0xF000ECAB  	CALL        _UART1_Write, 0
;FirmV_0_7_0.c,367 :: 		uart1_write(0x0A);
0x132C	0x0E0A      	MOVLW       10
0x132E	0x0106      	MOVLB       6
0x1330	0x6F06      	MOVWF       FARG_UART1_Write_data_, 1
0x1332	0xF000ECAB  	CALL        _UART1_Write, 0
;FirmV_0_7_0.c,368 :: 		}
0x1336	0x0012      	RETURN      0
; end of _Logger
_GetAutocloseTime:
;FirmV_0_7_0.c,1918 :: 		char GetAutocloseTime()
;FirmV_0_7_0.c,1922 :: 		for(i=0;i<20;i++)
0x1338	0x0103      	MOVLB       3
0x133A	0x6BD9      	CLRF        GetAutocloseTime_i_L0, 1
L_GetAutocloseTime425:
0x133C	0x0E14      	MOVLW       20
0x133E	0x5DD9      	SUBWF       GetAutocloseTime_i_L0, 0, 1
0x1340	0xE250      	BC          L_GetAutocloseTime426
;FirmV_0_7_0.c,1924 :: 		if((Tasks[i].Expired==0)&&(Tasks[i].TaskCode==9))
0x1342	0xF000C3D9  	MOVFF       GetAutocloseTime_i_L0, R0
0x1346	0x0E00      	MOVLW       0
0x1348	0x6E01      	MOVWF       R1 
0x134A	0x0E07      	MOVLW       7
0x134C	0x6E04      	MOVWF       R4 
0x134E	0x0E00      	MOVLW       0
0x1350	0x6E05      	MOVWF       R5 
0x1352	0xDC2E      	RCALL       _Mul_16x16_U
0x1354	0x0EA8      	MOVLW       _Tasks
0x1356	0x2600      	ADDWF       R0, 1 
0x1358	0x0E01      	MOVLW       hi_addr(_Tasks)
0x135A	0x2201      	ADDWFC      R1, 1 
0x135C	0x0E05      	MOVLW       5
0x135E	0x2400      	ADDWF       R0, 0 
0x1360	0x6EE9      	MOVWF       FSR0L 
0x1362	0x0E00      	MOVLW       0
0x1364	0x2001      	ADDWFC      R1, 0 
0x1366	0x6EEA      	MOVWF       FSR0H 
0x1368	0x50EE      	MOVF        POSTINC0, 0 
0x136A	0x0A00      	XORLW       0
0x136C	0xE138      	BNZ         L_GetAutocloseTime430
0x136E	0xF000C3D9  	MOVFF       GetAutocloseTime_i_L0, R0
0x1372	0x0E00      	MOVLW       0
0x1374	0x6E01      	MOVWF       R1 
0x1376	0x0E07      	MOVLW       7
0x1378	0x6E04      	MOVWF       R4 
0x137A	0x0E00      	MOVLW       0
0x137C	0x6E05      	MOVWF       R5 
0x137E	0xDC18      	RCALL       _Mul_16x16_U
0x1380	0x0EA8      	MOVLW       _Tasks
0x1382	0x2400      	ADDWF       R0, 0 
0x1384	0x6EE9      	MOVWF       FSR0L 
0x1386	0x0E01      	MOVLW       hi_addr(_Tasks)
0x1388	0x2001      	ADDWFC      R1, 0 
0x138A	0x6EEA      	MOVWF       FSR0H 
0x138C	0xF001CFEE  	MOVFF       POSTINC0, R1
0x1390	0x5001      	MOVF        R1, 0 
0x1392	0x0A09      	XORLW       9
0x1394	0xE124      	BNZ         L_GetAutocloseTime430
L__GetAutocloseTime877:
;FirmV_0_7_0.c,1925 :: 		{t=Tasks[i].Time;Tasks[i].Expired=1;break;}
0x1396	0xF000C3D9  	MOVFF       GetAutocloseTime_i_L0, R0
0x139A	0x0E00      	MOVLW       0
0x139C	0x6E01      	MOVWF       R1 
0x139E	0x0E07      	MOVLW       7
0x13A0	0x6E04      	MOVWF       R4 
0x13A2	0x0E00      	MOVLW       0
0x13A4	0x6E05      	MOVWF       R5 
0x13A6	0xDC04      	RCALL       _Mul_16x16_U
0x13A8	0x0EA8      	MOVLW       _Tasks
0x13AA	0x2600      	ADDWF       R0, 1 
0x13AC	0x0E01      	MOVLW       hi_addr(_Tasks)
0x13AE	0x2201      	ADDWFC      R1, 1 
0x13B0	0x0E01      	MOVLW       1
0x13B2	0x2400      	ADDWF       R0, 0 
0x13B4	0x6EE9      	MOVWF       FSR0L 
0x13B6	0x0E00      	MOVLW       0
0x13B8	0x2001      	ADDWFC      R1, 0 
0x13BA	0x6EEA      	MOVWF       FSR0H 
0x13BC	0xF3DACFEE  	MOVFF       POSTINC0, GetAutocloseTime_t_L0
0x13C0	0xF3DBCFEE  	MOVFF       POSTINC0, GetAutocloseTime_t_L0+1
0x13C4	0xF3DCCFEE  	MOVFF       POSTINC0, GetAutocloseTime_t_L0+2
0x13C8	0xF3DDCFEE  	MOVFF       POSTINC0, GetAutocloseTime_t_L0+3
0x13CC	0x0E05      	MOVLW       5
0x13CE	0x2400      	ADDWF       R0, 0 
0x13D0	0x6EE1      	MOVWF       FSR1L 
0x13D2	0x0E00      	MOVLW       0
0x13D4	0x2001      	ADDWFC      R1, 0 
0x13D6	0x6EE2      	MOVWF       FSR1H 
0x13D8	0x0E01      	MOVLW       1
0x13DA	0x6EE6      	MOVWF       POSTINC1 
0x13DC	0xD002      	BRA         L_GetAutocloseTime426
L_GetAutocloseTime430:
;FirmV_0_7_0.c,1922 :: 		for(i=0;i<20;i++)
0x13DE	0x2BD9      	INCF        GetAutocloseTime_i_L0, 1, 1
;FirmV_0_7_0.c,1926 :: 		}
0x13E0	0xD7AD      	BRA         L_GetAutocloseTime425
L_GetAutocloseTime426:
;FirmV_0_7_0.c,1927 :: 		i=t-ms500;
0x13E2	0x0101      	MOVLB       1
0x13E4	0x5104      	MOVF        _ms500, 0, 1
0x13E6	0x0103      	MOVLB       3
0x13E8	0x5DDA      	SUBWF       GetAutocloseTime_t_L0, 0, 1
0x13EA	0x6E01      	MOVWF       R1 
0x13EC	0xF3D9C001  	MOVFF       R1, GetAutocloseTime_i_L0
;FirmV_0_7_0.c,1928 :: 		if(i>=20) i=0;
0x13F0	0x0E14      	MOVLW       20
0x13F2	0x5C01      	SUBWF       R1, 0 
0x13F4	0xE301      	BNC         L_GetAutocloseTime431
0x13F6	0x6BD9      	CLRF        GetAutocloseTime_i_L0, 1
L_GetAutocloseTime431:
;FirmV_0_7_0.c,1929 :: 		return i;
0x13F8	0xF000C3D9  	MOVFF       GetAutocloseTime_i_L0, R0
;FirmV_0_7_0.c,1930 :: 		}
0x13FC	0x0012      	RETURN      0
; end of _GetAutocloseTime
_ReturnAutoclose:
;FirmV_0_7_0.c,1895 :: 		char ReturnAutoclose()
;FirmV_0_7_0.c,1899 :: 		for(i=0;i<20;i++)
0x13FE	0x0103      	MOVLB       3
0x1400	0x6BD9      	CLRF        ReturnAutoclose_i_L0, 1
L_ReturnAutoclose417:
0x1402	0x0E14      	MOVLW       20
0x1404	0x5DD9      	SUBWF       ReturnAutoclose_i_L0, 0, 1
0x1406	0xE24B      	BC          L_ReturnAutoclose418
;FirmV_0_7_0.c,1901 :: 		if((Tasks[i].Expired==0)&&(Tasks[i].TaskCode==9))
0x1408	0xF000C3D9  	MOVFF       ReturnAutoclose_i_L0, R0
0x140C	0x0E00      	MOVLW       0
0x140E	0x6E01      	MOVWF       R1 
0x1410	0x0E07      	MOVLW       7
0x1412	0x6E04      	MOVWF       R4 
0x1414	0x0E00      	MOVLW       0
0x1416	0x6E05      	MOVWF       R5 
0x1418	0xF005ECD8  	CALL        _Mul_16x16_U, 0
0x141C	0x0EA8      	MOVLW       _Tasks
0x141E	0x2600      	ADDWF       R0, 1 
0x1420	0x0E01      	MOVLW       hi_addr(_Tasks)
0x1422	0x2201      	ADDWFC      R1, 1 
0x1424	0x0E05      	MOVLW       5
0x1426	0x2400      	ADDWF       R0, 0 
0x1428	0x6EE9      	MOVWF       FSR0L 
0x142A	0x0E00      	MOVLW       0
0x142C	0x2001      	ADDWFC      R1, 0 
0x142E	0x6EEA      	MOVWF       FSR0H 
0x1430	0x50EE      	MOVF        POSTINC0, 0 
0x1432	0x0A00      	XORLW       0
0x1434	0xE132      	BNZ         L_ReturnAutoclose422
0x1436	0xF000C3D9  	MOVFF       ReturnAutoclose_i_L0, R0
0x143A	0x0E00      	MOVLW       0
0x143C	0x6E01      	MOVWF       R1 
0x143E	0x0E07      	MOVLW       7
0x1440	0x6E04      	MOVWF       R4 
0x1442	0x0E00      	MOVLW       0
0x1444	0x6E05      	MOVWF       R5 
0x1446	0xF005ECD8  	CALL        _Mul_16x16_U, 0
0x144A	0x0EA8      	MOVLW       _Tasks
0x144C	0x2400      	ADDWF       R0, 0 
0x144E	0x6EE9      	MOVWF       FSR0L 
0x1450	0x0E01      	MOVLW       hi_addr(_Tasks)
0x1452	0x2001      	ADDWFC      R1, 0 
0x1454	0x6EEA      	MOVWF       FSR0H 
0x1456	0xF001CFEE  	MOVFF       POSTINC0, R1
0x145A	0x5001      	MOVF        R1, 0 
0x145C	0x0A09      	XORLW       9
0x145E	0xE11D      	BNZ         L_ReturnAutoclose422
L__ReturnAutoclose876:
;FirmV_0_7_0.c,1902 :: 		{t=Tasks[i].Time;break;}
0x1460	0xF000C3D9  	MOVFF       ReturnAutoclose_i_L0, R0
0x1464	0x0E00      	MOVLW       0
0x1466	0x6E01      	MOVWF       R1 
0x1468	0x0E07      	MOVLW       7
0x146A	0x6E04      	MOVWF       R4 
0x146C	0x0E00      	MOVLW       0
0x146E	0x6E05      	MOVWF       R5 
0x1470	0xF005ECD8  	CALL        _Mul_16x16_U, 0
0x1474	0x0EA8      	MOVLW       _Tasks
0x1476	0x2600      	ADDWF       R0, 1 
0x1478	0x0E01      	MOVLW       hi_addr(_Tasks)
0x147A	0x2201      	ADDWFC      R1, 1 
0x147C	0x0E01      	MOVLW       1
0x147E	0x2400      	ADDWF       R0, 0 
0x1480	0x6EE9      	MOVWF       FSR0L 
0x1482	0x0E00      	MOVLW       0
0x1484	0x2001      	ADDWFC      R1, 0 
0x1486	0x6EEA      	MOVWF       FSR0H 
0x1488	0xF3DACFEE  	MOVFF       POSTINC0, ReturnAutoclose_t_L0
0x148C	0xF3DBCFEE  	MOVFF       POSTINC0, ReturnAutoclose_t_L0+1
0x1490	0xF3DCCFEE  	MOVFF       POSTINC0, ReturnAutoclose_t_L0+2
0x1494	0xF3DDCFEE  	MOVFF       POSTINC0, ReturnAutoclose_t_L0+3
0x1498	0xD002      	BRA         L_ReturnAutoclose418
L_ReturnAutoclose422:
;FirmV_0_7_0.c,1899 :: 		for(i=0;i<20;i++)
0x149A	0x2BD9      	INCF        ReturnAutoclose_i_L0, 1, 1
;FirmV_0_7_0.c,1903 :: 		}
0x149C	0xD7B2      	BRA         L_ReturnAutoclose417
L_ReturnAutoclose418:
;FirmV_0_7_0.c,1905 :: 		if(i>=20) i=0;
0x149E	0x0E14      	MOVLW       20
0x14A0	0x5DD9      	SUBWF       ReturnAutoclose_i_L0, 0, 1
0x14A2	0xE302      	BNC         L_ReturnAutoclose423
0x14A4	0x6BD9      	CLRF        ReturnAutoclose_i_L0, 1
0x14A6	0xD005      	BRA         L_ReturnAutoclose424
L_ReturnAutoclose423:
;FirmV_0_7_0.c,1906 :: 		else i=t-ms500;
0x14A8	0x0101      	MOVLB       1
0x14AA	0x5104      	MOVF        _ms500, 0, 1
0x14AC	0x0103      	MOVLB       3
0x14AE	0x5DDA      	SUBWF       ReturnAutoclose_t_L0, 0, 1
0x14B0	0x6FD9      	MOVWF       ReturnAutoclose_i_L0, 1
L_ReturnAutoclose424:
;FirmV_0_7_0.c,1907 :: 		return i;
0x14B2	0xF000C3D9  	MOVFF       ReturnAutoclose_i_L0, R0
;FirmV_0_7_0.c,1908 :: 		}
0x14B6	0x0012      	RETURN      0
; end of _ReturnAutoclose
_ClearTasks:
;FirmV_0_7_0.c,1947 :: 		void ClearTasks(char except)
;FirmV_0_7_0.c,1950 :: 		for(i=0;i<20;i++)
0x14B8	0x0103      	MOVLB       3
0x14BA	0x6BDA      	CLRF        ClearTasks_i_L0, 1
L_ClearTasks432:
0x14BC	0x0E14      	MOVLW       20
0x14BE	0x5DDA      	SUBWF       ClearTasks_i_L0, 0, 1
0x14C0	0xE244      	BC          L_ClearTasks433
;FirmV_0_7_0.c,1951 :: 		if((Tasks[i].Expired==0)&&(Tasks[i].TaskCode!=except))
0x14C2	0xF000C3DA  	MOVFF       ClearTasks_i_L0, R0
0x14C6	0x0E00      	MOVLW       0
0x14C8	0x6E01      	MOVWF       R1 
0x14CA	0x0E07      	MOVLW       7
0x14CC	0x6E04      	MOVWF       R4 
0x14CE	0x0E00      	MOVLW       0
0x14D0	0x6E05      	MOVWF       R5 
0x14D2	0xF005ECD8  	CALL        _Mul_16x16_U, 0
0x14D6	0x0EA8      	MOVLW       _Tasks
0x14D8	0x2600      	ADDWF       R0, 1 
0x14DA	0x0E01      	MOVLW       hi_addr(_Tasks)
0x14DC	0x2201      	ADDWFC      R1, 1 
0x14DE	0x0E05      	MOVLW       5
0x14E0	0x2400      	ADDWF       R0, 0 
0x14E2	0x6EE9      	MOVWF       FSR0L 
0x14E4	0x0E00      	MOVLW       0
0x14E6	0x2001      	ADDWFC      R1, 0 
0x14E8	0x6EEA      	MOVWF       FSR0H 
0x14EA	0x50EE      	MOVF        POSTINC0, 0 
0x14EC	0x0A00      	XORLW       0
0x14EE	0xE12B      	BNZ         L_ClearTasks437
0x14F0	0xF000C3DA  	MOVFF       ClearTasks_i_L0, R0
0x14F4	0x0E00      	MOVLW       0
0x14F6	0x6E01      	MOVWF       R1 
0x14F8	0x0E07      	MOVLW       7
0x14FA	0x6E04      	MOVWF       R4 
0x14FC	0x0E00      	MOVLW       0
0x14FE	0x6E05      	MOVWF       R5 
0x1500	0xF005ECD8  	CALL        _Mul_16x16_U, 0
0x1504	0x0EA8      	MOVLW       _Tasks
0x1506	0x2400      	ADDWF       R0, 0 
0x1508	0x6EE9      	MOVWF       FSR0L 
0x150A	0x0E01      	MOVLW       hi_addr(_Tasks)
0x150C	0x2001      	ADDWFC      R1, 0 
0x150E	0x6EEA      	MOVWF       FSR0H 
0x1510	0xF001CFEE  	MOVFF       POSTINC0, R1
0x1514	0x5001      	MOVF        R1, 0 
0x1516	0x19D9      	XORWF       FARG_ClearTasks_except, 0, 1
0x1518	0xE016      	BZ          L_ClearTasks437
L__ClearTasks878:
;FirmV_0_7_0.c,1952 :: 		Tasks[i].Expired=1;
0x151A	0xF000C3DA  	MOVFF       ClearTasks_i_L0, R0
0x151E	0x0E00      	MOVLW       0
0x1520	0x6E01      	MOVWF       R1 
0x1522	0x0E07      	MOVLW       7
0x1524	0x6E04      	MOVWF       R4 
0x1526	0x0E00      	MOVLW       0
0x1528	0x6E05      	MOVWF       R5 
0x152A	0xF005ECD8  	CALL        _Mul_16x16_U, 0
0x152E	0x0EA8      	MOVLW       _Tasks
0x1530	0x2600      	ADDWF       R0, 1 
0x1532	0x0E01      	MOVLW       hi_addr(_Tasks)
0x1534	0x2201      	ADDWFC      R1, 1 
0x1536	0x0E05      	MOVLW       5
0x1538	0x2400      	ADDWF       R0, 0 
0x153A	0x6EE1      	MOVWF       FSR1L 
0x153C	0x0E00      	MOVLW       0
0x153E	0x2001      	ADDWFC      R1, 0 
0x1540	0x6EE2      	MOVWF       FSR1H 
0x1542	0x0E01      	MOVLW       1
0x1544	0x6EE6      	MOVWF       POSTINC1 
L_ClearTasks437:
;FirmV_0_7_0.c,1950 :: 		for(i=0;i<20;i++)
0x1546	0x2BDA      	INCF        ClearTasks_i_L0, 1, 1
;FirmV_0_7_0.c,1952 :: 		Tasks[i].Expired=1;
0x1548	0xD7B9      	BRA         L_ClearTasks432
L_ClearTasks433:
;FirmV_0_7_0.c,1953 :: 		}
0x154A	0x0012      	RETURN      0
; end of _ClearTasks
_SaveLearnData:
;FirmV_0_7_0.c,2510 :: 		void SaveLearnData(Learn *d,char DCount)
;FirmV_0_7_0.c,2512 :: 		Door1OpenTime=(*d).D1OpenTime;
0x154C	0x0E01      	MOVLW       1
0x154E	0x0103      	MOVLB       3
0x1550	0x25D9      	ADDWF       FARG_SaveLearnData_d, 0, 1
0x1552	0x6EE9      	MOVWF       FSR0L 
0x1554	0x0E00      	MOVLW       0
0x1556	0x21DA      	ADDWFC      FARG_SaveLearnData_d+1, 0, 1
0x1558	0x6EEA      	MOVWF       FSR0H 
0x155A	0xF234CFEE  	MOVFF       POSTINC0, _Door1OpenTime
;FirmV_0_7_0.c,2513 :: 		Door1CloseTime=(*d).D1CloseTime;
0x155E	0xFFE9C3D9  	MOVFF       FARG_SaveLearnData_d, FSR0L
0x1562	0xFFEAC3DA  	MOVFF       FARG_SaveLearnData_d+1, FSR0H
0x1566	0xF235CFEE  	MOVFF       POSTINC0, _Door1CloseTime
;FirmV_0_7_0.c,2514 :: 		if(DCount==2)
0x156A	0x51DB      	MOVF        FARG_SaveLearnData_DCount, 0, 1
0x156C	0x0A02      	XORLW       2
0x156E	0xA4D8      	BTFSS       STATUS, 2 
0x1570	0xD085      	BRA         L_SaveLearnData680
;FirmV_0_7_0.c,2516 :: 		Door2OpenTime=(*d).D2OpenTime;
0x1572	0x0E03      	MOVLW       3
0x1574	0x25D9      	ADDWF       FARG_SaveLearnData_d, 0, 1
0x1576	0x6EE9      	MOVWF       FSR0L 
0x1578	0x0E00      	MOVLW       0
0x157A	0x21DA      	ADDWFC      FARG_SaveLearnData_d+1, 0, 1
0x157C	0x6EEA      	MOVWF       FSR0H 
0x157E	0xF298CFEE  	MOVFF       POSTINC0, _Door2OpenTime
;FirmV_0_7_0.c,2517 :: 		Door2CloseTime=(*d).D2CloseTime;
0x1582	0x0E02      	MOVLW       2
0x1584	0x25D9      	ADDWF       FARG_SaveLearnData_d, 0, 1
0x1586	0x6EE9      	MOVWF       FSR0L 
0x1588	0x0E00      	MOVLW       0
0x158A	0x21DA      	ADDWFC      FARG_SaveLearnData_d+1, 0, 1
0x158C	0x6EEA      	MOVWF       FSR0H 
0x158E	0xF1A7CFEE  	MOVFF       POSTINC0, _Door2CloseTime
;FirmV_0_7_0.c,2518 :: 		OpenSoftStartTime=((*d).D1OpenSoftStart+(*d).D2OpenSoftStart)/2;
0x1592	0x0E04      	MOVLW       4
0x1594	0x25D9      	ADDWF       FARG_SaveLearnData_d, 0, 1
0x1596	0x6EE9      	MOVWF       FSR0L 
0x1598	0x0E00      	MOVLW       0
0x159A	0x21DA      	ADDWFC      FARG_SaveLearnData_d+1, 0, 1
0x159C	0x6EEA      	MOVWF       FSR0H 
0x159E	0x0E08      	MOVLW       8
0x15A0	0x25D9      	ADDWF       FARG_SaveLearnData_d, 0, 1
0x15A2	0x6ED9      	MOVWF       FSR2L 
0x15A4	0x0E00      	MOVLW       0
0x15A6	0x21DA      	ADDWFC      FARG_SaveLearnData_d+1, 0, 1
0x15A8	0x6EDA      	MOVWF       FSR2H 
0x15AA	0x50DE      	MOVF        POSTINC2, 0 
0x15AC	0x24EE      	ADDWF       POSTINC0, 0 
0x15AE	0x6E03      	MOVWF       R3 
0x15B0	0x6A04      	CLRF        R4 
0x15B2	0x0E00      	MOVLW       0
0x15B4	0x2204      	ADDWFC      R4, 1 
0x15B6	0xF000C003  	MOVFF       R3, R0
0x15BA	0xF001C004  	MOVFF       R4, R1
0x15BE	0x3201      	RRCF        R1, 1 
0x15C0	0x3200      	RRCF        R0, 1 
0x15C2	0x9E01      	BCF         R1, 7 
0x15C4	0xBC01      	BTFSC       R1, 6 
0x15C6	0x8E01      	BSF         R1, 7 
0x15C8	0xF1A4C000  	MOVFF       R0, _OpenSoftStartTime
;FirmV_0_7_0.c,2519 :: 		OpenSoftStopTime=((*d).D1OpenSoftStop+(*d).D2OpenSoftStop)/2;
0x15CC	0x0E05      	MOVLW       5
0x15CE	0x25D9      	ADDWF       FARG_SaveLearnData_d, 0, 1
0x15D0	0x6EE9      	MOVWF       FSR0L 
0x15D2	0x0E00      	MOVLW       0
0x15D4	0x21DA      	ADDWFC      FARG_SaveLearnData_d+1, 0, 1
0x15D6	0x6EEA      	MOVWF       FSR0H 
0x15D8	0x0E09      	MOVLW       9
0x15DA	0x25D9      	ADDWF       FARG_SaveLearnData_d, 0, 1
0x15DC	0x6ED9      	MOVWF       FSR2L 
0x15DE	0x0E00      	MOVLW       0
0x15E0	0x21DA      	ADDWFC      FARG_SaveLearnData_d+1, 0, 1
0x15E2	0x6EDA      	MOVWF       FSR2H 
0x15E4	0x50DE      	MOVF        POSTINC2, 0 
0x15E6	0x24EE      	ADDWF       POSTINC0, 0 
0x15E8	0x6E03      	MOVWF       R3 
0x15EA	0x6A04      	CLRF        R4 
0x15EC	0x0E00      	MOVLW       0
0x15EE	0x2204      	ADDWFC      R4, 1 
0x15F0	0xF000C003  	MOVFF       R3, R0
0x15F4	0xF001C004  	MOVFF       R4, R1
0x15F8	0x3201      	RRCF        R1, 1 
0x15FA	0x3200      	RRCF        R0, 1 
0x15FC	0x9E01      	BCF         R1, 7 
0x15FE	0xBC01      	BTFSC       R1, 6 
0x1600	0x8E01      	BSF         R1, 7 
0x1602	0xF1A5C000  	MOVFF       R0, _OpenSoftStopTime
;FirmV_0_7_0.c,2520 :: 		CloseSoftStartTime=((*d).D1CloseSoftStart+(*d).D2CloseSoftStart)/2;
0x1606	0x0E06      	MOVLW       6
0x1608	0x25D9      	ADDWF       FARG_SaveLearnData_d, 0, 1
0x160A	0x6EE9      	MOVWF       FSR0L 
0x160C	0x0E00      	MOVLW       0
0x160E	0x21DA      	ADDWFC      FARG_SaveLearnData_d+1, 0, 1
0x1610	0x6EEA      	MOVWF       FSR0H 
0x1612	0x0E0A      	MOVLW       10
0x1614	0x25D9      	ADDWF       FARG_SaveLearnData_d, 0, 1
0x1616	0x6ED9      	MOVWF       FSR2L 
0x1618	0x0E00      	MOVLW       0
0x161A	0x21DA      	ADDWFC      FARG_SaveLearnData_d+1, 0, 1
0x161C	0x6EDA      	MOVWF       FSR2H 
0x161E	0x50DE      	MOVF        POSTINC2, 0 
0x1620	0x24EE      	ADDWF       POSTINC0, 0 
0x1622	0x6E03      	MOVWF       R3 
0x1624	0x6A04      	CLRF        R4 
0x1626	0x0E00      	MOVLW       0
0x1628	0x2204      	ADDWFC      R4, 1 
0x162A	0xF000C003  	MOVFF       R3, R0
0x162E	0xF001C004  	MOVFF       R4, R1
0x1632	0x3201      	RRCF        R1, 1 
0x1634	0x3200      	RRCF        R0, 1 
0x1636	0x9E01      	BCF         R1, 7 
0x1638	0xBC01      	BTFSC       R1, 6 
0x163A	0x8E01      	BSF         R1, 7 
0x163C	0xF1A6C000  	MOVFF       R0, _CloseSoftStartTime
;FirmV_0_7_0.c,2521 :: 		CloseSoftStopTime=((*d).D1CloseSoftStop+(*d).D2CloseSoftStop)/2;
0x1640	0x0E07      	MOVLW       7
0x1642	0x25D9      	ADDWF       FARG_SaveLearnData_d, 0, 1
0x1644	0x6EE9      	MOVWF       FSR0L 
0x1646	0x0E00      	MOVLW       0
0x1648	0x21DA      	ADDWFC      FARG_SaveLearnData_d+1, 0, 1
0x164A	0x6EEA      	MOVWF       FSR0H 
0x164C	0x0E0B      	MOVLW       11
0x164E	0x25D9      	ADDWF       FARG_SaveLearnData_d, 0, 1
0x1650	0x6ED9      	MOVWF       FSR2L 
0x1652	0x0E00      	MOVLW       0
0x1654	0x21DA      	ADDWFC      FARG_SaveLearnData_d+1, 0, 1
0x1656	0x6EDA      	MOVWF       FSR2H 
0x1658	0x50DE      	MOVF        POSTINC2, 0 
0x165A	0x24EE      	ADDWF       POSTINC0, 0 
0x165C	0x6E03      	MOVWF       R3 
0x165E	0x6A04      	CLRF        R4 
0x1660	0x0E00      	MOVLW       0
0x1662	0x2204      	ADDWFC      R4, 1 
0x1664	0xF000C003  	MOVFF       R3, R0
0x1668	0xF001C004  	MOVFF       R4, R1
0x166C	0x3201      	RRCF        R1, 1 
0x166E	0x3200      	RRCF        R0, 1 
0x1670	0x9E01      	BCF         R1, 7 
0x1672	0xBC01      	BTFSC       R1, 6 
0x1674	0x8E01      	BSF         R1, 7 
0x1676	0xF242C000  	MOVFF       R0, _CloseSoftStopTime
;FirmV_0_7_0.c,2522 :: 		}
0x167A	0xD025      	BRA         L_SaveLearnData681
L_SaveLearnData680:
;FirmV_0_7_0.c,2525 :: 		Door2OpenTime=0;
0x167C	0x0102      	MOVLB       2
0x167E	0x6B98      	CLRF        _Door2OpenTime, 1
;FirmV_0_7_0.c,2526 :: 		Door2CloseTime=0;
0x1680	0x0101      	MOVLB       1
0x1682	0x6BA7      	CLRF        _Door2CloseTime, 1
;FirmV_0_7_0.c,2527 :: 		OpenSoftStartTime=(*d).D1OpenSoftStart;
0x1684	0x0E04      	MOVLW       4
0x1686	0x0103      	MOVLB       3
0x1688	0x25D9      	ADDWF       FARG_SaveLearnData_d, 0, 1
0x168A	0x6EE9      	MOVWF       FSR0L 
0x168C	0x0E00      	MOVLW       0
0x168E	0x21DA      	ADDWFC      FARG_SaveLearnData_d+1, 0, 1
0x1690	0x6EEA      	MOVWF       FSR0H 
0x1692	0xF1A4CFEE  	MOVFF       POSTINC0, _OpenSoftStartTime
;FirmV_0_7_0.c,2528 :: 		OpenSoftStopTime=(*d).D1OpenSoftStop;
0x1696	0x0E05      	MOVLW       5
0x1698	0x25D9      	ADDWF       FARG_SaveLearnData_d, 0, 1
0x169A	0x6EE9      	MOVWF       FSR0L 
0x169C	0x0E00      	MOVLW       0
0x169E	0x21DA      	ADDWFC      FARG_SaveLearnData_d+1, 0, 1
0x16A0	0x6EEA      	MOVWF       FSR0H 
0x16A2	0xF1A5CFEE  	MOVFF       POSTINC0, _OpenSoftStopTime
;FirmV_0_7_0.c,2529 :: 		CloseSoftStartTime=(*d).D1CloseSoftStart;
0x16A6	0x0E06      	MOVLW       6
0x16A8	0x25D9      	ADDWF       FARG_SaveLearnData_d, 0, 1
0x16AA	0x6EE9      	MOVWF       FSR0L 
0x16AC	0x0E00      	MOVLW       0
0x16AE	0x21DA      	ADDWFC      FARG_SaveLearnData_d+1, 0, 1
0x16B0	0x6EEA      	MOVWF       FSR0H 
0x16B2	0xF1A6CFEE  	MOVFF       POSTINC0, _CloseSoftStartTime
;FirmV_0_7_0.c,2530 :: 		CloseSoftStopTime=(*d).D1CloseSoftStop;
0x16B6	0x0E07      	MOVLW       7
0x16B8	0x25D9      	ADDWF       FARG_SaveLearnData_d, 0, 1
0x16BA	0x6EE9      	MOVWF       FSR0L 
0x16BC	0x0E00      	MOVLW       0
0x16BE	0x21DA      	ADDWFC      FARG_SaveLearnData_d+1, 0, 1
0x16C0	0x6EEA      	MOVWF       FSR0H 
0x16C2	0xF242CFEE  	MOVFF       POSTINC0, _CloseSoftStopTime
;FirmV_0_7_0.c,2531 :: 		}
L_SaveLearnData681:
;FirmV_0_7_0.c,2533 :: 		SaveConfigs();
0x16C6	0xF006ECA8  	CALL        _SaveConfigs, 0
;FirmV_0_7_0.c,2534 :: 		}
0x16CA	0x0012      	RETURN      0
; end of _SaveLearnData
_OverloadInit:
;FirmV_0_7_0.c,1699 :: 		void OverloadInit(char ch)
;FirmV_0_7_0.c,1701 :: 		if(ch==1)
0x16CC	0x0103      	MOVLB       3
0x16CE	0x51D9      	MOVF        FARG_OverloadInit_ch, 0, 1
0x16D0	0x0A01      	XORLW       1
0x16D2	0xE105      	BNZ         L_OverloadInit406
;FirmV_0_7_0.c,1703 :: 		OverloadCounter1=0;
0x16D4	0x0101      	MOVLB       1
0x16D6	0x6B1D      	CLRF        _OverloadCounter1, 1
0x16D8	0x6B1E      	CLRF        _OverloadCounter1+1, 1
;FirmV_0_7_0.c,1704 :: 		Events.Overload.b0=0;
0x16DA	0x0102      	MOVLB       2
0x16DC	0x919F      	BCF         _Events+5, 0, 1
;FirmV_0_7_0.c,1705 :: 		}
L_OverloadInit406:
;FirmV_0_7_0.c,1707 :: 		if(ch==2)
0x16DE	0x0103      	MOVLB       3
0x16E0	0x51D9      	MOVF        FARG_OverloadInit_ch, 0, 1
0x16E2	0x0A02      	XORLW       2
0x16E4	0xE105      	BNZ         L_OverloadInit407
;FirmV_0_7_0.c,1709 :: 		OverloadCounter2=0;
0x16E6	0x0101      	MOVLB       1
0x16E8	0x6B1A      	CLRF        _OverloadCounter2, 1
0x16EA	0x6B1B      	CLRF        _OverloadCounter2+1, 1
;FirmV_0_7_0.c,1710 :: 		Events.Overload.b1=0;
0x16EC	0x0102      	MOVLB       2
0x16EE	0x939F      	BCF         _Events+5, 1, 1
;FirmV_0_7_0.c,1711 :: 		}
L_OverloadInit407:
;FirmV_0_7_0.c,1712 :: 		}
0x16F0	0x0012      	RETURN      0
; end of _OverloadInit
_FactorySettings:
;FirmV_0_7_0.c,1799 :: 		void FactorySettings()
;FirmV_0_7_0.c,1801 :: 		Door1OpenTime=20;
0x16F2	0x0E14      	MOVLW       20
0x16F4	0x0102      	MOVLB       2
0x16F6	0x6F34      	MOVWF       _Door1OpenTime, 1
;FirmV_0_7_0.c,1802 :: 		Door1CloseTime=20;
0x16F8	0x0E14      	MOVLW       20
0x16FA	0x6F35      	MOVWF       _Door1CloseTime, 1
;FirmV_0_7_0.c,1803 :: 		Door2OpenTime=20;
0x16FC	0x0E14      	MOVLW       20
0x16FE	0x6F98      	MOVWF       _Door2OpenTime, 1
;FirmV_0_7_0.c,1804 :: 		Door2CloseTime=20;
0x1700	0x0E14      	MOVLW       20
0x1702	0x0101      	MOVLB       1
0x1704	0x6FA7      	MOVWF       _Door2CloseTime, 1
;FirmV_0_7_0.c,1805 :: 		OverloadSens1=7;
0x1706	0x0E07      	MOVLW       7
0x1708	0x6E20      	MOVWF       _OverloadSens1 
;FirmV_0_7_0.c,1806 :: 		OverloadTime1=2;
0x170A	0x0E02      	MOVLW       2
0x170C	0x6F90      	MOVWF       _OverloadTime1, 1
;FirmV_0_7_0.c,1807 :: 		OverloadSens2=7;
0x170E	0x0E07      	MOVLW       7
0x1710	0x6E1A      	MOVWF       _OverloadSens2 
;FirmV_0_7_0.c,1808 :: 		OverloadTime2=2;
0x1712	0x0E02      	MOVLW       2
0x1714	0x6F91      	MOVWF       _OverloadTime2, 1
;FirmV_0_7_0.c,1809 :: 		SetOverloadParams(7,2,7,2);
0x1716	0x0E07      	MOVLW       7
0x1718	0x0105      	MOVLB       5
0x171A	0x6FFF      	MOVWF       FARG_SetOverloadParams_p1, 1
0x171C	0x0E02      	MOVLW       2
0x171E	0x0106      	MOVLB       6
0x1720	0x6F00      	MOVWF       FARG_SetOverloadParams_d1, 1
0x1722	0x0E07      	MOVLW       7
0x1724	0x6F01      	MOVWF       FARG_SetOverloadParams_p2, 1
0x1726	0x0E02      	MOVLW       2
0x1728	0x6F02      	MOVWF       FARG_SetOverloadParams_d2, 1
0x172A	0xF001ECB8  	CALL        _SetOverloadParams, 0
;FirmV_0_7_0.c,1810 :: 		OpenSoftStopTime=10;
0x172E	0x0E0A      	MOVLW       10
0x1730	0x0101      	MOVLB       1
0x1732	0x6FA5      	MOVWF       _OpenSoftStopTime, 1
;FirmV_0_7_0.c,1811 :: 		OpenSoftStartTime=4;
0x1734	0x0E04      	MOVLW       4
0x1736	0x6FA4      	MOVWF       _OpenSoftStartTime, 1
;FirmV_0_7_0.c,1812 :: 		CloseSoftStopTime=10;
0x1738	0x0E0A      	MOVLW       10
0x173A	0x0102      	MOVLB       2
0x173C	0x6F42      	MOVWF       _CloseSoftStopTime, 1
;FirmV_0_7_0.c,1813 :: 		CloseSoftStartTime=4;
0x173E	0x0E04      	MOVLW       4
0x1740	0x0101      	MOVLB       1
0x1742	0x6FA6      	MOVWF       _CloseSoftStartTime, 1
;FirmV_0_7_0.c,1814 :: 		ActionTimeDiff=12;
0x1744	0x0E0C      	MOVLW       12
0x1746	0x0102      	MOVLB       2
0x1748	0x6F47      	MOVWF       _ActionTimeDiff, 1
;FirmV_0_7_0.c,1815 :: 		AutoCloseTime=0;
0x174A	0x6B95      	CLRF        _AutoCloseTime, 1
0x174C	0x6B96      	CLRF        _AutoCloseTime+1, 1
;FirmV_0_7_0.c,1816 :: 		LockForce=0;
0x174E	0x0101      	MOVLB       1
0x1750	0x6B8F      	CLRF        _LockForce, 1
;FirmV_0_7_0.c,1817 :: 		OpenPhEnable=0;
0x1752	0x0102      	MOVLB       2
0x1754	0x6B99      	CLRF        _OpenPhEnable, 1
;FirmV_0_7_0.c,1818 :: 		LimiterEnable=0;
0x1756	0x6BA4      	CLRF        _LimiterEnable, 1
;FirmV_0_7_0.c,1819 :: 		CloseAfterPass=0;
0x1758	0x6B41      	CLRF        _CloseAfterPass, 1
;FirmV_0_7_0.c,1820 :: 		LockEnable=1;
0x175A	0x0E01      	MOVLW       1
0x175C	0x6FA3      	MOVWF       _LockEnable, 1
;FirmV_0_7_0.c,1822 :: 		SaveConfigs();
0x175E	0xF006ECA8  	CALL        _SaveConfigs, 0
;FirmV_0_7_0.c,1823 :: 		}
0x1762	0x0012      	RETURN      0
; end of _FactorySettings
_Menu0:
;FirmV_0_7_0.c,1968 :: 		void Menu0()
;FirmV_0_7_0.c,1970 :: 		LCDLines=2;
0x1764	0x0E02      	MOVLW       2
0x1766	0x0100      	MOVLB       0
0x1768	0x6FB4      	MOVWF       _LCDLines, 1
;FirmV_0_7_0.c,1971 :: 		memcpy(LCDLine2,"                ",16);
0x176A	0x0EA3      	MOVLW       _LCDLine2
0x176C	0x0105      	MOVLB       5
0x176E	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x1770	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x1772	0x0106      	MOVLB       6
0x1774	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x1776	0x0E94      	MOVLW       ?ICS?lstr69_FirmV_0_7_0
0x1778	0x6EF6      	MOVWF       4086 
0x177A	0x0E85      	MOVLW       hi_addr(?ICS?lstr69_FirmV_0_7_0)
0x177C	0x6EF7      	MOVWF       TBLPTRH 
0x177E	0x0E00      	MOVLW       higher_addr(?ICS?lstr69_FirmV_0_7_0)
0x1780	0x6EF8      	MOVWF       TBLPTRU 
0x1782	0x0ED9      	MOVLW       ?lstr69_FirmV_0_7_0
0x1784	0x6EE1      	MOVWF       FSR1L 
0x1786	0x0E03      	MOVLW       hi_addr(?lstr69_FirmV_0_7_0)
0x1788	0x6EE2      	MOVWF       FSR1H 
0x178A	0x0E11      	MOVLW       17
0x178C	0x6E00      	MOVWF       R0 
0x178E	0x0E01      	MOVLW       1
0x1790	0x6E01      	MOVWF       R1 
0x1792	0xF005EC2B  	CALL        ___CC2DW, 0
0x1796	0x0ED9      	MOVLW       ?lstr69_FirmV_0_7_0
0x1798	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x179A	0x0E03      	MOVLW       hi_addr(?lstr69_FirmV_0_7_0)
0x179C	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x179E	0x0E10      	MOVLW       16
0x17A0	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x17A2	0x0E00      	MOVLW       0
0x17A4	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x17A6	0xF001EC0D  	CALL        _memcpy, 0
;FirmV_0_7_0.c,1973 :: 		if(MenuPointer==0)
0x17AA	0x501E      	MOVF        _MenuPointer, 0 
0x17AC	0x0A00      	XORLW       0
0x17AE	0xE169      	BNZ         L_Menu0438
;FirmV_0_7_0.c,1974 :: 		{memcpy(LCDLine1,"00 Learning Mode",16);LCDUpdateFlag=1;
0x17B0	0x0EBD      	MOVLW       _LCDLine1
0x17B2	0x0105      	MOVLB       5
0x17B4	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x17B6	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x17B8	0x0106      	MOVLB       6
0x17BA	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x17BC	0x0EA5      	MOVLW       ?ICS?lstr70_FirmV_0_7_0
0x17BE	0x6EF6      	MOVWF       4086 
0x17C0	0x0E85      	MOVLW       hi_addr(?ICS?lstr70_FirmV_0_7_0)
0x17C2	0x6EF7      	MOVWF       TBLPTRH 
0x17C4	0x0E00      	MOVLW       higher_addr(?ICS?lstr70_FirmV_0_7_0)
0x17C6	0x6EF8      	MOVWF       TBLPTRU 
0x17C8	0x0EEA      	MOVLW       ?lstr70_FirmV_0_7_0
0x17CA	0x6EE1      	MOVWF       FSR1L 
0x17CC	0x0E03      	MOVLW       hi_addr(?lstr70_FirmV_0_7_0)
0x17CE	0x6EE2      	MOVWF       FSR1H 
0x17D0	0x0E11      	MOVLW       17
0x17D2	0x6E00      	MOVWF       R0 
0x17D4	0x0E01      	MOVLW       1
0x17D6	0x6E01      	MOVWF       R1 
0x17D8	0xF005EC2B  	CALL        ___CC2DW, 0
0x17DC	0x0EEA      	MOVLW       ?lstr70_FirmV_0_7_0
0x17DE	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x17E0	0x0E03      	MOVLW       hi_addr(?lstr70_FirmV_0_7_0)
0x17E2	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x17E4	0x0E10      	MOVLW       16
0x17E6	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x17E8	0x0E00      	MOVLW       0
0x17EA	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x17EC	0xF001EC0D  	CALL        _memcpy, 0
0x17F0	0x0E01      	MOVLW       1
0x17F2	0x0100      	MOVLB       0
0x17F4	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,1975 :: 		if(LearningMode==0)memcpy(LCDLine2,"      Auto      ",16);
0x17F6	0x501F      	MOVF        _LearningMode, 0 
0x17F8	0x0A00      	XORLW       0
0x17FA	0xE120      	BNZ         L_Menu0439
0x17FC	0x0EA3      	MOVLW       _LCDLine2
0x17FE	0x0105      	MOVLB       5
0x1800	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x1802	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x1804	0x0106      	MOVLB       6
0x1806	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x1808	0x0EB6      	MOVLW       ?ICS?lstr71_FirmV_0_7_0
0x180A	0x6EF6      	MOVWF       4086 
0x180C	0x0E85      	MOVLW       hi_addr(?ICS?lstr71_FirmV_0_7_0)
0x180E	0x6EF7      	MOVWF       TBLPTRH 
0x1810	0x0E00      	MOVLW       higher_addr(?ICS?lstr71_FirmV_0_7_0)
0x1812	0x6EF8      	MOVWF       TBLPTRU 
0x1814	0x0EFB      	MOVLW       ?lstr71_FirmV_0_7_0
0x1816	0x6EE1      	MOVWF       FSR1L 
0x1818	0x0E03      	MOVLW       hi_addr(?lstr71_FirmV_0_7_0)
0x181A	0x6EE2      	MOVWF       FSR1H 
0x181C	0x0E11      	MOVLW       17
0x181E	0x6E00      	MOVWF       R0 
0x1820	0x0E01      	MOVLW       1
0x1822	0x6E01      	MOVWF       R1 
0x1824	0xF005EC2B  	CALL        ___CC2DW, 0
0x1828	0x0EFB      	MOVLW       ?lstr71_FirmV_0_7_0
0x182A	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x182C	0x0E03      	MOVLW       hi_addr(?lstr71_FirmV_0_7_0)
0x182E	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x1830	0x0E10      	MOVLW       16
0x1832	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x1834	0x0E00      	MOVLW       0
0x1836	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x1838	0xF001EC0D  	CALL        _memcpy, 0
L_Menu0439:
;FirmV_0_7_0.c,1976 :: 		if(LearningMode==1)memcpy(LCDLine2,"     Manual     ",16);}
0x183C	0x501F      	MOVF        _LearningMode, 0 
0x183E	0x0A01      	XORLW       1
0x1840	0xE120      	BNZ         L_Menu0440
0x1842	0x0EA3      	MOVLW       _LCDLine2
0x1844	0x0105      	MOVLB       5
0x1846	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x1848	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x184A	0x0106      	MOVLB       6
0x184C	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x184E	0x0EC7      	MOVLW       ?ICS?lstr72_FirmV_0_7_0
0x1850	0x6EF6      	MOVWF       4086 
0x1852	0x0E85      	MOVLW       hi_addr(?ICS?lstr72_FirmV_0_7_0)
0x1854	0x6EF7      	MOVWF       TBLPTRH 
0x1856	0x0E00      	MOVLW       higher_addr(?ICS?lstr72_FirmV_0_7_0)
0x1858	0x6EF8      	MOVWF       TBLPTRU 
0x185A	0x0E0C      	MOVLW       ?lstr72_FirmV_0_7_0
0x185C	0x6EE1      	MOVWF       FSR1L 
0x185E	0x0E04      	MOVLW       hi_addr(?lstr72_FirmV_0_7_0)
0x1860	0x6EE2      	MOVWF       FSR1H 
0x1862	0x0E11      	MOVLW       17
0x1864	0x6E00      	MOVWF       R0 
0x1866	0x0E01      	MOVLW       1
0x1868	0x6E01      	MOVWF       R1 
0x186A	0xF005EC2B  	CALL        ___CC2DW, 0
0x186E	0x0E0C      	MOVLW       ?lstr72_FirmV_0_7_0
0x1870	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x1872	0x0E04      	MOVLW       hi_addr(?lstr72_FirmV_0_7_0)
0x1874	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x1876	0x0E10      	MOVLW       16
0x1878	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x187A	0x0E00      	MOVLW       0
0x187C	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x187E	0xF001EC0D  	CALL        _memcpy, 0
L_Menu0440:
L_Menu0438:
;FirmV_0_7_0.c,1978 :: 		if(MenuPointer==1)
0x1882	0x501E      	MOVF        _MenuPointer, 0 
0x1884	0x0A01      	XORLW       1
0x1886	0xE12C      	BNZ         L_Menu0441
;FirmV_0_7_0.c,1979 :: 		{memcpy(LCDLine1,"01 D1 Open Time ",16);LCDUpdateFlag=1;
0x1888	0x0EBD      	MOVLW       _LCDLine1
0x188A	0x0105      	MOVLB       5
0x188C	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x188E	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x1890	0x0106      	MOVLB       6
0x1892	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x1894	0x0ED8      	MOVLW       ?ICS?lstr73_FirmV_0_7_0
0x1896	0x6EF6      	MOVWF       4086 
0x1898	0x0E85      	MOVLW       hi_addr(?ICS?lstr73_FirmV_0_7_0)
0x189A	0x6EF7      	MOVWF       TBLPTRH 
0x189C	0x0E00      	MOVLW       higher_addr(?ICS?lstr73_FirmV_0_7_0)
0x189E	0x6EF8      	MOVWF       TBLPTRU 
0x18A0	0x0E1D      	MOVLW       ?lstr73_FirmV_0_7_0
0x18A2	0x6EE1      	MOVWF       FSR1L 
0x18A4	0x0E04      	MOVLW       hi_addr(?lstr73_FirmV_0_7_0)
0x18A6	0x6EE2      	MOVWF       FSR1H 
0x18A8	0x0E11      	MOVLW       17
0x18AA	0x6E00      	MOVWF       R0 
0x18AC	0x0E01      	MOVLW       1
0x18AE	0x6E01      	MOVWF       R1 
0x18B0	0xF005EC2B  	CALL        ___CC2DW, 0
0x18B4	0x0E1D      	MOVLW       ?lstr73_FirmV_0_7_0
0x18B6	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x18B8	0x0E04      	MOVLW       hi_addr(?lstr73_FirmV_0_7_0)
0x18BA	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x18BC	0x0E10      	MOVLW       16
0x18BE	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x18C0	0x0E00      	MOVLW       0
0x18C2	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x18C4	0xF001EC0D  	CALL        _memcpy, 0
0x18C8	0x0E01      	MOVLW       1
0x18CA	0x0100      	MOVLB       0
0x18CC	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,1980 :: 		charValueToStr(Door1OpenTime,LCDLine2+6);}
0x18CE	0xF5F3C234  	MOVFF       _Door1OpenTime, FARG_charValueToStr_val
0x18D2	0x0EA9      	MOVLW       _LCDLine2+6
0x18D4	0x0105      	MOVLB       5
0x18D6	0x6FF4      	MOVWF       FARG_charValueToStr_string, 1
0x18D8	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x18DA	0x6FF5      	MOVWF       FARG_charValueToStr_string+1, 1
0x18DC	0xF006EC00  	CALL        _charValueToStr, 0
L_Menu0441:
;FirmV_0_7_0.c,1982 :: 		if(MenuPointer==2)
0x18E0	0x501E      	MOVF        _MenuPointer, 0 
0x18E2	0x0A02      	XORLW       2
0x18E4	0xE12C      	BNZ         L_Menu0442
;FirmV_0_7_0.c,1983 :: 		{memcpy(LCDLine1,"02 D2 Open Time ",16);LCDUpdateFlag=1;
0x18E6	0x0EBD      	MOVLW       _LCDLine1
0x18E8	0x0105      	MOVLB       5
0x18EA	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x18EC	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x18EE	0x0106      	MOVLB       6
0x18F0	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x18F2	0x0EE9      	MOVLW       ?ICS?lstr74_FirmV_0_7_0
0x18F4	0x6EF6      	MOVWF       4086 
0x18F6	0x0E85      	MOVLW       hi_addr(?ICS?lstr74_FirmV_0_7_0)
0x18F8	0x6EF7      	MOVWF       TBLPTRH 
0x18FA	0x0E00      	MOVLW       higher_addr(?ICS?lstr74_FirmV_0_7_0)
0x18FC	0x6EF8      	MOVWF       TBLPTRU 
0x18FE	0x0E2E      	MOVLW       ?lstr74_FirmV_0_7_0
0x1900	0x6EE1      	MOVWF       FSR1L 
0x1902	0x0E04      	MOVLW       hi_addr(?lstr74_FirmV_0_7_0)
0x1904	0x6EE2      	MOVWF       FSR1H 
0x1906	0x0E11      	MOVLW       17
0x1908	0x6E00      	MOVWF       R0 
0x190A	0x0E01      	MOVLW       1
0x190C	0x6E01      	MOVWF       R1 
0x190E	0xF005EC2B  	CALL        ___CC2DW, 0
0x1912	0x0E2E      	MOVLW       ?lstr74_FirmV_0_7_0
0x1914	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x1916	0x0E04      	MOVLW       hi_addr(?lstr74_FirmV_0_7_0)
0x1918	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x191A	0x0E10      	MOVLW       16
0x191C	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x191E	0x0E00      	MOVLW       0
0x1920	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x1922	0xF001EC0D  	CALL        _memcpy, 0
0x1926	0x0E01      	MOVLW       1
0x1928	0x0100      	MOVLB       0
0x192A	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,1984 :: 		charValueToStr(Door2OpenTime,LCDLine2+6);}
0x192C	0xF5F3C298  	MOVFF       _Door2OpenTime, FARG_charValueToStr_val
0x1930	0x0EA9      	MOVLW       _LCDLine2+6
0x1932	0x0105      	MOVLB       5
0x1934	0x6FF4      	MOVWF       FARG_charValueToStr_string, 1
0x1936	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x1938	0x6FF5      	MOVWF       FARG_charValueToStr_string+1, 1
0x193A	0xF006EC00  	CALL        _charValueToStr, 0
L_Menu0442:
;FirmV_0_7_0.c,1986 :: 		if(MenuPointer==3)
0x193E	0x501E      	MOVF        _MenuPointer, 0 
0x1940	0x0A03      	XORLW       3
0x1942	0xE12C      	BNZ         L_Menu0443
;FirmV_0_7_0.c,1987 :: 		{memcpy(LCDLine1,"03 D1 Close Time",16);LCDUpdateFlag=1;
0x1944	0x0EBD      	MOVLW       _LCDLine1
0x1946	0x0105      	MOVLB       5
0x1948	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x194A	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x194C	0x0106      	MOVLB       6
0x194E	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x1950	0x0EFA      	MOVLW       ?ICS?lstr75_FirmV_0_7_0
0x1952	0x6EF6      	MOVWF       4086 
0x1954	0x0E85      	MOVLW       hi_addr(?ICS?lstr75_FirmV_0_7_0)
0x1956	0x6EF7      	MOVWF       TBLPTRH 
0x1958	0x0E00      	MOVLW       higher_addr(?ICS?lstr75_FirmV_0_7_0)
0x195A	0x6EF8      	MOVWF       TBLPTRU 
0x195C	0x0E3F      	MOVLW       ?lstr75_FirmV_0_7_0
0x195E	0x6EE1      	MOVWF       FSR1L 
0x1960	0x0E04      	MOVLW       hi_addr(?lstr75_FirmV_0_7_0)
0x1962	0x6EE2      	MOVWF       FSR1H 
0x1964	0x0E11      	MOVLW       17
0x1966	0x6E00      	MOVWF       R0 
0x1968	0x0E01      	MOVLW       1
0x196A	0x6E01      	MOVWF       R1 
0x196C	0xF005EC2B  	CALL        ___CC2DW, 0
0x1970	0x0E3F      	MOVLW       ?lstr75_FirmV_0_7_0
0x1972	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x1974	0x0E04      	MOVLW       hi_addr(?lstr75_FirmV_0_7_0)
0x1976	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x1978	0x0E10      	MOVLW       16
0x197A	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x197C	0x0E00      	MOVLW       0
0x197E	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x1980	0xF001EC0D  	CALL        _memcpy, 0
0x1984	0x0E01      	MOVLW       1
0x1986	0x0100      	MOVLB       0
0x1988	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,1988 :: 		charValueToStr(Door1CloseTime,LCDLine2+6);}
0x198A	0xF5F3C235  	MOVFF       _Door1CloseTime, FARG_charValueToStr_val
0x198E	0x0EA9      	MOVLW       _LCDLine2+6
0x1990	0x0105      	MOVLB       5
0x1992	0x6FF4      	MOVWF       FARG_charValueToStr_string, 1
0x1994	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x1996	0x6FF5      	MOVWF       FARG_charValueToStr_string+1, 1
0x1998	0xF006EC00  	CALL        _charValueToStr, 0
L_Menu0443:
;FirmV_0_7_0.c,1990 :: 		if(MenuPointer==4)
0x199C	0x501E      	MOVF        _MenuPointer, 0 
0x199E	0x0A04      	XORLW       4
0x19A0	0xE12C      	BNZ         L_Menu0444
;FirmV_0_7_0.c,1991 :: 		{memcpy(LCDLine1,"04 D2 Close Time",16);LCDUpdateFlag=1;
0x19A2	0x0EBD      	MOVLW       _LCDLine1
0x19A4	0x0105      	MOVLB       5
0x19A6	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x19A8	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x19AA	0x0106      	MOVLB       6
0x19AC	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x19AE	0x0E0B      	MOVLW       ?ICS?lstr76_FirmV_0_7_0
0x19B0	0x6EF6      	MOVWF       4086 
0x19B2	0x0E86      	MOVLW       hi_addr(?ICS?lstr76_FirmV_0_7_0)
0x19B4	0x6EF7      	MOVWF       TBLPTRH 
0x19B6	0x0E00      	MOVLW       higher_addr(?ICS?lstr76_FirmV_0_7_0)
0x19B8	0x6EF8      	MOVWF       TBLPTRU 
0x19BA	0x0E50      	MOVLW       ?lstr76_FirmV_0_7_0
0x19BC	0x6EE1      	MOVWF       FSR1L 
0x19BE	0x0E04      	MOVLW       hi_addr(?lstr76_FirmV_0_7_0)
0x19C0	0x6EE2      	MOVWF       FSR1H 
0x19C2	0x0E11      	MOVLW       17
0x19C4	0x6E00      	MOVWF       R0 
0x19C6	0x0E01      	MOVLW       1
0x19C8	0x6E01      	MOVWF       R1 
0x19CA	0xF005EC2B  	CALL        ___CC2DW, 0
0x19CE	0x0E50      	MOVLW       ?lstr76_FirmV_0_7_0
0x19D0	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x19D2	0x0E04      	MOVLW       hi_addr(?lstr76_FirmV_0_7_0)
0x19D4	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x19D6	0x0E10      	MOVLW       16
0x19D8	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x19DA	0x0E00      	MOVLW       0
0x19DC	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x19DE	0xF001EC0D  	CALL        _memcpy, 0
0x19E2	0x0E01      	MOVLW       1
0x19E4	0x0100      	MOVLB       0
0x19E6	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,1992 :: 		charValueToStr(Door2CloseTime,LCDLine2+6);}
0x19E8	0xF5F3C1A7  	MOVFF       _Door2CloseTime, FARG_charValueToStr_val
0x19EC	0x0EA9      	MOVLW       _LCDLine2+6
0x19EE	0x0105      	MOVLB       5
0x19F0	0x6FF4      	MOVWF       FARG_charValueToStr_string, 1
0x19F2	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x19F4	0x6FF5      	MOVWF       FARG_charValueToStr_string+1, 1
0x19F6	0xF006EC00  	CALL        _charValueToStr, 0
L_Menu0444:
;FirmV_0_7_0.c,1994 :: 		if(MenuPointer==5)
0x19FA	0x501E      	MOVF        _MenuPointer, 0 
0x19FC	0x0A05      	XORLW       5
0x19FE	0xE12C      	BNZ         L_Menu0445
;FirmV_0_7_0.c,1995 :: 		{memcpy(LCDLine1,"05 Op Soft Start",16);LCDUpdateFlag=1;
0x1A00	0x0EBD      	MOVLW       _LCDLine1
0x1A02	0x0105      	MOVLB       5
0x1A04	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x1A06	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x1A08	0x0106      	MOVLB       6
0x1A0A	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x1A0C	0x0E1C      	MOVLW       ?ICS?lstr77_FirmV_0_7_0
0x1A0E	0x6EF6      	MOVWF       4086 
0x1A10	0x0E86      	MOVLW       hi_addr(?ICS?lstr77_FirmV_0_7_0)
0x1A12	0x6EF7      	MOVWF       TBLPTRH 
0x1A14	0x0E00      	MOVLW       higher_addr(?ICS?lstr77_FirmV_0_7_0)
0x1A16	0x6EF8      	MOVWF       TBLPTRU 
0x1A18	0x0E61      	MOVLW       ?lstr77_FirmV_0_7_0
0x1A1A	0x6EE1      	MOVWF       FSR1L 
0x1A1C	0x0E04      	MOVLW       hi_addr(?lstr77_FirmV_0_7_0)
0x1A1E	0x6EE2      	MOVWF       FSR1H 
0x1A20	0x0E11      	MOVLW       17
0x1A22	0x6E00      	MOVWF       R0 
0x1A24	0x0E01      	MOVLW       1
0x1A26	0x6E01      	MOVWF       R1 
0x1A28	0xF005EC2B  	CALL        ___CC2DW, 0
0x1A2C	0x0E61      	MOVLW       ?lstr77_FirmV_0_7_0
0x1A2E	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x1A30	0x0E04      	MOVLW       hi_addr(?lstr77_FirmV_0_7_0)
0x1A32	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x1A34	0x0E10      	MOVLW       16
0x1A36	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x1A38	0x0E00      	MOVLW       0
0x1A3A	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x1A3C	0xF001EC0D  	CALL        _memcpy, 0
0x1A40	0x0E01      	MOVLW       1
0x1A42	0x0100      	MOVLB       0
0x1A44	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,1996 :: 		charValueToStr(OpenSoftStartTime,LCDLine2+6);}
0x1A46	0xF5F3C1A4  	MOVFF       _OpenSoftStartTime, FARG_charValueToStr_val
0x1A4A	0x0EA9      	MOVLW       _LCDLine2+6
0x1A4C	0x0105      	MOVLB       5
0x1A4E	0x6FF4      	MOVWF       FARG_charValueToStr_string, 1
0x1A50	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x1A52	0x6FF5      	MOVWF       FARG_charValueToStr_string+1, 1
0x1A54	0xF006EC00  	CALL        _charValueToStr, 0
L_Menu0445:
;FirmV_0_7_0.c,1998 :: 		if(MenuPointer==6)
0x1A58	0x501E      	MOVF        _MenuPointer, 0 
0x1A5A	0x0A06      	XORLW       6
0x1A5C	0xE12C      	BNZ         L_Menu0446
;FirmV_0_7_0.c,1999 :: 		{memcpy(LCDLine1,"06 Op Soft Stop ",16);LCDUpdateFlag=1;
0x1A5E	0x0EBD      	MOVLW       _LCDLine1
0x1A60	0x0105      	MOVLB       5
0x1A62	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x1A64	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x1A66	0x0106      	MOVLB       6
0x1A68	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x1A6A	0x0E2D      	MOVLW       ?ICS?lstr78_FirmV_0_7_0
0x1A6C	0x6EF6      	MOVWF       4086 
0x1A6E	0x0E86      	MOVLW       hi_addr(?ICS?lstr78_FirmV_0_7_0)
0x1A70	0x6EF7      	MOVWF       TBLPTRH 
0x1A72	0x0E00      	MOVLW       higher_addr(?ICS?lstr78_FirmV_0_7_0)
0x1A74	0x6EF8      	MOVWF       TBLPTRU 
0x1A76	0x0E72      	MOVLW       ?lstr78_FirmV_0_7_0
0x1A78	0x6EE1      	MOVWF       FSR1L 
0x1A7A	0x0E04      	MOVLW       hi_addr(?lstr78_FirmV_0_7_0)
0x1A7C	0x6EE2      	MOVWF       FSR1H 
0x1A7E	0x0E11      	MOVLW       17
0x1A80	0x6E00      	MOVWF       R0 
0x1A82	0x0E01      	MOVLW       1
0x1A84	0x6E01      	MOVWF       R1 
0x1A86	0xF005EC2B  	CALL        ___CC2DW, 0
0x1A8A	0x0E72      	MOVLW       ?lstr78_FirmV_0_7_0
0x1A8C	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x1A8E	0x0E04      	MOVLW       hi_addr(?lstr78_FirmV_0_7_0)
0x1A90	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x1A92	0x0E10      	MOVLW       16
0x1A94	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x1A96	0x0E00      	MOVLW       0
0x1A98	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x1A9A	0xF001EC0D  	CALL        _memcpy, 0
0x1A9E	0x0E01      	MOVLW       1
0x1AA0	0x0100      	MOVLB       0
0x1AA2	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,2000 :: 		charValueToStr(OpenSoftStopTime,LCDLine2+6);}
0x1AA4	0xF5F3C1A5  	MOVFF       _OpenSoftStopTime, FARG_charValueToStr_val
0x1AA8	0x0EA9      	MOVLW       _LCDLine2+6
0x1AAA	0x0105      	MOVLB       5
0x1AAC	0x6FF4      	MOVWF       FARG_charValueToStr_string, 1
0x1AAE	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x1AB0	0x6FF5      	MOVWF       FARG_charValueToStr_string+1, 1
0x1AB2	0xF006EC00  	CALL        _charValueToStr, 0
L_Menu0446:
;FirmV_0_7_0.c,2002 :: 		if(MenuPointer==7)
0x1AB6	0x501E      	MOVF        _MenuPointer, 0 
0x1AB8	0x0A07      	XORLW       7
0x1ABA	0xE12C      	BNZ         L_Menu0447
;FirmV_0_7_0.c,2003 :: 		{memcpy(LCDLine1,"07 Cl Soft Start",16);LCDUpdateFlag=1;
0x1ABC	0x0EBD      	MOVLW       _LCDLine1
0x1ABE	0x0105      	MOVLB       5
0x1AC0	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x1AC2	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x1AC4	0x0106      	MOVLB       6
0x1AC6	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x1AC8	0x0E3E      	MOVLW       ?ICS?lstr79_FirmV_0_7_0
0x1ACA	0x6EF6      	MOVWF       4086 
0x1ACC	0x0E86      	MOVLW       hi_addr(?ICS?lstr79_FirmV_0_7_0)
0x1ACE	0x6EF7      	MOVWF       TBLPTRH 
0x1AD0	0x0E00      	MOVLW       higher_addr(?ICS?lstr79_FirmV_0_7_0)
0x1AD2	0x6EF8      	MOVWF       TBLPTRU 
0x1AD4	0x0E83      	MOVLW       ?lstr79_FirmV_0_7_0
0x1AD6	0x6EE1      	MOVWF       FSR1L 
0x1AD8	0x0E04      	MOVLW       hi_addr(?lstr79_FirmV_0_7_0)
0x1ADA	0x6EE2      	MOVWF       FSR1H 
0x1ADC	0x0E11      	MOVLW       17
0x1ADE	0x6E00      	MOVWF       R0 
0x1AE0	0x0E01      	MOVLW       1
0x1AE2	0x6E01      	MOVWF       R1 
0x1AE4	0xF005EC2B  	CALL        ___CC2DW, 0
0x1AE8	0x0E83      	MOVLW       ?lstr79_FirmV_0_7_0
0x1AEA	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x1AEC	0x0E04      	MOVLW       hi_addr(?lstr79_FirmV_0_7_0)
0x1AEE	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x1AF0	0x0E10      	MOVLW       16
0x1AF2	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x1AF4	0x0E00      	MOVLW       0
0x1AF6	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x1AF8	0xF001EC0D  	CALL        _memcpy, 0
0x1AFC	0x0E01      	MOVLW       1
0x1AFE	0x0100      	MOVLB       0
0x1B00	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,2004 :: 		charValueToStr(CloseSoftStartTime,LCDLine2+6);}
0x1B02	0xF5F3C1A6  	MOVFF       _CloseSoftStartTime, FARG_charValueToStr_val
0x1B06	0x0EA9      	MOVLW       _LCDLine2+6
0x1B08	0x0105      	MOVLB       5
0x1B0A	0x6FF4      	MOVWF       FARG_charValueToStr_string, 1
0x1B0C	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x1B0E	0x6FF5      	MOVWF       FARG_charValueToStr_string+1, 1
0x1B10	0xF006EC00  	CALL        _charValueToStr, 0
L_Menu0447:
;FirmV_0_7_0.c,2006 :: 		if(MenuPointer==8)
0x1B14	0x501E      	MOVF        _MenuPointer, 0 
0x1B16	0x0A08      	XORLW       8
0x1B18	0xE12C      	BNZ         L_Menu0448
;FirmV_0_7_0.c,2007 :: 		{memcpy(LCDLine1,"08 Cl Soft Stop ",16);LCDUpdateFlag=1;
0x1B1A	0x0EBD      	MOVLW       _LCDLine1
0x1B1C	0x0105      	MOVLB       5
0x1B1E	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x1B20	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x1B22	0x0106      	MOVLB       6
0x1B24	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x1B26	0x0E4F      	MOVLW       ?ICS?lstr80_FirmV_0_7_0
0x1B28	0x6EF6      	MOVWF       4086 
0x1B2A	0x0E86      	MOVLW       hi_addr(?ICS?lstr80_FirmV_0_7_0)
0x1B2C	0x6EF7      	MOVWF       TBLPTRH 
0x1B2E	0x0E00      	MOVLW       higher_addr(?ICS?lstr80_FirmV_0_7_0)
0x1B30	0x6EF8      	MOVWF       TBLPTRU 
0x1B32	0x0E94      	MOVLW       ?lstr80_FirmV_0_7_0
0x1B34	0x6EE1      	MOVWF       FSR1L 
0x1B36	0x0E04      	MOVLW       hi_addr(?lstr80_FirmV_0_7_0)
0x1B38	0x6EE2      	MOVWF       FSR1H 
0x1B3A	0x0E11      	MOVLW       17
0x1B3C	0x6E00      	MOVWF       R0 
0x1B3E	0x0E01      	MOVLW       1
0x1B40	0x6E01      	MOVWF       R1 
0x1B42	0xF005EC2B  	CALL        ___CC2DW, 0
0x1B46	0x0E94      	MOVLW       ?lstr80_FirmV_0_7_0
0x1B48	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x1B4A	0x0E04      	MOVLW       hi_addr(?lstr80_FirmV_0_7_0)
0x1B4C	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x1B4E	0x0E10      	MOVLW       16
0x1B50	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x1B52	0x0E00      	MOVLW       0
0x1B54	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x1B56	0xF001EC0D  	CALL        _memcpy, 0
0x1B5A	0x0E01      	MOVLW       1
0x1B5C	0x0100      	MOVLB       0
0x1B5E	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,2008 :: 		charValueToStr(CloseSoftStopTime,LCDLine2+6);}
0x1B60	0xF5F3C242  	MOVFF       _CloseSoftStopTime, FARG_charValueToStr_val
0x1B64	0x0EA9      	MOVLW       _LCDLine2+6
0x1B66	0x0105      	MOVLB       5
0x1B68	0x6FF4      	MOVWF       FARG_charValueToStr_string, 1
0x1B6A	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x1B6C	0x6FF5      	MOVWF       FARG_charValueToStr_string+1, 1
0x1B6E	0xF006EC00  	CALL        _charValueToStr, 0
L_Menu0448:
;FirmV_0_7_0.c,2010 :: 		if(MenuPointer==9)
0x1B72	0x501E      	MOVF        _MenuPointer, 0 
0x1B74	0x0A09      	XORLW       9
0x1B76	0xE16E      	BNZ         L_Menu0449
;FirmV_0_7_0.c,2011 :: 		{memcpy(LCDLine1,"09 M1 Overl Sens",16);LCDUpdateFlag=1;
0x1B78	0x0EBD      	MOVLW       _LCDLine1
0x1B7A	0x0105      	MOVLB       5
0x1B7C	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x1B7E	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x1B80	0x0106      	MOVLB       6
0x1B82	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x1B84	0x0E60      	MOVLW       ?ICS?lstr81_FirmV_0_7_0
0x1B86	0x6EF6      	MOVWF       4086 
0x1B88	0x0E86      	MOVLW       hi_addr(?ICS?lstr81_FirmV_0_7_0)
0x1B8A	0x6EF7      	MOVWF       TBLPTRH 
0x1B8C	0x0E00      	MOVLW       higher_addr(?ICS?lstr81_FirmV_0_7_0)
0x1B8E	0x6EF8      	MOVWF       TBLPTRU 
0x1B90	0x0EA5      	MOVLW       ?lstr81_FirmV_0_7_0
0x1B92	0x6EE1      	MOVWF       FSR1L 
0x1B94	0x0E04      	MOVLW       hi_addr(?lstr81_FirmV_0_7_0)
0x1B96	0x6EE2      	MOVWF       FSR1H 
0x1B98	0x0E11      	MOVLW       17
0x1B9A	0x6E00      	MOVWF       R0 
0x1B9C	0x0E01      	MOVLW       1
0x1B9E	0x6E01      	MOVWF       R1 
0x1BA0	0xF005EC2B  	CALL        ___CC2DW, 0
0x1BA4	0x0EA5      	MOVLW       ?lstr81_FirmV_0_7_0
0x1BA6	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x1BA8	0x0E04      	MOVLW       hi_addr(?lstr81_FirmV_0_7_0)
0x1BAA	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x1BAC	0x0E10      	MOVLW       16
0x1BAE	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x1BB0	0x0E00      	MOVLW       0
0x1BB2	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x1BB4	0xF001EC0D  	CALL        _memcpy, 0
0x1BB8	0x0E01      	MOVLW       1
0x1BBA	0x0100      	MOVLB       0
0x1BBC	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,2012 :: 		bytetostr(OverloadSens1,LCDLine2+3);if(OverloadSens1>7)memcpy(LCDLine2+7,"250Kg-",6);else memcpy(LCDLine2+7,"250Kg+",6);}
0x1BBE	0xF5FFC020  	MOVFF       _OverloadSens1, FARG_ByteToStr_input
0x1BC2	0x0EA6      	MOVLW       _LCDLine2+3
0x1BC4	0x0106      	MOVLB       6
0x1BC6	0x6F00      	MOVWF       FARG_ByteToStr_output, 1
0x1BC8	0x0E00      	MOVLW       hi_addr(_LCDLine2+3)
0x1BCA	0x6F01      	MOVWF       FARG_ByteToStr_output+1, 1
0x1BCC	0xF001EC7E  	CALL        _ByteToStr, 0
0x1BD0	0x5020      	MOVF        _OverloadSens1, 0 
0x1BD2	0x0807      	SUBLW       7
0x1BD4	0xE220      	BC          L_Menu0450
0x1BD6	0x0EAA      	MOVLW       _LCDLine2+7
0x1BD8	0x0105      	MOVLB       5
0x1BDA	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x1BDC	0x0E00      	MOVLW       hi_addr(_LCDLine2+7)
0x1BDE	0x0106      	MOVLB       6
0x1BE0	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x1BE2	0x0E32      	MOVLW       50
0x1BE4	0x0104      	MOVLB       4
0x1BE6	0x6FB6      	MOVWF       ?lstr82_FirmV_0_7_0, 1
0x1BE8	0x0E35      	MOVLW       53
0x1BEA	0x6FB7      	MOVWF       ?lstr82_FirmV_0_7_0+1, 1
0x1BEC	0x0E30      	MOVLW       48
0x1BEE	0x6FB8      	MOVWF       ?lstr82_FirmV_0_7_0+2, 1
0x1BF0	0x0E4B      	MOVLW       75
0x1BF2	0x6FB9      	MOVWF       ?lstr82_FirmV_0_7_0+3, 1
0x1BF4	0x0E67      	MOVLW       103
0x1BF6	0x6FBA      	MOVWF       ?lstr82_FirmV_0_7_0+4, 1
0x1BF8	0x0E2D      	MOVLW       45
0x1BFA	0x6FBB      	MOVWF       ?lstr82_FirmV_0_7_0+5, 1
0x1BFC	0x6BBC      	CLRF        ?lstr82_FirmV_0_7_0+6, 1
0x1BFE	0x0EB6      	MOVLW       ?lstr82_FirmV_0_7_0
0x1C00	0x0106      	MOVLB       6
0x1C02	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x1C04	0x0E04      	MOVLW       hi_addr(?lstr82_FirmV_0_7_0)
0x1C06	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x1C08	0x0E06      	MOVLW       6
0x1C0A	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x1C0C	0x0E00      	MOVLW       0
0x1C0E	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x1C10	0xF001EC0D  	CALL        _memcpy, 0
0x1C14	0xD01F      	BRA         L_Menu0451
L_Menu0450:
0x1C16	0x0EAA      	MOVLW       _LCDLine2+7
0x1C18	0x0105      	MOVLB       5
0x1C1A	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x1C1C	0x0E00      	MOVLW       hi_addr(_LCDLine2+7)
0x1C1E	0x0106      	MOVLB       6
0x1C20	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x1C22	0x0E32      	MOVLW       50
0x1C24	0x0104      	MOVLB       4
0x1C26	0x6FBD      	MOVWF       ?lstr83_FirmV_0_7_0, 1
0x1C28	0x0E35      	MOVLW       53
0x1C2A	0x6FBE      	MOVWF       ?lstr83_FirmV_0_7_0+1, 1
0x1C2C	0x0E30      	MOVLW       48
0x1C2E	0x6FBF      	MOVWF       ?lstr83_FirmV_0_7_0+2, 1
0x1C30	0x0E4B      	MOVLW       75
0x1C32	0x6FC0      	MOVWF       ?lstr83_FirmV_0_7_0+3, 1
0x1C34	0x0E67      	MOVLW       103
0x1C36	0x6FC1      	MOVWF       ?lstr83_FirmV_0_7_0+4, 1
0x1C38	0x0E2B      	MOVLW       43
0x1C3A	0x6FC2      	MOVWF       ?lstr83_FirmV_0_7_0+5, 1
0x1C3C	0x6BC3      	CLRF        ?lstr83_FirmV_0_7_0+6, 1
0x1C3E	0x0EBD      	MOVLW       ?lstr83_FirmV_0_7_0
0x1C40	0x0106      	MOVLB       6
0x1C42	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x1C44	0x0E04      	MOVLW       hi_addr(?lstr83_FirmV_0_7_0)
0x1C46	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x1C48	0x0E06      	MOVLW       6
0x1C4A	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x1C4C	0x0E00      	MOVLW       0
0x1C4E	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x1C50	0xF001EC0D  	CALL        _memcpy, 0
L_Menu0451:
L_Menu0449:
;FirmV_0_7_0.c,2014 :: 		if(MenuPointer==10)
0x1C54	0x501E      	MOVF        _MenuPointer, 0 
0x1C56	0x0A0A      	XORLW       10
0x1C58	0xE16E      	BNZ         L_Menu0452
;FirmV_0_7_0.c,2015 :: 		{memcpy(LCDLine1,"10 M2 Overl Sens",16);LCDUpdateFlag=1;
0x1C5A	0x0EBD      	MOVLW       _LCDLine1
0x1C5C	0x0105      	MOVLB       5
0x1C5E	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x1C60	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x1C62	0x0106      	MOVLB       6
0x1C64	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x1C66	0x0E7F      	MOVLW       ?ICS?lstr84_FirmV_0_7_0
0x1C68	0x6EF6      	MOVWF       4086 
0x1C6A	0x0E86      	MOVLW       hi_addr(?ICS?lstr84_FirmV_0_7_0)
0x1C6C	0x6EF7      	MOVWF       TBLPTRH 
0x1C6E	0x0E00      	MOVLW       higher_addr(?ICS?lstr84_FirmV_0_7_0)
0x1C70	0x6EF8      	MOVWF       TBLPTRU 
0x1C72	0x0EC4      	MOVLW       ?lstr84_FirmV_0_7_0
0x1C74	0x6EE1      	MOVWF       FSR1L 
0x1C76	0x0E04      	MOVLW       hi_addr(?lstr84_FirmV_0_7_0)
0x1C78	0x6EE2      	MOVWF       FSR1H 
0x1C7A	0x0E11      	MOVLW       17
0x1C7C	0x6E00      	MOVWF       R0 
0x1C7E	0x0E01      	MOVLW       1
0x1C80	0x6E01      	MOVWF       R1 
0x1C82	0xF005EC2B  	CALL        ___CC2DW, 0
0x1C86	0x0EC4      	MOVLW       ?lstr84_FirmV_0_7_0
0x1C88	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x1C8A	0x0E04      	MOVLW       hi_addr(?lstr84_FirmV_0_7_0)
0x1C8C	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x1C8E	0x0E10      	MOVLW       16
0x1C90	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x1C92	0x0E00      	MOVLW       0
0x1C94	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x1C96	0xF001EC0D  	CALL        _memcpy, 0
0x1C9A	0x0E01      	MOVLW       1
0x1C9C	0x0100      	MOVLB       0
0x1C9E	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,2016 :: 		bytetostr(OverloadSens2,LCDLine2+3);if(OverloadSens2>7)memcpy(LCDLine2+7,"250Kg-",6);else memcpy(LCDLine2+7,"250Kg+",6);}
0x1CA0	0xF5FFC01A  	MOVFF       _OverloadSens2, FARG_ByteToStr_input
0x1CA4	0x0EA6      	MOVLW       _LCDLine2+3
0x1CA6	0x0106      	MOVLB       6
0x1CA8	0x6F00      	MOVWF       FARG_ByteToStr_output, 1
0x1CAA	0x0E00      	MOVLW       hi_addr(_LCDLine2+3)
0x1CAC	0x6F01      	MOVWF       FARG_ByteToStr_output+1, 1
0x1CAE	0xF001EC7E  	CALL        _ByteToStr, 0
0x1CB2	0x501A      	MOVF        _OverloadSens2, 0 
0x1CB4	0x0807      	SUBLW       7
0x1CB6	0xE220      	BC          L_Menu0453
0x1CB8	0x0EAA      	MOVLW       _LCDLine2+7
0x1CBA	0x0105      	MOVLB       5
0x1CBC	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x1CBE	0x0E00      	MOVLW       hi_addr(_LCDLine2+7)
0x1CC0	0x0106      	MOVLB       6
0x1CC2	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x1CC4	0x0E32      	MOVLW       50
0x1CC6	0x0104      	MOVLB       4
0x1CC8	0x6FD5      	MOVWF       ?lstr85_FirmV_0_7_0, 1
0x1CCA	0x0E35      	MOVLW       53
0x1CCC	0x6FD6      	MOVWF       ?lstr85_FirmV_0_7_0+1, 1
0x1CCE	0x0E30      	MOVLW       48
0x1CD0	0x6FD7      	MOVWF       ?lstr85_FirmV_0_7_0+2, 1
0x1CD2	0x0E4B      	MOVLW       75
0x1CD4	0x6FD8      	MOVWF       ?lstr85_FirmV_0_7_0+3, 1
0x1CD6	0x0E67      	MOVLW       103
0x1CD8	0x6FD9      	MOVWF       ?lstr85_FirmV_0_7_0+4, 1
0x1CDA	0x0E2D      	MOVLW       45
0x1CDC	0x6FDA      	MOVWF       ?lstr85_FirmV_0_7_0+5, 1
0x1CDE	0x6BDB      	CLRF        ?lstr85_FirmV_0_7_0+6, 1
0x1CE0	0x0ED5      	MOVLW       ?lstr85_FirmV_0_7_0
0x1CE2	0x0106      	MOVLB       6
0x1CE4	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x1CE6	0x0E04      	MOVLW       hi_addr(?lstr85_FirmV_0_7_0)
0x1CE8	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x1CEA	0x0E06      	MOVLW       6
0x1CEC	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x1CEE	0x0E00      	MOVLW       0
0x1CF0	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x1CF2	0xF001EC0D  	CALL        _memcpy, 0
0x1CF6	0xD01F      	BRA         L_Menu0454
L_Menu0453:
0x1CF8	0x0EAA      	MOVLW       _LCDLine2+7
0x1CFA	0x0105      	MOVLB       5
0x1CFC	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x1CFE	0x0E00      	MOVLW       hi_addr(_LCDLine2+7)
0x1D00	0x0106      	MOVLB       6
0x1D02	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x1D04	0x0E32      	MOVLW       50
0x1D06	0x0104      	MOVLB       4
0x1D08	0x6FDC      	MOVWF       ?lstr86_FirmV_0_7_0, 1
0x1D0A	0x0E35      	MOVLW       53
0x1D0C	0x6FDD      	MOVWF       ?lstr86_FirmV_0_7_0+1, 1
0x1D0E	0x0E30      	MOVLW       48
0x1D10	0x6FDE      	MOVWF       ?lstr86_FirmV_0_7_0+2, 1
0x1D12	0x0E4B      	MOVLW       75
0x1D14	0x6FDF      	MOVWF       ?lstr86_FirmV_0_7_0+3, 1
0x1D16	0x0E67      	MOVLW       103
0x1D18	0x6FE0      	MOVWF       ?lstr86_FirmV_0_7_0+4, 1
0x1D1A	0x0E2B      	MOVLW       43
0x1D1C	0x6FE1      	MOVWF       ?lstr86_FirmV_0_7_0+5, 1
0x1D1E	0x6BE2      	CLRF        ?lstr86_FirmV_0_7_0+6, 1
0x1D20	0x0EDC      	MOVLW       ?lstr86_FirmV_0_7_0
0x1D22	0x0106      	MOVLB       6
0x1D24	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x1D26	0x0E04      	MOVLW       hi_addr(?lstr86_FirmV_0_7_0)
0x1D28	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x1D2A	0x0E06      	MOVLW       6
0x1D2C	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x1D2E	0x0E00      	MOVLW       0
0x1D30	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x1D32	0xF001EC0D  	CALL        _memcpy, 0
L_Menu0454:
L_Menu0452:
;FirmV_0_7_0.c,2018 :: 		if(MenuPointer==11)
0x1D36	0x501E      	MOVF        _MenuPointer, 0 
0x1D38	0x0A0B      	XORLW       11
0x1D3A	0xE12C      	BNZ         L_Menu0455
;FirmV_0_7_0.c,2019 :: 		{memcpy(LCDLine1,"11 M1 Overl Time",16);LCDUpdateFlag=1;
0x1D3C	0x0EBD      	MOVLW       _LCDLine1
0x1D3E	0x0105      	MOVLB       5
0x1D40	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x1D42	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x1D44	0x0106      	MOVLB       6
0x1D46	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x1D48	0x0E9E      	MOVLW       ?ICS?lstr87_FirmV_0_7_0
0x1D4A	0x6EF6      	MOVWF       4086 
0x1D4C	0x0E86      	MOVLW       hi_addr(?ICS?lstr87_FirmV_0_7_0)
0x1D4E	0x6EF7      	MOVWF       TBLPTRH 
0x1D50	0x0E00      	MOVLW       higher_addr(?ICS?lstr87_FirmV_0_7_0)
0x1D52	0x6EF8      	MOVWF       TBLPTRU 
0x1D54	0x0EE3      	MOVLW       ?lstr87_FirmV_0_7_0
0x1D56	0x6EE1      	MOVWF       FSR1L 
0x1D58	0x0E04      	MOVLW       hi_addr(?lstr87_FirmV_0_7_0)
0x1D5A	0x6EE2      	MOVWF       FSR1H 
0x1D5C	0x0E11      	MOVLW       17
0x1D5E	0x6E00      	MOVWF       R0 
0x1D60	0x0E01      	MOVLW       1
0x1D62	0x6E01      	MOVWF       R1 
0x1D64	0xF005EC2B  	CALL        ___CC2DW, 0
0x1D68	0x0EE3      	MOVLW       ?lstr87_FirmV_0_7_0
0x1D6A	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x1D6C	0x0E04      	MOVLW       hi_addr(?lstr87_FirmV_0_7_0)
0x1D6E	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x1D70	0x0E10      	MOVLW       16
0x1D72	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x1D74	0x0E00      	MOVLW       0
0x1D76	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x1D78	0xF001EC0D  	CALL        _memcpy, 0
0x1D7C	0x0E01      	MOVLW       1
0x1D7E	0x0100      	MOVLB       0
0x1D80	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,2020 :: 		charValueToStr(OverloadTime1,LCDLine2+6);}
0x1D82	0xF5F3C190  	MOVFF       _OverloadTime1, FARG_charValueToStr_val
0x1D86	0x0EA9      	MOVLW       _LCDLine2+6
0x1D88	0x0105      	MOVLB       5
0x1D8A	0x6FF4      	MOVWF       FARG_charValueToStr_string, 1
0x1D8C	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x1D8E	0x6FF5      	MOVWF       FARG_charValueToStr_string+1, 1
0x1D90	0xF006EC00  	CALL        _charValueToStr, 0
L_Menu0455:
;FirmV_0_7_0.c,2022 :: 		if(MenuPointer==12)
0x1D94	0x501E      	MOVF        _MenuPointer, 0 
0x1D96	0x0A0C      	XORLW       12
0x1D98	0xE12C      	BNZ         L_Menu0456
;FirmV_0_7_0.c,2023 :: 		{memcpy(LCDLine1,"12 M2 Overl Time",16);LCDUpdateFlag=1;
0x1D9A	0x0EBD      	MOVLW       _LCDLine1
0x1D9C	0x0105      	MOVLB       5
0x1D9E	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x1DA0	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x1DA2	0x0106      	MOVLB       6
0x1DA4	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x1DA6	0x0EAF      	MOVLW       ?ICS?lstr88_FirmV_0_7_0
0x1DA8	0x6EF6      	MOVWF       4086 
0x1DAA	0x0E86      	MOVLW       hi_addr(?ICS?lstr88_FirmV_0_7_0)
0x1DAC	0x6EF7      	MOVWF       TBLPTRH 
0x1DAE	0x0E00      	MOVLW       higher_addr(?ICS?lstr88_FirmV_0_7_0)
0x1DB0	0x6EF8      	MOVWF       TBLPTRU 
0x1DB2	0x0EF4      	MOVLW       ?lstr88_FirmV_0_7_0
0x1DB4	0x6EE1      	MOVWF       FSR1L 
0x1DB6	0x0E04      	MOVLW       hi_addr(?lstr88_FirmV_0_7_0)
0x1DB8	0x6EE2      	MOVWF       FSR1H 
0x1DBA	0x0E11      	MOVLW       17
0x1DBC	0x6E00      	MOVWF       R0 
0x1DBE	0x0E01      	MOVLW       1
0x1DC0	0x6E01      	MOVWF       R1 
0x1DC2	0xF005EC2B  	CALL        ___CC2DW, 0
0x1DC6	0x0EF4      	MOVLW       ?lstr88_FirmV_0_7_0
0x1DC8	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x1DCA	0x0E04      	MOVLW       hi_addr(?lstr88_FirmV_0_7_0)
0x1DCC	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x1DCE	0x0E10      	MOVLW       16
0x1DD0	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x1DD2	0x0E00      	MOVLW       0
0x1DD4	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x1DD6	0xF001EC0D  	CALL        _memcpy, 0
0x1DDA	0x0E01      	MOVLW       1
0x1DDC	0x0100      	MOVLB       0
0x1DDE	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,2024 :: 		charValueToStr(OverloadTime2,LCDLine2+6);}
0x1DE0	0xF5F3C191  	MOVFF       _OverloadTime2, FARG_charValueToStr_val
0x1DE4	0x0EA9      	MOVLW       _LCDLine2+6
0x1DE6	0x0105      	MOVLB       5
0x1DE8	0x6FF4      	MOVWF       FARG_charValueToStr_string, 1
0x1DEA	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x1DEC	0x6FF5      	MOVWF       FARG_charValueToStr_string+1, 1
0x1DEE	0xF006EC00  	CALL        _charValueToStr, 0
L_Menu0456:
;FirmV_0_7_0.c,2026 :: 		if(MenuPointer==13)
0x1DF2	0x501E      	MOVF        _MenuPointer, 0 
0x1DF4	0x0A0D      	XORLW       13
0x1DF6	0xE12C      	BNZ         L_Menu0457
;FirmV_0_7_0.c,2027 :: 		{memcpy(LCDLine1,"13 Interval Time",16);LCDUpdateFlag=1;
0x1DF8	0x0EBD      	MOVLW       _LCDLine1
0x1DFA	0x0105      	MOVLB       5
0x1DFC	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x1DFE	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x1E00	0x0106      	MOVLB       6
0x1E02	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x1E04	0x0EC0      	MOVLW       ?ICS?lstr89_FirmV_0_7_0
0x1E06	0x6EF6      	MOVWF       4086 
0x1E08	0x0E86      	MOVLW       hi_addr(?ICS?lstr89_FirmV_0_7_0)
0x1E0A	0x6EF7      	MOVWF       TBLPTRH 
0x1E0C	0x0E00      	MOVLW       higher_addr(?ICS?lstr89_FirmV_0_7_0)
0x1E0E	0x6EF8      	MOVWF       TBLPTRU 
0x1E10	0x0E05      	MOVLW       ?lstr89_FirmV_0_7_0
0x1E12	0x6EE1      	MOVWF       FSR1L 
0x1E14	0x0E05      	MOVLW       hi_addr(?lstr89_FirmV_0_7_0)
0x1E16	0x6EE2      	MOVWF       FSR1H 
0x1E18	0x0E11      	MOVLW       17
0x1E1A	0x6E00      	MOVWF       R0 
0x1E1C	0x0E01      	MOVLW       1
0x1E1E	0x6E01      	MOVWF       R1 
0x1E20	0xF005EC2B  	CALL        ___CC2DW, 0
0x1E24	0x0E05      	MOVLW       ?lstr89_FirmV_0_7_0
0x1E26	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x1E28	0x0E05      	MOVLW       hi_addr(?lstr89_FirmV_0_7_0)
0x1E2A	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x1E2C	0x0E10      	MOVLW       16
0x1E2E	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x1E30	0x0E00      	MOVLW       0
0x1E32	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x1E34	0xF001EC0D  	CALL        _memcpy, 0
0x1E38	0x0E01      	MOVLW       1
0x1E3A	0x0100      	MOVLB       0
0x1E3C	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,2028 :: 		charValueToStr(ActionTimeDiff,LCDLine2+6);}
0x1E3E	0xF5F3C247  	MOVFF       _ActionTimeDiff, FARG_charValueToStr_val
0x1E42	0x0EA9      	MOVLW       _LCDLine2+6
0x1E44	0x0105      	MOVLB       5
0x1E46	0x6FF4      	MOVWF       FARG_charValueToStr_string, 1
0x1E48	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x1E4A	0x6FF5      	MOVWF       FARG_charValueToStr_string+1, 1
0x1E4C	0xF006EC00  	CALL        _charValueToStr, 0
L_Menu0457:
;FirmV_0_7_0.c,2030 :: 		if(MenuPointer==14)
0x1E50	0x501E      	MOVF        _MenuPointer, 0 
0x1E52	0x0A0E      	XORLW       14
0x1E54	0xE12E      	BNZ         L_Menu0458
;FirmV_0_7_0.c,2031 :: 		{memcpy(LCDLine1,"14 Auto-close T ",16);LCDUpdateFlag=1;
0x1E56	0x0EBD      	MOVLW       _LCDLine1
0x1E58	0x0105      	MOVLB       5
0x1E5A	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x1E5C	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x1E5E	0x0106      	MOVLB       6
0x1E60	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x1E62	0x0ED1      	MOVLW       ?ICS?lstr90_FirmV_0_7_0
0x1E64	0x6EF6      	MOVWF       4086 
0x1E66	0x0E86      	MOVLW       hi_addr(?ICS?lstr90_FirmV_0_7_0)
0x1E68	0x6EF7      	MOVWF       TBLPTRH 
0x1E6A	0x0E00      	MOVLW       higher_addr(?ICS?lstr90_FirmV_0_7_0)
0x1E6C	0x6EF8      	MOVWF       TBLPTRU 
0x1E6E	0x0E16      	MOVLW       ?lstr90_FirmV_0_7_0
0x1E70	0x6EE1      	MOVWF       FSR1L 
0x1E72	0x0E05      	MOVLW       hi_addr(?lstr90_FirmV_0_7_0)
0x1E74	0x6EE2      	MOVWF       FSR1H 
0x1E76	0x0E11      	MOVLW       17
0x1E78	0x6E00      	MOVWF       R0 
0x1E7A	0x0E01      	MOVLW       1
0x1E7C	0x6E01      	MOVWF       R1 
0x1E7E	0xF005EC2B  	CALL        ___CC2DW, 0
0x1E82	0x0E16      	MOVLW       ?lstr90_FirmV_0_7_0
0x1E84	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x1E86	0x0E05      	MOVLW       hi_addr(?lstr90_FirmV_0_7_0)
0x1E88	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x1E8A	0x0E10      	MOVLW       16
0x1E8C	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x1E8E	0x0E00      	MOVLW       0
0x1E90	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x1E92	0xF001EC0D  	CALL        _memcpy, 0
0x1E96	0x0E01      	MOVLW       1
0x1E98	0x0100      	MOVLB       0
0x1E9A	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,2032 :: 		intValueToStr(AutoCloseTime,LCDLine2+4);}
0x1E9C	0xF5F3C295  	MOVFF       _AutoCloseTime, FARG_intValueToStr_val
0x1EA0	0xF5F4C296  	MOVFF       _AutoCloseTime+1, FARG_intValueToStr_val+1
0x1EA4	0x0EA7      	MOVLW       _LCDLine2+4
0x1EA6	0x0105      	MOVLB       5
0x1EA8	0x6FF5      	MOVWF       FARG_intValueToStr_string, 1
0x1EAA	0x0E00      	MOVLW       hi_addr(_LCDLine2+4)
0x1EAC	0x6FF6      	MOVWF       FARG_intValueToStr_string+1, 1
0x1EAE	0xF006EC53  	CALL        _intValueToStr, 0
L_Menu0458:
;FirmV_0_7_0.c,2034 :: 		if(MenuPointer==15)
0x1EB2	0x501E      	MOVF        _MenuPointer, 0 
0x1EB4	0x0A0F      	XORLW       15
0x1EB6	0xE123      	BNZ         L_Menu0459
;FirmV_0_7_0.c,2035 :: 		{memcpy(LCDLine1,"15 Factory Reset",16);LCDUpdateFlag=1;}
0x1EB8	0x0EBD      	MOVLW       _LCDLine1
0x1EBA	0x0105      	MOVLB       5
0x1EBC	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x1EBE	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x1EC0	0x0106      	MOVLB       6
0x1EC2	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x1EC4	0x0EE2      	MOVLW       ?ICS?lstr91_FirmV_0_7_0
0x1EC6	0x6EF6      	MOVWF       4086 
0x1EC8	0x0E86      	MOVLW       hi_addr(?ICS?lstr91_FirmV_0_7_0)
0x1ECA	0x6EF7      	MOVWF       TBLPTRH 
0x1ECC	0x0E00      	MOVLW       higher_addr(?ICS?lstr91_FirmV_0_7_0)
0x1ECE	0x6EF8      	MOVWF       TBLPTRU 
0x1ED0	0x0E27      	MOVLW       ?lstr91_FirmV_0_7_0
0x1ED2	0x6EE1      	MOVWF       FSR1L 
0x1ED4	0x0E05      	MOVLW       hi_addr(?lstr91_FirmV_0_7_0)
0x1ED6	0x6EE2      	MOVWF       FSR1H 
0x1ED8	0x0E11      	MOVLW       17
0x1EDA	0x6E00      	MOVWF       R0 
0x1EDC	0x0E01      	MOVLW       1
0x1EDE	0x6E01      	MOVWF       R1 
0x1EE0	0xF005EC2B  	CALL        ___CC2DW, 0
0x1EE4	0x0E27      	MOVLW       ?lstr91_FirmV_0_7_0
0x1EE6	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x1EE8	0x0E05      	MOVLW       hi_addr(?lstr91_FirmV_0_7_0)
0x1EEA	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x1EEC	0x0E10      	MOVLW       16
0x1EEE	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x1EF0	0x0E00      	MOVLW       0
0x1EF2	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x1EF4	0xF001EC0D  	CALL        _memcpy, 0
0x1EF8	0x0E01      	MOVLW       1
0x1EFA	0x0100      	MOVLB       0
0x1EFC	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
L_Menu0459:
;FirmV_0_7_0.c,2037 :: 		if(MenuPointer==16)
0x1EFE	0x501E      	MOVF        _MenuPointer, 0 
0x1F00	0x0A10      	XORLW       16
0x1F02	0xE16C      	BNZ         L_Menu0460
;FirmV_0_7_0.c,2038 :: 		{memcpy(LCDLine1,"16 Open Photo En",16);LCDUpdateFlag=1;
0x1F04	0x0EBD      	MOVLW       _LCDLine1
0x1F06	0x0105      	MOVLB       5
0x1F08	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x1F0A	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x1F0C	0x0106      	MOVLB       6
0x1F0E	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x1F10	0x0EF3      	MOVLW       ?ICS?lstr92_FirmV_0_7_0
0x1F12	0x6EF6      	MOVWF       4086 
0x1F14	0x0E86      	MOVLW       hi_addr(?ICS?lstr92_FirmV_0_7_0)
0x1F16	0x6EF7      	MOVWF       TBLPTRH 
0x1F18	0x0E00      	MOVLW       higher_addr(?ICS?lstr92_FirmV_0_7_0)
0x1F1A	0x6EF8      	MOVWF       TBLPTRU 
0x1F1C	0x0E38      	MOVLW       ?lstr92_FirmV_0_7_0
0x1F1E	0x6EE1      	MOVWF       FSR1L 
0x1F20	0x0E05      	MOVLW       hi_addr(?lstr92_FirmV_0_7_0)
0x1F22	0x6EE2      	MOVWF       FSR1H 
0x1F24	0x0E11      	MOVLW       17
0x1F26	0x6E00      	MOVWF       R0 
0x1F28	0x0E01      	MOVLW       1
0x1F2A	0x6E01      	MOVWF       R1 
0x1F2C	0xF005EC2B  	CALL        ___CC2DW, 0
0x1F30	0x0E38      	MOVLW       ?lstr92_FirmV_0_7_0
0x1F32	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x1F34	0x0E05      	MOVLW       hi_addr(?lstr92_FirmV_0_7_0)
0x1F36	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x1F38	0x0E10      	MOVLW       16
0x1F3A	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x1F3C	0x0E00      	MOVLW       0
0x1F3E	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x1F40	0xF001EC0D  	CALL        _memcpy, 0
0x1F44	0x0E01      	MOVLW       1
0x1F46	0x0100      	MOVLB       0
0x1F48	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,2039 :: 		if(OpenPhEnable==0) memcpy(LCDLine2+6,"No     ",7);else memcpy(LCDLine2+6,"Yes     ",8);}
0x1F4A	0x0102      	MOVLB       2
0x1F4C	0x5199      	MOVF        _OpenPhEnable, 0, 1
0x1F4E	0x0A00      	XORLW       0
0x1F50	0xE122      	BNZ         L_Menu0461
0x1F52	0x0EA9      	MOVLW       _LCDLine2+6
0x1F54	0x0105      	MOVLB       5
0x1F56	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x1F58	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x1F5A	0x0106      	MOVLB       6
0x1F5C	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x1F5E	0x0E4E      	MOVLW       78
0x1F60	0x0105      	MOVLB       5
0x1F62	0x6F49      	MOVWF       ?lstr93_FirmV_0_7_0, 1
0x1F64	0x0E6F      	MOVLW       111
0x1F66	0x6F4A      	MOVWF       ?lstr93_FirmV_0_7_0+1, 1
0x1F68	0x0E20      	MOVLW       32
0x1F6A	0x6F4B      	MOVWF       ?lstr93_FirmV_0_7_0+2, 1
0x1F6C	0x0E20      	MOVLW       32
0x1F6E	0x6F4C      	MOVWF       ?lstr93_FirmV_0_7_0+3, 1
0x1F70	0x0E20      	MOVLW       32
0x1F72	0x6F4D      	MOVWF       ?lstr93_FirmV_0_7_0+4, 1
0x1F74	0x0E20      	MOVLW       32
0x1F76	0x6F4E      	MOVWF       ?lstr93_FirmV_0_7_0+5, 1
0x1F78	0x0E20      	MOVLW       32
0x1F7A	0x6F4F      	MOVWF       ?lstr93_FirmV_0_7_0+6, 1
0x1F7C	0x6B50      	CLRF        ?lstr93_FirmV_0_7_0+7, 1
0x1F7E	0x0E49      	MOVLW       ?lstr93_FirmV_0_7_0
0x1F80	0x0106      	MOVLB       6
0x1F82	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x1F84	0x0E05      	MOVLW       hi_addr(?lstr93_FirmV_0_7_0)
0x1F86	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x1F88	0x0E07      	MOVLW       7
0x1F8A	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x1F8C	0x0E00      	MOVLW       0
0x1F8E	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x1F90	0xF001EC0D  	CALL        _memcpy, 0
0x1F94	0xD023      	BRA         L_Menu0462
L_Menu0461:
0x1F96	0x0EA9      	MOVLW       _LCDLine2+6
0x1F98	0x0105      	MOVLB       5
0x1F9A	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x1F9C	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x1F9E	0x0106      	MOVLB       6
0x1FA0	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x1FA2	0x0E59      	MOVLW       89
0x1FA4	0x0105      	MOVLB       5
0x1FA6	0x6F51      	MOVWF       ?lstr94_FirmV_0_7_0, 1
0x1FA8	0x0E65      	MOVLW       101
0x1FAA	0x6F52      	MOVWF       ?lstr94_FirmV_0_7_0+1, 1
0x1FAC	0x0E73      	MOVLW       115
0x1FAE	0x6F53      	MOVWF       ?lstr94_FirmV_0_7_0+2, 1
0x1FB0	0x0E20      	MOVLW       32
0x1FB2	0x6F54      	MOVWF       ?lstr94_FirmV_0_7_0+3, 1
0x1FB4	0x0E20      	MOVLW       32
0x1FB6	0x6F55      	MOVWF       ?lstr94_FirmV_0_7_0+4, 1
0x1FB8	0x0E20      	MOVLW       32
0x1FBA	0x6F56      	MOVWF       ?lstr94_FirmV_0_7_0+5, 1
0x1FBC	0x0E20      	MOVLW       32
0x1FBE	0x6F57      	MOVWF       ?lstr94_FirmV_0_7_0+6, 1
0x1FC0	0x0E20      	MOVLW       32
0x1FC2	0x6F58      	MOVWF       ?lstr94_FirmV_0_7_0+7, 1
0x1FC4	0x6B59      	CLRF        ?lstr94_FirmV_0_7_0+8, 1
0x1FC6	0x0E51      	MOVLW       ?lstr94_FirmV_0_7_0
0x1FC8	0x0106      	MOVLB       6
0x1FCA	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x1FCC	0x0E05      	MOVLW       hi_addr(?lstr94_FirmV_0_7_0)
0x1FCE	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x1FD0	0x0E08      	MOVLW       8
0x1FD2	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x1FD4	0x0E00      	MOVLW       0
0x1FD6	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x1FD8	0xF001EC0D  	CALL        _memcpy, 0
L_Menu0462:
L_Menu0460:
;FirmV_0_7_0.c,2041 :: 		if(MenuPointer==17)
0x1FDC	0x501E      	MOVF        _MenuPointer, 0 
0x1FDE	0x0A11      	XORLW       17
0x1FE0	0xE16C      	BNZ         L_Menu0463
;FirmV_0_7_0.c,2042 :: 		{memcpy(LCDLine1,"17 Limit Enable ",16);LCDUpdateFlag=1;
0x1FE2	0x0EBD      	MOVLW       _LCDLine1
0x1FE4	0x0105      	MOVLB       5
0x1FE6	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x1FE8	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x1FEA	0x0106      	MOVLB       6
0x1FEC	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x1FEE	0x0E15      	MOVLW       ?ICS?lstr95_FirmV_0_7_0
0x1FF0	0x6EF6      	MOVWF       4086 
0x1FF2	0x0E87      	MOVLW       hi_addr(?ICS?lstr95_FirmV_0_7_0)
0x1FF4	0x6EF7      	MOVWF       TBLPTRH 
0x1FF6	0x0E00      	MOVLW       higher_addr(?ICS?lstr95_FirmV_0_7_0)
0x1FF8	0x6EF8      	MOVWF       TBLPTRU 
0x1FFA	0x0E5A      	MOVLW       ?lstr95_FirmV_0_7_0
0x1FFC	0x6EE1      	MOVWF       FSR1L 
0x1FFE	0x0E05      	MOVLW       hi_addr(?lstr95_FirmV_0_7_0)
0x2000	0x6EE2      	MOVWF       FSR1H 
0x2002	0x0E11      	MOVLW       17
0x2004	0x6E00      	MOVWF       R0 
0x2006	0x0E01      	MOVLW       1
0x2008	0x6E01      	MOVWF       R1 
0x200A	0xF005EC2B  	CALL        ___CC2DW, 0
0x200E	0x0E5A      	MOVLW       ?lstr95_FirmV_0_7_0
0x2010	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x2012	0x0E05      	MOVLW       hi_addr(?lstr95_FirmV_0_7_0)
0x2014	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x2016	0x0E10      	MOVLW       16
0x2018	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x201A	0x0E00      	MOVLW       0
0x201C	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x201E	0xF001EC0D  	CALL        _memcpy, 0
0x2022	0x0E01      	MOVLW       1
0x2024	0x0100      	MOVLB       0
0x2026	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,2043 :: 		if(LimiterEnable==0) memcpy(LCDLine2+6,"No     ",7);else memcpy(LCDLine2+6,"Yes     ",8);}
0x2028	0x0102      	MOVLB       2
0x202A	0x51A4      	MOVF        _LimiterEnable, 0, 1
0x202C	0x0A00      	XORLW       0
0x202E	0xE122      	BNZ         L_Menu0464
0x2030	0x0EA9      	MOVLW       _LCDLine2+6
0x2032	0x0105      	MOVLB       5
0x2034	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x2036	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x2038	0x0106      	MOVLB       6
0x203A	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x203C	0x0E4E      	MOVLW       78
0x203E	0x0105      	MOVLB       5
0x2040	0x6F6B      	MOVWF       ?lstr96_FirmV_0_7_0, 1
0x2042	0x0E6F      	MOVLW       111
0x2044	0x6F6C      	MOVWF       ?lstr96_FirmV_0_7_0+1, 1
0x2046	0x0E20      	MOVLW       32
0x2048	0x6F6D      	MOVWF       ?lstr96_FirmV_0_7_0+2, 1
0x204A	0x0E20      	MOVLW       32
0x204C	0x6F6E      	MOVWF       ?lstr96_FirmV_0_7_0+3, 1
0x204E	0x0E20      	MOVLW       32
0x2050	0x6F6F      	MOVWF       ?lstr96_FirmV_0_7_0+4, 1
0x2052	0x0E20      	MOVLW       32
0x2054	0x6F70      	MOVWF       ?lstr96_FirmV_0_7_0+5, 1
0x2056	0x0E20      	MOVLW       32
0x2058	0x6F71      	MOVWF       ?lstr96_FirmV_0_7_0+6, 1
0x205A	0x6B72      	CLRF        ?lstr96_FirmV_0_7_0+7, 1
0x205C	0x0E6B      	MOVLW       ?lstr96_FirmV_0_7_0
0x205E	0x0106      	MOVLB       6
0x2060	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x2062	0x0E05      	MOVLW       hi_addr(?lstr96_FirmV_0_7_0)
0x2064	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x2066	0x0E07      	MOVLW       7
0x2068	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x206A	0x0E00      	MOVLW       0
0x206C	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x206E	0xF001EC0D  	CALL        _memcpy, 0
0x2072	0xD023      	BRA         L_Menu0465
L_Menu0464:
0x2074	0x0EA9      	MOVLW       _LCDLine2+6
0x2076	0x0105      	MOVLB       5
0x2078	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x207A	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x207C	0x0106      	MOVLB       6
0x207E	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x2080	0x0E59      	MOVLW       89
0x2082	0x0105      	MOVLB       5
0x2084	0x6F73      	MOVWF       ?lstr97_FirmV_0_7_0, 1
0x2086	0x0E65      	MOVLW       101
0x2088	0x6F74      	MOVWF       ?lstr97_FirmV_0_7_0+1, 1
0x208A	0x0E73      	MOVLW       115
0x208C	0x6F75      	MOVWF       ?lstr97_FirmV_0_7_0+2, 1
0x208E	0x0E20      	MOVLW       32
0x2090	0x6F76      	MOVWF       ?lstr97_FirmV_0_7_0+3, 1
0x2092	0x0E20      	MOVLW       32
0x2094	0x6F77      	MOVWF       ?lstr97_FirmV_0_7_0+4, 1
0x2096	0x0E20      	MOVLW       32
0x2098	0x6F78      	MOVWF       ?lstr97_FirmV_0_7_0+5, 1
0x209A	0x0E20      	MOVLW       32
0x209C	0x6F79      	MOVWF       ?lstr97_FirmV_0_7_0+6, 1
0x209E	0x0E20      	MOVLW       32
0x20A0	0x6F7A      	MOVWF       ?lstr97_FirmV_0_7_0+7, 1
0x20A2	0x6B7B      	CLRF        ?lstr97_FirmV_0_7_0+8, 1
0x20A4	0x0E73      	MOVLW       ?lstr97_FirmV_0_7_0
0x20A6	0x0106      	MOVLB       6
0x20A8	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x20AA	0x0E05      	MOVLW       hi_addr(?lstr97_FirmV_0_7_0)
0x20AC	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x20AE	0x0E08      	MOVLW       8
0x20B0	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x20B2	0x0E00      	MOVLW       0
0x20B4	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x20B6	0xF001EC0D  	CALL        _memcpy, 0
L_Menu0465:
L_Menu0463:
;FirmV_0_7_0.c,2045 :: 		if(MenuPointer==18)
0x20BA	0x501E      	MOVF        _MenuPointer, 0 
0x20BC	0x0A12      	XORLW       18
0x20BE	0xE16C      	BNZ         L_Menu0466
;FirmV_0_7_0.c,2046 :: 		{memcpy(LCDLine1,"18 Lock Enable  ",16);LCDUpdateFlag=1;
0x20C0	0x0EBD      	MOVLW       _LCDLine1
0x20C2	0x0105      	MOVLB       5
0x20C4	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x20C6	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x20C8	0x0106      	MOVLB       6
0x20CA	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x20CC	0x0E37      	MOVLW       ?ICS?lstr98_FirmV_0_7_0
0x20CE	0x6EF6      	MOVWF       4086 
0x20D0	0x0E87      	MOVLW       hi_addr(?ICS?lstr98_FirmV_0_7_0)
0x20D2	0x6EF7      	MOVWF       TBLPTRH 
0x20D4	0x0E00      	MOVLW       higher_addr(?ICS?lstr98_FirmV_0_7_0)
0x20D6	0x6EF8      	MOVWF       TBLPTRU 
0x20D8	0x0E7C      	MOVLW       ?lstr98_FirmV_0_7_0
0x20DA	0x6EE1      	MOVWF       FSR1L 
0x20DC	0x0E05      	MOVLW       hi_addr(?lstr98_FirmV_0_7_0)
0x20DE	0x6EE2      	MOVWF       FSR1H 
0x20E0	0x0E11      	MOVLW       17
0x20E2	0x6E00      	MOVWF       R0 
0x20E4	0x0E01      	MOVLW       1
0x20E6	0x6E01      	MOVWF       R1 
0x20E8	0xF005EC2B  	CALL        ___CC2DW, 0
0x20EC	0x0E7C      	MOVLW       ?lstr98_FirmV_0_7_0
0x20EE	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x20F0	0x0E05      	MOVLW       hi_addr(?lstr98_FirmV_0_7_0)
0x20F2	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x20F4	0x0E10      	MOVLW       16
0x20F6	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x20F8	0x0E00      	MOVLW       0
0x20FA	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x20FC	0xF001EC0D  	CALL        _memcpy, 0
0x2100	0x0E01      	MOVLW       1
0x2102	0x0100      	MOVLB       0
0x2104	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,2047 :: 		if(LockEnable==0) memcpy(LCDLine2+6,"No     ",7);else memcpy(LCDLine2+6,"Yes     ",8);}
0x2106	0x0102      	MOVLB       2
0x2108	0x51A3      	MOVF        _LockEnable, 0, 1
0x210A	0x0A00      	XORLW       0
0x210C	0xE122      	BNZ         L_Menu0467
0x210E	0x0EA9      	MOVLW       _LCDLine2+6
0x2110	0x0105      	MOVLB       5
0x2112	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x2114	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x2116	0x0106      	MOVLB       6
0x2118	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x211A	0x0E4E      	MOVLW       78
0x211C	0x0105      	MOVLB       5
0x211E	0x6F8D      	MOVWF       ?lstr99_FirmV_0_7_0, 1
0x2120	0x0E6F      	MOVLW       111
0x2122	0x6F8E      	MOVWF       ?lstr99_FirmV_0_7_0+1, 1
0x2124	0x0E20      	MOVLW       32
0x2126	0x6F8F      	MOVWF       ?lstr99_FirmV_0_7_0+2, 1
0x2128	0x0E20      	MOVLW       32
0x212A	0x6F90      	MOVWF       ?lstr99_FirmV_0_7_0+3, 1
0x212C	0x0E20      	MOVLW       32
0x212E	0x6F91      	MOVWF       ?lstr99_FirmV_0_7_0+4, 1
0x2130	0x0E20      	MOVLW       32
0x2132	0x6F92      	MOVWF       ?lstr99_FirmV_0_7_0+5, 1
0x2134	0x0E20      	MOVLW       32
0x2136	0x6F93      	MOVWF       ?lstr99_FirmV_0_7_0+6, 1
0x2138	0x6B94      	CLRF        ?lstr99_FirmV_0_7_0+7, 1
0x213A	0x0E8D      	MOVLW       ?lstr99_FirmV_0_7_0
0x213C	0x0106      	MOVLB       6
0x213E	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x2140	0x0E05      	MOVLW       hi_addr(?lstr99_FirmV_0_7_0)
0x2142	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x2144	0x0E07      	MOVLW       7
0x2146	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x2148	0x0E00      	MOVLW       0
0x214A	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x214C	0xF001EC0D  	CALL        _memcpy, 0
0x2150	0xD023      	BRA         L_Menu0468
L_Menu0467:
0x2152	0x0EA9      	MOVLW       _LCDLine2+6
0x2154	0x0105      	MOVLB       5
0x2156	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x2158	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x215A	0x0106      	MOVLB       6
0x215C	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x215E	0x0E59      	MOVLW       89
0x2160	0x0105      	MOVLB       5
0x2162	0x6F95      	MOVWF       ?lstr100_FirmV_0_7_0, 1
0x2164	0x0E65      	MOVLW       101
0x2166	0x6F96      	MOVWF       ?lstr100_FirmV_0_7_0+1, 1
0x2168	0x0E73      	MOVLW       115
0x216A	0x6F97      	MOVWF       ?lstr100_FirmV_0_7_0+2, 1
0x216C	0x0E20      	MOVLW       32
0x216E	0x6F98      	MOVWF       ?lstr100_FirmV_0_7_0+3, 1
0x2170	0x0E20      	MOVLW       32
0x2172	0x6F99      	MOVWF       ?lstr100_FirmV_0_7_0+4, 1
0x2174	0x0E20      	MOVLW       32
0x2176	0x6F9A      	MOVWF       ?lstr100_FirmV_0_7_0+5, 1
0x2178	0x0E20      	MOVLW       32
0x217A	0x6F9B      	MOVWF       ?lstr100_FirmV_0_7_0+6, 1
0x217C	0x0E20      	MOVLW       32
0x217E	0x6F9C      	MOVWF       ?lstr100_FirmV_0_7_0+7, 1
0x2180	0x6B9D      	CLRF        ?lstr100_FirmV_0_7_0+8, 1
0x2182	0x0E95      	MOVLW       ?lstr100_FirmV_0_7_0
0x2184	0x0106      	MOVLB       6
0x2186	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x2188	0x0E05      	MOVLW       hi_addr(?lstr100_FirmV_0_7_0)
0x218A	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x218C	0x0E08      	MOVLW       8
0x218E	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x2190	0x0E00      	MOVLW       0
0x2192	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x2194	0xF001EC0D  	CALL        _memcpy, 0
L_Menu0468:
L_Menu0466:
;FirmV_0_7_0.c,2049 :: 		if(MenuPointer==19)
0x2198	0x501E      	MOVF        _MenuPointer, 0 
0x219A	0x0A13      	XORLW       19
0x219C	0xE16C      	BNZ         L_Menu0469
;FirmV_0_7_0.c,2050 :: 		{memcpy(LCDLine1,"19 Lock Force   ",16);LCDUpdateFlag=1;
0x219E	0x0EBD      	MOVLW       _LCDLine1
0x21A0	0x0105      	MOVLB       5
0x21A2	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x21A4	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x21A6	0x0106      	MOVLB       6
0x21A8	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x21AA	0x0E59      	MOVLW       ?ICS?lstr101_FirmV_0_7_0
0x21AC	0x6EF6      	MOVWF       4086 
0x21AE	0x0E87      	MOVLW       hi_addr(?ICS?lstr101_FirmV_0_7_0)
0x21B0	0x6EF7      	MOVWF       TBLPTRH 
0x21B2	0x0E00      	MOVLW       higher_addr(?ICS?lstr101_FirmV_0_7_0)
0x21B4	0x6EF8      	MOVWF       TBLPTRU 
0x21B6	0x0E9E      	MOVLW       ?lstr101_FirmV_0_7_0
0x21B8	0x6EE1      	MOVWF       FSR1L 
0x21BA	0x0E05      	MOVLW       hi_addr(?lstr101_FirmV_0_7_0)
0x21BC	0x6EE2      	MOVWF       FSR1H 
0x21BE	0x0E11      	MOVLW       17
0x21C0	0x6E00      	MOVWF       R0 
0x21C2	0x0E01      	MOVLW       1
0x21C4	0x6E01      	MOVWF       R1 
0x21C6	0xF005EC2B  	CALL        ___CC2DW, 0
0x21CA	0x0E9E      	MOVLW       ?lstr101_FirmV_0_7_0
0x21CC	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x21CE	0x0E05      	MOVLW       hi_addr(?lstr101_FirmV_0_7_0)
0x21D0	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x21D2	0x0E10      	MOVLW       16
0x21D4	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x21D6	0x0E00      	MOVLW       0
0x21D8	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x21DA	0xF001EC0D  	CALL        _memcpy, 0
0x21DE	0x0E01      	MOVLW       1
0x21E0	0x0100      	MOVLB       0
0x21E2	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,2051 :: 		if(LockForce==0) memcpy(LCDLine2+6,"No     ",7);else memcpy(LCDLine2+6,"Yes     ",8);}
0x21E4	0x0101      	MOVLB       1
0x21E6	0x518F      	MOVF        _LockForce, 0, 1
0x21E8	0x0A00      	XORLW       0
0x21EA	0xE122      	BNZ         L_Menu0470
0x21EC	0x0EA9      	MOVLW       _LCDLine2+6
0x21EE	0x0105      	MOVLB       5
0x21F0	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x21F2	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x21F4	0x0106      	MOVLB       6
0x21F6	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x21F8	0x0E4E      	MOVLW       78
0x21FA	0x0105      	MOVLB       5
0x21FC	0x6FAF      	MOVWF       ?lstr102_FirmV_0_7_0, 1
0x21FE	0x0E6F      	MOVLW       111
0x2200	0x6FB0      	MOVWF       ?lstr102_FirmV_0_7_0+1, 1
0x2202	0x0E20      	MOVLW       32
0x2204	0x6FB1      	MOVWF       ?lstr102_FirmV_0_7_0+2, 1
0x2206	0x0E20      	MOVLW       32
0x2208	0x6FB2      	MOVWF       ?lstr102_FirmV_0_7_0+3, 1
0x220A	0x0E20      	MOVLW       32
0x220C	0x6FB3      	MOVWF       ?lstr102_FirmV_0_7_0+4, 1
0x220E	0x0E20      	MOVLW       32
0x2210	0x6FB4      	MOVWF       ?lstr102_FirmV_0_7_0+5, 1
0x2212	0x0E20      	MOVLW       32
0x2214	0x6FB5      	MOVWF       ?lstr102_FirmV_0_7_0+6, 1
0x2216	0x6BB6      	CLRF        ?lstr102_FirmV_0_7_0+7, 1
0x2218	0x0EAF      	MOVLW       ?lstr102_FirmV_0_7_0
0x221A	0x0106      	MOVLB       6
0x221C	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x221E	0x0E05      	MOVLW       hi_addr(?lstr102_FirmV_0_7_0)
0x2220	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x2222	0x0E07      	MOVLW       7
0x2224	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x2226	0x0E00      	MOVLW       0
0x2228	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x222A	0xF001EC0D  	CALL        _memcpy, 0
0x222E	0xD023      	BRA         L_Menu0471
L_Menu0470:
0x2230	0x0EA9      	MOVLW       _LCDLine2+6
0x2232	0x0105      	MOVLB       5
0x2234	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x2236	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x2238	0x0106      	MOVLB       6
0x223A	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x223C	0x0E59      	MOVLW       89
0x223E	0x0105      	MOVLB       5
0x2240	0x6FB7      	MOVWF       ?lstr103_FirmV_0_7_0, 1
0x2242	0x0E65      	MOVLW       101
0x2244	0x6FB8      	MOVWF       ?lstr103_FirmV_0_7_0+1, 1
0x2246	0x0E73      	MOVLW       115
0x2248	0x6FB9      	MOVWF       ?lstr103_FirmV_0_7_0+2, 1
0x224A	0x0E20      	MOVLW       32
0x224C	0x6FBA      	MOVWF       ?lstr103_FirmV_0_7_0+3, 1
0x224E	0x0E20      	MOVLW       32
0x2250	0x6FBB      	MOVWF       ?lstr103_FirmV_0_7_0+4, 1
0x2252	0x0E20      	MOVLW       32
0x2254	0x6FBC      	MOVWF       ?lstr103_FirmV_0_7_0+5, 1
0x2256	0x0E20      	MOVLW       32
0x2258	0x6FBD      	MOVWF       ?lstr103_FirmV_0_7_0+6, 1
0x225A	0x0E20      	MOVLW       32
0x225C	0x6FBE      	MOVWF       ?lstr103_FirmV_0_7_0+7, 1
0x225E	0x6BBF      	CLRF        ?lstr103_FirmV_0_7_0+8, 1
0x2260	0x0EB7      	MOVLW       ?lstr103_FirmV_0_7_0
0x2262	0x0106      	MOVLB       6
0x2264	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x2266	0x0E05      	MOVLW       hi_addr(?lstr103_FirmV_0_7_0)
0x2268	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x226A	0x0E08      	MOVLW       8
0x226C	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x226E	0x0E00      	MOVLW       0
0x2270	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x2272	0xF001EC0D  	CALL        _memcpy, 0
L_Menu0471:
L_Menu0469:
;FirmV_0_7_0.c,2053 :: 		if(MenuPointer==20)
0x2276	0x501E      	MOVF        _MenuPointer, 0 
0x2278	0x0A14      	XORLW       20
0x227A	0xE12C      	BNZ         L_Menu0472
;FirmV_0_7_0.c,2054 :: 		{memcpy(LCDLine1,"20 Au-Cl Pass   ",16);LCDUpdateFlag=1;
0x227C	0x0EBD      	MOVLW       _LCDLine1
0x227E	0x0105      	MOVLB       5
0x2280	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x2282	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x2284	0x0106      	MOVLB       6
0x2286	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x2288	0x0E7B      	MOVLW       ?ICS?lstr104_FirmV_0_7_0
0x228A	0x6EF6      	MOVWF       4086 
0x228C	0x0E87      	MOVLW       hi_addr(?ICS?lstr104_FirmV_0_7_0)
0x228E	0x6EF7      	MOVWF       TBLPTRH 
0x2290	0x0E00      	MOVLW       higher_addr(?ICS?lstr104_FirmV_0_7_0)
0x2292	0x6EF8      	MOVWF       TBLPTRU 
0x2294	0x0EC0      	MOVLW       ?lstr104_FirmV_0_7_0
0x2296	0x6EE1      	MOVWF       FSR1L 
0x2298	0x0E05      	MOVLW       hi_addr(?lstr104_FirmV_0_7_0)
0x229A	0x6EE2      	MOVWF       FSR1H 
0x229C	0x0E11      	MOVLW       17
0x229E	0x6E00      	MOVWF       R0 
0x22A0	0x0E01      	MOVLW       1
0x22A2	0x6E01      	MOVWF       R1 
0x22A4	0xF005EC2B  	CALL        ___CC2DW, 0
0x22A8	0x0EC0      	MOVLW       ?lstr104_FirmV_0_7_0
0x22AA	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x22AC	0x0E05      	MOVLW       hi_addr(?lstr104_FirmV_0_7_0)
0x22AE	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x22B0	0x0E10      	MOVLW       16
0x22B2	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x22B4	0x0E00      	MOVLW       0
0x22B6	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x22B8	0xF001EC0D  	CALL        _memcpy, 0
0x22BC	0x0E01      	MOVLW       1
0x22BE	0x0100      	MOVLB       0
0x22C0	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,2055 :: 		charValueToStr(CloseAfterPass,LCDLine2+6);}
0x22C2	0xF5F3C241  	MOVFF       _CloseAfterPass, FARG_charValueToStr_val
0x22C6	0x0EA9      	MOVLW       _LCDLine2+6
0x22C8	0x0105      	MOVLB       5
0x22CA	0x6FF4      	MOVWF       FARG_charValueToStr_string, 1
0x22CC	0x0E00      	MOVLW       hi_addr(_LCDLine2+6)
0x22CE	0x6FF5      	MOVWF       FARG_charValueToStr_string+1, 1
0x22D0	0xF006EC00  	CALL        _charValueToStr, 0
L_Menu0472:
;FirmV_0_7_0.c,2057 :: 		if(MenuPointer==21)
0x22D4	0x501E      	MOVF        _MenuPointer, 0 
0x22D6	0x0A15      	XORLW       21
0x22D8	0xE123      	BNZ         L_Menu0473
;FirmV_0_7_0.c,2058 :: 		{memcpy(LCDLine1,"21 Save Changes ",16);LCDUpdateFlag=1;}
0x22DA	0x0EBD      	MOVLW       _LCDLine1
0x22DC	0x0105      	MOVLB       5
0x22DE	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x22E0	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x22E2	0x0106      	MOVLB       6
0x22E4	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x22E6	0x0E8C      	MOVLW       ?ICS?lstr105_FirmV_0_7_0
0x22E8	0x6EF6      	MOVWF       4086 
0x22EA	0x0E87      	MOVLW       hi_addr(?ICS?lstr105_FirmV_0_7_0)
0x22EC	0x6EF7      	MOVWF       TBLPTRH 
0x22EE	0x0E00      	MOVLW       higher_addr(?ICS?lstr105_FirmV_0_7_0)
0x22F0	0x6EF8      	MOVWF       TBLPTRU 
0x22F2	0x0ED1      	MOVLW       ?lstr105_FirmV_0_7_0
0x22F4	0x6EE1      	MOVWF       FSR1L 
0x22F6	0x0E05      	MOVLW       hi_addr(?lstr105_FirmV_0_7_0)
0x22F8	0x6EE2      	MOVWF       FSR1H 
0x22FA	0x0E11      	MOVLW       17
0x22FC	0x6E00      	MOVWF       R0 
0x22FE	0x0E01      	MOVLW       1
0x2300	0x6E01      	MOVWF       R1 
0x2302	0xF005EC2B  	CALL        ___CC2DW, 0
0x2306	0x0ED1      	MOVLW       ?lstr105_FirmV_0_7_0
0x2308	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x230A	0x0E05      	MOVLW       hi_addr(?lstr105_FirmV_0_7_0)
0x230C	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x230E	0x0E10      	MOVLW       16
0x2310	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x2312	0x0E00      	MOVLW       0
0x2314	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x2316	0xF001EC0D  	CALL        _memcpy, 0
0x231A	0x0E01      	MOVLW       1
0x231C	0x0100      	MOVLB       0
0x231E	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
L_Menu0473:
;FirmV_0_7_0.c,2060 :: 		if(MenuPointer==22)
0x2320	0x501E      	MOVF        _MenuPointer, 0 
0x2322	0x0A16      	XORLW       22
0x2324	0xE123      	BNZ         L_Menu0474
;FirmV_0_7_0.c,2061 :: 		{memcpy(LCDLine1,"22 Discard Exit ",16);LCDUpdateFlag=1;}
0x2326	0x0EBD      	MOVLW       _LCDLine1
0x2328	0x0105      	MOVLB       5
0x232A	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x232C	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x232E	0x0106      	MOVLB       6
0x2330	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x2332	0x0E9D      	MOVLW       ?ICS?lstr106_FirmV_0_7_0
0x2334	0x6EF6      	MOVWF       4086 
0x2336	0x0E87      	MOVLW       hi_addr(?ICS?lstr106_FirmV_0_7_0)
0x2338	0x6EF7      	MOVWF       TBLPTRH 
0x233A	0x0E00      	MOVLW       higher_addr(?ICS?lstr106_FirmV_0_7_0)
0x233C	0x6EF8      	MOVWF       TBLPTRU 
0x233E	0x0EE2      	MOVLW       ?lstr106_FirmV_0_7_0
0x2340	0x6EE1      	MOVWF       FSR1L 
0x2342	0x0E05      	MOVLW       hi_addr(?lstr106_FirmV_0_7_0)
0x2344	0x6EE2      	MOVWF       FSR1H 
0x2346	0x0E11      	MOVLW       17
0x2348	0x6E00      	MOVWF       R0 
0x234A	0x0E01      	MOVLW       1
0x234C	0x6E01      	MOVWF       R1 
0x234E	0xF005EC2B  	CALL        ___CC2DW, 0
0x2352	0x0EE2      	MOVLW       ?lstr106_FirmV_0_7_0
0x2354	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x2356	0x0E05      	MOVLW       hi_addr(?lstr106_FirmV_0_7_0)
0x2358	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x235A	0x0E10      	MOVLW       16
0x235C	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x235E	0x0E00      	MOVLW       0
0x2360	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x2362	0xF001EC0D  	CALL        _memcpy, 0
0x2366	0x0E01      	MOVLW       1
0x2368	0x0100      	MOVLB       0
0x236A	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
L_Menu0474:
;FirmV_0_7_0.c,2064 :: 		State=101;
0x236C	0x0E65      	MOVLW       101
0x236E	0x0101      	MOVLB       1
0x2370	0x6F44      	MOVWF       _State, 1
;FirmV_0_7_0.c,2065 :: 		}
0x2372	0x0012      	RETURN      0
; end of _Menu0
_SetMotorSpeed:
;FirmV_0_7_0.c,1679 :: 		void SetMotorSpeed(char M1FullSpeed,char M2FullSpeed)
;FirmV_0_7_0.c,1681 :: 		if((M1FullSpeed==0)||(M2FullSpeed==0))
0x2374	0x0103      	MOVLB       3
0x2376	0x51D9      	MOVF        FARG_SetMotorSpeed_M1FullSpeed, 0, 1
0x2378	0x0A00      	XORLW       0
0x237A	0xE004      	BZ          L__SetMotorSpeed875
0x237C	0x51DA      	MOVF        FARG_SetMotorSpeed_M2FullSpeed, 0, 1
0x237E	0x0A00      	XORLW       0
0x2380	0xE001      	BZ          L__SetMotorSpeed875
0x2382	0xD002      	BRA         L_SetMotorSpeed404
L__SetMotorSpeed875:
;FirmV_0_7_0.c,1682 :: 		INT0E_bit=1;
0x2384	0x88F2      	BSF         INT0E_bit, 4 
0x2386	0xD001      	BRA         L_SetMotorSpeed405
L_SetMotorSpeed404:
;FirmV_0_7_0.c,1684 :: 		INT0E_bit=0;
0x2388	0x98F2      	BCF         INT0E_bit, 4 
L_SetMotorSpeed405:
;FirmV_0_7_0.c,1686 :: 		Motor1FullSpeed=M1FullSpeed;
0x238A	0xF0B5C3D9  	MOVFF       FARG_SetMotorSpeed_M1FullSpeed, _Motor1FullSpeed
;FirmV_0_7_0.c,1687 :: 		Motor2FullSpeed=M2FullSpeed;
0x238E	0xF0B8C3DA  	MOVFF       FARG_SetMotorSpeed_M2FullSpeed, _Motor2FullSpeed
;FirmV_0_7_0.c,1688 :: 		}
0x2392	0x0012      	RETURN      0
; end of _SetMotorSpeed
_StartMotor:
;FirmV_0_7_0.c,1829 :: 		void StartMotor(char Mx,char Dir)
;FirmV_0_7_0.c,1831 :: 		if(Mx==1)
0x2394	0x0103      	MOVLB       3
0x2396	0x51D9      	MOVF        FARG_StartMotor_Mx, 0, 1
0x2398	0x0A01      	XORLW       1
0x239A	0xE117      	BNZ         L_StartMotor408
;FirmV_0_7_0.c,1833 :: 		Motor1Dir=Dir;
0x239C	0xB1DA      	BTFSC       FARG_StartMotor_Dir, 0, 1
0x239E	0xD002      	BRA         L__StartMotor963
0x23A0	0x9282      	BCF         PORTC, 1 
0x23A2	0xD001      	BRA         L__StartMotor964
L__StartMotor963:
0x23A4	0x8282      	BSF         PORTC, 1 
L__StartMotor964:
;FirmV_0_7_0.c,1834 :: 		delay_ms(100);
0x23A6	0x0E06      	MOVLW       6
0x23A8	0x6E0B      	MOVWF       R11, 0
0x23AA	0x0E13      	MOVLW       19
0x23AC	0x6E0C      	MOVWF       R12, 0
0x23AE	0x0EAD      	MOVLW       173
0x23B0	0x6E0D      	MOVWF       R13, 0
L_StartMotor409:
0x23B2	0x2E0D      	DECFSZ      R13, 1, 0
0x23B4	0xD7FE      	BRA         L_StartMotor409
0x23B6	0x2E0C      	DECFSZ      R12, 1, 0
0x23B8	0xD7FC      	BRA         L_StartMotor409
0x23BA	0x2E0B      	DECFSZ      R11, 1, 0
0x23BC	0xD7FA      	BRA         L_StartMotor409
0x23BE	0x0000      	NOP
0x23C0	0x0000      	NOP
;FirmV_0_7_0.c,1835 :: 		Motor1Start=1;
0x23C2	0x0E01      	MOVLW       1
0x23C4	0x0100      	MOVLB       0
0x23C6	0x6FDF      	MOVWF       _Motor1Start, 1
;FirmV_0_7_0.c,1836 :: 		Motor1=1;
0x23C8	0x8681      	BSF         PORTB, 3 
;FirmV_0_7_0.c,1837 :: 		}
L_StartMotor408:
;FirmV_0_7_0.c,1839 :: 		if(Mx==2)
0x23CA	0x0103      	MOVLB       3
0x23CC	0x51D9      	MOVF        FARG_StartMotor_Mx, 0, 1
0x23CE	0x0A02      	XORLW       2
0x23D0	0xE117      	BNZ         L_StartMotor410
;FirmV_0_7_0.c,1841 :: 		Motor2Dir=Dir;
0x23D2	0xB1DA      	BTFSC       FARG_StartMotor_Dir, 0, 1
0x23D4	0xD002      	BRA         L__StartMotor965
0x23D6	0x9082      	BCF         PORTC, 0 
0x23D8	0xD001      	BRA         L__StartMotor966
L__StartMotor965:
0x23DA	0x8082      	BSF         PORTC, 0 
L__StartMotor966:
;FirmV_0_7_0.c,1842 :: 		delay_ms(100);
0x23DC	0x0E06      	MOVLW       6
0x23DE	0x6E0B      	MOVWF       R11, 0
0x23E0	0x0E13      	MOVLW       19
0x23E2	0x6E0C      	MOVWF       R12, 0
0x23E4	0x0EAD      	MOVLW       173
0x23E6	0x6E0D      	MOVWF       R13, 0
L_StartMotor411:
0x23E8	0x2E0D      	DECFSZ      R13, 1, 0
0x23EA	0xD7FE      	BRA         L_StartMotor411
0x23EC	0x2E0C      	DECFSZ      R12, 1, 0
0x23EE	0xD7FC      	BRA         L_StartMotor411
0x23F0	0x2E0B      	DECFSZ      R11, 1, 0
0x23F2	0xD7FA      	BRA         L_StartMotor411
0x23F4	0x0000      	NOP
0x23F6	0x0000      	NOP
;FirmV_0_7_0.c,1843 :: 		Motor2Start=1;
0x23F8	0x0E01      	MOVLW       1
0x23FA	0x0100      	MOVLB       0
0x23FC	0x6FE0      	MOVWF       _Motor2Start, 1
;FirmV_0_7_0.c,1844 :: 		Motor2=1;
0x23FE	0x8881      	BSF         PORTB, 4 
;FirmV_0_7_0.c,1845 :: 		}
L_StartMotor410:
;FirmV_0_7_0.c,1846 :: 		}
0x2400	0x0012      	RETURN      0
; end of _StartMotor
_I2C1_Wr:
;__Lib_I2C_c34.c,84 :: 		
;__Lib_I2C_c34.c,86 :: 		
0x2402	0x969E      	BCF         PIR1, 3 
;__Lib_I2C_c34.c,87 :: 		
0x2404	0xFFC9C3D9  	MOVFF       FARG_I2C1_Wr_data_, SSPBUF
;__Lib_I2C_c34.c,89 :: 		
L_I2C1_Wr18:
0x2408	0xA4C7      	BTFSS       SSPSTAT, 2 
0x240A	0xD001      	BRA         L_I2C1_Wr19
;__Lib_I2C_c34.c,90 :: 		
0x240C	0xD7FD      	BRA         L_I2C1_Wr18
L_I2C1_Wr19:
;__Lib_I2C_c34.c,92 :: 		
L_I2C1_Wr20:
0x240E	0xB69E      	BTFSC       PIR1, 3 
0x2410	0xD001      	BRA         L_I2C1_Wr21
;__Lib_I2C_c34.c,93 :: 		
0x2412	0xD7FD      	BRA         L_I2C1_Wr20
L_I2C1_Wr21:
;__Lib_I2C_c34.c,95 :: 		
0x2414	0xBCC5      	BTFSC       SSPCON2, 6 
0x2416	0xD002      	BRA         L_I2C1_Wr22
;__Lib_I2C_c34.c,96 :: 		
0x2418	0x6A00      	CLRF        R0 
0x241A	0xD003      	BRA         L_end_I2C1_Wr
;__Lib_I2C_c34.c,97 :: 		
L_I2C1_Wr22:
;__Lib_I2C_c34.c,99 :: 		
0x241C	0x84C5      	BSF         SSPCON2, 2 
;__Lib_I2C_c34.c,100 :: 		
0x241E	0x0E02      	MOVLW       2
0x2420	0x6E00      	MOVWF       R0 
;__Lib_I2C_c34.c,102 :: 		
L_end_I2C1_Wr:
0x2422	0x0012      	RETURN      0
; end of _I2C1_Wr
_I2C1_Stop:
;__Lib_I2C_c34.c,105 :: 		
;__Lib_I2C_c34.c,106 :: 		
0x2424	0x84C5      	BSF         SSPCON2, 2 
;__Lib_I2C_c34.c,107 :: 		
L_end_I2C1_Stop:
0x2426	0x0012      	RETURN      0
; end of _I2C1_Stop
_charValueToStr_AC:
;FirmV_0_7_0.c,2710 :: 		void charValueToStr_AC(char val, char * string)
;FirmV_0_7_0.c,2712 :: 		bytetostr(val>>1,string);
0x2428	0xF5FFC3D9  	MOVFF       FARG_charValueToStr_AC_val, FARG_ByteToStr_input
0x242C	0x0105      	MOVLB       5
0x242E	0x33FF      	RRCF        FARG_ByteToStr_input, 1, 1
0x2430	0x9FFF      	BCF         FARG_ByteToStr_input, 7, 1
0x2432	0xF600C3DA  	MOVFF       FARG_charValueToStr_AC_string, FARG_ByteToStr_output
0x2436	0xF601C3DB  	MOVFF       FARG_charValueToStr_AC_string+1, FARG_ByteToStr_output+1
0x243A	0xF001EC7E  	CALL        _ByteToStr, 0
;FirmV_0_7_0.c,2713 :: 		memcpy(string+3,"s  ",4);
0x243E	0x0E03      	MOVLW       3
0x2440	0x0103      	MOVLB       3
0x2442	0x25DA      	ADDWF       FARG_charValueToStr_AC_string, 0, 1
0x2444	0x0105      	MOVLB       5
0x2446	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x2448	0x0E00      	MOVLW       0
0x244A	0x0103      	MOVLB       3
0x244C	0x21DB      	ADDWFC      FARG_charValueToStr_AC_string+1, 0, 1
0x244E	0x0106      	MOVLB       6
0x2450	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x2452	0x0E73      	MOVLW       115
0x2454	0x0103      	MOVLB       3
0x2456	0x6FDC      	MOVWF       ?lstr113_FirmV_0_7_0, 1
0x2458	0x0E20      	MOVLW       32
0x245A	0x6FDD      	MOVWF       ?lstr113_FirmV_0_7_0+1, 1
0x245C	0x0E20      	MOVLW       32
0x245E	0x6FDE      	MOVWF       ?lstr113_FirmV_0_7_0+2, 1
0x2460	0x6BDF      	CLRF        ?lstr113_FirmV_0_7_0+3, 1
0x2462	0x0EDC      	MOVLW       ?lstr113_FirmV_0_7_0
0x2464	0x0106      	MOVLB       6
0x2466	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x2468	0x0E03      	MOVLW       hi_addr(?lstr113_FirmV_0_7_0)
0x246A	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x246C	0x0E04      	MOVLW       4
0x246E	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x2470	0x0E00      	MOVLW       0
0x2472	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x2474	0xF001EC0D  	CALL        _memcpy, 0
;FirmV_0_7_0.c,2714 :: 		}
0x2478	0x0012      	RETURN      0
; end of _charValueToStr_AC
_ADC_Read:
;__Lib_ADC_A_D.c,35 :: 		
;__Lib_ADC_A_D.c,38 :: 		
0x247A	0x6AC2      	CLRF        ADCON0 
;__Lib_ADC_A_D.c,39 :: 		
0x247C	0x0E07      	MOVLW       7
0x247E	0x12C0      	IORWF       ADCON2, 1 
;__Lib_ADC_A_D.c,40 :: 		
0x2480	0x8EC0      	BSF         ADCON2, 7 
;__Lib_ADC_A_D.c,41 :: 		
0x2482	0xF000C3D9  	MOVFF       FARG_ADC_Read_channel, R0
0x2486	0x3600      	RLCF        R0, 1 
0x2488	0x9000      	BCF         R0, 0 
0x248A	0x3600      	RLCF        R0, 1 
0x248C	0x9000      	BCF         R0, 0 
0x248E	0x5000      	MOVF        R0, 0 
0x2490	0x12C2      	IORWF       ADCON0, 1 
;__Lib_ADC_A_D.c,42 :: 		
0x2492	0x80C2      	BSF         ADCON0, 0 
;__Lib_ADC_A_D.c,43 :: 		
0x2494	0xF005EC26  	CALL        _Delay_22us, 0
;__Lib_ADC_A_D.c,44 :: 		
0x2498	0x82C2      	BSF         ADCON0, 1 
;__Lib_ADC_A_D.c,45 :: 		
L_ADC_Read2:
0x249A	0xA2C2      	BTFSS       ADCON0, 1 
0x249C	0xD001      	BRA         L_ADC_Read3
;__Lib_ADC_A_D.c,46 :: 		
0x249E	0xD7FD      	BRA         L_ADC_Read2
L_ADC_Read3:
;__Lib_ADC_A_D.c,47 :: 		
0x24A0	0xF001CFC4  	MOVFF       ADRESH, R1
0x24A4	0x6A00      	CLRF        R0 
;__Lib_ADC_A_D.c,48 :: 		
0x24A6	0x50C3      	MOVF        ADRESL, 0 
0x24A8	0x1200      	IORWF       R0, 1 
0x24AA	0x0E00      	MOVLW       0
0x24AC	0x1201      	IORWF       R1, 1 
;__Lib_ADC_A_D.c,49 :: 		
0x24AE	0x90C2      	BCF         ADCON0, 0 
;__Lib_ADC_A_D.c,51 :: 		
;__Lib_ADC_A_D.c,52 :: 		
L_end_ADC_Read:
0x24B0	0x0012      	RETURN      0
; end of _ADC_Read
_GetLimitSwitchState:
;FirmV_0_7_0.c,1542 :: 		char GetLimitSwitchState()
;FirmV_0_7_0.c,1544 :: 		if((Limit1==0)||(Limit2==0))
0x24B2	0xA083      	BTFSS       PORTD, 0 
0x24B4	0xD003      	BRA         L__GetLimitSwitchState874
0x24B6	0xA283      	BTFSS       PORTD, 1 
0x24B8	0xD001      	BRA         L__GetLimitSwitchState874
0x24BA	0xD003      	BRA         L_GetLimitSwitchState378
L__GetLimitSwitchState874:
;FirmV_0_7_0.c,1545 :: 		return 1;
0x24BC	0x0E01      	MOVLW       1
0x24BE	0x6E00      	MOVWF       R0 
0x24C0	0x0012      	RETURN      0
L_GetLimitSwitchState378:
;FirmV_0_7_0.c,1547 :: 		return 0;
0x24C2	0x6A00      	CLRF        R0 
;FirmV_0_7_0.c,1548 :: 		}
0x24C4	0x0012      	RETURN      0
; end of _GetLimitSwitchState
_GetExternalKeysState:
;FirmV_0_7_0.c,1521 :: 		char GetExternalKeysState()
;FirmV_0_7_0.c,1523 :: 		char out=0;
0x24C6	0x0102      	MOVLB       2
0x24C8	0x6BBF      	CLRF        GetExternalKeysState_out_L0, 1
;FirmV_0_7_0.c,1524 :: 		if(KeyUp==0)
0x24CA	0xB883      	BTFSC       PORTD, 4 
0x24CC	0xD001      	BRA         L_GetExternalKeysState374
;FirmV_0_7_0.c,1525 :: 		out.b0=1;
0x24CE	0x81BF      	BSF         GetExternalKeysState_out_L0, 0, 1
L_GetExternalKeysState374:
;FirmV_0_7_0.c,1526 :: 		if(KeyDown==0)
0x24D0	0xBA83      	BTFSC       PORTD, 5 
0x24D2	0xD001      	BRA         L_GetExternalKeysState375
;FirmV_0_7_0.c,1527 :: 		out.b1=1;
0x24D4	0x83BF      	BSF         GetExternalKeysState_out_L0, 1, 1
L_GetExternalKeysState375:
;FirmV_0_7_0.c,1528 :: 		return out;
0x24D6	0xF000C2BF  	MOVFF       GetExternalKeysState_out_L0, R0
;FirmV_0_7_0.c,1529 :: 		}
0x24DA	0x0012      	RETURN      0
; end of _GetExternalKeysState
_WordToStrWithZeros:
;__Lib_Conversions.c,103 :: 		
;__Lib_Conversions.c,106 :: 		
0x24DC	0x0102      	MOVLB       2
0x24DE	0x6BC3      	CLRF        WordToStrWithZeros_len_L0, 1
L_WordToStrWithZeros12:
0x24E0	0x0E05      	MOVLW       5
0x24E2	0x5DC3      	SUBWF       WordToStrWithZeros_len_L0, 0, 1
0x24E4	0xE20A      	BC          L_WordToStrWithZeros13
;__Lib_Conversions.c,107 :: 		
0x24E6	0x51C3      	MOVF        WordToStrWithZeros_len_L0, 0, 1
0x24E8	0x25C1      	ADDWF       FARG_WordToStrWithZeros_output, 0, 1
0x24EA	0x6EE1      	MOVWF       FSR1L 
0x24EC	0x0E00      	MOVLW       0
0x24EE	0x21C2      	ADDWFC      FARG_WordToStrWithZeros_output+1, 0, 1
0x24F0	0x6EE2      	MOVWF       FSR1H 
0x24F2	0x0E30      	MOVLW       48
0x24F4	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,106 :: 		
0x24F6	0x2BC3      	INCF        WordToStrWithZeros_len_L0, 1, 1
;__Lib_Conversions.c,107 :: 		
0x24F8	0xD7F3      	BRA         L_WordToStrWithZeros12
L_WordToStrWithZeros13:
;__Lib_Conversions.c,108 :: 		
0x24FA	0x51C3      	MOVF        WordToStrWithZeros_len_L0, 0, 1
0x24FC	0x25C1      	ADDWF       FARG_WordToStrWithZeros_output, 0, 1
0x24FE	0x6EE1      	MOVWF       FSR1L 
0x2500	0x0E00      	MOVLW       0
0x2502	0x21C2      	ADDWFC      FARG_WordToStrWithZeros_output+1, 0, 1
0x2504	0x6EE2      	MOVWF       FSR1H 
0x2506	0x6AE6      	CLRF        POSTINC1 
0x2508	0x07C3      	DECF        WordToStrWithZeros_len_L0, 1, 1
;__Lib_Conversions.c,110 :: 		
L_WordToStrWithZeros15:
0x250A	0x0E00      	MOVLW       0
0x250C	0x19C0      	XORWF       FARG_WordToStrWithZeros_input+1, 0, 1
0x250E	0xE102      	BNZ         L__WordToStrWithZeros111
0x2510	0x0E00      	MOVLW       0
0x2512	0x19BF      	XORWF       FARG_WordToStrWithZeros_input, 0, 1
L__WordToStrWithZeros111:
0x2514	0xE02C      	BZ          L_WordToStrWithZeros16
;__Lib_Conversions.c,111 :: 		
0x2516	0x51C3      	MOVF        WordToStrWithZeros_len_L0, 0, 1
0x2518	0x25C1      	ADDWF       FARG_WordToStrWithZeros_output, 0, 1
0x251A	0x6FC4      	MOVWF       FLOC__WordToStrWithZeros, 1
0x251C	0x0E00      	MOVLW       0
0x251E	0x21C2      	ADDWFC      FARG_WordToStrWithZeros_output+1, 0, 1
0x2520	0x6FC5      	MOVWF       FLOC__WordToStrWithZeros+1, 1
0x2522	0x0E0A      	MOVLW       10
0x2524	0x6E04      	MOVWF       R4 
0x2526	0x0E00      	MOVLW       0
0x2528	0x6E05      	MOVWF       R5 
0x252A	0xF000C2BF  	MOVFF       FARG_WordToStrWithZeros_input, R0
0x252E	0xF001C2C0  	MOVFF       FARG_WordToStrWithZeros_input+1, R1
0x2532	0xF000ECC7  	CALL        _Div_16x16_U, 0
0x2536	0xF000C008  	MOVFF       R8, R0
0x253A	0xF001C009  	MOVFF       R9, R1
0x253E	0x0E30      	MOVLW       48
0x2540	0x2600      	ADDWF       R0, 1 
0x2542	0xFFE1C2C4  	MOVFF       FLOC__WordToStrWithZeros, FSR1L
0x2546	0xFFE2C2C5  	MOVFF       FLOC__WordToStrWithZeros+1, FSR1H
0x254A	0xFFE6C000  	MOVFF       R0, POSTINC1
0x254E	0x07C3      	DECF        WordToStrWithZeros_len_L0, 1, 1
;__Lib_Conversions.c,112 :: 		
0x2550	0x0E0A      	MOVLW       10
0x2552	0x6E04      	MOVWF       R4 
0x2554	0x0E00      	MOVLW       0
0x2556	0x6E05      	MOVWF       R5 
0x2558	0xF000C2BF  	MOVFF       FARG_WordToStrWithZeros_input, R0
0x255C	0xF001C2C0  	MOVFF       FARG_WordToStrWithZeros_input+1, R1
0x2560	0xF000ECC7  	CALL        _Div_16x16_U, 0
0x2564	0xF2BFC000  	MOVFF       R0, FARG_WordToStrWithZeros_input
0x2568	0xF2C0C001  	MOVFF       R1, FARG_WordToStrWithZeros_input+1
;__Lib_Conversions.c,113 :: 		
0x256C	0xD7CE      	BRA         L_WordToStrWithZeros15
L_WordToStrWithZeros16:
;__Lib_Conversions.c,114 :: 		
L_end_WordToStrWithZeros:
0x256E	0x0012      	RETURN      0
; end of _WordToStrWithZeros
_GetKeysState:
;FirmV_0_7_0.c,1458 :: 		char GetKeysState()
;FirmV_0_7_0.c,1460 :: 		unsigned res=0;
0x2570	0x0102      	MOVLB       2
0x2572	0x6BC0      	CLRF        GetKeysState_res_L0, 1
0x2574	0x6BC1      	CLRF        GetKeysState_res_L0+1, 1
;FirmV_0_7_0.c,1464 :: 		char resch=0,fin;
0x2576	0x6BC2      	CLRF        GetKeysState_resch_L0, 1
;FirmV_0_7_0.c,1465 :: 		resch.b0=~KeyDown;
0x2578	0xBA83      	BTFSC       PORTD, 5 
0x257A	0xD002      	BRA         L__GetKeysState940
0x257C	0x81C2      	BSF         GetKeysState_resch_L0, 0, 1
0x257E	0xD001      	BRA         L__GetKeysState941
L__GetKeysState940:
0x2580	0x91C2      	BCF         GetKeysState_resch_L0, 0, 1
L__GetKeysState941:
;FirmV_0_7_0.c,1466 :: 		resch.b1=~KeyMenu;
0x2582	0xB084      	BTFSC       PORTE, 0 
0x2584	0xD002      	BRA         L__GetKeysState942
0x2586	0x83C2      	BSF         GetKeysState_resch_L0, 1, 1
0x2588	0xD001      	BRA         L__GetKeysState943
L__GetKeysState942:
0x258A	0x93C2      	BCF         GetKeysState_resch_L0, 1, 1
L__GetKeysState943:
;FirmV_0_7_0.c,1467 :: 		resch.b2=~KeyUp;
0x258C	0xB883      	BTFSC       PORTD, 4 
0x258E	0xD002      	BRA         L__GetKeysState944
0x2590	0x85C2      	BSF         GetKeysState_resch_L0, 2, 1
0x2592	0xD001      	BRA         L__GetKeysState945
L__GetKeysState944:
0x2594	0x95C2      	BCF         GetKeysState_resch_L0, 2, 1
L__GetKeysState945:
;FirmV_0_7_0.c,1469 :: 		if((resch==0))
0x2596	0x51C2      	MOVF        GetKeysState_resch_L0, 0, 1
0x2598	0x0A00      	XORLW       0
0x259A	0xE115      	BNZ         L_GetKeysState353
;FirmV_0_7_0.c,1471 :: 		if(Pressed==0)
0x259C	0x502D      	MOVF        _Pressed, 0 
0x259E	0x0A00      	XORLW       0
0x25A0	0xE105      	BNZ         L_GetKeysState354
;FirmV_0_7_0.c,1472 :: 		{Repeat=0;RepeatCount=0;Pressed=0;fin=0;RepeatRate=0;}
0x25A2	0x6B64      	CLRF        GetKeysState_Repeat_L0, 1
0x25A4	0x6B82      	CLRF        GetKeysState_RepeatCount_L0, 1
0x25A6	0x6A2D      	CLRF        _Pressed 
0x25A8	0x6BBF      	CLRF        GetKeysState_fin_L0, 1
0x25AA	0x6B94      	CLRF        GetKeysState_RepeatRate_L0, 1
L_GetKeysState354:
;FirmV_0_7_0.c,1473 :: 		if(Pressed==1)
0x25AC	0x502D      	MOVF        _Pressed, 0 
0x25AE	0x0A01      	XORLW       1
0x25B0	0xE10A      	BNZ         L_GetKeysState355
;FirmV_0_7_0.c,1474 :: 		if(DebouncingDelay>=DebouncingFix)
0x25B2	0x0E05      	MOVLW       5
0x25B4	0x0100      	MOVLB       0
0x25B6	0x5D8F      	SUBWF       _DebouncingDelay, 0, 1
0x25B8	0xE306      	BNC         L_GetKeysState356
;FirmV_0_7_0.c,1475 :: 		{Repeat=0;RepeatCount=0;Pressed=0;fin=0;RepeatRate=0;}
0x25BA	0x0102      	MOVLB       2
0x25BC	0x6B64      	CLRF        GetKeysState_Repeat_L0, 1
0x25BE	0x6B82      	CLRF        GetKeysState_RepeatCount_L0, 1
0x25C0	0x6A2D      	CLRF        _Pressed 
0x25C2	0x6BBF      	CLRF        GetKeysState_fin_L0, 1
0x25C4	0x6B94      	CLRF        GetKeysState_RepeatRate_L0, 1
L_GetKeysState356:
L_GetKeysState355:
;FirmV_0_7_0.c,1476 :: 		}
L_GetKeysState353:
0x25C6	0x0102      	MOVLB       2
;FirmV_0_7_0.c,1487 :: 		if((Repeat==1)&&(KeyFlag>=RepeatSpeed))
0x25C8	0x5164      	MOVF        GetKeysState_Repeat_L0, 0, 1
0x25CA	0x0A01      	XORLW       1
0x25CC	0xE10E      	BNZ         L_GetKeysState359
0x25CE	0x0100      	MOVLB       0
0x25D0	0x51BB      	MOVF        GetKeysState_RepeatSpeed_L0, 0, 1
0x25D2	0x5D90      	SUBWF       _KeyFlag, 0, 1
0x25D4	0xE30A      	BNC         L_GetKeysState359
L__GetKeysState873:
;FirmV_0_7_0.c,1488 :: 		{RepeatRate=1;KeyFlag=0;if(RepeatCount<25)RepeatCount=RepeatCount+1;}
0x25D6	0x0E01      	MOVLW       1
0x25D8	0x0102      	MOVLB       2
0x25DA	0x6F94      	MOVWF       GetKeysState_RepeatRate_L0, 1
0x25DC	0x0100      	MOVLB       0
0x25DE	0x6B90      	CLRF        _KeyFlag, 1
0x25E0	0x0E19      	MOVLW       25
0x25E2	0x0102      	MOVLB       2
0x25E4	0x5D82      	SUBWF       GetKeysState_RepeatCount_L0, 0, 1
0x25E6	0xE201      	BC          L_GetKeysState360
0x25E8	0x2B82      	INCF        GetKeysState_RepeatCount_L0, 1, 1
L_GetKeysState360:
L_GetKeysState359:
0x25EA	0x0102      	MOVLB       2
;FirmV_0_7_0.c,1492 :: 		if((resch!=0)&&(Pressed==1)&&(Repeat==0)&&(ms500==PressTime+KeyRepeatDelay))
0x25EC	0x51C2      	MOVF        GetKeysState_resch_L0, 0, 1
0x25EE	0x0A00      	XORLW       0
0x25F0	0xE024      	BZ          L_GetKeysState363
0x25F2	0x502D      	MOVF        _Pressed, 0 
0x25F4	0x0A01      	XORLW       1
0x25F6	0xE121      	BNZ         L_GetKeysState363
0x25F8	0x5164      	MOVF        GetKeysState_Repeat_L0, 0, 1
0x25FA	0x0A00      	XORLW       0
0x25FC	0xE11E      	BNZ         L_GetKeysState363
0x25FE	0x0E02      	MOVLW       2
0x2600	0x2560      	ADDWF       GetKeysState_PressTime_L0, 0, 1
0x2602	0x6E01      	MOVWF       R1 
0x2604	0x0E00      	MOVLW       0
0x2606	0x2161      	ADDWFC      GetKeysState_PressTime_L0+1, 0, 1
0x2608	0x6E02      	MOVWF       R2 
0x260A	0x0E00      	MOVLW       0
0x260C	0x2162      	ADDWFC      GetKeysState_PressTime_L0+2, 0, 1
0x260E	0x6E03      	MOVWF       R3 
0x2610	0x0E00      	MOVLW       0
0x2612	0x2163      	ADDWFC      GetKeysState_PressTime_L0+3, 0, 1
0x2614	0x6E04      	MOVWF       R4 
0x2616	0x0101      	MOVLB       1
0x2618	0x5107      	MOVF        _ms500+3, 0, 1
0x261A	0x1804      	XORWF       R4, 0 
0x261C	0xE108      	BNZ         L__GetKeysState946
0x261E	0x5106      	MOVF        _ms500+2, 0, 1
0x2620	0x1803      	XORWF       R3, 0 
0x2622	0xE105      	BNZ         L__GetKeysState946
0x2624	0x5105      	MOVF        _ms500+1, 0, 1
0x2626	0x1802      	XORWF       R2, 0 
0x2628	0xE102      	BNZ         L__GetKeysState946
0x262A	0x5104      	MOVF        _ms500, 0, 1
0x262C	0x1801      	XORWF       R1, 0 
L__GetKeysState946:
0x262E	0xE105      	BNZ         L_GetKeysState363
L__GetKeysState872:
;FirmV_0_7_0.c,1493 :: 		{Repeat=1;KeyFlag=0;}
0x2630	0x0E01      	MOVLW       1
0x2632	0x0102      	MOVLB       2
0x2634	0x6F64      	MOVWF       GetKeysState_Repeat_L0, 1
0x2636	0x0100      	MOVLB       0
0x2638	0x6B90      	CLRF        _KeyFlag, 1
L_GetKeysState363:
;FirmV_0_7_0.c,1495 :: 		if((resch!=0)&&(Pressed==1)&&(Repeat==0))
0x263A	0x0102      	MOVLB       2
0x263C	0x51C2      	MOVF        GetKeysState_resch_L0, 0, 1
0x263E	0x0A00      	XORLW       0
0x2640	0xE007      	BZ          L_GetKeysState366
0x2642	0x502D      	MOVF        _Pressed, 0 
0x2644	0x0A01      	XORLW       1
0x2646	0xE104      	BNZ         L_GetKeysState366
0x2648	0x5164      	MOVF        GetKeysState_Repeat_L0, 0, 1
0x264A	0x0A00      	XORLW       0
0x264C	0xE101      	BNZ         L_GetKeysState366
L__GetKeysState871:
;FirmV_0_7_0.c,1496 :: 		fin=0;
0x264E	0x6BBF      	CLRF        GetKeysState_fin_L0, 1
L_GetKeysState366:
;FirmV_0_7_0.c,1498 :: 		if((resch!=0)&&(Pressed==1)&&(Repeat==1))
0x2650	0x51C2      	MOVF        GetKeysState_resch_L0, 0, 1
0x2652	0x0A00      	XORLW       0
0x2654	0xE00B      	BZ          L_GetKeysState369
0x2656	0x502D      	MOVF        _Pressed, 0 
0x2658	0x0A01      	XORLW       1
0x265A	0xE108      	BNZ         L_GetKeysState369
0x265C	0x5164      	MOVF        GetKeysState_Repeat_L0, 0, 1
0x265E	0x0A01      	XORLW       1
0x2660	0xE105      	BNZ         L_GetKeysState369
L__GetKeysState870:
;FirmV_0_7_0.c,1499 :: 		{fin=resch*RepeatRate;RepeatRate=0;}
0x2662	0x51C2      	MOVF        GetKeysState_resch_L0, 0, 1
0x2664	0x0394      	MULWF       GetKeysState_RepeatRate_L0, 1
0x2666	0xF2BFCFF3  	MOVFF       PRODL, GetKeysState_fin_L0
0x266A	0x6B94      	CLRF        GetKeysState_RepeatRate_L0, 1
L_GetKeysState369:
;FirmV_0_7_0.c,1502 :: 		if((resch!=0)&&(Pressed==0))
0x266C	0x51C2      	MOVF        GetKeysState_resch_L0, 0, 1
0x266E	0x0A00      	XORLW       0
0x2670	0xE011      	BZ          L_GetKeysState372
0x2672	0x502D      	MOVF        _Pressed, 0 
0x2674	0x0A00      	XORLW       0
0x2676	0xE10E      	BNZ         L_GetKeysState372
L__GetKeysState869:
;FirmV_0_7_0.c,1503 :: 		{fin=resch; Pressed=1;PressTime=ms500;DebouncingDelay=0;}
0x2678	0xF2BFC2C2  	MOVFF       GetKeysState_resch_L0, GetKeysState_fin_L0
0x267C	0x0E01      	MOVLW       1
0x267E	0x6E2D      	MOVWF       _Pressed 
0x2680	0xF260C104  	MOVFF       _ms500, GetKeysState_PressTime_L0
0x2684	0xF261C105  	MOVFF       _ms500+1, GetKeysState_PressTime_L0+1
0x2688	0xF262C106  	MOVFF       _ms500+2, GetKeysState_PressTime_L0+2
0x268C	0xF263C107  	MOVFF       _ms500+3, GetKeysState_PressTime_L0+3
0x2690	0x0100      	MOVLB       0
0x2692	0x6B8F      	CLRF        _DebouncingDelay, 1
L_GetKeysState372:
;FirmV_0_7_0.c,1507 :: 		if(fin != 0)
0x2694	0x0102      	MOVLB       2
0x2696	0x51BF      	MOVF        GetKeysState_fin_L0, 0, 1
0x2698	0x0A00      	XORLW       0
0x269A	0xE003      	BZ          L_GetKeysState373
;FirmV_0_7_0.c,1508 :: 		BuzzFlag=1;
0x269C	0x0E01      	MOVLW       1
0x269E	0x0101      	MOVLB       1
0x26A0	0x6F1C      	MOVWF       _BuzzFlag, 1
L_GetKeysState373:
;FirmV_0_7_0.c,1510 :: 		return fin;
0x26A2	0xF000C2BF  	MOVFF       GetKeysState_fin_L0, R0
;FirmV_0_7_0.c,1511 :: 		}
0x26A6	0x0012      	RETURN      0
; end of _GetKeysState
_LCD_out:
;COGLCDDriver.c,86 :: 		void LCD_out(unsigned char line,unsigned char offset,unsigned char* dat)
;COGLCDDriver.c,88 :: 		unsigned char i=0,add=0;
0x26A8	0x0102      	MOVLB       2
0x26AA	0x6BC3      	CLRF        LCD_out_i_L0, 1
0x26AC	0x6BC4      	CLRF        LCD_out_add_L0, 1
;COGLCDDriver.c,89 :: 		if(line==1)
0x26AE	0x51BF      	MOVF        FARG_LCD_out_line, 0, 1
0x26B0	0x0A01      	XORLW       1
0x26B2	0xE103      	BNZ         L_LCD_out8
;COGLCDDriver.c,90 :: 		add=0x80+offset;
0x26B4	0x51C0      	MOVF        FARG_LCD_out_offset, 0, 1
0x26B6	0x0F80      	ADDLW       128
0x26B8	0x6FC4      	MOVWF       LCD_out_add_L0, 1
L_LCD_out8:
;COGLCDDriver.c,91 :: 		if(line==2)
0x26BA	0x51BF      	MOVF        FARG_LCD_out_line, 0, 1
0x26BC	0x0A02      	XORLW       2
0x26BE	0xE103      	BNZ         L_LCD_out9
;COGLCDDriver.c,92 :: 		add=0xc0+offset;
0x26C0	0x51C0      	MOVF        FARG_LCD_out_offset, 0, 1
0x26C2	0x0FC0      	ADDLW       192
0x26C4	0x6FC4      	MOVWF       LCD_out_add_L0, 1
L_LCD_out9:
;COGLCDDriver.c,93 :: 		I2C1_Start();
0x26C6	0xF009EC48  	CALL        _I2C1_Start, 0
;COGLCDDriver.c,94 :: 		I2C1_wr(0x7c);
0x26CA	0x0E7C      	MOVLW       124
0x26CC	0x0103      	MOVLB       3
0x26CE	0x6FD9      	MOVWF       FARG_I2C1_Wr_data_, 1
0x26D0	0xDE98      	RCALL       _I2C1_Wr
;COGLCDDriver.c,95 :: 		I2C1_wr(0x80);
0x26D2	0x0E80      	MOVLW       128
0x26D4	0x0103      	MOVLB       3
0x26D6	0x6FD9      	MOVWF       FARG_I2C1_Wr_data_, 1
0x26D8	0xDE94      	RCALL       _I2C1_Wr
;COGLCDDriver.c,96 :: 		I2C1_wr(add);
0x26DA	0xF3D9C2C4  	MOVFF       LCD_out_add_L0, FARG_I2C1_Wr_data_
0x26DE	0xDE91      	RCALL       _I2C1_Wr
;COGLCDDriver.c,97 :: 		I2C1_wr(0x40);
0x26E0	0x0E40      	MOVLW       64
0x26E2	0x0103      	MOVLB       3
0x26E4	0x6FD9      	MOVWF       FARG_I2C1_Wr_data_, 1
0x26E6	0xDE8D      	RCALL       _I2C1_Wr
;COGLCDDriver.c,98 :: 		while((dat[i]!='\n')&&(i<=16))
L_LCD_out10:
0x26E8	0x0102      	MOVLB       2
0x26EA	0x51C3      	MOVF        LCD_out_i_L0, 0, 1
0x26EC	0x25C1      	ADDWF       FARG_LCD_out_dat, 0, 1
0x26EE	0x6EE9      	MOVWF       FSR0L 
0x26F0	0x0E00      	MOVLW       0
0x26F2	0x21C2      	ADDWFC      FARG_LCD_out_dat+1, 0, 1
0x26F4	0x6EEA      	MOVWF       FSR0H 
0x26F6	0x50EE      	MOVF        POSTINC0, 0 
0x26F8	0x0A0A      	XORLW       10
0x26FA	0xE00F      	BZ          L_LCD_out11
0x26FC	0x51C3      	MOVF        LCD_out_i_L0, 0, 1
0x26FE	0x0810      	SUBLW       16
0x2700	0xE30C      	BNC         L_LCD_out11
L__LCD_out15:
;COGLCDDriver.c,99 :: 		{I2C1_wr(dat[i]);i=i+1;}
0x2702	0x51C3      	MOVF        LCD_out_i_L0, 0, 1
0x2704	0x25C1      	ADDWF       FARG_LCD_out_dat, 0, 1
0x2706	0x6EE9      	MOVWF       FSR0L 
0x2708	0x0E00      	MOVLW       0
0x270A	0x21C2      	ADDWFC      FARG_LCD_out_dat+1, 0, 1
0x270C	0x6EEA      	MOVWF       FSR0H 
0x270E	0xF3D9CFEE  	MOVFF       POSTINC0, FARG_I2C1_Wr_data_
0x2712	0xDE77      	RCALL       _I2C1_Wr
0x2714	0x0102      	MOVLB       2
0x2716	0x2BC3      	INCF        LCD_out_i_L0, 1, 1
0x2718	0xD7E7      	BRA         L_LCD_out10
L_LCD_out11:
;COGLCDDriver.c,100 :: 		I2C1_Stop();
0x271A	0xDE84      	RCALL       _I2C1_Stop
;COGLCDDriver.c,101 :: 		delay_ms(1);
0x271C	0x0E0D      	MOVLW       13
0x271E	0x6E0C      	MOVWF       R12, 0
0x2720	0x0EFB      	MOVLW       251
0x2722	0x6E0D      	MOVWF       R13, 0
L_LCD_out14:
0x2724	0x2E0D      	DECFSZ      R13, 1, 0
0x2726	0xD7FE      	BRA         L_LCD_out14
0x2728	0x2E0C      	DECFSZ      R12, 1, 0
0x272A	0xD7FC      	BRA         L_LCD_out14
0x272C	0x0000      	NOP
0x272E	0x0000      	NOP
;COGLCDDriver.c,103 :: 		return;
;COGLCDDriver.c,104 :: 		}
0x2730	0x0012      	RETURN      0
; end of _LCD_out
_GetRemoteState:
;FirmV_0_7_0.c,1557 :: 		char GetRemoteState()
;FirmV_0_7_0.c,1559 :: 		char res=0;
0x2732	0x0102      	MOVLB       2
0x2734	0x6BBF      	CLRF        GetRemoteState_res_L0, 1
;FirmV_0_7_0.c,1560 :: 		res.b0=RemoteAFlag.b0;
0x2736	0xB02B      	BTFSC       _RemoteAFlag, 0 
0x2738	0xD002      	BRA         L__GetRemoteState947
0x273A	0x91BF      	BCF         GetRemoteState_res_L0, 0, 1
0x273C	0xD001      	BRA         L__GetRemoteState948
L__GetRemoteState947:
0x273E	0x81BF      	BSF         GetRemoteState_res_L0, 0, 1
L__GetRemoteState948:
;FirmV_0_7_0.c,1561 :: 		res.b1=RemoteBFlag.b0;
0x2740	0xB02C      	BTFSC       _RemoteBFlag, 0 
0x2742	0xD002      	BRA         L__GetRemoteState949
0x2744	0x93BF      	BCF         GetRemoteState_res_L0, 1, 1
0x2746	0xD001      	BRA         L__GetRemoteState950
L__GetRemoteState949:
0x2748	0x83BF      	BSF         GetRemoteState_res_L0, 1, 1
L__GetRemoteState950:
;FirmV_0_7_0.c,1562 :: 		RemoteAFlag=0;
0x274A	0x6A2B      	CLRF        _RemoteAFlag 
;FirmV_0_7_0.c,1563 :: 		RemoteBFlag=0;
0x274C	0x6A2C      	CLRF        _RemoteBFlag 
;FirmV_0_7_0.c,1564 :: 		res.b0=res.b0;
;FirmV_0_7_0.c,1565 :: 		res.b1=res.b1;
;FirmV_0_7_0.c,1567 :: 		if(State<20)
0x274E	0x0E14      	MOVLW       20
0x2750	0x0101      	MOVLB       1
0x2752	0x5D44      	SUBWF       _State, 0, 1
0x2754	0xE20F      	BC          L_GetRemoteState380
;FirmV_0_7_0.c,1569 :: 		res.b0=res.b0|Events.Keys.b2;//up key
0x2756	0x0102      	MOVLB       2
0x2758	0xB1BF      	BTFSC       GetRemoteState_res_L0, 0, 1
0x275A	0xD004      	BRA         L__GetRemoteState951
0x275C	0xB59A      	BTFSC       _Events, 2, 1
0x275E	0xD002      	BRA         L__GetRemoteState951
0x2760	0x91BF      	BCF         GetRemoteState_res_L0, 0, 1
0x2762	0xD001      	BRA         L__GetRemoteState952
L__GetRemoteState951:
0x2764	0x81BF      	BSF         GetRemoteState_res_L0, 0, 1
L__GetRemoteState952:
;FirmV_0_7_0.c,1570 :: 		res.b1=res.b1|Events.Keys.b0;//down key
0x2766	0xB3BF      	BTFSC       GetRemoteState_res_L0, 1, 1
0x2768	0xD004      	BRA         L__GetRemoteState953
0x276A	0xB19A      	BTFSC       _Events, 0, 1
0x276C	0xD002      	BRA         L__GetRemoteState953
0x276E	0x93BF      	BCF         GetRemoteState_res_L0, 1, 1
0x2770	0xD001      	BRA         L__GetRemoteState954
L__GetRemoteState953:
0x2772	0x83BF      	BSF         GetRemoteState_res_L0, 1, 1
L__GetRemoteState954:
;FirmV_0_7_0.c,1571 :: 		}
L_GetRemoteState380:
;FirmV_0_7_0.c,1573 :: 		return res;
0x2774	0xF000C2BF  	MOVFF       GetRemoteState_res_L0, R0
;FirmV_0_7_0.c,1574 :: 		}
0x2778	0x0012      	RETURN      0
; end of _GetRemoteState
_SetContrast:
;COGLCDDriver.c,47 :: 		void SetContrast(unsigned char val)
;COGLCDDriver.c,49 :: 		unsigned char valh=0,vall=0;
0x277A	0x0102      	MOVLB       2
0x277C	0x6BC0      	CLRF        SetContrast_valh_L0, 1
0x277E	0x6BC1      	CLRF        SetContrast_vall_L0, 1
;COGLCDDriver.c,50 :: 		val=val&0b00111111;
0x2780	0x0E3F      	MOVLW       63
0x2782	0x15BF      	ANDWF       FARG_SetContrast_val, 0, 1
0x2784	0x6E02      	MOVWF       R2 
0x2786	0xF2BFC002  	MOVFF       R2, FARG_SetContrast_val
;COGLCDDriver.c,51 :: 		valh=0x54;
0x278A	0x0E54      	MOVLW       84
0x278C	0x6FC0      	MOVWF       SetContrast_valh_L0, 1
;COGLCDDriver.c,52 :: 		valh|=(val>>4);
0x278E	0xF000C002  	MOVFF       R2, R0
0x2792	0x3200      	RRCF        R0, 1 
0x2794	0x9E00      	BCF         R0, 7 
0x2796	0x3200      	RRCF        R0, 1 
0x2798	0x9E00      	BCF         R0, 7 
0x279A	0x3200      	RRCF        R0, 1 
0x279C	0x9E00      	BCF         R0, 7 
0x279E	0x3200      	RRCF        R0, 1 
0x27A0	0x9E00      	BCF         R0, 7 
0x27A2	0x0E54      	MOVLW       84
0x27A4	0x1000      	IORWF       R0, 0 
0x27A6	0x6FC0      	MOVWF       SetContrast_valh_L0, 1
;COGLCDDriver.c,53 :: 		vall=0x70;
0x27A8	0x0E70      	MOVLW       112
0x27AA	0x6FC1      	MOVWF       SetContrast_vall_L0, 1
;COGLCDDriver.c,54 :: 		vall|=(val&0b1111);
0x27AC	0x0E0F      	MOVLW       15
0x27AE	0x1402      	ANDWF       R2, 0 
0x27B0	0x6E00      	MOVWF       R0 
0x27B2	0x0E70      	MOVLW       112
0x27B4	0x1000      	IORWF       R0, 0 
0x27B6	0x6FC1      	MOVWF       SetContrast_vall_L0, 1
;COGLCDDriver.c,55 :: 		I2C1_Start();
0x27B8	0xF009EC48  	CALL        _I2C1_Start, 0
;COGLCDDriver.c,57 :: 		I2C1_wr(0x7c);  //send slave address  with write
0x27BC	0x0E7C      	MOVLW       124
0x27BE	0x0103      	MOVLB       3
0x27C0	0x6FD9      	MOVWF       FARG_I2C1_Wr_data_, 1
0x27C2	0xDE1F      	RCALL       _I2C1_Wr
;COGLCDDriver.c,58 :: 		I2C1_wr(0x80);     // control byte
0x27C4	0x0E80      	MOVLW       128
0x27C6	0x0103      	MOVLB       3
0x27C8	0x6FD9      	MOVWF       FARG_I2C1_Wr_data_, 1
0x27CA	0xDE1B      	RCALL       _I2C1_Wr
;COGLCDDriver.c,59 :: 		I2C1_wr(valh);    //booster circuit is turn on.    /ICON display off. /Contrast control   high byte
0x27CC	0xF3D9C2C0  	MOVFF       SetContrast_valh_L0, FARG_I2C1_Wr_data_
0x27D0	0xDE18      	RCALL       _I2C1_Wr
;COGLCDDriver.c,61 :: 		I2C1_wr(0x80);   // control byte
0x27D2	0x0E80      	MOVLW       128
0x27D4	0x0103      	MOVLB       3
0x27D6	0x6FD9      	MOVWF       FARG_I2C1_Wr_data_, 1
0x27D8	0xDE14      	RCALL       _I2C1_Wr
;COGLCDDriver.c,62 :: 		I2C1_wr(vall);    //Contrast control  low byte
0x27DA	0xF3D9C2C1  	MOVFF       SetContrast_vall_L0, FARG_I2C1_Wr_data_
0x27DE	0xDE11      	RCALL       _I2C1_Wr
;COGLCDDriver.c,63 :: 		I2C1_Stop();
0x27E0	0xDE21      	RCALL       _I2C1_Stop
;COGLCDDriver.c,64 :: 		delay_ms(1);
0x27E2	0x0E0D      	MOVLW       13
0x27E4	0x6E0C      	MOVWF       R12, 0
0x27E6	0x0EFB      	MOVLW       251
0x27E8	0x6E0D      	MOVWF       R13, 0
L_SetContrast4:
0x27EA	0x2E0D      	DECFSZ      R13, 1, 0
0x27EC	0xD7FE      	BRA         L_SetContrast4
0x27EE	0x2E0C      	DECFSZ      R12, 1, 0
0x27F0	0xD7FC      	BRA         L_SetContrast4
0x27F2	0x0000      	NOP
0x27F4	0x0000      	NOP
;COGLCDDriver.c,65 :: 		}
0x27F6	0x0012      	RETURN      0
; end of _SetContrast
_About:
;FirmV_0_7_0.c,2073 :: 		void About()
;FirmV_0_7_0.c,2075 :: 		if((Events.Keys.b1==1))
0x27F8	0x0102      	MOVLB       2
0x27FA	0xA39A      	BTFSS       _Events, 1, 1
0x27FC	0xD002      	BRA         L_About475
;FirmV_0_7_0.c,2076 :: 		AboutCounter=AboutCounter+1;
0x27FE	0x0100      	MOVLB       0
0x2800	0x2B8E      	INCF        _AboutCounter, 1, 1
L_About475:
0x2802	0x0100      	MOVLB       0
;FirmV_0_7_0.c,2078 :: 		if(AboutCounter==1)
0x2804	0x518E      	MOVF        _AboutCounter, 0, 1
0x2806	0x0A01      	XORLW       1
0x2808	0xE123      	BNZ         L_About476
;FirmV_0_7_0.c,2079 :: 		{memcpy(LCDLine1,Crypto[2],16);
0x280A	0x0EBD      	MOVLW       _LCDLine1
0x280C	0x0105      	MOVLB       5
0x280E	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x2810	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x2812	0x0106      	MOVLB       6
0x2814	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x2816	0x0E4E      	MOVLW       _crypto+32
0x2818	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x281A	0x0E00      	MOVLW       hi_addr(_crypto+32)
0x281C	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x281E	0x0E10      	MOVLW       16
0x2820	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x2822	0x0E00      	MOVLW       0
0x2824	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x2826	0xF001EC0D  	CALL        _memcpy, 0
;FirmV_0_7_0.c,2080 :: 		memcpy(LCDLine2,Crypto[3],16);
0x282A	0x0EA3      	MOVLW       _LCDLine2
0x282C	0x0105      	MOVLB       5
0x282E	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x2830	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x2832	0x0106      	MOVLB       6
0x2834	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x2836	0x0E5E      	MOVLW       _crypto+48
0x2838	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x283A	0x0E00      	MOVLW       hi_addr(_crypto+48)
0x283C	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x283E	0x0E10      	MOVLW       16
0x2840	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x2842	0x0E00      	MOVLW       0
0x2844	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x2846	0xF001EC0D  	CALL        _memcpy, 0
;FirmV_0_7_0.c,2081 :: 		LCDUpdateFlag=1;
0x284A	0x0E01      	MOVLW       1
0x284C	0x0100      	MOVLB       0
0x284E	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,2082 :: 		}
L_About476:
;FirmV_0_7_0.c,2084 :: 		if(AboutCounter==2)
0x2850	0x518E      	MOVF        _AboutCounter, 0, 1
0x2852	0x0A02      	XORLW       2
0x2854	0xE123      	BNZ         L_About477
;FirmV_0_7_0.c,2085 :: 		{memcpy(LCDLine1,Crypto[4],16);
0x2856	0x0EBD      	MOVLW       _LCDLine1
0x2858	0x0105      	MOVLB       5
0x285A	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x285C	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x285E	0x0106      	MOVLB       6
0x2860	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x2862	0x0E6E      	MOVLW       _crypto+64
0x2864	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x2866	0x0E00      	MOVLW       hi_addr(_crypto+64)
0x2868	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x286A	0x0E10      	MOVLW       16
0x286C	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x286E	0x0E00      	MOVLW       0
0x2870	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x2872	0xF001EC0D  	CALL        _memcpy, 0
;FirmV_0_7_0.c,2086 :: 		memcpy(LCDLine2,Crypto[5],16);
0x2876	0x0EA3      	MOVLW       _LCDLine2
0x2878	0x0105      	MOVLB       5
0x287A	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x287C	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x287E	0x0106      	MOVLB       6
0x2880	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x2882	0x0E7E      	MOVLW       _crypto+80
0x2884	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x2886	0x0E00      	MOVLW       hi_addr(_crypto+80)
0x2888	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x288A	0x0E10      	MOVLW       16
0x288C	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x288E	0x0E00      	MOVLW       0
0x2890	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x2892	0xF001EC0D  	CALL        _memcpy, 0
;FirmV_0_7_0.c,2087 :: 		LCDUpdateFlag=1;
0x2896	0x0E01      	MOVLW       1
0x2898	0x0100      	MOVLB       0
0x289A	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,2088 :: 		}
L_About477:
;FirmV_0_7_0.c,2090 :: 		if(AboutCounter==3)
0x289C	0x518E      	MOVF        _AboutCounter, 0, 1
0x289E	0x0A03      	XORLW       3
0x28A0	0xE103      	BNZ         L_About478
;FirmV_0_7_0.c,2091 :: 		{State=100;}
0x28A2	0x0E64      	MOVLW       100
0x28A4	0x0101      	MOVLB       1
0x28A6	0x6F44      	MOVWF       _State, 1
L_About478:
;FirmV_0_7_0.c,2092 :: 		}
0x28A8	0x0012      	RETURN      0
; end of _About
_LCD_Init:
;COGLCDDriver.c,1 :: 		void LCD_Init(unsigned char lines)
;COGLCDDriver.c,3 :: 		I2C1_Start();
0x28AA	0xF009EC48  	CALL        _I2C1_Start, 0
;COGLCDDriver.c,4 :: 		I2C1_wr(0x7c);  //send slave address  with write
0x28AE	0x0E7C      	MOVLW       124
0x28B0	0x0103      	MOVLB       3
0x28B2	0x6FD9      	MOVWF       FARG_I2C1_Wr_data_, 1
0x28B4	0xDDA6      	RCALL       _I2C1_Wr
;COGLCDDriver.c,6 :: 		I2C1_wr(0x80);   // control byte
0x28B6	0x0E80      	MOVLW       128
0x28B8	0x0103      	MOVLB       3
0x28BA	0x6FD9      	MOVWF       FARG_I2C1_Wr_data_, 1
0x28BC	0xDDA2      	RCALL       _I2C1_Wr
;COGLCDDriver.c,7 :: 		if(lines==2)
0x28BE	0x0102      	MOVLB       2
0x28C0	0x51BF      	MOVF        FARG_LCD_Init_lines, 0, 1
0x28C2	0x0A02      	XORLW       2
0x28C4	0xE104      	BNZ         L_LCD_Init0
;COGLCDDriver.c,8 :: 		I2C1_wr(0x38);   //FUNCTION SET 8 bit,N=1 2-line display mode,5*7dot
0x28C6	0x0E38      	MOVLW       56
0x28C8	0x0103      	MOVLB       3
0x28CA	0x6FD9      	MOVWF       FARG_I2C1_Wr_data_, 1
0x28CC	0xDD9A      	RCALL       _I2C1_Wr
L_LCD_Init0:
;COGLCDDriver.c,9 :: 		if(lines==1)
0x28CE	0x0102      	MOVLB       2
0x28D0	0x51BF      	MOVF        FARG_LCD_Init_lines, 0, 1
0x28D2	0x0A01      	XORLW       1
0x28D4	0xE104      	BNZ         L_LCD_Init1
;COGLCDDriver.c,10 :: 		I2C1_wr(0x34);
0x28D6	0x0E34      	MOVLW       52
0x28D8	0x0103      	MOVLB       3
0x28DA	0x6FD9      	MOVWF       FARG_I2C1_Wr_data_, 1
0x28DC	0xDD92      	RCALL       _I2C1_Wr
L_LCD_Init1:
;COGLCDDriver.c,12 :: 		I2C1_wr(0x80);   // control byte
0x28DE	0x0E80      	MOVLW       128
0x28E0	0x0103      	MOVLB       3
0x28E2	0x6FD9      	MOVWF       FARG_I2C1_Wr_data_, 1
0x28E4	0xDD8E      	RCALL       _I2C1_Wr
;COGLCDDriver.c,13 :: 		if(lines==2)
0x28E6	0x0102      	MOVLB       2
0x28E8	0x51BF      	MOVF        FARG_LCD_Init_lines, 0, 1
0x28EA	0x0A02      	XORLW       2
0x28EC	0xE104      	BNZ         L_LCD_Init2
;COGLCDDriver.c,14 :: 		I2C1_wr(0x39);  //FUNCTION SET 8 bit,N=1 2-line display mode,5*7dot IS=1
0x28EE	0x0E39      	MOVLW       57
0x28F0	0x0103      	MOVLB       3
0x28F2	0x6FD9      	MOVWF       FARG_I2C1_Wr_data_, 1
0x28F4	0xDD86      	RCALL       _I2C1_Wr
L_LCD_Init2:
;COGLCDDriver.c,15 :: 		if(lines==1)
0x28F6	0x0102      	MOVLB       2
0x28F8	0x51BF      	MOVF        FARG_LCD_Init_lines, 0, 1
0x28FA	0x0A01      	XORLW       1
0x28FC	0xE104      	BNZ         L_LCD_Init3
;COGLCDDriver.c,16 :: 		I2C1_wr(0x35);
0x28FE	0x0E35      	MOVLW       53
0x2900	0x0103      	MOVLB       3
0x2902	0x6FD9      	MOVWF       FARG_I2C1_Wr_data_, 1
0x2904	0xDD7E      	RCALL       _I2C1_Wr
L_LCD_Init3:
;COGLCDDriver.c,18 :: 		I2C1_wr(0x80);   // control byte
0x2906	0x0E80      	MOVLW       128
0x2908	0x0103      	MOVLB       3
0x290A	0x6FD9      	MOVWF       FARG_I2C1_Wr_data_, 1
0x290C	0xDD7A      	RCALL       _I2C1_Wr
;COGLCDDriver.c,19 :: 		I2C1_wr(0x1c);   //Internal OSC frequency adjustment 183HZ    bias will be 1/4
0x290E	0x0E1C      	MOVLW       28
0x2910	0x0103      	MOVLB       3
0x2912	0x6FD9      	MOVWF       FARG_I2C1_Wr_data_, 1
0x2914	0xDD76      	RCALL       _I2C1_Wr
;COGLCDDriver.c,21 :: 		I2C1_wr(0x80);   // control byte
0x2916	0x0E80      	MOVLW       128
0x2918	0x0103      	MOVLB       3
0x291A	0x6FD9      	MOVWF       FARG_I2C1_Wr_data_, 1
0x291C	0xDD72      	RCALL       _I2C1_Wr
;COGLCDDriver.c,22 :: 		I2C1_wr(0x72);    //Contrast control  low byte
0x291E	0x0E72      	MOVLW       114
0x2920	0x0103      	MOVLB       3
0x2922	0x6FD9      	MOVWF       FARG_I2C1_Wr_data_, 1
0x2924	0xDD6E      	RCALL       _I2C1_Wr
;COGLCDDriver.c,24 :: 		I2C1_wr(0x80);     // control byte
0x2926	0x0E80      	MOVLW       128
0x2928	0x0103      	MOVLB       3
0x292A	0x6FD9      	MOVWF       FARG_I2C1_Wr_data_, 1
0x292C	0xDD6A      	RCALL       _I2C1_Wr
;COGLCDDriver.c,25 :: 		I2C1_wr(0x55);    //booster circuit is turn on.    /ICON display off. /Contrast control   high byte
0x292E	0x0E55      	MOVLW       85
0x2930	0x0103      	MOVLB       3
0x2932	0x6FD9      	MOVWF       FARG_I2C1_Wr_data_, 1
0x2934	0xDD66      	RCALL       _I2C1_Wr
;COGLCDDriver.c,27 :: 		I2C1_wr(0x80);    // control byte
0x2936	0x0E80      	MOVLW       128
0x2938	0x0103      	MOVLB       3
0x293A	0x6FD9      	MOVWF       FARG_I2C1_Wr_data_, 1
0x293C	0xDD62      	RCALL       _I2C1_Wr
;COGLCDDriver.c,28 :: 		I2C1_wr(0x6c);  //Follower control
0x293E	0x0E6C      	MOVLW       108
0x2940	0x0103      	MOVLB       3
0x2942	0x6FD9      	MOVWF       FARG_I2C1_Wr_data_, 1
0x2944	0xDD5E      	RCALL       _I2C1_Wr
;COGLCDDriver.c,30 :: 		I2C1_wr(0x80);   // control byte
0x2946	0x0E80      	MOVLW       128
0x2948	0x0103      	MOVLB       3
0x294A	0x6FD9      	MOVWF       FARG_I2C1_Wr_data_, 1
0x294C	0xDD5A      	RCALL       _I2C1_Wr
;COGLCDDriver.c,31 :: 		I2C1_wr(0x0c);    //DISPLAY ON
0x294E	0x0E0C      	MOVLW       12
0x2950	0x0103      	MOVLB       3
0x2952	0x6FD9      	MOVWF       FARG_I2C1_Wr_data_, 1
0x2954	0xDD56      	RCALL       _I2C1_Wr
;COGLCDDriver.c,33 :: 		I2C1_wr(0x80);   // control byte
0x2956	0x0E80      	MOVLW       128
0x2958	0x0103      	MOVLB       3
0x295A	0x6FD9      	MOVWF       FARG_I2C1_Wr_data_, 1
0x295C	0xDD52      	RCALL       _I2C1_Wr
;COGLCDDriver.c,34 :: 		I2C1_wr(0x01);   //CLEAR DISPLAY
0x295E	0x0E01      	MOVLW       1
0x2960	0x0103      	MOVLB       3
0x2962	0x6FD9      	MOVWF       FARG_I2C1_Wr_data_, 1
0x2964	0xDD4E      	RCALL       _I2C1_Wr
;COGLCDDriver.c,36 :: 		I2C1_wr(0x80);   // control byte
0x2966	0x0E80      	MOVLW       128
0x2968	0x0103      	MOVLB       3
0x296A	0x6FD9      	MOVWF       FARG_I2C1_Wr_data_, 1
0x296C	0xDD4A      	RCALL       _I2C1_Wr
;COGLCDDriver.c,37 :: 		I2C1_wr(0x06);   //ENTRY MODE SET  CURSOR MOVES TO RIGHT
0x296E	0x0E06      	MOVLW       6
0x2970	0x0103      	MOVLB       3
0x2972	0x6FD9      	MOVWF       FARG_I2C1_Wr_data_, 1
0x2974	0xDD46      	RCALL       _I2C1_Wr
;COGLCDDriver.c,39 :: 		I2C1_wr(0x80);   // control byte
0x2976	0x0E80      	MOVLW       128
0x2978	0x0103      	MOVLB       3
0x297A	0x6FD9      	MOVWF       FARG_I2C1_Wr_data_, 1
0x297C	0xDD42      	RCALL       _I2C1_Wr
;COGLCDDriver.c,40 :: 		I2C1_wr(0x02);
0x297E	0x0E02      	MOVLW       2
0x2980	0x0103      	MOVLB       3
0x2982	0x6FD9      	MOVWF       FARG_I2C1_Wr_data_, 1
0x2984	0xDD3E      	RCALL       _I2C1_Wr
;COGLCDDriver.c,42 :: 		I2C1_Stop();
0x2986	0xDD4E      	RCALL       _I2C1_Stop
;COGLCDDriver.c,44 :: 		}
0x2988	0x0012      	RETURN      0
; end of _LCD_Init
_I2C1_Init:
;__Lib_I2C_c34.c,4 :: 		
;__Lib_I2C_c34.c,11 :: 		
0x298A	0x9894      	BCF         TRISC4_bit, 4 
;__Lib_I2C_c34.c,12 :: 		
0x298C	0x9694      	BCF         TRISC3_bit, 3 
;__Lib_I2C_c34.c,15 :: 		
0x298E	0x988B      	BCF         LATC4_bit, 4 
;__Lib_I2C_c34.c,16 :: 		
0x2990	0x968B      	BCF         LATC3_bit, 3 
;__Lib_I2C_c34.c,19 :: 		
0x2992	0x8894      	BSF         TRISC4_bit, 4 
;__Lib_I2C_c34.c,20 :: 		
0x2994	0x8694      	BSF         TRISC3_bit, 3 
;__Lib_I2C_c34.c,22 :: 		
0x2996	0x9EC7      	BCF         SSPSTAT, 7 
;__Lib_I2C_c34.c,23 :: 		
0x2998	0x9CC7      	BCF         SSPSTAT, 6 
;__Lib_I2C_c34.c,24 :: 		
0x299A	0x0E38      	MOVLW       56
0x299C	0x6EC6      	MOVWF       SSPCON1 
;__Lib_I2C_c34.c,27 :: 		
L_end_I2C1_Init:
0x299E	0x0012      	RETURN      0
; end of _I2C1_Init
_Menu2:
;FirmV_0_7_0.c,2125 :: 		void Menu2()
;FirmV_0_7_0.c,2128 :: 		LCDFlash=1;
0x29A0	0x0E01      	MOVLW       1
0x29A2	0x6E1D      	MOVWF       _LCDFlash 
;FirmV_0_7_0.c,2130 :: 		if(Events.Keys.b1==1)
0x29A4	0x0102      	MOVLB       2
0x29A6	0xA39A      	BTFSS       _Events, 1, 1
0x29A8	0xD01C      	BRA         L_Menu2487
;FirmV_0_7_0.c,2132 :: 		LCDFlash=0;LCDFlashFlag=0;State=101;;Menu0();
0x29AA	0x6A1D      	CLRF        _LCDFlash 
0x29AC	0x6A1B      	CLRF        _LCDFlashFlag 
0x29AE	0x0E65      	MOVLW       101
0x29B0	0x0101      	MOVLB       1
0x29B2	0x6F44      	MOVWF       _State, 1
0x29B4	0xF00BECB2  	CALL        _Menu0, 0
;FirmV_0_7_0.c,2133 :: 		if(MenuPointer==0)
0x29B8	0x501E      	MOVF        _MenuPointer, 0 
0x29BA	0x0A00      	XORLW       0
0x29BC	0xE112      	BNZ         L_Menu2488
;FirmV_0_7_0.c,2135 :: 		LearnPhase=0;
0x29BE	0x0102      	MOVLB       2
0x29C0	0x6B97      	CLRF        _LearnPhase, 1
;FirmV_0_7_0.c,2136 :: 		if(LearningMode==0)
0x29C2	0x501F      	MOVF        _LearningMode, 0 
0x29C4	0x0A00      	XORLW       0
0x29C6	0xE105      	BNZ         L_Menu2489
;FirmV_0_7_0.c,2137 :: 		{State=200;LongBuzzFlag=1;}
0x29C8	0x0EC8      	MOVLW       200
0x29CA	0x0101      	MOVLB       1
0x29CC	0x6F44      	MOVWF       _State, 1
0x29CE	0x0E01      	MOVLW       1
0x29D0	0x6E1C      	MOVWF       _LongBuzzFlag 
L_Menu2489:
;FirmV_0_7_0.c,2138 :: 		if(LearningMode==1)
0x29D2	0x501F      	MOVF        _LearningMode, 0 
0x29D4	0x0A01      	XORLW       1
0x29D6	0xE105      	BNZ         L_Menu2490
;FirmV_0_7_0.c,2139 :: 		{State=201;LongBuzzFlag=1;}
0x29D8	0x0101      	MOVLB       1
0x29DA	0x0EC9      	MOVLW       201
0x29DC	0x6F44      	MOVWF       _State, 1
0x29DE	0x0E01      	MOVLW       1
0x29E0	0x6E1C      	MOVWF       _LongBuzzFlag 
L_Menu2490:
;FirmV_0_7_0.c,2140 :: 		}
L_Menu2488:
;FirmV_0_7_0.c,2141 :: 		}
L_Menu2487:
;FirmV_0_7_0.c,2144 :: 		if(MenuPointer==0)
0x29E2	0x501E      	MOVF        _MenuPointer, 0 
0x29E4	0x0A00      	XORLW       0
0x29E6	0xE116      	BNZ         L_Menu2491
;FirmV_0_7_0.c,2145 :: 		{ if((Events.Keys.b0==1)&&(LearningMode>0))
0x29E8	0x0102      	MOVLB       2
0x29EA	0xA19A      	BTFSS       _Events, 0, 1
0x29EC	0xD008      	BRA         L_Menu2494
0x29EE	0x501F      	MOVF        _LearningMode, 0 
0x29F0	0x0800      	SUBLW       0
0x29F2	0xE205      	BC          L_Menu2494
L__Menu2918:
;FirmV_0_7_0.c,2146 :: 		{LearningMode=LearningMode-1;Menu0();State=102;}
0x29F4	0x061F      	DECF        _LearningMode, 1 
0x29F6	0xF00BECB2  	CALL        _Menu0, 0
0x29FA	0x0E66      	MOVLW       102
0x29FC	0x6F44      	MOVWF       _State, 1
L_Menu2494:
;FirmV_0_7_0.c,2147 :: 		if((Events.Keys.b2==1)&&(LearningMode<1))
0x29FE	0x0102      	MOVLB       2
0x2A00	0xA59A      	BTFSS       _Events, 2, 1
0x2A02	0xD008      	BRA         L_Menu2497
0x2A04	0x0E01      	MOVLW       1
0x2A06	0x5C1F      	SUBWF       _LearningMode, 0 
0x2A08	0xE205      	BC          L_Menu2497
L__Menu2917:
;FirmV_0_7_0.c,2148 :: 		{LearningMode=LearningMode+1;Menu0();State=102;}
0x2A0A	0x2A1F      	INCF        _LearningMode, 1 
0x2A0C	0xF00BECB2  	CALL        _Menu0, 0
0x2A10	0x0E66      	MOVLW       102
0x2A12	0x6F44      	MOVWF       _State, 1
L_Menu2497:
;FirmV_0_7_0.c,2149 :: 		}
L_Menu2491:
;FirmV_0_7_0.c,2153 :: 		if(MenuPointer==1)
0x2A14	0x501E      	MOVF        _MenuPointer, 0 
0x2A16	0x0A01      	XORLW       1
0x2A18	0xE116      	BNZ         L_Menu2498
;FirmV_0_7_0.c,2154 :: 		{ if((Events.Keys.b0==1)&&(Door1OpenTime>0))
0x2A1A	0x0102      	MOVLB       2
0x2A1C	0xA19A      	BTFSS       _Events, 0, 1
0x2A1E	0xD008      	BRA         L_Menu2501
0x2A20	0x5134      	MOVF        _Door1OpenTime, 0, 1
0x2A22	0x0800      	SUBLW       0
0x2A24	0xE205      	BC          L_Menu2501
L__Menu2916:
;FirmV_0_7_0.c,2155 :: 		{Door1OpenTime=Door1OpenTime-1;Menu0();State=102;}
0x2A26	0x0734      	DECF        _Door1OpenTime, 1, 1
0x2A28	0xF00BECB2  	CALL        _Menu0, 0
0x2A2C	0x0E66      	MOVLW       102
0x2A2E	0x6F44      	MOVWF       _State, 1
L_Menu2501:
;FirmV_0_7_0.c,2156 :: 		if((Events.Keys.b2==1)&&(Door1OpenTime<255))
0x2A30	0x0102      	MOVLB       2
0x2A32	0xA59A      	BTFSS       _Events, 2, 1
0x2A34	0xD008      	BRA         L_Menu2504
0x2A36	0x0EFF      	MOVLW       255
0x2A38	0x5D34      	SUBWF       _Door1OpenTime, 0, 1
0x2A3A	0xE205      	BC          L_Menu2504
L__Menu2915:
;FirmV_0_7_0.c,2157 :: 		{Door1OpenTime=Door1OpenTime+1;Menu0();State=102;}
0x2A3C	0x2B34      	INCF        _Door1OpenTime, 1, 1
0x2A3E	0xF00BECB2  	CALL        _Menu0, 0
0x2A42	0x0E66      	MOVLW       102
0x2A44	0x6F44      	MOVWF       _State, 1
L_Menu2504:
;FirmV_0_7_0.c,2158 :: 		}
L_Menu2498:
;FirmV_0_7_0.c,2162 :: 		if(MenuPointer==2)
0x2A46	0x501E      	MOVF        _MenuPointer, 0 
0x2A48	0x0A02      	XORLW       2
0x2A4A	0xE116      	BNZ         L_Menu2505
;FirmV_0_7_0.c,2163 :: 		{ if((Events.Keys.b0==1)&&(Door2OpenTime>0))
0x2A4C	0x0102      	MOVLB       2
0x2A4E	0xA19A      	BTFSS       _Events, 0, 1
0x2A50	0xD008      	BRA         L_Menu2508
0x2A52	0x5198      	MOVF        _Door2OpenTime, 0, 1
0x2A54	0x0800      	SUBLW       0
0x2A56	0xE205      	BC          L_Menu2508
L__Menu2914:
;FirmV_0_7_0.c,2164 :: 		{Door2OpenTime=Door2OpenTime-1;Menu0();State=102;}
0x2A58	0x0798      	DECF        _Door2OpenTime, 1, 1
0x2A5A	0xF00BECB2  	CALL        _Menu0, 0
0x2A5E	0x0E66      	MOVLW       102
0x2A60	0x6F44      	MOVWF       _State, 1
L_Menu2508:
;FirmV_0_7_0.c,2165 :: 		if((Events.Keys.b2==1)&&(Door2OpenTime<255))
0x2A62	0x0102      	MOVLB       2
0x2A64	0xA59A      	BTFSS       _Events, 2, 1
0x2A66	0xD008      	BRA         L_Menu2511
0x2A68	0x0EFF      	MOVLW       255
0x2A6A	0x5D98      	SUBWF       _Door2OpenTime, 0, 1
0x2A6C	0xE205      	BC          L_Menu2511
L__Menu2913:
;FirmV_0_7_0.c,2166 :: 		{Door2OpenTime=Door2OpenTime+1;Menu0();State=102;}
0x2A6E	0x2B98      	INCF        _Door2OpenTime, 1, 1
0x2A70	0xF00BECB2  	CALL        _Menu0, 0
0x2A74	0x0E66      	MOVLW       102
0x2A76	0x6F44      	MOVWF       _State, 1
L_Menu2511:
;FirmV_0_7_0.c,2167 :: 		}
L_Menu2505:
;FirmV_0_7_0.c,2170 :: 		if(MenuPointer==3)
0x2A78	0x501E      	MOVF        _MenuPointer, 0 
0x2A7A	0x0A03      	XORLW       3
0x2A7C	0xE116      	BNZ         L_Menu2512
;FirmV_0_7_0.c,2171 :: 		{ if((Events.Keys.b0==1)&&(Door1CloseTime>0))
0x2A7E	0x0102      	MOVLB       2
0x2A80	0xA19A      	BTFSS       _Events, 0, 1
0x2A82	0xD008      	BRA         L_Menu2515
0x2A84	0x5135      	MOVF        _Door1CloseTime, 0, 1
0x2A86	0x0800      	SUBLW       0
0x2A88	0xE205      	BC          L_Menu2515
L__Menu2912:
;FirmV_0_7_0.c,2172 :: 		{Door1CloseTime=Door1CloseTime-1;Menu0();State=102;}
0x2A8A	0x0735      	DECF        _Door1CloseTime, 1, 1
0x2A8C	0xF00BECB2  	CALL        _Menu0, 0
0x2A90	0x0E66      	MOVLW       102
0x2A92	0x6F44      	MOVWF       _State, 1
L_Menu2515:
;FirmV_0_7_0.c,2173 :: 		if((Events.Keys.b2==1)&&(Door1CloseTime<255))
0x2A94	0x0102      	MOVLB       2
0x2A96	0xA59A      	BTFSS       _Events, 2, 1
0x2A98	0xD008      	BRA         L_Menu2518
0x2A9A	0x0EFF      	MOVLW       255
0x2A9C	0x5D35      	SUBWF       _Door1CloseTime, 0, 1
0x2A9E	0xE205      	BC          L_Menu2518
L__Menu2911:
;FirmV_0_7_0.c,2174 :: 		{Door1CloseTime=Door1CloseTime+1;Menu0();State=102;}
0x2AA0	0x2B35      	INCF        _Door1CloseTime, 1, 1
0x2AA2	0xF00BECB2  	CALL        _Menu0, 0
0x2AA6	0x0E66      	MOVLW       102
0x2AA8	0x6F44      	MOVWF       _State, 1
L_Menu2518:
;FirmV_0_7_0.c,2175 :: 		}
L_Menu2512:
;FirmV_0_7_0.c,2178 :: 		if(MenuPointer==4)
0x2AAA	0x501E      	MOVF        _MenuPointer, 0 
0x2AAC	0x0A04      	XORLW       4
0x2AAE	0xE118      	BNZ         L_Menu2519
;FirmV_0_7_0.c,2179 :: 		{ if((Events.Keys.b0==1)&&(Door2CloseTime>0))
0x2AB0	0x0102      	MOVLB       2
0x2AB2	0xA19A      	BTFSS       _Events, 0, 1
0x2AB4	0xD009      	BRA         L_Menu2522
0x2AB6	0x0101      	MOVLB       1
0x2AB8	0x51A7      	MOVF        _Door2CloseTime, 0, 1
0x2ABA	0x0800      	SUBLW       0
0x2ABC	0xE205      	BC          L_Menu2522
L__Menu2910:
;FirmV_0_7_0.c,2180 :: 		{Door2CloseTime=Door2CloseTime-1;Menu0();State=102;}
0x2ABE	0x07A7      	DECF        _Door2CloseTime, 1, 1
0x2AC0	0xF00BECB2  	CALL        _Menu0, 0
0x2AC4	0x0E66      	MOVLW       102
0x2AC6	0x6F44      	MOVWF       _State, 1
L_Menu2522:
;FirmV_0_7_0.c,2181 :: 		if((Events.Keys.b2==1)&&(Door2CloseTime<255))
0x2AC8	0x0102      	MOVLB       2
0x2ACA	0xA59A      	BTFSS       _Events, 2, 1
0x2ACC	0xD009      	BRA         L_Menu2525
0x2ACE	0x0EFF      	MOVLW       255
0x2AD0	0x0101      	MOVLB       1
0x2AD2	0x5DA7      	SUBWF       _Door2CloseTime, 0, 1
0x2AD4	0xE205      	BC          L_Menu2525
L__Menu2909:
;FirmV_0_7_0.c,2182 :: 		{Door2CloseTime=Door2CloseTime+1;Menu0();State=102;}
0x2AD6	0x2BA7      	INCF        _Door2CloseTime, 1, 1
0x2AD8	0xF00BECB2  	CALL        _Menu0, 0
0x2ADC	0x0E66      	MOVLW       102
0x2ADE	0x6F44      	MOVWF       _State, 1
L_Menu2525:
;FirmV_0_7_0.c,2183 :: 		}
L_Menu2519:
;FirmV_0_7_0.c,2187 :: 		if(MenuPointer==5)
0x2AE0	0x501E      	MOVF        _MenuPointer, 0 
0x2AE2	0x0A05      	XORLW       5
0x2AE4	0xE118      	BNZ         L_Menu2526
;FirmV_0_7_0.c,2188 :: 		{ if((Events.Keys.b0==1)&&(OpenSoftStartTime>0))
0x2AE6	0x0102      	MOVLB       2
0x2AE8	0xA19A      	BTFSS       _Events, 0, 1
0x2AEA	0xD009      	BRA         L_Menu2529
0x2AEC	0x0101      	MOVLB       1
0x2AEE	0x51A4      	MOVF        _OpenSoftStartTime, 0, 1
0x2AF0	0x0800      	SUBLW       0
0x2AF2	0xE205      	BC          L_Menu2529
L__Menu2908:
;FirmV_0_7_0.c,2189 :: 		{OpenSoftStartTime=OpenSoftStartTime-1;Menu0();State=102;}
0x2AF4	0x07A4      	DECF        _OpenSoftStartTime, 1, 1
0x2AF6	0xF00BECB2  	CALL        _Menu0, 0
0x2AFA	0x0E66      	MOVLW       102
0x2AFC	0x6F44      	MOVWF       _State, 1
L_Menu2529:
;FirmV_0_7_0.c,2190 :: 		if((Events.Keys.b2==1)&&(OpenSoftStartTime<255))
0x2AFE	0x0102      	MOVLB       2
0x2B00	0xA59A      	BTFSS       _Events, 2, 1
0x2B02	0xD009      	BRA         L_Menu2532
0x2B04	0x0EFF      	MOVLW       255
0x2B06	0x0101      	MOVLB       1
0x2B08	0x5DA4      	SUBWF       _OpenSoftStartTime, 0, 1
0x2B0A	0xE205      	BC          L_Menu2532
L__Menu2907:
;FirmV_0_7_0.c,2191 :: 		{OpenSoftStartTime=OpenSoftStartTime+1;Menu0();State=102;}
0x2B0C	0x2BA4      	INCF        _OpenSoftStartTime, 1, 1
0x2B0E	0xF00BECB2  	CALL        _Menu0, 0
0x2B12	0x0E66      	MOVLW       102
0x2B14	0x6F44      	MOVWF       _State, 1
L_Menu2532:
;FirmV_0_7_0.c,2192 :: 		}
L_Menu2526:
;FirmV_0_7_0.c,2195 :: 		if(MenuPointer==6)
0x2B16	0x501E      	MOVF        _MenuPointer, 0 
0x2B18	0x0A06      	XORLW       6
0x2B1A	0xE118      	BNZ         L_Menu2533
;FirmV_0_7_0.c,2196 :: 		{ if((Events.Keys.b0==1)&&(OpenSoftStopTime>0))
0x2B1C	0x0102      	MOVLB       2
0x2B1E	0xA19A      	BTFSS       _Events, 0, 1
0x2B20	0xD009      	BRA         L_Menu2536
0x2B22	0x0101      	MOVLB       1
0x2B24	0x51A5      	MOVF        _OpenSoftStopTime, 0, 1
0x2B26	0x0800      	SUBLW       0
0x2B28	0xE205      	BC          L_Menu2536
L__Menu2906:
;FirmV_0_7_0.c,2197 :: 		{OpenSoftStopTime=OpenSoftStopTime-1;Menu0();State=102;}
0x2B2A	0x07A5      	DECF        _OpenSoftStopTime, 1, 1
0x2B2C	0xF00BECB2  	CALL        _Menu0, 0
0x2B30	0x0E66      	MOVLW       102
0x2B32	0x6F44      	MOVWF       _State, 1
L_Menu2536:
;FirmV_0_7_0.c,2198 :: 		if((Events.Keys.b2==1)&&(OpenSoftStopTime<255))
0x2B34	0x0102      	MOVLB       2
0x2B36	0xA59A      	BTFSS       _Events, 2, 1
0x2B38	0xD009      	BRA         L_Menu2539
0x2B3A	0x0EFF      	MOVLW       255
0x2B3C	0x0101      	MOVLB       1
0x2B3E	0x5DA5      	SUBWF       _OpenSoftStopTime, 0, 1
0x2B40	0xE205      	BC          L_Menu2539
L__Menu2905:
;FirmV_0_7_0.c,2199 :: 		{OpenSoftStopTime=OpenSoftStopTime+1;Menu0();State=102;}
0x2B42	0x2BA5      	INCF        _OpenSoftStopTime, 1, 1
0x2B44	0xF00BECB2  	CALL        _Menu0, 0
0x2B48	0x0E66      	MOVLW       102
0x2B4A	0x6F44      	MOVWF       _State, 1
L_Menu2539:
;FirmV_0_7_0.c,2200 :: 		}
L_Menu2533:
;FirmV_0_7_0.c,2203 :: 		if(MenuPointer==7)
0x2B4C	0x501E      	MOVF        _MenuPointer, 0 
0x2B4E	0x0A07      	XORLW       7
0x2B50	0xE118      	BNZ         L_Menu2540
;FirmV_0_7_0.c,2204 :: 		{ if((Events.Keys.b0==1)&&(CloseSoftStartTime>0))
0x2B52	0x0102      	MOVLB       2
0x2B54	0xA19A      	BTFSS       _Events, 0, 1
0x2B56	0xD009      	BRA         L_Menu2543
0x2B58	0x0101      	MOVLB       1
0x2B5A	0x51A6      	MOVF        _CloseSoftStartTime, 0, 1
0x2B5C	0x0800      	SUBLW       0
0x2B5E	0xE205      	BC          L_Menu2543
L__Menu2904:
;FirmV_0_7_0.c,2205 :: 		{CloseSoftStartTime=CloseSoftStartTime-1;Menu0();State=102;}
0x2B60	0x07A6      	DECF        _CloseSoftStartTime, 1, 1
0x2B62	0xF00BECB2  	CALL        _Menu0, 0
0x2B66	0x0E66      	MOVLW       102
0x2B68	0x6F44      	MOVWF       _State, 1
L_Menu2543:
;FirmV_0_7_0.c,2206 :: 		if((Events.Keys.b2==1)&&(CloseSoftStartTime<255))
0x2B6A	0x0102      	MOVLB       2
0x2B6C	0xA59A      	BTFSS       _Events, 2, 1
0x2B6E	0xD009      	BRA         L_Menu2546
0x2B70	0x0EFF      	MOVLW       255
0x2B72	0x0101      	MOVLB       1
0x2B74	0x5DA6      	SUBWF       _CloseSoftStartTime, 0, 1
0x2B76	0xE205      	BC          L_Menu2546
L__Menu2903:
;FirmV_0_7_0.c,2207 :: 		{CloseSoftStartTime=CloseSoftStartTime+1;Menu0();State=102;}
0x2B78	0x2BA6      	INCF        _CloseSoftStartTime, 1, 1
0x2B7A	0xF00BECB2  	CALL        _Menu0, 0
0x2B7E	0x0E66      	MOVLW       102
0x2B80	0x6F44      	MOVWF       _State, 1
L_Menu2546:
;FirmV_0_7_0.c,2208 :: 		}
L_Menu2540:
;FirmV_0_7_0.c,2211 :: 		if(MenuPointer==8)
0x2B82	0x501E      	MOVF        _MenuPointer, 0 
0x2B84	0x0A08      	XORLW       8
0x2B86	0xE116      	BNZ         L_Menu2547
;FirmV_0_7_0.c,2212 :: 		{ if((Events.Keys.b0==1)&&(CloseSoftStopTime>0))
0x2B88	0x0102      	MOVLB       2
0x2B8A	0xA19A      	BTFSS       _Events, 0, 1
0x2B8C	0xD008      	BRA         L_Menu2550
0x2B8E	0x5142      	MOVF        _CloseSoftStopTime, 0, 1
0x2B90	0x0800      	SUBLW       0
0x2B92	0xE205      	BC          L_Menu2550
L__Menu2902:
;FirmV_0_7_0.c,2213 :: 		{CloseSoftStopTime=CloseSoftStopTime-1;Menu0();State=102;}
0x2B94	0x0742      	DECF        _CloseSoftStopTime, 1, 1
0x2B96	0xF00BECB2  	CALL        _Menu0, 0
0x2B9A	0x0E66      	MOVLW       102
0x2B9C	0x6F44      	MOVWF       _State, 1
L_Menu2550:
;FirmV_0_7_0.c,2214 :: 		if((Events.Keys.b2==1)&&(CloseSoftStopTime<255))
0x2B9E	0x0102      	MOVLB       2
0x2BA0	0xA59A      	BTFSS       _Events, 2, 1
0x2BA2	0xD008      	BRA         L_Menu2553
0x2BA4	0x0EFF      	MOVLW       255
0x2BA6	0x5D42      	SUBWF       _CloseSoftStopTime, 0, 1
0x2BA8	0xE205      	BC          L_Menu2553
L__Menu2901:
;FirmV_0_7_0.c,2215 :: 		{CloseSoftStopTime=CloseSoftStopTime+1;Menu0();State=102;}
0x2BAA	0x2B42      	INCF        _CloseSoftStopTime, 1, 1
0x2BAC	0xF00BECB2  	CALL        _Menu0, 0
0x2BB0	0x0E66      	MOVLW       102
0x2BB2	0x6F44      	MOVWF       _State, 1
L_Menu2553:
;FirmV_0_7_0.c,2216 :: 		}
L_Menu2547:
;FirmV_0_7_0.c,2220 :: 		if(MenuPointer==9)
0x2BB4	0x501E      	MOVF        _MenuPointer, 0 
0x2BB6	0x0A09      	XORLW       9
0x2BB8	0xE116      	BNZ         L_Menu2554
;FirmV_0_7_0.c,2221 :: 		{ if((Events.Keys.b0==1)&&(OverloadSens1>1))
0x2BBA	0x0102      	MOVLB       2
0x2BBC	0xA19A      	BTFSS       _Events, 0, 1
0x2BBE	0xD008      	BRA         L_Menu2557
0x2BC0	0x5020      	MOVF        _OverloadSens1, 0 
0x2BC2	0x0801      	SUBLW       1
0x2BC4	0xE205      	BC          L_Menu2557
L__Menu2900:
;FirmV_0_7_0.c,2222 :: 		{OverloadSens1=OverloadSens1-1;Menu0();State=102;}
0x2BC6	0x0620      	DECF        _OverloadSens1, 1 
0x2BC8	0xF00BECB2  	CALL        _Menu0, 0
0x2BCC	0x0E66      	MOVLW       102
0x2BCE	0x6F44      	MOVWF       _State, 1
L_Menu2557:
;FirmV_0_7_0.c,2223 :: 		if((Events.Keys.b2==1)&&(OverloadSens1<15))
0x2BD0	0x0102      	MOVLB       2
0x2BD2	0xA59A      	BTFSS       _Events, 2, 1
0x2BD4	0xD008      	BRA         L_Menu2560
0x2BD6	0x0E0F      	MOVLW       15
0x2BD8	0x5C20      	SUBWF       _OverloadSens1, 0 
0x2BDA	0xE205      	BC          L_Menu2560
L__Menu2899:
;FirmV_0_7_0.c,2224 :: 		{OverloadSens1=OverloadSens1+1;Menu0();State=102;}
0x2BDC	0x2A20      	INCF        _OverloadSens1, 1 
0x2BDE	0xF00BECB2  	CALL        _Menu0, 0
0x2BE2	0x0E66      	MOVLW       102
0x2BE4	0x6F44      	MOVWF       _State, 1
L_Menu2560:
;FirmV_0_7_0.c,2225 :: 		}
L_Menu2554:
;FirmV_0_7_0.c,2229 :: 		if(MenuPointer==10)
0x2BE6	0x501E      	MOVF        _MenuPointer, 0 
0x2BE8	0x0A0A      	XORLW       10
0x2BEA	0xE116      	BNZ         L_Menu2561
;FirmV_0_7_0.c,2230 :: 		{ if((Events.Keys.b0==1)&&(OverloadSens2>1))
0x2BEC	0x0102      	MOVLB       2
0x2BEE	0xA19A      	BTFSS       _Events, 0, 1
0x2BF0	0xD008      	BRA         L_Menu2564
0x2BF2	0x501A      	MOVF        _OverloadSens2, 0 
0x2BF4	0x0801      	SUBLW       1
0x2BF6	0xE205      	BC          L_Menu2564
L__Menu2898:
;FirmV_0_7_0.c,2231 :: 		{OverloadSens2=OverloadSens2-1;Menu0();State=102;}
0x2BF8	0x061A      	DECF        _OverloadSens2, 1 
0x2BFA	0xF00BECB2  	CALL        _Menu0, 0
0x2BFE	0x0E66      	MOVLW       102
0x2C00	0x6F44      	MOVWF       _State, 1
L_Menu2564:
;FirmV_0_7_0.c,2232 :: 		if((Events.Keys.b2==1)&&(OverloadSens2<15))
0x2C02	0x0102      	MOVLB       2
0x2C04	0xA59A      	BTFSS       _Events, 2, 1
0x2C06	0xD008      	BRA         L_Menu2567
0x2C08	0x0E0F      	MOVLW       15
0x2C0A	0x5C1A      	SUBWF       _OverloadSens2, 0 
0x2C0C	0xE205      	BC          L_Menu2567
L__Menu2897:
;FirmV_0_7_0.c,2233 :: 		{OverloadSens2=OverloadSens2+1;Menu0();State=102;}
0x2C0E	0x2A1A      	INCF        _OverloadSens2, 1 
0x2C10	0xF00BECB2  	CALL        _Menu0, 0
0x2C14	0x0E66      	MOVLW       102
0x2C16	0x6F44      	MOVWF       _State, 1
L_Menu2567:
;FirmV_0_7_0.c,2234 :: 		}
L_Menu2561:
;FirmV_0_7_0.c,2237 :: 		if(MenuPointer==11)
0x2C18	0x501E      	MOVF        _MenuPointer, 0 
0x2C1A	0x0A0B      	XORLW       11
0x2C1C	0xE118      	BNZ         L_Menu2568
;FirmV_0_7_0.c,2238 :: 		{ if((Events.Keys.b0==1)&&(OverloadTime1>0))
0x2C1E	0x0102      	MOVLB       2
0x2C20	0xA19A      	BTFSS       _Events, 0, 1
0x2C22	0xD009      	BRA         L_Menu2571
0x2C24	0x0101      	MOVLB       1
0x2C26	0x5190      	MOVF        _OverloadTime1, 0, 1
0x2C28	0x0800      	SUBLW       0
0x2C2A	0xE205      	BC          L_Menu2571
L__Menu2896:
;FirmV_0_7_0.c,2239 :: 		{OverloadTime1=OverloadTime1-1;Menu0();State=102;}
0x2C2C	0x0790      	DECF        _OverloadTime1, 1, 1
0x2C2E	0xF00BECB2  	CALL        _Menu0, 0
0x2C32	0x0E66      	MOVLW       102
0x2C34	0x6F44      	MOVWF       _State, 1
L_Menu2571:
;FirmV_0_7_0.c,2240 :: 		if((Events.Keys.b2==1)&&(OverloadTime1<10))
0x2C36	0x0102      	MOVLB       2
0x2C38	0xA59A      	BTFSS       _Events, 2, 1
0x2C3A	0xD009      	BRA         L_Menu2574
0x2C3C	0x0E0A      	MOVLW       10
0x2C3E	0x0101      	MOVLB       1
0x2C40	0x5D90      	SUBWF       _OverloadTime1, 0, 1
0x2C42	0xE205      	BC          L_Menu2574
L__Menu2895:
;FirmV_0_7_0.c,2241 :: 		{OverloadTime1=OverloadTime1+1;Menu0();State=102;}
0x2C44	0x2B90      	INCF        _OverloadTime1, 1, 1
0x2C46	0xF00BECB2  	CALL        _Menu0, 0
0x2C4A	0x0E66      	MOVLW       102
0x2C4C	0x6F44      	MOVWF       _State, 1
L_Menu2574:
;FirmV_0_7_0.c,2242 :: 		}
L_Menu2568:
;FirmV_0_7_0.c,2246 :: 		if(MenuPointer==12)
0x2C4E	0x501E      	MOVF        _MenuPointer, 0 
0x2C50	0x0A0C      	XORLW       12
0x2C52	0xE118      	BNZ         L_Menu2575
;FirmV_0_7_0.c,2247 :: 		{ if((Events.Keys.b0==1)&&(OverloadTime2>0))
0x2C54	0x0102      	MOVLB       2
0x2C56	0xA19A      	BTFSS       _Events, 0, 1
0x2C58	0xD009      	BRA         L_Menu2578
0x2C5A	0x0101      	MOVLB       1
0x2C5C	0x5191      	MOVF        _OverloadTime2, 0, 1
0x2C5E	0x0800      	SUBLW       0
0x2C60	0xE205      	BC          L_Menu2578
L__Menu2894:
;FirmV_0_7_0.c,2248 :: 		{OverloadTime2=OverloadTime2-1;Menu0();State=102;}
0x2C62	0x0791      	DECF        _OverloadTime2, 1, 1
0x2C64	0xF00BECB2  	CALL        _Menu0, 0
0x2C68	0x0E66      	MOVLW       102
0x2C6A	0x6F44      	MOVWF       _State, 1
L_Menu2578:
;FirmV_0_7_0.c,2249 :: 		if((Events.Keys.b2==1)&&(OverloadTime2<10))
0x2C6C	0x0102      	MOVLB       2
0x2C6E	0xA59A      	BTFSS       _Events, 2, 1
0x2C70	0xD009      	BRA         L_Menu2581
0x2C72	0x0E0A      	MOVLW       10
0x2C74	0x0101      	MOVLB       1
0x2C76	0x5D91      	SUBWF       _OverloadTime2, 0, 1
0x2C78	0xE205      	BC          L_Menu2581
L__Menu2893:
;FirmV_0_7_0.c,2250 :: 		{OverloadTime2=OverloadTime2+1;Menu0();State=102;}
0x2C7A	0x2B91      	INCF        _OverloadTime2, 1, 1
0x2C7C	0xF00BECB2  	CALL        _Menu0, 0
0x2C80	0x0E66      	MOVLW       102
0x2C82	0x6F44      	MOVWF       _State, 1
L_Menu2581:
;FirmV_0_7_0.c,2251 :: 		}
L_Menu2575:
;FirmV_0_7_0.c,2254 :: 		if(MenuPointer==13)
0x2C84	0x501E      	MOVF        _MenuPointer, 0 
0x2C86	0x0A0D      	XORLW       13
0x2C88	0xE116      	BNZ         L_Menu2582
;FirmV_0_7_0.c,2255 :: 		{ if((Events.Keys.b0==1)&&(ActionTimeDiff>0))
0x2C8A	0x0102      	MOVLB       2
0x2C8C	0xA19A      	BTFSS       _Events, 0, 1
0x2C8E	0xD008      	BRA         L_Menu2585
0x2C90	0x5147      	MOVF        _ActionTimeDiff, 0, 1
0x2C92	0x0800      	SUBLW       0
0x2C94	0xE205      	BC          L_Menu2585
L__Menu2892:
;FirmV_0_7_0.c,2256 :: 		{ActionTimeDiff=ActionTimeDiff-1;Menu0();State=102;}
0x2C96	0x0747      	DECF        _ActionTimeDiff, 1, 1
0x2C98	0xF00BECB2  	CALL        _Menu0, 0
0x2C9C	0x0E66      	MOVLW       102
0x2C9E	0x6F44      	MOVWF       _State, 1
L_Menu2585:
;FirmV_0_7_0.c,2257 :: 		if((Events.Keys.b2==1)&&(ActionTimeDiff<255))
0x2CA0	0x0102      	MOVLB       2
0x2CA2	0xA59A      	BTFSS       _Events, 2, 1
0x2CA4	0xD008      	BRA         L_Menu2588
0x2CA6	0x0EFF      	MOVLW       255
0x2CA8	0x5D47      	SUBWF       _ActionTimeDiff, 0, 1
0x2CAA	0xE205      	BC          L_Menu2588
L__Menu2891:
;FirmV_0_7_0.c,2258 :: 		{ActionTimeDiff=ActionTimeDiff+1;Menu0();State=102;}
0x2CAC	0x2B47      	INCF        _ActionTimeDiff, 1, 1
0x2CAE	0xF00BECB2  	CALL        _Menu0, 0
0x2CB2	0x0E66      	MOVLW       102
0x2CB4	0x6F44      	MOVWF       _State, 1
L_Menu2588:
;FirmV_0_7_0.c,2259 :: 		}
L_Menu2582:
;FirmV_0_7_0.c,2262 :: 		if(MenuPointer==14)
0x2CB6	0x501E      	MOVF        _MenuPointer, 0 
0x2CB8	0x0A0E      	XORLW       14
0x2CBA	0xE122      	BNZ         L_Menu2589
;FirmV_0_7_0.c,2263 :: 		{ if((Events.Keys.b0==1)&&(AutoCloseTime>0))
0x2CBC	0x0102      	MOVLB       2
0x2CBE	0xA19A      	BTFSS       _Events, 0, 1
0x2CC0	0xD010      	BRA         L_Menu2592
0x2CC2	0x0E00      	MOVLW       0
0x2CC4	0x6E00      	MOVWF       R0 
0x2CC6	0x5196      	MOVF        _AutoCloseTime+1, 0, 1
0x2CC8	0x5C00      	SUBWF       R0, 0 
0x2CCA	0xE102      	BNZ         L__Menu2967
0x2CCC	0x5195      	MOVF        _AutoCloseTime, 0, 1
0x2CCE	0x0800      	SUBLW       0
L__Menu2967:
0x2CD0	0xE208      	BC          L_Menu2592
L__Menu2890:
;FirmV_0_7_0.c,2264 :: 		{AutoCloseTime=AutoCloseTime-1;Menu0();State=102;}
0x2CD2	0x0E01      	MOVLW       1
0x2CD4	0x5F95      	SUBWF       _AutoCloseTime, 1, 1
0x2CD6	0x0E00      	MOVLW       0
0x2CD8	0x5B96      	SUBWFB      _AutoCloseTime+1, 1, 1
0x2CDA	0xF00BECB2  	CALL        _Menu0, 0
0x2CDE	0x0E66      	MOVLW       102
0x2CE0	0x6F44      	MOVWF       _State, 1
L_Menu2592:
;FirmV_0_7_0.c,2265 :: 		if((Events.Keys.b2==1)&&(AutoCloseTime<65000))
0x2CE2	0x0102      	MOVLB       2
0x2CE4	0xA59A      	BTFSS       _Events, 2, 1
0x2CE6	0xD00C      	BRA         L_Menu2595
0x2CE8	0x0EFD      	MOVLW       253
0x2CEA	0x5D96      	SUBWF       _AutoCloseTime+1, 0, 1
0x2CEC	0xE102      	BNZ         L__Menu2968
0x2CEE	0x0EE8      	MOVLW       232
0x2CF0	0x5D95      	SUBWF       _AutoCloseTime, 0, 1
L__Menu2968:
0x2CF2	0xE206      	BC          L_Menu2595
L__Menu2889:
;FirmV_0_7_0.c,2266 :: 		{AutoCloseTime=AutoCloseTime+1;Menu0();State=102;}
0x2CF4	0x4B95      	INFSNZ      _AutoCloseTime, 1, 1
0x2CF6	0x2B96      	INCF        _AutoCloseTime+1, 1, 1
0x2CF8	0xF00BECB2  	CALL        _Menu0, 0
0x2CFC	0x0E66      	MOVLW       102
0x2CFE	0x6F44      	MOVWF       _State, 1
L_Menu2595:
;FirmV_0_7_0.c,2267 :: 		}
L_Menu2589:
;FirmV_0_7_0.c,2270 :: 		if(MenuPointer==15)
0x2D00	0x501E      	MOVF        _MenuPointer, 0 
0x2D02	0x0A0F      	XORLW       15
0x2D04	0xE11F      	BNZ         L_Menu2596
;FirmV_0_7_0.c,2272 :: 		State=0;
0x2D06	0x0101      	MOVLB       1
0x2D08	0x6B44      	CLRF        _State, 1
;FirmV_0_7_0.c,2273 :: 		memcpy(LCDLine1,Sipher,16);
0x2D0A	0x0EBD      	MOVLW       _LCDLine1
0x2D0C	0x0105      	MOVLB       5
0x2D0E	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x2D10	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x2D12	0x0106      	MOVLB       6
0x2D14	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x2D16	0x0E92      	MOVLW       _Sipher
0x2D18	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x2D1A	0x0E01      	MOVLW       hi_addr(_Sipher)
0x2D1C	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x2D1E	0x0E10      	MOVLW       16
0x2D20	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x2D22	0x0E00      	MOVLW       0
0x2D24	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x2D26	0xF001EC0D  	CALL        _memcpy, 0
;FirmV_0_7_0.c,2274 :: 		LCDLines=1;
0x2D2A	0x0E01      	MOVLW       1
0x2D2C	0x0100      	MOVLB       0
0x2D2E	0x6FB4      	MOVWF       _LCDLines, 1
;FirmV_0_7_0.c,2275 :: 		LCDFlash=0; LCDFlashFlag=0;
0x2D30	0x6A1D      	CLRF        _LCDFlash 
0x2D32	0x6A1B      	CLRF        _LCDFlashFlag 
;FirmV_0_7_0.c,2276 :: 		LCDUpdateFlag=1;
0x2D34	0x0E01      	MOVLW       1
0x2D36	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,2277 :: 		LongBuzzFlag=1;
0x2D38	0x0E01      	MOVLW       1
0x2D3A	0x6E1C      	MOVWF       _LongBuzzFlag 
;FirmV_0_7_0.c,2278 :: 		FactorySettings();
0x2D3C	0xF00BEC79  	CALL        _FactorySettings, 0
;FirmV_0_7_0.c,2279 :: 		SaveConfigs();
0x2D40	0xF006ECA8  	CALL        _SaveConfigs, 0
;FirmV_0_7_0.c,2280 :: 		}
L_Menu2596:
;FirmV_0_7_0.c,2283 :: 		if(MenuPointer==16)
0x2D44	0x501E      	MOVF        _MenuPointer, 0 
0x2D46	0x0A10      	XORLW       16
0x2D48	0xE116      	BNZ         L_Menu2597
;FirmV_0_7_0.c,2284 :: 		{ if((Events.Keys.b0==1)&&(OpenPhEnable>0))
0x2D4A	0x0102      	MOVLB       2
0x2D4C	0xA19A      	BTFSS       _Events, 0, 1
0x2D4E	0xD008      	BRA         L_Menu2600
0x2D50	0x5199      	MOVF        _OpenPhEnable, 0, 1
0x2D52	0x0800      	SUBLW       0
0x2D54	0xE205      	BC          L_Menu2600
L__Menu2888:
;FirmV_0_7_0.c,2285 :: 		{OpenPhEnable=OpenPhEnable-1;Menu0();State=102;}
0x2D56	0x0799      	DECF        _OpenPhEnable, 1, 1
0x2D58	0xF00BECB2  	CALL        _Menu0, 0
0x2D5C	0x0E66      	MOVLW       102
0x2D5E	0x6F44      	MOVWF       _State, 1
L_Menu2600:
;FirmV_0_7_0.c,2286 :: 		if((Events.Keys.b2==1)&&(OpenPhEnable<1))
0x2D60	0x0102      	MOVLB       2
0x2D62	0xA59A      	BTFSS       _Events, 2, 1
0x2D64	0xD008      	BRA         L_Menu2603
0x2D66	0x0E01      	MOVLW       1
0x2D68	0x5D99      	SUBWF       _OpenPhEnable, 0, 1
0x2D6A	0xE205      	BC          L_Menu2603
L__Menu2887:
;FirmV_0_7_0.c,2287 :: 		{OpenPhEnable=OpenPhEnable+1;Menu0();State=102;}
0x2D6C	0x2B99      	INCF        _OpenPhEnable, 1, 1
0x2D6E	0xF00BECB2  	CALL        _Menu0, 0
0x2D72	0x0E66      	MOVLW       102
0x2D74	0x6F44      	MOVWF       _State, 1
L_Menu2603:
;FirmV_0_7_0.c,2288 :: 		}
L_Menu2597:
;FirmV_0_7_0.c,2292 :: 		if(MenuPointer==17)
0x2D76	0x501E      	MOVF        _MenuPointer, 0 
0x2D78	0x0A11      	XORLW       17
0x2D7A	0xE116      	BNZ         L_Menu2604
;FirmV_0_7_0.c,2293 :: 		{ if((Events.Keys.b0==1)&&(LimiterEnable>0))
0x2D7C	0x0102      	MOVLB       2
0x2D7E	0xA19A      	BTFSS       _Events, 0, 1
0x2D80	0xD008      	BRA         L_Menu2607
0x2D82	0x51A4      	MOVF        _LimiterEnable, 0, 1
0x2D84	0x0800      	SUBLW       0
0x2D86	0xE205      	BC          L_Menu2607
L__Menu2886:
;FirmV_0_7_0.c,2294 :: 		{LimiterEnable=LimiterEnable-1;Menu0();State=102;}
0x2D88	0x07A4      	DECF        _LimiterEnable, 1, 1
0x2D8A	0xF00BECB2  	CALL        _Menu0, 0
0x2D8E	0x0E66      	MOVLW       102
0x2D90	0x6F44      	MOVWF       _State, 1
L_Menu2607:
;FirmV_0_7_0.c,2295 :: 		if((Events.Keys.b2==1)&&(LimiterEnable<1))
0x2D92	0x0102      	MOVLB       2
0x2D94	0xA59A      	BTFSS       _Events, 2, 1
0x2D96	0xD008      	BRA         L_Menu2610
0x2D98	0x0E01      	MOVLW       1
0x2D9A	0x5DA4      	SUBWF       _LimiterEnable, 0, 1
0x2D9C	0xE205      	BC          L_Menu2610
L__Menu2885:
;FirmV_0_7_0.c,2296 :: 		{LimiterEnable=LimiterEnable+1;Menu0();State=102;}
0x2D9E	0x2BA4      	INCF        _LimiterEnable, 1, 1
0x2DA0	0xF00BECB2  	CALL        _Menu0, 0
0x2DA4	0x0E66      	MOVLW       102
0x2DA6	0x6F44      	MOVWF       _State, 1
L_Menu2610:
;FirmV_0_7_0.c,2297 :: 		}
L_Menu2604:
;FirmV_0_7_0.c,2300 :: 		if(MenuPointer==18)
0x2DA8	0x501E      	MOVF        _MenuPointer, 0 
0x2DAA	0x0A12      	XORLW       18
0x2DAC	0xE116      	BNZ         L_Menu2611
;FirmV_0_7_0.c,2301 :: 		{ if((Events.Keys.b0==1)&&(LockEnable>0))
0x2DAE	0x0102      	MOVLB       2
0x2DB0	0xA19A      	BTFSS       _Events, 0, 1
0x2DB2	0xD008      	BRA         L_Menu2614
0x2DB4	0x51A3      	MOVF        _LockEnable, 0, 1
0x2DB6	0x0800      	SUBLW       0
0x2DB8	0xE205      	BC          L_Menu2614
L__Menu2884:
;FirmV_0_7_0.c,2302 :: 		{LockEnable=LockEnable-1;Menu0();State=102;}
0x2DBA	0x07A3      	DECF        _LockEnable, 1, 1
0x2DBC	0xF00BECB2  	CALL        _Menu0, 0
0x2DC0	0x0E66      	MOVLW       102
0x2DC2	0x6F44      	MOVWF       _State, 1
L_Menu2614:
;FirmV_0_7_0.c,2303 :: 		if((Events.Keys.b2==1)&&(LockEnable<1))
0x2DC4	0x0102      	MOVLB       2
0x2DC6	0xA59A      	BTFSS       _Events, 2, 1
0x2DC8	0xD008      	BRA         L_Menu2617
0x2DCA	0x0E01      	MOVLW       1
0x2DCC	0x5DA3      	SUBWF       _LockEnable, 0, 1
0x2DCE	0xE205      	BC          L_Menu2617
L__Menu2883:
;FirmV_0_7_0.c,2304 :: 		{LockEnable=LockEnable+1;Menu0();State=102;}
0x2DD0	0x2BA3      	INCF        _LockEnable, 1, 1
0x2DD2	0xF00BECB2  	CALL        _Menu0, 0
0x2DD6	0x0E66      	MOVLW       102
0x2DD8	0x6F44      	MOVWF       _State, 1
L_Menu2617:
;FirmV_0_7_0.c,2305 :: 		}
L_Menu2611:
;FirmV_0_7_0.c,2308 :: 		if(MenuPointer==19)
0x2DDA	0x501E      	MOVF        _MenuPointer, 0 
0x2DDC	0x0A13      	XORLW       19
0x2DDE	0xE118      	BNZ         L_Menu2618
;FirmV_0_7_0.c,2309 :: 		{ if((Events.Keys.b0==1)&&(LockForce>0))
0x2DE0	0x0102      	MOVLB       2
0x2DE2	0xA19A      	BTFSS       _Events, 0, 1
0x2DE4	0xD009      	BRA         L_Menu2621
0x2DE6	0x0101      	MOVLB       1
0x2DE8	0x518F      	MOVF        _LockForce, 0, 1
0x2DEA	0x0800      	SUBLW       0
0x2DEC	0xE205      	BC          L_Menu2621
L__Menu2882:
;FirmV_0_7_0.c,2310 :: 		{LockForce=LockForce-1;Menu0();State=102;}
0x2DEE	0x078F      	DECF        _LockForce, 1, 1
0x2DF0	0xF00BECB2  	CALL        _Menu0, 0
0x2DF4	0x0E66      	MOVLW       102
0x2DF6	0x6F44      	MOVWF       _State, 1
L_Menu2621:
;FirmV_0_7_0.c,2311 :: 		if((Events.Keys.b2==1)&&(LockForce<1))
0x2DF8	0x0102      	MOVLB       2
0x2DFA	0xA59A      	BTFSS       _Events, 2, 1
0x2DFC	0xD009      	BRA         L_Menu2624
0x2DFE	0x0E01      	MOVLW       1
0x2E00	0x0101      	MOVLB       1
0x2E02	0x5D8F      	SUBWF       _LockForce, 0, 1
0x2E04	0xE205      	BC          L_Menu2624
L__Menu2881:
;FirmV_0_7_0.c,2312 :: 		{LockForce=LockForce+1;Menu0();State=102;}
0x2E06	0x2B8F      	INCF        _LockForce, 1, 1
0x2E08	0xF00BECB2  	CALL        _Menu0, 0
0x2E0C	0x0E66      	MOVLW       102
0x2E0E	0x6F44      	MOVWF       _State, 1
L_Menu2624:
;FirmV_0_7_0.c,2313 :: 		}
L_Menu2618:
;FirmV_0_7_0.c,2316 :: 		if(MenuPointer==20)
0x2E10	0x501E      	MOVF        _MenuPointer, 0 
0x2E12	0x0A14      	XORLW       20
0x2E14	0xE11F      	BNZ         L_Menu2625
;FirmV_0_7_0.c,2317 :: 		{ if((Events.Keys.b0==1)&&(CloseAfterPass>0))
0x2E16	0x0102      	MOVLB       2
0x2E18	0xA19A      	BTFSS       _Events, 0, 1
0x2E1A	0xD00C      	BRA         L_Menu2628
0x2E1C	0x5141      	MOVF        _CloseAfterPass, 0, 1
0x2E1E	0x0800      	SUBLW       0
0x2E20	0xE209      	BC          L_Menu2628
L__Menu2880:
;FirmV_0_7_0.c,2318 :: 		{CloseAfterPass=CloseAfterPass-1;if(CloseAfterPass==9) CloseAfterPass=0;Menu0();State=102;}
0x2E22	0x0741      	DECF        _CloseAfterPass, 1, 1
0x2E24	0x5141      	MOVF        _CloseAfterPass, 0, 1
0x2E26	0x0A09      	XORLW       9
0x2E28	0xE101      	BNZ         L_Menu2629
0x2E2A	0x6B41      	CLRF        _CloseAfterPass, 1
L_Menu2629:
0x2E2C	0xF00BECB2  	CALL        _Menu0, 0
0x2E30	0x0E66      	MOVLW       102
0x2E32	0x6F44      	MOVWF       _State, 1
L_Menu2628:
;FirmV_0_7_0.c,2319 :: 		if((Events.Keys.b2==1)&&(CloseAfterPass<255))
0x2E34	0x0102      	MOVLB       2
0x2E36	0xA59A      	BTFSS       _Events, 2, 1
0x2E38	0xD00D      	BRA         L_Menu2632
0x2E3A	0x0EFF      	MOVLW       255
0x2E3C	0x5D41      	SUBWF       _CloseAfterPass, 0, 1
0x2E3E	0xE20A      	BC          L_Menu2632
L__Menu2879:
;FirmV_0_7_0.c,2320 :: 		{CloseAfterPass=CloseAfterPass+1;if(CloseAfterPass==1) CloseAfterPass=10;Menu0();State=102;}
0x2E40	0x2B41      	INCF        _CloseAfterPass, 1, 1
0x2E42	0x5141      	MOVF        _CloseAfterPass, 0, 1
0x2E44	0x0A01      	XORLW       1
0x2E46	0xE102      	BNZ         L_Menu2633
0x2E48	0x0E0A      	MOVLW       10
0x2E4A	0x6F41      	MOVWF       _CloseAfterPass, 1
L_Menu2633:
0x2E4C	0xF00BECB2  	CALL        _Menu0, 0
0x2E50	0x0E66      	MOVLW       102
0x2E52	0x6F44      	MOVWF       _State, 1
L_Menu2632:
;FirmV_0_7_0.c,2321 :: 		}
L_Menu2625:
;FirmV_0_7_0.c,2324 :: 		if(MenuPointer==21)
0x2E54	0x501E      	MOVF        _MenuPointer, 0 
0x2E56	0x0A15      	XORLW       21
0x2E58	0xE11B      	BNZ         L_Menu2634
;FirmV_0_7_0.c,2326 :: 		State=103;
0x2E5A	0x0101      	MOVLB       1
0x2E5C	0x0E67      	MOVLW       103
0x2E5E	0x6F44      	MOVWF       _State, 1
;FirmV_0_7_0.c,2327 :: 		memcpy(LCDLine1,Sipher,16);
0x2E60	0x0EBD      	MOVLW       _LCDLine1
0x2E62	0x0105      	MOVLB       5
0x2E64	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x2E66	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x2E68	0x0106      	MOVLB       6
0x2E6A	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x2E6C	0x0E92      	MOVLW       _Sipher
0x2E6E	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x2E70	0x0E01      	MOVLW       hi_addr(_Sipher)
0x2E72	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x2E74	0x0E10      	MOVLW       16
0x2E76	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x2E78	0x0E00      	MOVLW       0
0x2E7A	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x2E7C	0xF001EC0D  	CALL        _memcpy, 0
;FirmV_0_7_0.c,2328 :: 		LCDFlash=0;
0x2E80	0x6A1D      	CLRF        _LCDFlash 
;FirmV_0_7_0.c,2329 :: 		LCDLines=1;
0x2E82	0x0E01      	MOVLW       1
0x2E84	0x0100      	MOVLB       0
0x2E86	0x6FB4      	MOVWF       _LCDLines, 1
;FirmV_0_7_0.c,2330 :: 		LCDUpdateFlag=1;
0x2E88	0x0E01      	MOVLW       1
0x2E8A	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,2331 :: 		LongBuzzFlag=1;
0x2E8C	0x0E01      	MOVLW       1
0x2E8E	0x6E1C      	MOVWF       _LongBuzzFlag 
;FirmV_0_7_0.c,2332 :: 		}
L_Menu2634:
;FirmV_0_7_0.c,2335 :: 		if(MenuPointer==22)
0x2E90	0x501E      	MOVF        _MenuPointer, 0 
0x2E92	0x0A16      	XORLW       22
0x2E94	0xE11C      	BNZ         L_Menu2635
;FirmV_0_7_0.c,2337 :: 		State=0;
0x2E96	0x0101      	MOVLB       1
0x2E98	0x6B44      	CLRF        _State, 1
;FirmV_0_7_0.c,2338 :: 		memcpy(LCDLine1,Sipher,16);
0x2E9A	0x0EBD      	MOVLW       _LCDLine1
0x2E9C	0x0105      	MOVLB       5
0x2E9E	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x2EA0	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x2EA2	0x0106      	MOVLB       6
0x2EA4	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x2EA6	0x0E92      	MOVLW       _Sipher
0x2EA8	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x2EAA	0x0E01      	MOVLW       hi_addr(_Sipher)
0x2EAC	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x2EAE	0x0E10      	MOVLW       16
0x2EB0	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x2EB2	0x0E00      	MOVLW       0
0x2EB4	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x2EB6	0xF001EC0D  	CALL        _memcpy, 0
;FirmV_0_7_0.c,2339 :: 		LCDFlash=0;
0x2EBA	0x6A1D      	CLRF        _LCDFlash 
;FirmV_0_7_0.c,2340 :: 		LCDLines=1;
0x2EBC	0x0E01      	MOVLW       1
0x2EBE	0x0100      	MOVLB       0
0x2EC0	0x6FB4      	MOVWF       _LCDLines, 1
;FirmV_0_7_0.c,2341 :: 		LCDUpdateFlag=1;
0x2EC2	0x0E01      	MOVLW       1
0x2EC4	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,2342 :: 		LoadConfigs();
0x2EC6	0xF007EC7B  	CALL        _LoadConfigs, 0
;FirmV_0_7_0.c,2343 :: 		LongBuzzFlag=1;
0x2ECA	0x0E01      	MOVLW       1
0x2ECC	0x6E1C      	MOVWF       _LongBuzzFlag 
;FirmV_0_7_0.c,2344 :: 		}
L_Menu2635:
;FirmV_0_7_0.c,2345 :: 		}
0x2ECE	0x0012      	RETURN      0
; end of _Menu2
_Menu1:
;FirmV_0_7_0.c,2101 :: 		void Menu1()
;FirmV_0_7_0.c,2104 :: 		if((Events.Keys.b0==1))
0x2ED0	0x0102      	MOVLB       2
0x2ED2	0xA19A      	BTFSS       _Events, 0, 1
0x2ED4	0xD00A      	BRA         L_Menu1479
;FirmV_0_7_0.c,2105 :: 		{if(MenuPointer==0){MenuPointer=22;}else{MenuPointer=MenuPointer-1;}State=100;}
0x2ED6	0x501E      	MOVF        _MenuPointer, 0 
0x2ED8	0x0A00      	XORLW       0
0x2EDA	0xE103      	BNZ         L_Menu1480
0x2EDC	0x0E16      	MOVLW       22
0x2EDE	0x6E1E      	MOVWF       _MenuPointer 
0x2EE0	0xD001      	BRA         L_Menu1481
L_Menu1480:
0x2EE2	0x061E      	DECF        _MenuPointer, 1 
L_Menu1481:
0x2EE4	0x0E64      	MOVLW       100
0x2EE6	0x0101      	MOVLB       1
0x2EE8	0x6F44      	MOVWF       _State, 1
L_Menu1479:
;FirmV_0_7_0.c,2107 :: 		if((Events.Keys.b2==1))
0x2EEA	0x0102      	MOVLB       2
0x2EEC	0xA59A      	BTFSS       _Events, 2, 1
0x2EEE	0xD009      	BRA         L_Menu1482
;FirmV_0_7_0.c,2108 :: 		{if(MenuPointer==22){MenuPointer=0;}else{MenuPointer=MenuPointer+1;}State=100;}
0x2EF0	0x501E      	MOVF        _MenuPointer, 0 
0x2EF2	0x0A16      	XORLW       22
0x2EF4	0xE102      	BNZ         L_Menu1483
0x2EF6	0x6A1E      	CLRF        _MenuPointer 
0x2EF8	0xD001      	BRA         L_Menu1484
L_Menu1483:
0x2EFA	0x2A1E      	INCF        _MenuPointer, 1 
L_Menu1484:
0x2EFC	0x0E64      	MOVLW       100
0x2EFE	0x0101      	MOVLB       1
0x2F00	0x6F44      	MOVWF       _State, 1
L_Menu1482:
;FirmV_0_7_0.c,2110 :: 		if((Events.Keys.b1==1))
0x2F02	0x0102      	MOVLB       2
0x2F04	0xA39A      	BTFSS       _Events, 1, 1
0x2F06	0xD003      	BRA         L_Menu1485
;FirmV_0_7_0.c,2111 :: 		{State=102;}
0x2F08	0x0E66      	MOVLW       102
0x2F0A	0x0101      	MOVLB       1
0x2F0C	0x6F44      	MOVWF       _State, 1
L_Menu1485:
;FirmV_0_7_0.c,2113 :: 		if(Events.Keys==0b101)
0x2F0E	0x0102      	MOVLB       2
0x2F10	0x519A      	MOVF        _Events, 0, 1
0x2F12	0x0A05      	XORLW       5
0x2F14	0xE12A      	BNZ         L_Menu1486
;FirmV_0_7_0.c,2114 :: 		{memcpy(LCDLine1,Crypto[0],16);AboutCounter=0;memcpy(LCDLine2,Crypto[1],16);LCDLines=2;LCDUpdateFlag=1;State=250;}
0x2F16	0x0EBD      	MOVLW       _LCDLine1
0x2F18	0x0105      	MOVLB       5
0x2F1A	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x2F1C	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x2F1E	0x0106      	MOVLB       6
0x2F20	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x2F22	0x0E2E      	MOVLW       _crypto
0x2F24	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x2F26	0x0E00      	MOVLW       hi_addr(_crypto)
0x2F28	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x2F2A	0x0E10      	MOVLW       16
0x2F2C	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x2F2E	0x0E00      	MOVLW       0
0x2F30	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x2F32	0xF001EC0D  	CALL        _memcpy, 0
0x2F36	0x0100      	MOVLB       0
0x2F38	0x6B8E      	CLRF        _AboutCounter, 1
0x2F3A	0x0EA3      	MOVLW       _LCDLine2
0x2F3C	0x0105      	MOVLB       5
0x2F3E	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x2F40	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x2F42	0x0106      	MOVLB       6
0x2F44	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x2F46	0x0E3E      	MOVLW       _crypto+16
0x2F48	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x2F4A	0x0E00      	MOVLW       hi_addr(_crypto+16)
0x2F4C	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x2F4E	0x0E10      	MOVLW       16
0x2F50	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x2F52	0x0E00      	MOVLW       0
0x2F54	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x2F56	0xF001EC0D  	CALL        _memcpy, 0
0x2F5A	0x0E02      	MOVLW       2
0x2F5C	0x0100      	MOVLB       0
0x2F5E	0x6FB4      	MOVWF       _LCDLines, 1
0x2F60	0x0E01      	MOVLW       1
0x2F62	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
0x2F64	0x0EFA      	MOVLW       250
0x2F66	0x0101      	MOVLB       1
0x2F68	0x6F44      	MOVWF       _State, 1
L_Menu1486:
;FirmV_0_7_0.c,2117 :: 		}
0x2F6A	0x0012      	RETURN      0
; end of _Menu1
_UART1_Init:
;__Lib_UART_c67.c,15 :: 		
;__Lib_UART_c67.c,18 :: 		
0x2F6C	0x0E56      	MOVLW       _UART1_Write
0x2F6E	0x0102      	MOVLB       2
0x2F70	0x6F51      	MOVWF       _UART_Wr_Ptr, 1
0x2F72	0x0E01      	MOVLW       hi_addr(_UART1_Write)
0x2F74	0x6F52      	MOVWF       _UART_Wr_Ptr+1, 1
0x2F76	0x0E06      	MOVLW       FARG_UART1_Write_data_
0x2F78	0x6F53      	MOVWF       _UART_Wr_Ptr+2, 1
0x2F7A	0x0E06      	MOVLW       hi_addr(FARG_UART1_Write_data_)
0x2F7C	0x6F54      	MOVWF       _UART_Wr_Ptr+3, 1
;__Lib_UART_c67.c,19 :: 		
0x2F7E	0x0EFF      	MOVLW       _UART1_Read
0x2F80	0x6F4D      	MOVWF       _UART_Rd_Ptr, 1
0x2F82	0x0EFF      	MOVLW       hi_addr(_UART1_Read)
0x2F84	0x6F4E      	MOVWF       _UART_Rd_Ptr+1, 1
0x2F86	0x0E00      	MOVLW       0
0x2F88	0x6F4F      	MOVWF       _UART_Rd_Ptr+2, 1
0x2F8A	0x0E00      	MOVLW       0
0x2F8C	0x6F50      	MOVWF       _UART_Rd_Ptr+3, 1
;__Lib_UART_c67.c,20 :: 		
0x2F8E	0x0EFF      	MOVLW       _UART1_Data_Ready
0x2F90	0x6F49      	MOVWF       _UART_Rdy_Ptr, 1
0x2F92	0x0EFF      	MOVLW       hi_addr(_UART1_Data_Ready)
0x2F94	0x6F4A      	MOVWF       _UART_Rdy_Ptr+1, 1
0x2F96	0x0E00      	MOVLW       0
0x2F98	0x6F4B      	MOVWF       _UART_Rdy_Ptr+2, 1
0x2F9A	0x0E00      	MOVLW       0
0x2F9C	0x6F4C      	MOVWF       _UART_Rdy_Ptr+3, 1
;__Lib_UART_c67.c,21 :: 		
0x2F9E	0x0EFF      	MOVLW       _UART1_Tx_Idle
0x2FA0	0x6F55      	MOVWF       _UART_Tx_Idle_Ptr, 1
0x2FA2	0x0EFF      	MOVLW       hi_addr(_UART1_Tx_Idle)
0x2FA4	0x6F56      	MOVWF       _UART_Tx_Idle_Ptr+1, 1
0x2FA6	0x0E00      	MOVLW       0
0x2FA8	0x6F57      	MOVWF       _UART_Tx_Idle_Ptr+2, 1
0x2FAA	0x0E00      	MOVLW       0
0x2FAC	0x6F58      	MOVWF       _UART_Tx_Idle_Ptr+3, 1
;__Lib_UART_c67.c,23 :: 		
0x2FAE	0x8AAC      	BSF         TXSTA, 5 
;__Lib_UART_c67.c,24 :: 		
0x2FB0	0x0E90      	MOVLW       144
0x2FB2	0x6EAB      	MOVWF       RCSTA 
;__Lib_UART_c67.c,25 :: 		
0x2FB4	0x8E94      	BSF         TRISC7_bit, 7 
;__Lib_UART_c67.c,26 :: 		
0x2FB6	0x9C94      	BCF         TRISC6_bit, 6 
;__Lib_UART_c67.c,28 :: 		
L_UART1_Init0:
0x2FB8	0xAA9E      	BTFSS       PIR1, 5 
0x2FBA	0xD003      	BRA         L_UART1_Init1
;__Lib_UART_c67.c,29 :: 		
0x2FBC	0xF000CFAE  	MOVFF       RCREG, R0
0x2FC0	0xD7FB      	BRA         L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Init:
0x2FC2	0x0012      	RETURN      0
; end of _UART1_Init
_GetOverloadState:
;FirmV_0_7_0.c,1584 :: 		char GetOverloadState()
;FirmV_0_7_0.c,1586 :: 		char res=0;
0x2FC4	0x0102      	MOVLB       2
0x2FC6	0x6BBF      	CLRF        GetOverloadState_res_L0, 1
;FirmV_0_7_0.c,1588 :: 		VCapM1=ADC_Read(0);
0x2FC8	0x0103      	MOVLB       3
0x2FCA	0x6BD9      	CLRF        FARG_ADC_Read_channel, 1
0x2FCC	0xF012EC3D  	CALL        _ADC_Read, 0
0x2FD0	0xF25BC000  	MOVFF       R0, _VCapM1
0x2FD4	0xF25CC001  	MOVFF       R1, _VCapM1+1
;FirmV_0_7_0.c,1589 :: 		VCapM2=ADC_Read(1);
0x2FD8	0x0E01      	MOVLW       1
0x2FDA	0x0103      	MOVLB       3
0x2FDC	0x6FD9      	MOVWF       FARG_ADC_Read_channel, 1
0x2FDE	0xF012EC3D  	CALL        _ADC_Read, 0
0x2FE2	0xF259C000  	MOVFF       R0, _VCapM2
0x2FE6	0xF25AC001  	MOVFF       R1, _VCapM2+1
;FirmV_0_7_0.c,1592 :: 		if(OverloadCheckFlag1==0)
0x2FEA	0x0100      	MOVLB       0
0x2FEC	0x51B9      	MOVF        _OverloadCheckFlag1, 0, 1
0x2FEE	0x0A00      	XORLW       0
0x2FF0	0xE103      	BNZ         L_GetOverloadState381
;FirmV_0_7_0.c,1593 :: 		OverloadCounter1=0;
0x2FF2	0x0101      	MOVLB       1
0x2FF4	0x6B1D      	CLRF        _OverloadCounter1, 1
0x2FF6	0x6B1E      	CLRF        _OverloadCounter1+1, 1
L_GetOverloadState381:
;FirmV_0_7_0.c,1595 :: 		if(OverloadCheckFlag2==0)
0x2FF8	0x0100      	MOVLB       0
0x2FFA	0x51B6      	MOVF        _OverloadCheckFlag2, 0, 1
0x2FFC	0x0A00      	XORLW       0
0x2FFE	0xE103      	BNZ         L_GetOverloadState382
;FirmV_0_7_0.c,1596 :: 		OverloadCounter2=0;
0x3000	0x0101      	MOVLB       1
0x3002	0x6B1A      	CLRF        _OverloadCounter2, 1
0x3004	0x6B1B      	CLRF        _OverloadCounter2+1, 1
L_GetOverloadState382:
;FirmV_0_7_0.c,1599 :: 		if(Motor1FullSpeed!=0)
0x3006	0x0100      	MOVLB       0
0x3008	0x51B5      	MOVF        _Motor1FullSpeed, 0, 1
0x300A	0x0A00      	XORLW       0
0x300C	0xE022      	BZ          L_GetOverloadState383
;FirmV_0_7_0.c,1603 :: 		if(VCapM1<OverloadTreshold1)
0x300E	0x0101      	MOVLB       1
0x3010	0x518A      	MOVF        _OverloadTreshold1+1, 0, 1
0x3012	0x0102      	MOVLB       2
0x3014	0x5D5C      	SUBWF       _VCapM1+1, 0, 1
0x3016	0xE104      	BNZ         L__GetOverloadState955
0x3018	0x0101      	MOVLB       1
0x301A	0x5189      	MOVF        _OverloadTreshold1, 0, 1
0x301C	0x0102      	MOVLB       2
0x301E	0x5D5B      	SUBWF       _VCapM1, 0, 1
L__GetOverloadState955:
0x3020	0xE20A      	BC          L_GetOverloadState384
;FirmV_0_7_0.c,1605 :: 		if(OverloadCounter1<65530)
0x3022	0x0EFF      	MOVLW       255
0x3024	0x0101      	MOVLB       1
0x3026	0x5D1E      	SUBWF       _OverloadCounter1+1, 0, 1
0x3028	0xE102      	BNZ         L__GetOverloadState956
0x302A	0x0EFA      	MOVLW       250
0x302C	0x5D1D      	SUBWF       _OverloadCounter1, 0, 1
L__GetOverloadState956:
0x302E	0xE202      	BC          L_GetOverloadState385
;FirmV_0_7_0.c,1606 :: 		OverloadCounter1=OverloadCounter1+1;
0x3030	0x4B1D      	INFSNZ      _OverloadCounter1, 1, 1
0x3032	0x2B1E      	INCF        _OverloadCounter1+1, 1, 1
L_GetOverloadState385:
;FirmV_0_7_0.c,1607 :: 		}
0x3034	0xD00D      	BRA         L_GetOverloadState386
L_GetOverloadState384:
0x3036	0x0101      	MOVLB       1
;FirmV_0_7_0.c,1610 :: 		if(OverloadCounter1>0)
0x3038	0x0E00      	MOVLW       0
0x303A	0x6E00      	MOVWF       R0 
0x303C	0x511E      	MOVF        _OverloadCounter1+1, 0, 1
0x303E	0x5C00      	SUBWF       R0, 0 
0x3040	0xE102      	BNZ         L__GetOverloadState957
0x3042	0x511D      	MOVF        _OverloadCounter1, 0, 1
0x3044	0x0800      	SUBLW       0
L__GetOverloadState957:
0x3046	0xE204      	BC          L_GetOverloadState387
;FirmV_0_7_0.c,1611 :: 		OverloadCounter1=OverloadCounter1-1;
0x3048	0x0E01      	MOVLW       1
0x304A	0x5F1D      	SUBWF       _OverloadCounter1, 1, 1
0x304C	0x0E00      	MOVLW       0
0x304E	0x5B1E      	SUBWFB      _OverloadCounter1+1, 1, 1
L_GetOverloadState387:
;FirmV_0_7_0.c,1612 :: 		}
L_GetOverloadState386:
;FirmV_0_7_0.c,1613 :: 		}
0x3050	0xD003      	BRA         L_GetOverloadState388
L_GetOverloadState383:
0x3052	0x0101      	MOVLB       1
;FirmV_0_7_0.c,1615 :: 		{OverloadCounter1=0;}
0x3054	0x6B1D      	CLRF        _OverloadCounter1, 1
0x3056	0x6B1E      	CLRF        _OverloadCounter1+1, 1
L_GetOverloadState388:
;FirmV_0_7_0.c,1617 :: 		if (OverloadCounter1>OverloadDuration1)
0x3058	0x511E      	MOVF        _OverloadCounter1+1, 0, 1
0x305A	0x5D8C      	SUBWF       _OverloadDuration1+1, 0, 1
0x305C	0xE102      	BNZ         L__GetOverloadState958
0x305E	0x511D      	MOVF        _OverloadCounter1, 0, 1
0x3060	0x5D8B      	SUBWF       _OverloadDuration1, 0, 1
L__GetOverloadState958:
0x3062	0xE202      	BC          L_GetOverloadState389
;FirmV_0_7_0.c,1618 :: 		res.b0=1;
0x3064	0x0102      	MOVLB       2
0x3066	0x81BF      	BSF         GetOverloadState_res_L0, 0, 1
L_GetOverloadState389:
;FirmV_0_7_0.c,1623 :: 		if(Motor2FullSpeed!=0)
0x3068	0x0100      	MOVLB       0
0x306A	0x51B8      	MOVF        _Motor2FullSpeed, 0, 1
0x306C	0x0A00      	XORLW       0
0x306E	0xE022      	BZ          L_GetOverloadState390
;FirmV_0_7_0.c,1625 :: 		if(VCapM2<OverloadTreshold2)
0x3070	0x0101      	MOVLB       1
0x3072	0x518E      	MOVF        _OverloadTreshold2+1, 0, 1
0x3074	0x0102      	MOVLB       2
0x3076	0x5D5A      	SUBWF       _VCapM2+1, 0, 1
0x3078	0xE104      	BNZ         L__GetOverloadState959
0x307A	0x0101      	MOVLB       1
0x307C	0x518D      	MOVF        _OverloadTreshold2, 0, 1
0x307E	0x0102      	MOVLB       2
0x3080	0x5D59      	SUBWF       _VCapM2, 0, 1
L__GetOverloadState959:
0x3082	0xE20A      	BC          L_GetOverloadState391
;FirmV_0_7_0.c,1627 :: 		if(OverloadCounter2<65530)
0x3084	0x0EFF      	MOVLW       255
0x3086	0x0101      	MOVLB       1
0x3088	0x5D1B      	SUBWF       _OverloadCounter2+1, 0, 1
0x308A	0xE102      	BNZ         L__GetOverloadState960
0x308C	0x0EFA      	MOVLW       250
0x308E	0x5D1A      	SUBWF       _OverloadCounter2, 0, 1
L__GetOverloadState960:
0x3090	0xE202      	BC          L_GetOverloadState392
;FirmV_0_7_0.c,1628 :: 		OverloadCounter2=OverloadCounter2+1;
0x3092	0x4B1A      	INFSNZ      _OverloadCounter2, 1, 1
0x3094	0x2B1B      	INCF        _OverloadCounter2+1, 1, 1
L_GetOverloadState392:
;FirmV_0_7_0.c,1629 :: 		}
0x3096	0xD00D      	BRA         L_GetOverloadState393
L_GetOverloadState391:
0x3098	0x0101      	MOVLB       1
;FirmV_0_7_0.c,1632 :: 		if(OverloadCounter2>0)
0x309A	0x0E00      	MOVLW       0
0x309C	0x6E00      	MOVWF       R0 
0x309E	0x511B      	MOVF        _OverloadCounter2+1, 0, 1
0x30A0	0x5C00      	SUBWF       R0, 0 
0x30A2	0xE102      	BNZ         L__GetOverloadState961
0x30A4	0x511A      	MOVF        _OverloadCounter2, 0, 1
0x30A6	0x0800      	SUBLW       0
L__GetOverloadState961:
0x30A8	0xE204      	BC          L_GetOverloadState394
;FirmV_0_7_0.c,1633 :: 		OverloadCounter2=OverloadCounter2-1;
0x30AA	0x0E01      	MOVLW       1
0x30AC	0x5F1A      	SUBWF       _OverloadCounter2, 1, 1
0x30AE	0x0E00      	MOVLW       0
0x30B0	0x5B1B      	SUBWFB      _OverloadCounter2+1, 1, 1
L_GetOverloadState394:
;FirmV_0_7_0.c,1634 :: 		}
L_GetOverloadState393:
;FirmV_0_7_0.c,1635 :: 		}
0x30B2	0xD003      	BRA         L_GetOverloadState395
L_GetOverloadState390:
0x30B4	0x0101      	MOVLB       1
;FirmV_0_7_0.c,1637 :: 		{OverloadCounter2=0;}
0x30B6	0x6B1A      	CLRF        _OverloadCounter2, 1
0x30B8	0x6B1B      	CLRF        _OverloadCounter2+1, 1
L_GetOverloadState395:
;FirmV_0_7_0.c,1640 :: 		if (OverloadCounter2>OverloadDuration2)
0x30BA	0x511B      	MOVF        _OverloadCounter2+1, 0, 1
0x30BC	0x5DA3      	SUBWF       _OverloadDuration2+1, 0, 1
0x30BE	0xE102      	BNZ         L__GetOverloadState962
0x30C0	0x511A      	MOVF        _OverloadCounter2, 0, 1
0x30C2	0x5DA2      	SUBWF       _OverloadDuration2, 0, 1
L__GetOverloadState962:
0x30C4	0xE202      	BC          L_GetOverloadState396
;FirmV_0_7_0.c,1641 :: 		res.b1=1;
0x30C6	0x0102      	MOVLB       2
0x30C8	0x83BF      	BSF         GetOverloadState_res_L0, 1, 1
L_GetOverloadState396:
;FirmV_0_7_0.c,1643 :: 		return res;
0x30CA	0xF000C2BF  	MOVFF       GetOverloadState_res_L0, R0
;FirmV_0_7_0.c,1644 :: 		}
0x30CE	0x0012      	RETURN      0
; end of _GetOverloadState
_State7:
;FirmV_0_7_0.c,1098 :: 		void State7()
;FirmV_0_7_0.c,1100 :: 		Flasher=1;
0x30D0	0x8E83      	BSF         PORTD, 7 
;FirmV_0_7_0.c,1101 :: 		FlashFlag=1;
0x30D2	0x0E01      	MOVLW       1
0x30D4	0x0100      	MOVLB       0
0x30D6	0x6FBC      	MOVWF       _FlashFlag, 1
;FirmV_0_7_0.c,1103 :: 		if(CheckTask(1))
0x30D8	0x0E01      	MOVLW       1
0x30DA	0x0103      	MOVLB       3
0x30DC	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x30DE	0xF009EC28  	CALL        _CheckTask, 0
0x30E2	0x5200      	MOVF        R0, 1 
0x30E4	0xE02D      	BZ          L_State7231
;FirmV_0_7_0.c,1104 :: 		{StartMotor(1,_Close);Logger("S7 Motor1Start",1);}
0x30E6	0x0E01      	MOVLW       1
0x30E8	0x0103      	MOVLB       3
0x30EA	0x6FD9      	MOVWF       FARG_StartMotor_Mx, 1
0x30EC	0x6BDA      	CLRF        FARG_StartMotor_Dir, 1
0x30EE	0xF011ECCA  	CALL        _StartMotor, 0
0x30F2	0x0E53      	MOVLW       83
0x30F4	0x0102      	MOVLB       2
0x30F6	0x6FBF      	MOVWF       ?lstr45_FirmV_0_7_0, 1
0x30F8	0x0E37      	MOVLW       55
0x30FA	0x6FC0      	MOVWF       ?lstr45_FirmV_0_7_0+1, 1
0x30FC	0x0E20      	MOVLW       32
0x30FE	0x6FC1      	MOVWF       ?lstr45_FirmV_0_7_0+2, 1
0x3100	0x0E4D      	MOVLW       77
0x3102	0x6FC2      	MOVWF       ?lstr45_FirmV_0_7_0+3, 1
0x3104	0x0E6F      	MOVLW       111
0x3106	0x6FC3      	MOVWF       ?lstr45_FirmV_0_7_0+4, 1
0x3108	0x0E74      	MOVLW       116
0x310A	0x6FC4      	MOVWF       ?lstr45_FirmV_0_7_0+5, 1
0x310C	0x0E6F      	MOVLW       111
0x310E	0x6FC5      	MOVWF       ?lstr45_FirmV_0_7_0+6, 1
0x3110	0x0E72      	MOVLW       114
0x3112	0x6FC6      	MOVWF       ?lstr45_FirmV_0_7_0+7, 1
0x3114	0x0E31      	MOVLW       49
0x3116	0x6FC7      	MOVWF       ?lstr45_FirmV_0_7_0+8, 1
0x3118	0x0E53      	MOVLW       83
0x311A	0x6FC8      	MOVWF       ?lstr45_FirmV_0_7_0+9, 1
0x311C	0x0E74      	MOVLW       116
0x311E	0x6FC9      	MOVWF       ?lstr45_FirmV_0_7_0+10, 1
0x3120	0x0E61      	MOVLW       97
0x3122	0x6FCA      	MOVWF       ?lstr45_FirmV_0_7_0+11, 1
0x3124	0x0E72      	MOVLW       114
0x3126	0x6FCB      	MOVWF       ?lstr45_FirmV_0_7_0+12, 1
0x3128	0x0E74      	MOVLW       116
0x312A	0x6FCC      	MOVWF       ?lstr45_FirmV_0_7_0+13, 1
0x312C	0x6BCD      	CLRF        ?lstr45_FirmV_0_7_0+14, 1
0x312E	0x0EBF      	MOVLW       ?lstr45_FirmV_0_7_0
0x3130	0x0103      	MOVLB       3
0x3132	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x3134	0x0E02      	MOVLW       hi_addr(?lstr45_FirmV_0_7_0)
0x3136	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x3138	0x0E01      	MOVLW       1
0x313A	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x313C	0xF009EC69  	CALL        _Logger, 0
L_State7231:
;FirmV_0_7_0.c,1106 :: 		if(CheckTask(2))
0x3140	0x0E02      	MOVLW       2
0x3142	0x0103      	MOVLB       3
0x3144	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3146	0xF009EC28  	CALL        _CheckTask, 0
0x314A	0x5200      	MOVF        R0, 1 
0x314C	0xE052      	BZ          L_State7232
;FirmV_0_7_0.c,1107 :: 		{StartMotor(2,_Close);Logger("S7 Motor2Start",1);memcpy(LCDLine1,_closing,16);memcpy(LCDLine2,_Blank,16);LCDUpdateFlag=1;LCDLines=1;}
0x314E	0x0E02      	MOVLW       2
0x3150	0x0103      	MOVLB       3
0x3152	0x6FD9      	MOVWF       FARG_StartMotor_Mx, 1
0x3154	0x6BDA      	CLRF        FARG_StartMotor_Dir, 1
0x3156	0xF011ECCA  	CALL        _StartMotor, 0
0x315A	0x0E53      	MOVLW       83
0x315C	0x0102      	MOVLB       2
0x315E	0x6FCE      	MOVWF       ?lstr46_FirmV_0_7_0, 1
0x3160	0x0E37      	MOVLW       55
0x3162	0x6FCF      	MOVWF       ?lstr46_FirmV_0_7_0+1, 1
0x3164	0x0E20      	MOVLW       32
0x3166	0x6FD0      	MOVWF       ?lstr46_FirmV_0_7_0+2, 1
0x3168	0x0E4D      	MOVLW       77
0x316A	0x6FD1      	MOVWF       ?lstr46_FirmV_0_7_0+3, 1
0x316C	0x0E6F      	MOVLW       111
0x316E	0x6FD2      	MOVWF       ?lstr46_FirmV_0_7_0+4, 1
0x3170	0x0E74      	MOVLW       116
0x3172	0x6FD3      	MOVWF       ?lstr46_FirmV_0_7_0+5, 1
0x3174	0x0E6F      	MOVLW       111
0x3176	0x6FD4      	MOVWF       ?lstr46_FirmV_0_7_0+6, 1
0x3178	0x0E72      	MOVLW       114
0x317A	0x6FD5      	MOVWF       ?lstr46_FirmV_0_7_0+7, 1
0x317C	0x0E32      	MOVLW       50
0x317E	0x6FD6      	MOVWF       ?lstr46_FirmV_0_7_0+8, 1
0x3180	0x0E53      	MOVLW       83
0x3182	0x6FD7      	MOVWF       ?lstr46_FirmV_0_7_0+9, 1
0x3184	0x0E74      	MOVLW       116
0x3186	0x6FD8      	MOVWF       ?lstr46_FirmV_0_7_0+10, 1
0x3188	0x0E61      	MOVLW       97
0x318A	0x6FD9      	MOVWF       ?lstr46_FirmV_0_7_0+11, 1
0x318C	0x0E72      	MOVLW       114
0x318E	0x6FDA      	MOVWF       ?lstr46_FirmV_0_7_0+12, 1
0x3190	0x0E74      	MOVLW       116
0x3192	0x6FDB      	MOVWF       ?lstr46_FirmV_0_7_0+13, 1
0x3194	0x6BDC      	CLRF        ?lstr46_FirmV_0_7_0+14, 1
0x3196	0x0ECE      	MOVLW       ?lstr46_FirmV_0_7_0
0x3198	0x0103      	MOVLB       3
0x319A	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x319C	0x0E02      	MOVLW       hi_addr(?lstr46_FirmV_0_7_0)
0x319E	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x31A0	0x0E01      	MOVLW       1
0x31A2	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x31A4	0xF009EC69  	CALL        _Logger, 0
0x31A8	0x0EBD      	MOVLW       _LCDLine1
0x31AA	0x0105      	MOVLB       5
0x31AC	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x31AE	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x31B0	0x0106      	MOVLB       6
0x31B2	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x31B4	0x0EF3      	MOVLW       __closing
0x31B6	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x31B8	0x0E00      	MOVLW       hi_addr(__closing)
0x31BA	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x31BC	0x0E10      	MOVLW       16
0x31BE	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x31C0	0x0E00      	MOVLW       0
0x31C2	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x31C4	0xF001EC0D  	CALL        _memcpy, 0
0x31C8	0x0EA3      	MOVLW       _LCDLine2
0x31CA	0x0105      	MOVLB       5
0x31CC	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x31CE	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x31D0	0x0106      	MOVLB       6
0x31D2	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x31D4	0x0E91      	MOVLW       __Blank
0x31D6	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x31D8	0x0E00      	MOVLW       hi_addr(__Blank)
0x31DA	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x31DC	0x0E10      	MOVLW       16
0x31DE	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x31E0	0x0E00      	MOVLW       0
0x31E2	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x31E4	0xF001EC0D  	CALL        _memcpy, 0
0x31E8	0x0E01      	MOVLW       1
0x31EA	0x0100      	MOVLB       0
0x31EC	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
0x31EE	0x0E01      	MOVLW       1
0x31F0	0x6FB4      	MOVWF       _LCDLines, 1
L_State7232:
;FirmV_0_7_0.c,1109 :: 		if(CheckTask(10))
0x31F2	0x0E0A      	MOVLW       10
0x31F4	0x0103      	MOVLB       3
0x31F6	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x31F8	0xF009EC28  	CALL        _CheckTask, 0
0x31FC	0x5200      	MOVF        R0, 1 
0x31FE	0xE021      	BZ          L_State7233
;FirmV_0_7_0.c,1110 :: 		{OverloadCheckFlag1=1; OverloadInit(1);Logger("S7 M1 Overload Check",1);}
0x3200	0x0E01      	MOVLW       1
0x3202	0x0100      	MOVLB       0
0x3204	0x6FB9      	MOVWF       _OverloadCheckFlag1, 1
0x3206	0x0E01      	MOVLW       1
0x3208	0x0103      	MOVLB       3
0x320A	0x6FD9      	MOVWF       FARG_OverloadInit_ch, 1
0x320C	0xF00BEC66  	CALL        _OverloadInit, 0
0x3210	0x0E41      	MOVLW       ?ICS?lstr47_FirmV_0_7_0
0x3212	0x6EF6      	MOVWF       4086 
0x3214	0x0E8C      	MOVLW       hi_addr(?ICS?lstr47_FirmV_0_7_0)
0x3216	0x6EF7      	MOVWF       TBLPTRH 
0x3218	0x0E00      	MOVLW       higher_addr(?ICS?lstr47_FirmV_0_7_0)
0x321A	0x6EF8      	MOVWF       TBLPTRU 
0x321C	0x0EDD      	MOVLW       ?lstr47_FirmV_0_7_0
0x321E	0x6EE1      	MOVWF       FSR1L 
0x3220	0x0E02      	MOVLW       hi_addr(?lstr47_FirmV_0_7_0)
0x3222	0x6EE2      	MOVWF       FSR1H 
0x3224	0x0E15      	MOVLW       21
0x3226	0x6E00      	MOVWF       R0 
0x3228	0x0E01      	MOVLW       1
0x322A	0x6E01      	MOVWF       R1 
0x322C	0xF005EC2B  	CALL        ___CC2DW, 0
0x3230	0x0EDD      	MOVLW       ?lstr47_FirmV_0_7_0
0x3232	0x0103      	MOVLB       3
0x3234	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x3236	0x0E02      	MOVLW       hi_addr(?lstr47_FirmV_0_7_0)
0x3238	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x323A	0x0E01      	MOVLW       1
0x323C	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x323E	0xF009EC69  	CALL        _Logger, 0
L_State7233:
;FirmV_0_7_0.c,1112 :: 		if(CheckTask(11))
0x3242	0x0E0B      	MOVLW       11
0x3244	0x0103      	MOVLB       3
0x3246	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3248	0xF009EC28  	CALL        _CheckTask, 0
0x324C	0x5200      	MOVF        R0, 1 
0x324E	0xE021      	BZ          L_State7234
;FirmV_0_7_0.c,1113 :: 		{OverloadCheckFlag2=1; OverloadInit(2);Logger("S7 M2 Overload Check",1);}
0x3250	0x0E01      	MOVLW       1
0x3252	0x0100      	MOVLB       0
0x3254	0x6FB6      	MOVWF       _OverloadCheckFlag2, 1
0x3256	0x0E02      	MOVLW       2
0x3258	0x0103      	MOVLB       3
0x325A	0x6FD9      	MOVWF       FARG_OverloadInit_ch, 1
0x325C	0xF00BEC66  	CALL        _OverloadInit, 0
0x3260	0x0E56      	MOVLW       ?ICS?lstr48_FirmV_0_7_0
0x3262	0x6EF6      	MOVWF       4086 
0x3264	0x0E8C      	MOVLW       hi_addr(?ICS?lstr48_FirmV_0_7_0)
0x3266	0x6EF7      	MOVWF       TBLPTRH 
0x3268	0x0E00      	MOVLW       higher_addr(?ICS?lstr48_FirmV_0_7_0)
0x326A	0x6EF8      	MOVWF       TBLPTRU 
0x326C	0x0EF2      	MOVLW       ?lstr48_FirmV_0_7_0
0x326E	0x6EE1      	MOVWF       FSR1L 
0x3270	0x0E02      	MOVLW       hi_addr(?lstr48_FirmV_0_7_0)
0x3272	0x6EE2      	MOVWF       FSR1H 
0x3274	0x0E15      	MOVLW       21
0x3276	0x6E00      	MOVWF       R0 
0x3278	0x0E01      	MOVLW       1
0x327A	0x6E01      	MOVWF       R1 
0x327C	0xF005EC2B  	CALL        ___CC2DW, 0
0x3280	0x0EF2      	MOVLW       ?lstr48_FirmV_0_7_0
0x3282	0x0103      	MOVLB       3
0x3284	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x3286	0x0E02      	MOVLW       hi_addr(?lstr48_FirmV_0_7_0)
0x3288	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x328A	0x0E01      	MOVLW       1
0x328C	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x328E	0xF009EC69  	CALL        _Logger, 0
L_State7234:
;FirmV_0_7_0.c,1115 :: 		if(CheckTask(5))
0x3292	0x0E05      	MOVLW       5
0x3294	0x0103      	MOVLB       3
0x3296	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3298	0xF009EC28  	CALL        _CheckTask, 0
0x329C	0x5200      	MOVF        R0, 1 
0x329E	0xE02F      	BZ          L_State7235
;FirmV_0_7_0.c,1116 :: 		{SetMotorSpeed(1,Motor2FullSpeed); M1isSlow=0;Logger("S7 M1 Speed UP",1);}
0x32A0	0x0E01      	MOVLW       1
0x32A2	0x0103      	MOVLB       3
0x32A4	0x6FD9      	MOVWF       FARG_SetMotorSpeed_M1FullSpeed, 1
0x32A6	0xF3DAC0B8  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x32AA	0xF011ECBA  	CALL        _SetMotorSpeed, 0
0x32AE	0x0100      	MOVLB       0
0x32B0	0x6BBA      	CLRF        _M1isSlow, 1
0x32B2	0x0E53      	MOVLW       83
0x32B4	0x0103      	MOVLB       3
0x32B6	0x6F07      	MOVWF       ?lstr49_FirmV_0_7_0, 1
0x32B8	0x0E37      	MOVLW       55
0x32BA	0x6F08      	MOVWF       ?lstr49_FirmV_0_7_0+1, 1
0x32BC	0x0E20      	MOVLW       32
0x32BE	0x6F09      	MOVWF       ?lstr49_FirmV_0_7_0+2, 1
0x32C0	0x0E4D      	MOVLW       77
0x32C2	0x6F0A      	MOVWF       ?lstr49_FirmV_0_7_0+3, 1
0x32C4	0x0E31      	MOVLW       49
0x32C6	0x6F0B      	MOVWF       ?lstr49_FirmV_0_7_0+4, 1
0x32C8	0x0E20      	MOVLW       32
0x32CA	0x6F0C      	MOVWF       ?lstr49_FirmV_0_7_0+5, 1
0x32CC	0x0E53      	MOVLW       83
0x32CE	0x6F0D      	MOVWF       ?lstr49_FirmV_0_7_0+6, 1
0x32D0	0x0E70      	MOVLW       112
0x32D2	0x6F0E      	MOVWF       ?lstr49_FirmV_0_7_0+7, 1
0x32D4	0x0E65      	MOVLW       101
0x32D6	0x6F0F      	MOVWF       ?lstr49_FirmV_0_7_0+8, 1
0x32D8	0x0E65      	MOVLW       101
0x32DA	0x6F10      	MOVWF       ?lstr49_FirmV_0_7_0+9, 1
0x32DC	0x0E64      	MOVLW       100
0x32DE	0x6F11      	MOVWF       ?lstr49_FirmV_0_7_0+10, 1
0x32E0	0x0E20      	MOVLW       32
0x32E2	0x6F12      	MOVWF       ?lstr49_FirmV_0_7_0+11, 1
0x32E4	0x0E55      	MOVLW       85
0x32E6	0x6F13      	MOVWF       ?lstr49_FirmV_0_7_0+12, 1
0x32E8	0x0E50      	MOVLW       80
0x32EA	0x6F14      	MOVWF       ?lstr49_FirmV_0_7_0+13, 1
0x32EC	0x6B15      	CLRF        ?lstr49_FirmV_0_7_0+14, 1
0x32EE	0x0E07      	MOVLW       ?lstr49_FirmV_0_7_0
0x32F0	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x32F2	0x0E03      	MOVLW       hi_addr(?lstr49_FirmV_0_7_0)
0x32F4	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x32F6	0x0E01      	MOVLW       1
0x32F8	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x32FA	0xF009EC69  	CALL        _Logger, 0
L_State7235:
;FirmV_0_7_0.c,1118 :: 		if(CheckTask(6))
0x32FE	0x0E06      	MOVLW       6
0x3300	0x0103      	MOVLB       3
0x3302	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3304	0xF009EC28  	CALL        _CheckTask, 0
0x3308	0x5200      	MOVF        R0, 1 
0x330A	0xE02F      	BZ          L_State7236
;FirmV_0_7_0.c,1119 :: 		{SetMotorSpeed(Motor1FullSpeed,1); M2isSlow=0;Logger("S7 M2 Speed UP",1);}
0x330C	0xF3D9C0B5  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x3310	0x0E01      	MOVLW       1
0x3312	0x0103      	MOVLB       3
0x3314	0x6FDA      	MOVWF       FARG_SetMotorSpeed_M2FullSpeed, 1
0x3316	0xF011ECBA  	CALL        _SetMotorSpeed, 0
0x331A	0x0100      	MOVLB       0
0x331C	0x6BB7      	CLRF        _M2isSlow, 1
0x331E	0x0E53      	MOVLW       83
0x3320	0x0103      	MOVLB       3
0x3322	0x6F16      	MOVWF       ?lstr50_FirmV_0_7_0, 1
0x3324	0x0E37      	MOVLW       55
0x3326	0x6F17      	MOVWF       ?lstr50_FirmV_0_7_0+1, 1
0x3328	0x0E20      	MOVLW       32
0x332A	0x6F18      	MOVWF       ?lstr50_FirmV_0_7_0+2, 1
0x332C	0x0E4D      	MOVLW       77
0x332E	0x6F19      	MOVWF       ?lstr50_FirmV_0_7_0+3, 1
0x3330	0x0E32      	MOVLW       50
0x3332	0x6F1A      	MOVWF       ?lstr50_FirmV_0_7_0+4, 1
0x3334	0x0E20      	MOVLW       32
0x3336	0x6F1B      	MOVWF       ?lstr50_FirmV_0_7_0+5, 1
0x3338	0x0E53      	MOVLW       83
0x333A	0x6F1C      	MOVWF       ?lstr50_FirmV_0_7_0+6, 1
0x333C	0x0E70      	MOVLW       112
0x333E	0x6F1D      	MOVWF       ?lstr50_FirmV_0_7_0+7, 1
0x3340	0x0E65      	MOVLW       101
0x3342	0x6F1E      	MOVWF       ?lstr50_FirmV_0_7_0+8, 1
0x3344	0x0E65      	MOVLW       101
0x3346	0x6F1F      	MOVWF       ?lstr50_FirmV_0_7_0+9, 1
0x3348	0x0E64      	MOVLW       100
0x334A	0x6F20      	MOVWF       ?lstr50_FirmV_0_7_0+10, 1
0x334C	0x0E20      	MOVLW       32
0x334E	0x6F21      	MOVWF       ?lstr50_FirmV_0_7_0+11, 1
0x3350	0x0E55      	MOVLW       85
0x3352	0x6F22      	MOVWF       ?lstr50_FirmV_0_7_0+12, 1
0x3354	0x0E50      	MOVLW       80
0x3356	0x6F23      	MOVWF       ?lstr50_FirmV_0_7_0+13, 1
0x3358	0x6B24      	CLRF        ?lstr50_FirmV_0_7_0+14, 1
0x335A	0x0E16      	MOVLW       ?lstr50_FirmV_0_7_0
0x335C	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x335E	0x0E03      	MOVLW       hi_addr(?lstr50_FirmV_0_7_0)
0x3360	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x3362	0x0E01      	MOVLW       1
0x3364	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x3366	0xF009EC69  	CALL        _Logger, 0
L_State7236:
;FirmV_0_7_0.c,1121 :: 		if((CheckTask(3)||((OverloadCheckFlag1==1)&&(Events.Overload.b0==1)))&&(CloseDone.b0))
0x336A	0x0E03      	MOVLW       3
0x336C	0x0103      	MOVLB       3
0x336E	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3370	0xF009EC28  	CALL        _CheckTask, 0
0x3374	0x5200      	MOVF        R0, 1 
0x3376	0xE109      	BNZ         L__State7849
0x3378	0x0100      	MOVLB       0
0x337A	0x51B9      	MOVF        _OverloadCheckFlag1, 0, 1
0x337C	0x0A01      	XORLW       1
0x337E	0xE104      	BNZ         L__State7850
0x3380	0x0102      	MOVLB       2
0x3382	0xA19F      	BTFSS       _Events+5, 0, 1
0x3384	0xD001      	BRA         L__State7850
0x3386	0xD001      	BRA         L__State7849
L__State7850:
0x3388	0xD02B      	BRA         L_State7243
L__State7849:
0x338A	0x0101      	MOVLB       1
0x338C	0xA11F      	BTFSS       _CloseDone, 0, 1
0x338E	0xD028      	BRA         L_State7243
L__State7848:
;FirmV_0_7_0.c,1122 :: 		{CloseDone.b0=0; StopMotor(1);Logger("S7 M1 Stoped",1);}
0x3390	0x911F      	BCF         _CloseDone, 0, 1
0x3392	0x0E01      	MOVLW       1
0x3394	0x0103      	MOVLB       3
0x3396	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x3398	0xF008ECA6  	CALL        _StopMotor, 0
0x339C	0x0E53      	MOVLW       83
0x339E	0x0103      	MOVLB       3
0x33A0	0x6F25      	MOVWF       ?lstr51_FirmV_0_7_0, 1
0x33A2	0x0E37      	MOVLW       55
0x33A4	0x6F26      	MOVWF       ?lstr51_FirmV_0_7_0+1, 1
0x33A6	0x0E20      	MOVLW       32
0x33A8	0x6F27      	MOVWF       ?lstr51_FirmV_0_7_0+2, 1
0x33AA	0x0E4D      	MOVLW       77
0x33AC	0x6F28      	MOVWF       ?lstr51_FirmV_0_7_0+3, 1
0x33AE	0x0E31      	MOVLW       49
0x33B0	0x6F29      	MOVWF       ?lstr51_FirmV_0_7_0+4, 1
0x33B2	0x0E20      	MOVLW       32
0x33B4	0x6F2A      	MOVWF       ?lstr51_FirmV_0_7_0+5, 1
0x33B6	0x0E53      	MOVLW       83
0x33B8	0x6F2B      	MOVWF       ?lstr51_FirmV_0_7_0+6, 1
0x33BA	0x0E74      	MOVLW       116
0x33BC	0x6F2C      	MOVWF       ?lstr51_FirmV_0_7_0+7, 1
0x33BE	0x0E6F      	MOVLW       111
0x33C0	0x6F2D      	MOVWF       ?lstr51_FirmV_0_7_0+8, 1
0x33C2	0x0E70      	MOVLW       112
0x33C4	0x6F2E      	MOVWF       ?lstr51_FirmV_0_7_0+9, 1
0x33C6	0x0E65      	MOVLW       101
0x33C8	0x6F2F      	MOVWF       ?lstr51_FirmV_0_7_0+10, 1
0x33CA	0x0E64      	MOVLW       100
0x33CC	0x6F30      	MOVWF       ?lstr51_FirmV_0_7_0+11, 1
0x33CE	0x6B31      	CLRF        ?lstr51_FirmV_0_7_0+12, 1
0x33D0	0x0E25      	MOVLW       ?lstr51_FirmV_0_7_0
0x33D2	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x33D4	0x0E03      	MOVLW       hi_addr(?lstr51_FirmV_0_7_0)
0x33D6	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x33D8	0x0E01      	MOVLW       1
0x33DA	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x33DC	0xF009EC69  	CALL        _Logger, 0
L_State7243:
;FirmV_0_7_0.c,1124 :: 		if((CheckTask(4)||((OverloadCheckFlag2==1)&&(Events.Overload.b1==1)))&&(CloseDone.b1))
0x33E0	0x0E04      	MOVLW       4
0x33E2	0x0103      	MOVLB       3
0x33E4	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x33E6	0xF009EC28  	CALL        _CheckTask, 0
0x33EA	0x5200      	MOVF        R0, 1 
0x33EC	0xE109      	BNZ         L__State7846
0x33EE	0x0100      	MOVLB       0
0x33F0	0x51B6      	MOVF        _OverloadCheckFlag2, 0, 1
0x33F2	0x0A01      	XORLW       1
0x33F4	0xE104      	BNZ         L__State7847
0x33F6	0x0102      	MOVLB       2
0x33F8	0xA39F      	BTFSS       _Events+5, 1, 1
0x33FA	0xD001      	BRA         L__State7847
0x33FC	0xD001      	BRA         L__State7846
L__State7847:
0x33FE	0xD02B      	BRA         L_State7250
L__State7846:
0x3400	0x0101      	MOVLB       1
0x3402	0xA31F      	BTFSS       _CloseDone, 1, 1
0x3404	0xD028      	BRA         L_State7250
L__State7845:
;FirmV_0_7_0.c,1125 :: 		{CloseDone.b1=0; StopMotor(2);Logger("S7 M2 Stoped",1);}
0x3406	0x931F      	BCF         _CloseDone, 1, 1
0x3408	0x0E02      	MOVLW       2
0x340A	0x0103      	MOVLB       3
0x340C	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x340E	0xF008ECA6  	CALL        _StopMotor, 0
0x3412	0x0E53      	MOVLW       83
0x3414	0x0103      	MOVLB       3
0x3416	0x6F32      	MOVWF       ?lstr52_FirmV_0_7_0, 1
0x3418	0x0E37      	MOVLW       55
0x341A	0x6F33      	MOVWF       ?lstr52_FirmV_0_7_0+1, 1
0x341C	0x0E20      	MOVLW       32
0x341E	0x6F34      	MOVWF       ?lstr52_FirmV_0_7_0+2, 1
0x3420	0x0E4D      	MOVLW       77
0x3422	0x6F35      	MOVWF       ?lstr52_FirmV_0_7_0+3, 1
0x3424	0x0E32      	MOVLW       50
0x3426	0x6F36      	MOVWF       ?lstr52_FirmV_0_7_0+4, 1
0x3428	0x0E20      	MOVLW       32
0x342A	0x6F37      	MOVWF       ?lstr52_FirmV_0_7_0+5, 1
0x342C	0x0E53      	MOVLW       83
0x342E	0x6F38      	MOVWF       ?lstr52_FirmV_0_7_0+6, 1
0x3430	0x0E74      	MOVLW       116
0x3432	0x6F39      	MOVWF       ?lstr52_FirmV_0_7_0+7, 1
0x3434	0x0E6F      	MOVLW       111
0x3436	0x6F3A      	MOVWF       ?lstr52_FirmV_0_7_0+8, 1
0x3438	0x0E70      	MOVLW       112
0x343A	0x6F3B      	MOVWF       ?lstr52_FirmV_0_7_0+9, 1
0x343C	0x0E65      	MOVLW       101
0x343E	0x6F3C      	MOVWF       ?lstr52_FirmV_0_7_0+10, 1
0x3440	0x0E64      	MOVLW       100
0x3442	0x6F3D      	MOVWF       ?lstr52_FirmV_0_7_0+11, 1
0x3444	0x6B3E      	CLRF        ?lstr52_FirmV_0_7_0+12, 1
0x3446	0x0E32      	MOVLW       ?lstr52_FirmV_0_7_0
0x3448	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x344A	0x0E03      	MOVLW       hi_addr(?lstr52_FirmV_0_7_0)
0x344C	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x344E	0x0E01      	MOVLW       1
0x3450	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x3452	0xF009EC69  	CALL        _Logger, 0
L_State7250:
;FirmV_0_7_0.c,1127 :: 		if((Door2OpenTime==0)||(ActiveDoors==1))
0x3456	0x0102      	MOVLB       2
0x3458	0x5198      	MOVF        _Door2OpenTime, 0, 1
0x345A	0x0A00      	XORLW       0
0x345C	0xE005      	BZ          L__State7844
0x345E	0x0101      	MOVLB       1
0x3460	0x5132      	MOVF        _ActiveDoors, 0, 1
0x3462	0x0A01      	XORLW       1
0x3464	0xE001      	BZ          L__State7844
0x3466	0xD002      	BRA         L_State7253
L__State7844:
0x3468	0x0101      	MOVLB       1
;FirmV_0_7_0.c,1128 :: 		CloseDone.b1=0;
0x346A	0x931F      	BCF         _CloseDone, 1, 1
L_State7253:
;FirmV_0_7_0.c,1130 :: 		if((Events.Photocell.b0==1))
0x346C	0x0102      	MOVLB       2
0x346E	0xA1A0      	BTFSS       _Events+6, 0, 1
0x3470	0xD055      	BRA         L_State7254
;FirmV_0_7_0.c,1131 :: 		{StopMotor(1); StopMotor(2); OverloadCheckFlag1=0;OverloadCheckFlag2=0;State=6;PhotocellOpenFlag=1;Logger("S7 Photocell Int",1);ClearTasks(9);
0x3472	0x0E01      	MOVLW       1
0x3474	0x0103      	MOVLB       3
0x3476	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x3478	0xF008ECA6  	CALL        _StopMotor, 0
0x347C	0x0E02      	MOVLW       2
0x347E	0x0103      	MOVLB       3
0x3480	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x3482	0xF008ECA6  	CALL        _StopMotor, 0
0x3486	0x0100      	MOVLB       0
0x3488	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
0x348A	0x6BB6      	CLRF        _OverloadCheckFlag2, 1
0x348C	0x0E06      	MOVLW       6
0x348E	0x0101      	MOVLB       1
0x3490	0x6F44      	MOVWF       _State, 1
0x3492	0x0E01      	MOVLW       1
0x3494	0x6F20      	MOVWF       _PhotocellOpenFlag, 1
0x3496	0x0EA3      	MOVLW       ?ICS?lstr53_FirmV_0_7_0
0x3498	0x6EF6      	MOVWF       4086 
0x349A	0x0E8C      	MOVLW       hi_addr(?ICS?lstr53_FirmV_0_7_0)
0x349C	0x6EF7      	MOVWF       TBLPTRH 
0x349E	0x0E00      	MOVLW       higher_addr(?ICS?lstr53_FirmV_0_7_0)
0x34A0	0x6EF8      	MOVWF       TBLPTRU 
0x34A2	0x0E3F      	MOVLW       ?lstr53_FirmV_0_7_0
0x34A4	0x6EE1      	MOVWF       FSR1L 
0x34A6	0x0E03      	MOVLW       hi_addr(?lstr53_FirmV_0_7_0)
0x34A8	0x6EE2      	MOVWF       FSR1H 
0x34AA	0x0E11      	MOVLW       17
0x34AC	0x6E00      	MOVWF       R0 
0x34AE	0x0E01      	MOVLW       1
0x34B0	0x6E01      	MOVWF       R1 
0x34B2	0xF005EC2B  	CALL        ___CC2DW, 0
0x34B6	0x0E3F      	MOVLW       ?lstr53_FirmV_0_7_0
0x34B8	0x0103      	MOVLB       3
0x34BA	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x34BC	0x0E03      	MOVLW       hi_addr(?lstr53_FirmV_0_7_0)
0x34BE	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x34C0	0x0E01      	MOVLW       1
0x34C2	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x34C4	0xF009EC69  	CALL        _Logger, 0
0x34C8	0x0E09      	MOVLW       9
0x34CA	0x0103      	MOVLB       3
0x34CC	0x6FD9      	MOVWF       FARG_ClearTasks_except, 1
0x34CE	0xF00AEC5C  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,1132 :: 		memcpy(LCDLine1,_stop,16);memcpy(LCDLine2,_ErrPhoto,16);LCDUpdateFlag=1;LCDLines=2;}
0x34D2	0x0EBD      	MOVLW       _LCDLine1
0x34D4	0x0105      	MOVLB       5
0x34D6	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x34D8	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x34DA	0x0106      	MOVLB       6
0x34DC	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x34DE	0x0E56      	MOVLW       __stop
0x34E0	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x34E2	0x0E01      	MOVLW       hi_addr(__stop)
0x34E4	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x34E6	0x0E10      	MOVLW       16
0x34E8	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x34EA	0x0E00      	MOVLW       0
0x34EC	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x34EE	0xF001EC0D  	CALL        _memcpy, 0
0x34F2	0x0EA3      	MOVLW       _LCDLine2
0x34F4	0x0105      	MOVLB       5
0x34F6	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x34F8	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x34FA	0x0106      	MOVLB       6
0x34FC	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x34FE	0x0E33      	MOVLW       __errPhoto
0x3500	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x3502	0x0E01      	MOVLW       hi_addr(__errPhoto)
0x3504	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x3506	0x0E10      	MOVLW       16
0x3508	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x350A	0x0E00      	MOVLW       0
0x350C	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x350E	0xF001EC0D  	CALL        _memcpy, 0
0x3512	0x0E01      	MOVLW       1
0x3514	0x0100      	MOVLB       0
0x3516	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
0x3518	0x0E02      	MOVLW       2
0x351A	0x6FB4      	MOVWF       _LCDLines, 1
L_State7254:
;FirmV_0_7_0.c,1134 :: 		if((Events.Remote!=0))
0x351C	0x0102      	MOVLB       2
0x351E	0x519E      	MOVF        _Events+4, 0, 1
0x3520	0x0A00      	XORLW       0
0x3522	0xE053      	BZ          L_State7255
;FirmV_0_7_0.c,1135 :: 		{StopMotor(1); StopMotor(2); State=6;OverloadCheckFlag1=0;OverloadCheckFlag2=0;Logger("S7 Remote Pressed",1);ClearTasks(9);
0x3524	0x0E01      	MOVLW       1
0x3526	0x0103      	MOVLB       3
0x3528	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x352A	0xF008ECA6  	CALL        _StopMotor, 0
0x352E	0x0E02      	MOVLW       2
0x3530	0x0103      	MOVLB       3
0x3532	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x3534	0xF008ECA6  	CALL        _StopMotor, 0
0x3538	0x0E06      	MOVLW       6
0x353A	0x0101      	MOVLB       1
0x353C	0x6F44      	MOVWF       _State, 1
0x353E	0x0100      	MOVLB       0
0x3540	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
0x3542	0x6BB6      	CLRF        _OverloadCheckFlag2, 1
0x3544	0x0EB4      	MOVLW       ?ICS?lstr54_FirmV_0_7_0
0x3546	0x6EF6      	MOVWF       4086 
0x3548	0x0E8C      	MOVLW       hi_addr(?ICS?lstr54_FirmV_0_7_0)
0x354A	0x6EF7      	MOVWF       TBLPTRH 
0x354C	0x0E00      	MOVLW       higher_addr(?ICS?lstr54_FirmV_0_7_0)
0x354E	0x6EF8      	MOVWF       TBLPTRU 
0x3550	0x0E50      	MOVLW       ?lstr54_FirmV_0_7_0
0x3552	0x6EE1      	MOVWF       FSR1L 
0x3554	0x0E03      	MOVLW       hi_addr(?lstr54_FirmV_0_7_0)
0x3556	0x6EE2      	MOVWF       FSR1H 
0x3558	0x0E12      	MOVLW       18
0x355A	0x6E00      	MOVWF       R0 
0x355C	0x0E01      	MOVLW       1
0x355E	0x6E01      	MOVWF       R1 
0x3560	0xF005EC2B  	CALL        ___CC2DW, 0
0x3564	0x0E50      	MOVLW       ?lstr54_FirmV_0_7_0
0x3566	0x0103      	MOVLB       3
0x3568	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x356A	0x0E03      	MOVLW       hi_addr(?lstr54_FirmV_0_7_0)
0x356C	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x356E	0x0E01      	MOVLW       1
0x3570	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x3572	0xF009EC69  	CALL        _Logger, 0
0x3576	0x0E09      	MOVLW       9
0x3578	0x0103      	MOVLB       3
0x357A	0x6FD9      	MOVWF       FARG_ClearTasks_except, 1
0x357C	0xF00AEC5C  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,1136 :: 		memcpy(LCDLine1,_stop,16);memcpy(LCDLine2,_ErrRemote,16);LCDUpdateFlag=1;LCDLines=2;}
0x3580	0x0EBD      	MOVLW       _LCDLine1
0x3582	0x0105      	MOVLB       5
0x3584	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x3586	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x3588	0x0106      	MOVLB       6
0x358A	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x358C	0x0E56      	MOVLW       __stop
0x358E	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x3590	0x0E01      	MOVLW       hi_addr(__stop)
0x3592	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x3594	0x0E10      	MOVLW       16
0x3596	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x3598	0x0E00      	MOVLW       0
0x359A	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x359C	0xF001EC0D  	CALL        _memcpy, 0
0x35A0	0x0EA3      	MOVLW       _LCDLine2
0x35A2	0x0105      	MOVLB       5
0x35A4	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x35A6	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x35A8	0x0106      	MOVLB       6
0x35AA	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x35AC	0x0E67      	MOVLW       __errRemote
0x35AE	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x35B0	0x0E01      	MOVLW       hi_addr(__errRemote)
0x35B2	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x35B4	0x0E10      	MOVLW       16
0x35B6	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x35B8	0x0E00      	MOVLW       0
0x35BA	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x35BC	0xF001EC0D  	CALL        _memcpy, 0
0x35C0	0x0E01      	MOVLW       1
0x35C2	0x0100      	MOVLB       0
0x35C4	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
0x35C6	0x0E02      	MOVLW       2
0x35C8	0x6FB4      	MOVWF       _LCDLines, 1
L_State7255:
;FirmV_0_7_0.c,1138 :: 		if((Events.Limiter==1)&&(LimiterEnable))
0x35CA	0x0102      	MOVLB       2
0x35CC	0x51A1      	MOVF        _Events+7, 0, 1
0x35CE	0x0A01      	XORLW       1
0x35D0	0xE155      	BNZ         L_State7258
0x35D2	0x53A4      	MOVF        _LimiterEnable, 1, 1
0x35D4	0xE053      	BZ          L_State7258
L__State7843:
;FirmV_0_7_0.c,1139 :: 		{StopMotor(1); StopMotor(2); State=6;OverloadCheckFlag1=0;OverloadCheckFlag2=0;Logger("S7 Limit Switch Stop",1);ClearTasks(9);
0x35D6	0x0E01      	MOVLW       1
0x35D8	0x0103      	MOVLB       3
0x35DA	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x35DC	0xF008ECA6  	CALL        _StopMotor, 0
0x35E0	0x0E02      	MOVLW       2
0x35E2	0x0103      	MOVLB       3
0x35E4	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x35E6	0xF008ECA6  	CALL        _StopMotor, 0
0x35EA	0x0E06      	MOVLW       6
0x35EC	0x0101      	MOVLB       1
0x35EE	0x6F44      	MOVWF       _State, 1
0x35F0	0x0100      	MOVLB       0
0x35F2	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
0x35F4	0x6BB6      	CLRF        _OverloadCheckFlag2, 1
0x35F6	0x0EC6      	MOVLW       ?ICS?lstr55_FirmV_0_7_0
0x35F8	0x6EF6      	MOVWF       4086 
0x35FA	0x0E8C      	MOVLW       hi_addr(?ICS?lstr55_FirmV_0_7_0)
0x35FC	0x6EF7      	MOVWF       TBLPTRH 
0x35FE	0x0E00      	MOVLW       higher_addr(?ICS?lstr55_FirmV_0_7_0)
0x3600	0x6EF8      	MOVWF       TBLPTRU 
0x3602	0x0E62      	MOVLW       ?lstr55_FirmV_0_7_0
0x3604	0x6EE1      	MOVWF       FSR1L 
0x3606	0x0E03      	MOVLW       hi_addr(?lstr55_FirmV_0_7_0)
0x3608	0x6EE2      	MOVWF       FSR1H 
0x360A	0x0E15      	MOVLW       21
0x360C	0x6E00      	MOVWF       R0 
0x360E	0x0E01      	MOVLW       1
0x3610	0x6E01      	MOVWF       R1 
0x3612	0xF005EC2B  	CALL        ___CC2DW, 0
0x3616	0x0E62      	MOVLW       ?lstr55_FirmV_0_7_0
0x3618	0x0103      	MOVLB       3
0x361A	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x361C	0x0E03      	MOVLW       hi_addr(?lstr55_FirmV_0_7_0)
0x361E	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x3620	0x0E01      	MOVLW       1
0x3622	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x3624	0xF009EC69  	CALL        _Logger, 0
0x3628	0x0E09      	MOVLW       9
0x362A	0x0103      	MOVLB       3
0x362C	0x6FD9      	MOVWF       FARG_ClearTasks_except, 1
0x362E	0xF00AEC5C  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,1140 :: 		memcpy(LCDLine1,_stop,16);memcpy(LCDLine2,_ErrLimit,16);LCDUpdateFlag=1;LCDLines=2;}
0x3632	0x0EBD      	MOVLW       _LCDLine1
0x3634	0x0105      	MOVLB       5
0x3636	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x3638	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x363A	0x0106      	MOVLB       6
0x363C	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x363E	0x0E56      	MOVLW       __stop
0x3640	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x3642	0x0E01      	MOVLW       hi_addr(__stop)
0x3644	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x3646	0x0E10      	MOVLW       16
0x3648	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x364A	0x0E00      	MOVLW       0
0x364C	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x364E	0xF001EC0D  	CALL        _memcpy, 0
0x3652	0x0EA3      	MOVLW       _LCDLine2
0x3654	0x0105      	MOVLB       5
0x3656	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x3658	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x365A	0x0106      	MOVLB       6
0x365C	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x365E	0x0E78      	MOVLW       __errLimit
0x3660	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x3662	0x0E01      	MOVLW       hi_addr(__errLimit)
0x3664	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x3666	0x0E10      	MOVLW       16
0x3668	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x366A	0x0E00      	MOVLW       0
0x366C	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x366E	0xF001EC0D  	CALL        _memcpy, 0
0x3672	0x0E01      	MOVLW       1
0x3674	0x0100      	MOVLB       0
0x3676	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
0x3678	0x0E02      	MOVLW       2
0x367A	0x6FB4      	MOVWF       _LCDLines, 1
L_State7258:
;FirmV_0_7_0.c,1142 :: 		if(CloseDone==0)
0x367C	0x0101      	MOVLB       1
0x367E	0x511F      	MOVF        _CloseDone, 0, 1
0x3680	0x0A00      	XORLW       0
0x3682	0xA4D8      	BTFSS       STATUS, 2 
0x3684	0xD0A7      	BRA         L_State7259
;FirmV_0_7_0.c,1143 :: 		if(LockEnable)
0x3686	0x0102      	MOVLB       2
0x3688	0x53A3      	MOVF        _LockEnable, 1, 1
0x368A	0xB4D8      	BTFSC       STATUS, 2 
0x368C	0xD089      	BRA         L_State7260
;FirmV_0_7_0.c,1144 :: 		{StartMotor(1,_Open);AddTask(ms500+1,14);SetMotorSpeed(1,Motor2FullSpeed);OverloadCheckFlag1=0; M1isSlow=0;SetMotorSpeed(Motor1FullSpeed,1);OverloadCheckFlag2=0; M2isSlow=0;
0x368E	0x0E01      	MOVLW       1
0x3690	0x0103      	MOVLB       3
0x3692	0x6FD9      	MOVWF       FARG_StartMotor_Mx, 1
0x3694	0x0E01      	MOVLW       1
0x3696	0x6FDA      	MOVWF       FARG_StartMotor_Dir, 1
0x3698	0xF011ECCA  	CALL        _StartMotor, 0
0x369C	0x0E01      	MOVLW       1
0x369E	0x0101      	MOVLB       1
0x36A0	0x2504      	ADDWF       _ms500, 0, 1
0x36A2	0x0103      	MOVLB       3
0x36A4	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x36A6	0x0E00      	MOVLW       0
0x36A8	0x0101      	MOVLB       1
0x36AA	0x2105      	ADDWFC      _ms500+1, 0, 1
0x36AC	0x0103      	MOVLB       3
0x36AE	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x36B0	0x0E00      	MOVLW       0
0x36B2	0x0101      	MOVLB       1
0x36B4	0x2106      	ADDWFC      _ms500+2, 0, 1
0x36B6	0x0103      	MOVLB       3
0x36B8	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x36BA	0x0E00      	MOVLW       0
0x36BC	0x0101      	MOVLB       1
0x36BE	0x2107      	ADDWFC      _ms500+3, 0, 1
0x36C0	0x0103      	MOVLB       3
0x36C2	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x36C4	0x0E0E      	MOVLW       14
0x36C6	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x36C8	0xF008ECB5  	CALL        _AddTask, 0
0x36CC	0x0E01      	MOVLW       1
0x36CE	0x6FD9      	MOVWF       FARG_SetMotorSpeed_M1FullSpeed, 1
0x36D0	0xF3DAC0B8  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x36D4	0xF011ECBA  	CALL        _SetMotorSpeed, 0
0x36D8	0x0100      	MOVLB       0
0x36DA	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
0x36DC	0x6BBA      	CLRF        _M1isSlow, 1
0x36DE	0xF3D9C0B5  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x36E2	0x0E01      	MOVLW       1
0x36E4	0x0103      	MOVLB       3
0x36E6	0x6FDA      	MOVWF       FARG_SetMotorSpeed_M2FullSpeed, 1
0x36E8	0xF011ECBA  	CALL        _SetMotorSpeed, 0
0x36EC	0x0100      	MOVLB       0
0x36EE	0x6BB6      	CLRF        _OverloadCheckFlag2, 1
0x36F0	0x6BB7      	CLRF        _M2isSlow, 1
;FirmV_0_7_0.c,1145 :: 		AddTask(ms500+RelaseTime,3);AddTask(ms500+1+RelaseTime,4);AddTask(ms500+1+RelaseTime,13);CloseDone.b2=1;}
0x36F2	0x0E01      	MOVLW       1
0x36F4	0x0101      	MOVLB       1
0x36F6	0x2504      	ADDWF       _ms500, 0, 1
0x36F8	0x0103      	MOVLB       3
0x36FA	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x36FC	0x0E00      	MOVLW       0
0x36FE	0x0101      	MOVLB       1
0x3700	0x2105      	ADDWFC      _ms500+1, 0, 1
0x3702	0x0103      	MOVLB       3
0x3704	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x3706	0x0E00      	MOVLW       0
0x3708	0x0101      	MOVLB       1
0x370A	0x2106      	ADDWFC      _ms500+2, 0, 1
0x370C	0x0103      	MOVLB       3
0x370E	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x3710	0x0E00      	MOVLW       0
0x3712	0x0101      	MOVLB       1
0x3714	0x2107      	ADDWFC      _ms500+3, 0, 1
0x3716	0x0103      	MOVLB       3
0x3718	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x371A	0x0E03      	MOVLW       3
0x371C	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x371E	0xF008ECB5  	CALL        _AddTask, 0
0x3722	0x0E01      	MOVLW       1
0x3724	0x0101      	MOVLB       1
0x3726	0x2504      	ADDWF       _ms500, 0, 1
0x3728	0x0103      	MOVLB       3
0x372A	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x372C	0x0E00      	MOVLW       0
0x372E	0x0101      	MOVLB       1
0x3730	0x2105      	ADDWFC      _ms500+1, 0, 1
0x3732	0x0103      	MOVLB       3
0x3734	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x3736	0x0E00      	MOVLW       0
0x3738	0x0101      	MOVLB       1
0x373A	0x2106      	ADDWFC      _ms500+2, 0, 1
0x373C	0x0103      	MOVLB       3
0x373E	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x3740	0x0E00      	MOVLW       0
0x3742	0x0101      	MOVLB       1
0x3744	0x2107      	ADDWFC      _ms500+3, 0, 1
0x3746	0x0103      	MOVLB       3
0x3748	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x374A	0x0E01      	MOVLW       1
0x374C	0x27D9      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x374E	0x0E00      	MOVLW       0
0x3750	0x23DA      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x3752	0x23DB      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x3754	0x23DC      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x3756	0x0E04      	MOVLW       4
0x3758	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x375A	0xF008ECB5  	CALL        _AddTask, 0
0x375E	0x0E01      	MOVLW       1
0x3760	0x0101      	MOVLB       1
0x3762	0x2504      	ADDWF       _ms500, 0, 1
0x3764	0x0103      	MOVLB       3
0x3766	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x3768	0x0E00      	MOVLW       0
0x376A	0x0101      	MOVLB       1
0x376C	0x2105      	ADDWFC      _ms500+1, 0, 1
0x376E	0x0103      	MOVLB       3
0x3770	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x3772	0x0E00      	MOVLW       0
0x3774	0x0101      	MOVLB       1
0x3776	0x2106      	ADDWFC      _ms500+2, 0, 1
0x3778	0x0103      	MOVLB       3
0x377A	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x377C	0x0E00      	MOVLW       0
0x377E	0x0101      	MOVLB       1
0x3780	0x2107      	ADDWFC      _ms500+3, 0, 1
0x3782	0x0103      	MOVLB       3
0x3784	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x3786	0x0E01      	MOVLW       1
0x3788	0x27D9      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x378A	0x0E00      	MOVLW       0
0x378C	0x23DA      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x378E	0x23DB      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x3790	0x23DC      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x3792	0x0E0D      	MOVLW       13
0x3794	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x3796	0xF008ECB5  	CALL        _AddTask, 0
0x379A	0x0101      	MOVLB       1
0x379C	0x851F      	BSF         _CloseDone, 2, 1
0x379E	0xD01A      	BRA         L_State7261
L_State7260:
0x37A0	0x0101      	MOVLB       1
;FirmV_0_7_0.c,1147 :: 		{AddTask(ms500+1,13);CloseDone.b2=1;}
0x37A2	0x0E01      	MOVLW       1
0x37A4	0x2504      	ADDWF       _ms500, 0, 1
0x37A6	0x0103      	MOVLB       3
0x37A8	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x37AA	0x0E00      	MOVLW       0
0x37AC	0x0101      	MOVLB       1
0x37AE	0x2105      	ADDWFC      _ms500+1, 0, 1
0x37B0	0x0103      	MOVLB       3
0x37B2	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x37B4	0x0E00      	MOVLW       0
0x37B6	0x0101      	MOVLB       1
0x37B8	0x2106      	ADDWFC      _ms500+2, 0, 1
0x37BA	0x0103      	MOVLB       3
0x37BC	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x37BE	0x0E00      	MOVLW       0
0x37C0	0x0101      	MOVLB       1
0x37C2	0x2107      	ADDWFC      _ms500+3, 0, 1
0x37C4	0x0103      	MOVLB       3
0x37C6	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x37C8	0x0E0D      	MOVLW       13
0x37CA	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x37CC	0xF008ECB5  	CALL        _AddTask, 0
0x37D0	0x0101      	MOVLB       1
0x37D2	0x851F      	BSF         _CloseDone, 2, 1
L_State7261:
L_State7259:
;FirmV_0_7_0.c,1149 :: 		if(CheckTask(14))
0x37D4	0x0E0E      	MOVLW       14
0x37D6	0x0103      	MOVLB       3
0x37D8	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x37DA	0xF009EC28  	CALL        _CheckTask, 0
0x37DE	0x5200      	MOVF        R0, 1 
0x37E0	0xE007      	BZ          L_State7262
;FirmV_0_7_0.c,1150 :: 		StartMotor(2,_Open);
0x37E2	0x0E02      	MOVLW       2
0x37E4	0x0103      	MOVLB       3
0x37E6	0x6FD9      	MOVWF       FARG_StartMotor_Mx, 1
0x37E8	0x0E01      	MOVLW       1
0x37EA	0x6FDA      	MOVWF       FARG_StartMotor_Dir, 1
0x37EC	0xF011ECCA  	CALL        _StartMotor, 0
L_State7262:
;FirmV_0_7_0.c,1152 :: 		if(CheckTask(13))
0x37F0	0x0E0D      	MOVLW       13
0x37F2	0x0103      	MOVLB       3
0x37F4	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x37F6	0xF009EC28  	CALL        _CheckTask, 0
0x37FA	0x5200      	MOVF        R0, 1 
0x37FC	0xE02E      	BZ          L_State7263
;FirmV_0_7_0.c,1153 :: 		{State=1; PassFlag=0;ClearTasks(9);memcpy(LCDLine1,_close,16);memcpy(LCDLine2,_Blank,16);LCDUpdateFlag=1;LCDLines=1;}
0x37FE	0x0E01      	MOVLW       1
0x3800	0x0101      	MOVLB       1
0x3802	0x6F44      	MOVWF       _State, 1
0x3804	0x6B08      	CLRF        _PassFlag, 1
0x3806	0x0E09      	MOVLW       9
0x3808	0x0103      	MOVLB       3
0x380A	0x6FD9      	MOVWF       FARG_ClearTasks_except, 1
0x380C	0xF00AEC5C  	CALL        _ClearTasks, 0
0x3810	0x0EBD      	MOVLW       _LCDLine1
0x3812	0x0105      	MOVLB       5
0x3814	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x3816	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x3818	0x0106      	MOVLB       6
0x381A	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x381C	0x0E21      	MOVLW       __close
0x381E	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x3820	0x0E01      	MOVLW       hi_addr(__close)
0x3822	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x3824	0x0E10      	MOVLW       16
0x3826	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x3828	0x0E00      	MOVLW       0
0x382A	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x382C	0xF001EC0D  	CALL        _memcpy, 0
0x3830	0x0EA3      	MOVLW       _LCDLine2
0x3832	0x0105      	MOVLB       5
0x3834	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x3836	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x3838	0x0106      	MOVLB       6
0x383A	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x383C	0x0E91      	MOVLW       __Blank
0x383E	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x3840	0x0E00      	MOVLW       hi_addr(__Blank)
0x3842	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x3844	0x0E10      	MOVLW       16
0x3846	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x3848	0x0E00      	MOVLW       0
0x384A	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x384C	0xF001EC0D  	CALL        _memcpy, 0
0x3850	0x0E01      	MOVLW       1
0x3852	0x0100      	MOVLB       0
0x3854	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
0x3856	0x0E01      	MOVLW       1
0x3858	0x6FB4      	MOVWF       _LCDLines, 1
L_State7263:
;FirmV_0_7_0.c,1155 :: 		if((State==5)||(State==6))
0x385A	0x0101      	MOVLB       1
0x385C	0x5144      	MOVF        _State, 0, 1
0x385E	0x0A05      	XORLW       5
0x3860	0xE004      	BZ          L__State7842
0x3862	0x5144      	MOVF        _State, 0, 1
0x3864	0x0A06      	XORLW       6
0x3866	0xE001      	BZ          L__State7842
0x3868	0xD051      	BRA         L_State7266
L__State7842:
;FirmV_0_7_0.c,1156 :: 		{ClearTasks(0);if(AutoCloseTime!=0){AddTask(ms500+AutoCloseTime,9);Logger("S7 Autoclose Renewed",1);memcpy(LCDLine2,_autoclose,16);LCDUpdateFlag=1;LCDLines=2;}}
0x386A	0x0103      	MOVLB       3
0x386C	0x6BD9      	CLRF        FARG_ClearTasks_except, 1
0x386E	0xF00AEC5C  	CALL        _ClearTasks, 0
0x3872	0x0E00      	MOVLW       0
0x3874	0x0102      	MOVLB       2
0x3876	0x1996      	XORWF       _AutoCloseTime+1, 0, 1
0x3878	0xE102      	BNZ         L__State7937
0x387A	0x0E00      	MOVLW       0
0x387C	0x1995      	XORWF       _AutoCloseTime, 0, 1
L__State7937:
0x387E	0xE046      	BZ          L_State7267
0x3880	0x5195      	MOVF        _AutoCloseTime, 0, 1
0x3882	0x0101      	MOVLB       1
0x3884	0x2504      	ADDWF       _ms500, 0, 1
0x3886	0x0103      	MOVLB       3
0x3888	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x388A	0x0102      	MOVLB       2
0x388C	0x5196      	MOVF        _AutoCloseTime+1, 0, 1
0x388E	0x0101      	MOVLB       1
0x3890	0x2105      	ADDWFC      _ms500+1, 0, 1
0x3892	0x0103      	MOVLB       3
0x3894	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x3896	0x0E00      	MOVLW       0
0x3898	0x0101      	MOVLB       1
0x389A	0x2106      	ADDWFC      _ms500+2, 0, 1
0x389C	0x0103      	MOVLB       3
0x389E	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x38A0	0x0E00      	MOVLW       0
0x38A2	0x0101      	MOVLB       1
0x38A4	0x2107      	ADDWFC      _ms500+3, 0, 1
0x38A6	0x0103      	MOVLB       3
0x38A8	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x38AA	0x0E09      	MOVLW       9
0x38AC	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x38AE	0xF008ECB5  	CALL        _AddTask, 0
0x38B2	0x0EDB      	MOVLW       ?ICS?lstr56_FirmV_0_7_0
0x38B4	0x6EF6      	MOVWF       4086 
0x38B6	0x0E8C      	MOVLW       hi_addr(?ICS?lstr56_FirmV_0_7_0)
0x38B8	0x6EF7      	MOVWF       TBLPTRH 
0x38BA	0x0E00      	MOVLW       higher_addr(?ICS?lstr56_FirmV_0_7_0)
0x38BC	0x6EF8      	MOVWF       TBLPTRU 
0x38BE	0x0E77      	MOVLW       ?lstr56_FirmV_0_7_0
0x38C0	0x6EE1      	MOVWF       FSR1L 
0x38C2	0x0E03      	MOVLW       hi_addr(?lstr56_FirmV_0_7_0)
0x38C4	0x6EE2      	MOVWF       FSR1H 
0x38C6	0x0E15      	MOVLW       21
0x38C8	0x6E00      	MOVWF       R0 
0x38CA	0x0E01      	MOVLW       1
0x38CC	0x6E01      	MOVWF       R1 
0x38CE	0xF005EC2B  	CALL        ___CC2DW, 0
0x38D2	0x0E77      	MOVLW       ?lstr56_FirmV_0_7_0
0x38D4	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x38D6	0x0E03      	MOVLW       hi_addr(?lstr56_FirmV_0_7_0)
0x38D8	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x38DA	0x0E01      	MOVLW       1
0x38DC	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x38DE	0xF009EC69  	CALL        _Logger, 0
0x38E2	0x0EA3      	MOVLW       _LCDLine2
0x38E4	0x0105      	MOVLB       5
0x38E6	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x38E8	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x38EA	0x0106      	MOVLB       6
0x38EC	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x38EE	0x0EE2      	MOVLW       __autoclose
0x38F0	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x38F2	0x0E00      	MOVLW       hi_addr(__autoclose)
0x38F4	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x38F6	0x0E10      	MOVLW       16
0x38F8	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x38FA	0x0E00      	MOVLW       0
0x38FC	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x38FE	0xF001EC0D  	CALL        _memcpy, 0
0x3902	0x0E01      	MOVLW       1
0x3904	0x0100      	MOVLB       0
0x3906	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
0x3908	0x0E02      	MOVLW       2
0x390A	0x6FB4      	MOVWF       _LCDLines, 1
L_State7267:
L_State7266:
;FirmV_0_7_0.c,1159 :: 		}
0x390C	0x0012      	RETURN      0
; end of _State7
_LearnAuto:
;FirmV_0_7_0.c,2375 :: 		void LearnAuto()
;FirmV_0_7_0.c,2381 :: 		switch(LearnPhase)
0x390E	0xD20B      	BRA         L_LearnAuto636
;FirmV_0_7_0.c,2383 :: 		case 0:
L_LearnAuto638:
;FirmV_0_7_0.c,2384 :: 		Flasher=1;
0x3910	0x8E83      	BSF         PORTD, 7 
;FirmV_0_7_0.c,2386 :: 		if(Events.Remote.b0==1) {DoorNo=2; LearnPhase=LearnPhase+1;BuzzFlag=1;} if(Events.Remote.b1==1) {DoorNo=1;LearnPhase=3;BuzzFlag=1;}
0x3912	0x0102      	MOVLB       2
0x3914	0xA19E      	BTFSS       _Events+4, 0, 1
0x3916	0xD006      	BRA         L_LearnAuto639
0x3918	0x0E02      	MOVLW       2
0x391A	0x6F65      	MOVWF       LearnAuto_DoorNo_L0, 1
0x391C	0x2B97      	INCF        _LearnPhase, 1, 1
0x391E	0x0E01      	MOVLW       1
0x3920	0x0101      	MOVLB       1
0x3922	0x6F1C      	MOVWF       _BuzzFlag, 1
L_LearnAuto639:
0x3924	0x0102      	MOVLB       2
0x3926	0xA39E      	BTFSS       _Events+4, 1, 1
0x3928	0xD007      	BRA         L_LearnAuto640
0x392A	0x0E01      	MOVLW       1
0x392C	0x6F65      	MOVWF       LearnAuto_DoorNo_L0, 1
0x392E	0x0E03      	MOVLW       3
0x3930	0x6F97      	MOVWF       _LearnPhase, 1
0x3932	0x0E01      	MOVLW       1
0x3934	0x0101      	MOVLB       1
0x3936	0x6F1C      	MOVWF       _BuzzFlag, 1
L_LearnAuto640:
;FirmV_0_7_0.c,2387 :: 		OverloadCheckFlag1=0;OverloadCheckFlag2=0;
0x3938	0x0100      	MOVLB       0
0x393A	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
0x393C	0x6BB6      	CLRF        _OverloadCheckFlag2, 1
;FirmV_0_7_0.c,2388 :: 		break;
0x393E	0xD22C      	BRA         L_LearnAuto637
;FirmV_0_7_0.c,2390 :: 		case 1: //Start D2 and enable overload sensing after 3s
L_LearnAuto641:
;FirmV_0_7_0.c,2391 :: 		StartMotor(2,_Close);AddTask(ms500+6,21);LearnPhase=LearnPhase+1;
0x3940	0x0E02      	MOVLW       2
0x3942	0x0103      	MOVLB       3
0x3944	0x6FD9      	MOVWF       FARG_StartMotor_Mx, 1
0x3946	0x6BDA      	CLRF        FARG_StartMotor_Dir, 1
0x3948	0xF011ECCA  	CALL        _StartMotor, 0
0x394C	0x0E06      	MOVLW       6
0x394E	0x0101      	MOVLB       1
0x3950	0x2504      	ADDWF       _ms500, 0, 1
0x3952	0x0103      	MOVLB       3
0x3954	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x3956	0x0E00      	MOVLW       0
0x3958	0x0101      	MOVLB       1
0x395A	0x2105      	ADDWFC      _ms500+1, 0, 1
0x395C	0x0103      	MOVLB       3
0x395E	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x3960	0x0E00      	MOVLW       0
0x3962	0x0101      	MOVLB       1
0x3964	0x2106      	ADDWFC      _ms500+2, 0, 1
0x3966	0x0103      	MOVLB       3
0x3968	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x396A	0x0E00      	MOVLW       0
0x396C	0x0101      	MOVLB       1
0x396E	0x2107      	ADDWFC      _ms500+3, 0, 1
0x3970	0x0103      	MOVLB       3
0x3972	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x3974	0x0E15      	MOVLW       21
0x3976	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x3978	0xF008ECB5  	CALL        _AddTask, 0
0x397C	0x0102      	MOVLB       2
0x397E	0x2B97      	INCF        _LearnPhase, 1, 1
;FirmV_0_7_0.c,2392 :: 		break;
0x3980	0xD20B      	BRA         L_LearnAuto637
;FirmV_0_7_0.c,2394 :: 		case 2: //Check if D2 reaches end of its course
L_LearnAuto642:
;FirmV_0_7_0.c,2395 :: 		if((Events.Overload.b1==1)&&(OverloadCheckFlag2==1)){OverloadCheckFlag2=0;StopMotor(2);LearnPhase=LearnPhase+1;}
0x3982	0xA39F      	BTFSS       _Events+5, 1, 1
0x3984	0xD00C      	BRA         L_LearnAuto645
0x3986	0x0100      	MOVLB       0
0x3988	0x51B6      	MOVF        _OverloadCheckFlag2, 0, 1
0x398A	0x0A01      	XORLW       1
0x398C	0xE108      	BNZ         L_LearnAuto645
L__LearnAuto924:
0x398E	0x6BB6      	CLRF        _OverloadCheckFlag2, 1
0x3990	0x0E02      	MOVLW       2
0x3992	0x0103      	MOVLB       3
0x3994	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x3996	0xF008ECA6  	CALL        _StopMotor, 0
0x399A	0x0102      	MOVLB       2
0x399C	0x2B97      	INCF        _LearnPhase, 1, 1
L_LearnAuto645:
;FirmV_0_7_0.c,2396 :: 		if(CheckTask(21))OverloadCheckFlag2=1;
0x399E	0x0E15      	MOVLW       21
0x39A0	0x0103      	MOVLB       3
0x39A2	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x39A4	0xF009EC28  	CALL        _CheckTask, 0
0x39A8	0x5200      	MOVF        R0, 1 
0x39AA	0xE003      	BZ          L_LearnAuto646
0x39AC	0x0E01      	MOVLW       1
0x39AE	0x0100      	MOVLB       0
0x39B0	0x6FB6      	MOVWF       _OverloadCheckFlag2, 1
L_LearnAuto646:
;FirmV_0_7_0.c,2397 :: 		break;
0x39B2	0xD1F2      	BRA         L_LearnAuto637
;FirmV_0_7_0.c,2399 :: 		case 3: //Start D1 and enable overload sensin after 3 s
L_LearnAuto647:
;FirmV_0_7_0.c,2400 :: 		StartMotor(1,_Close);AddTask(ms500+6,20);LearnPhase=LearnPhase+1;;
0x39B4	0x0E01      	MOVLW       1
0x39B6	0x0103      	MOVLB       3
0x39B8	0x6FD9      	MOVWF       FARG_StartMotor_Mx, 1
0x39BA	0x6BDA      	CLRF        FARG_StartMotor_Dir, 1
0x39BC	0xF011ECCA  	CALL        _StartMotor, 0
0x39C0	0x0E06      	MOVLW       6
0x39C2	0x0101      	MOVLB       1
0x39C4	0x2504      	ADDWF       _ms500, 0, 1
0x39C6	0x0103      	MOVLB       3
0x39C8	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x39CA	0x0E00      	MOVLW       0
0x39CC	0x0101      	MOVLB       1
0x39CE	0x2105      	ADDWFC      _ms500+1, 0, 1
0x39D0	0x0103      	MOVLB       3
0x39D2	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x39D4	0x0E00      	MOVLW       0
0x39D6	0x0101      	MOVLB       1
0x39D8	0x2106      	ADDWFC      _ms500+2, 0, 1
0x39DA	0x0103      	MOVLB       3
0x39DC	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x39DE	0x0E00      	MOVLW       0
0x39E0	0x0101      	MOVLB       1
0x39E2	0x2107      	ADDWFC      _ms500+3, 0, 1
0x39E4	0x0103      	MOVLB       3
0x39E6	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x39E8	0x0E14      	MOVLW       20
0x39EA	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x39EC	0xF008ECB5  	CALL        _AddTask, 0
0x39F0	0x0102      	MOVLB       2
0x39F2	0x2B97      	INCF        _LearnPhase, 1, 1
;FirmV_0_7_0.c,2402 :: 		case 4: //Check if D1 reaches end of its course
L_LearnAuto648:
;FirmV_0_7_0.c,2403 :: 		if((Events.Overload.b0==1)&&(OverloadCheckFlag1==1)){OverloadCheckFlag1=0;StopMotor(1);LearnPhase=LearnPhase+1;}
0x39F4	0xA19F      	BTFSS       _Events+5, 0, 1
0x39F6	0xD00C      	BRA         L_LearnAuto651
0x39F8	0x0100      	MOVLB       0
0x39FA	0x51B9      	MOVF        _OverloadCheckFlag1, 0, 1
0x39FC	0x0A01      	XORLW       1
0x39FE	0xE108      	BNZ         L_LearnAuto651
L__LearnAuto923:
0x3A00	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
0x3A02	0x0E01      	MOVLW       1
0x3A04	0x0103      	MOVLB       3
0x3A06	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x3A08	0xF008ECA6  	CALL        _StopMotor, 0
0x3A0C	0x0102      	MOVLB       2
0x3A0E	0x2B97      	INCF        _LearnPhase, 1, 1
L_LearnAuto651:
;FirmV_0_7_0.c,2404 :: 		if(CheckTask(20))OverloadCheckFlag1=1;
0x3A10	0x0E14      	MOVLW       20
0x3A12	0x0103      	MOVLB       3
0x3A14	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3A16	0xF009EC28  	CALL        _CheckTask, 0
0x3A1A	0x5200      	MOVF        R0, 1 
0x3A1C	0xE003      	BZ          L_LearnAuto652
0x3A1E	0x0E01      	MOVLW       1
0x3A20	0x0100      	MOVLB       0
0x3A22	0x6FB9      	MOVWF       _OverloadCheckFlag1, 1
L_LearnAuto652:
;FirmV_0_7_0.c,2405 :: 		break;
0x3A24	0xD1B9      	BRA         L_LearnAuto637
;FirmV_0_7_0.c,2407 :: 		case 5: //Start D1 for opening and save start time and enable overload sensing after 3s
L_LearnAuto653:
;FirmV_0_7_0.c,2408 :: 		startT=ms500;StartMotor(1,_Open);AddTask(ms500+6,20);LearnPhase=LearnPhase+1;
0x3A26	0xF266C104  	MOVFF       _ms500, LearnAuto_startT_L0
0x3A2A	0xF267C105  	MOVFF       _ms500+1, LearnAuto_startT_L0+1
0x3A2E	0xF268C106  	MOVFF       _ms500+2, LearnAuto_startT_L0+2
0x3A32	0xF269C107  	MOVFF       _ms500+3, LearnAuto_startT_L0+3
0x3A36	0x0E01      	MOVLW       1
0x3A38	0x0103      	MOVLB       3
0x3A3A	0x6FD9      	MOVWF       FARG_StartMotor_Mx, 1
0x3A3C	0x0E01      	MOVLW       1
0x3A3E	0x6FDA      	MOVWF       FARG_StartMotor_Dir, 1
0x3A40	0xF011ECCA  	CALL        _StartMotor, 0
0x3A44	0x0E06      	MOVLW       6
0x3A46	0x0101      	MOVLB       1
0x3A48	0x2504      	ADDWF       _ms500, 0, 1
0x3A4A	0x0103      	MOVLB       3
0x3A4C	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x3A4E	0x0E00      	MOVLW       0
0x3A50	0x0101      	MOVLB       1
0x3A52	0x2105      	ADDWFC      _ms500+1, 0, 1
0x3A54	0x0103      	MOVLB       3
0x3A56	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x3A58	0x0E00      	MOVLW       0
0x3A5A	0x0101      	MOVLB       1
0x3A5C	0x2106      	ADDWFC      _ms500+2, 0, 1
0x3A5E	0x0103      	MOVLB       3
0x3A60	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x3A62	0x0E00      	MOVLW       0
0x3A64	0x0101      	MOVLB       1
0x3A66	0x2107      	ADDWFC      _ms500+3, 0, 1
0x3A68	0x0103      	MOVLB       3
0x3A6A	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x3A6C	0x0E14      	MOVLW       20
0x3A6E	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x3A70	0xF008ECB5  	CALL        _AddTask, 0
0x3A74	0x0102      	MOVLB       2
0x3A76	0x2B97      	INCF        _LearnPhase, 1, 1
;FirmV_0_7_0.c,2409 :: 		break;
0x3A78	0xD18F      	BRA         L_LearnAuto637
;FirmV_0_7_0.c,2411 :: 		case 6: //Check if D1 reaches end of its course and save the stop time
L_LearnAuto654:
;FirmV_0_7_0.c,2412 :: 		if((Events.Overload.b0==1)&&(OverloadCheckFlag1==1)){OverloadCheckFlag1=0;StopMotor(1);if(DoorNo==1)LearnPhase=11;else LearnPhase=LearnPhase+1;stopT=ms500;RawData.D1OpenTime=(char)(stopT-startT);}
0x3A7A	0xA19F      	BTFSS       _Events+5, 0, 1
0x3A7C	0xD018      	BRA         L_LearnAuto657
0x3A7E	0x0100      	MOVLB       0
0x3A80	0x51B9      	MOVF        _OverloadCheckFlag1, 0, 1
0x3A82	0x0A01      	XORLW       1
0x3A84	0xE114      	BNZ         L_LearnAuto657
L__LearnAuto922:
0x3A86	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
0x3A88	0x0E01      	MOVLW       1
0x3A8A	0x0103      	MOVLB       3
0x3A8C	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x3A8E	0xF008ECA6  	CALL        _StopMotor, 0
0x3A92	0x0102      	MOVLB       2
0x3A94	0x5165      	MOVF        LearnAuto_DoorNo_L0, 0, 1
0x3A96	0x0A01      	XORLW       1
0x3A98	0xE103      	BNZ         L_LearnAuto658
0x3A9A	0x0E0B      	MOVLW       11
0x3A9C	0x6F97      	MOVWF       _LearnPhase, 1
0x3A9E	0xD001      	BRA         L_LearnAuto659
L_LearnAuto658:
0x3AA0	0x2B97      	INCF        _LearnPhase, 1, 1
L_LearnAuto659:
0x3AA2	0x5166      	MOVF        LearnAuto_startT_L0, 0, 1
0x3AA4	0x0101      	MOVLB       1
0x3AA6	0x5D04      	SUBWF       _ms500, 0, 1
0x3AA8	0x6E00      	MOVWF       R0 
0x3AAA	0xF26BC000  	MOVFF       R0, LearnAuto_RawData_L0+1
L_LearnAuto657:
;FirmV_0_7_0.c,2413 :: 		if(CheckTask(20))OverloadCheckFlag1=1;
0x3AAE	0x0E14      	MOVLW       20
0x3AB0	0x0103      	MOVLB       3
0x3AB2	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3AB4	0xF009EC28  	CALL        _CheckTask, 0
0x3AB8	0x5200      	MOVF        R0, 1 
0x3ABA	0xE003      	BZ          L_LearnAuto660
0x3ABC	0x0E01      	MOVLW       1
0x3ABE	0x0100      	MOVLB       0
0x3AC0	0x6FB9      	MOVWF       _OverloadCheckFlag1, 1
L_LearnAuto660:
;FirmV_0_7_0.c,2414 :: 		break;
0x3AC2	0xD16A      	BRA         L_LearnAuto637
;FirmV_0_7_0.c,2416 :: 		case 7: //Start D2 for opening and save start time and enable overload sensing after 3s
L_LearnAuto661:
;FirmV_0_7_0.c,2417 :: 		startT=ms500;StartMotor(2,_Open);AddTask(ms500+6,21);LearnPhase=LearnPhase+1;
0x3AC4	0xF266C104  	MOVFF       _ms500, LearnAuto_startT_L0
0x3AC8	0xF267C105  	MOVFF       _ms500+1, LearnAuto_startT_L0+1
0x3ACC	0xF268C106  	MOVFF       _ms500+2, LearnAuto_startT_L0+2
0x3AD0	0xF269C107  	MOVFF       _ms500+3, LearnAuto_startT_L0+3
0x3AD4	0x0E02      	MOVLW       2
0x3AD6	0x0103      	MOVLB       3
0x3AD8	0x6FD9      	MOVWF       FARG_StartMotor_Mx, 1
0x3ADA	0x0E01      	MOVLW       1
0x3ADC	0x6FDA      	MOVWF       FARG_StartMotor_Dir, 1
0x3ADE	0xF011ECCA  	CALL        _StartMotor, 0
0x3AE2	0x0E06      	MOVLW       6
0x3AE4	0x0101      	MOVLB       1
0x3AE6	0x2504      	ADDWF       _ms500, 0, 1
0x3AE8	0x0103      	MOVLB       3
0x3AEA	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x3AEC	0x0E00      	MOVLW       0
0x3AEE	0x0101      	MOVLB       1
0x3AF0	0x2105      	ADDWFC      _ms500+1, 0, 1
0x3AF2	0x0103      	MOVLB       3
0x3AF4	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x3AF6	0x0E00      	MOVLW       0
0x3AF8	0x0101      	MOVLB       1
0x3AFA	0x2106      	ADDWFC      _ms500+2, 0, 1
0x3AFC	0x0103      	MOVLB       3
0x3AFE	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x3B00	0x0E00      	MOVLW       0
0x3B02	0x0101      	MOVLB       1
0x3B04	0x2107      	ADDWFC      _ms500+3, 0, 1
0x3B06	0x0103      	MOVLB       3
0x3B08	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x3B0A	0x0E15      	MOVLW       21
0x3B0C	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x3B0E	0xF008ECB5  	CALL        _AddTask, 0
0x3B12	0x0102      	MOVLB       2
0x3B14	0x2B97      	INCF        _LearnPhase, 1, 1
;FirmV_0_7_0.c,2418 :: 		break;
0x3B16	0xD140      	BRA         L_LearnAuto637
;FirmV_0_7_0.c,2420 :: 		case 8: //Check if D2 reaches end of its course and save the stop time
L_LearnAuto662:
;FirmV_0_7_0.c,2421 :: 		if((Events.Overload.b1==1)&&(OverloadCheckFlag2==1)){OverloadCheckFlag2=0;StopMotor(2);LearnPhase=LearnPhase+1;stopT=ms500;RawData.D2OpenTime=(char)(stopT-startT);}
0x3B18	0xA39F      	BTFSS       _Events+5, 1, 1
0x3B1A	0xD012      	BRA         L_LearnAuto665
0x3B1C	0x0100      	MOVLB       0
0x3B1E	0x51B6      	MOVF        _OverloadCheckFlag2, 0, 1
0x3B20	0x0A01      	XORLW       1
0x3B22	0xE10E      	BNZ         L_LearnAuto665
L__LearnAuto921:
0x3B24	0x6BB6      	CLRF        _OverloadCheckFlag2, 1
0x3B26	0x0E02      	MOVLW       2
0x3B28	0x0103      	MOVLB       3
0x3B2A	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x3B2C	0xF008ECA6  	CALL        _StopMotor, 0
0x3B30	0x0102      	MOVLB       2
0x3B32	0x2B97      	INCF        _LearnPhase, 1, 1
0x3B34	0x5166      	MOVF        LearnAuto_startT_L0, 0, 1
0x3B36	0x0101      	MOVLB       1
0x3B38	0x5D04      	SUBWF       _ms500, 0, 1
0x3B3A	0x6E00      	MOVWF       R0 
0x3B3C	0xF26DC000  	MOVFF       R0, LearnAuto_RawData_L0+3
L_LearnAuto665:
;FirmV_0_7_0.c,2422 :: 		if(CheckTask(21))OverloadCheckFlag2=1;
0x3B40	0x0E15      	MOVLW       21
0x3B42	0x0103      	MOVLB       3
0x3B44	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3B46	0xF009EC28  	CALL        _CheckTask, 0
0x3B4A	0x5200      	MOVF        R0, 1 
0x3B4C	0xE003      	BZ          L_LearnAuto666
0x3B4E	0x0E01      	MOVLW       1
0x3B50	0x0100      	MOVLB       0
0x3B52	0x6FB6      	MOVWF       _OverloadCheckFlag2, 1
L_LearnAuto666:
;FirmV_0_7_0.c,2423 :: 		break;
0x3B54	0xD121      	BRA         L_LearnAuto637
;FirmV_0_7_0.c,2425 :: 		case 9: //Start D2 for closing and save start time and enable overload sensing after 6s
L_LearnAuto667:
;FirmV_0_7_0.c,2426 :: 		startT=ms500;StartMotor(2,_Close);AddTask(ms500+6,21);LearnPhase=LearnPhase+1;
0x3B56	0xF266C104  	MOVFF       _ms500, LearnAuto_startT_L0
0x3B5A	0xF267C105  	MOVFF       _ms500+1, LearnAuto_startT_L0+1
0x3B5E	0xF268C106  	MOVFF       _ms500+2, LearnAuto_startT_L0+2
0x3B62	0xF269C107  	MOVFF       _ms500+3, LearnAuto_startT_L0+3
0x3B66	0x0E02      	MOVLW       2
0x3B68	0x0103      	MOVLB       3
0x3B6A	0x6FD9      	MOVWF       FARG_StartMotor_Mx, 1
0x3B6C	0x6BDA      	CLRF        FARG_StartMotor_Dir, 1
0x3B6E	0xF011ECCA  	CALL        _StartMotor, 0
0x3B72	0x0E06      	MOVLW       6
0x3B74	0x0101      	MOVLB       1
0x3B76	0x2504      	ADDWF       _ms500, 0, 1
0x3B78	0x0103      	MOVLB       3
0x3B7A	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x3B7C	0x0E00      	MOVLW       0
0x3B7E	0x0101      	MOVLB       1
0x3B80	0x2105      	ADDWFC      _ms500+1, 0, 1
0x3B82	0x0103      	MOVLB       3
0x3B84	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x3B86	0x0E00      	MOVLW       0
0x3B88	0x0101      	MOVLB       1
0x3B8A	0x2106      	ADDWFC      _ms500+2, 0, 1
0x3B8C	0x0103      	MOVLB       3
0x3B8E	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x3B90	0x0E00      	MOVLW       0
0x3B92	0x0101      	MOVLB       1
0x3B94	0x2107      	ADDWFC      _ms500+3, 0, 1
0x3B96	0x0103      	MOVLB       3
0x3B98	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x3B9A	0x0E15      	MOVLW       21
0x3B9C	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x3B9E	0xF008ECB5  	CALL        _AddTask, 0
0x3BA2	0x0102      	MOVLB       2
0x3BA4	0x2B97      	INCF        _LearnPhase, 1, 1
;FirmV_0_7_0.c,2427 :: 		break;
0x3BA6	0xD0F8      	BRA         L_LearnAuto637
;FirmV_0_7_0.c,2429 :: 		case 10: //Check if D2 reaches end of its course and save the stop time
L_LearnAuto668:
;FirmV_0_7_0.c,2430 :: 		if((Events.Overload.b1==1)&&(OverloadCheckFlag2==1)){OverloadCheckFlag2=0;StopMotor(2);LearnPhase=LearnPhase+1;stopT=ms500;RawData.D2CloseTime=(char)(stopT-startT);}
0x3BA8	0xA39F      	BTFSS       _Events+5, 1, 1
0x3BAA	0xD012      	BRA         L_LearnAuto671
0x3BAC	0x0100      	MOVLB       0
0x3BAE	0x51B6      	MOVF        _OverloadCheckFlag2, 0, 1
0x3BB0	0x0A01      	XORLW       1
0x3BB2	0xE10E      	BNZ         L_LearnAuto671
L__LearnAuto920:
0x3BB4	0x6BB6      	CLRF        _OverloadCheckFlag2, 1
0x3BB6	0x0E02      	MOVLW       2
0x3BB8	0x0103      	MOVLB       3
0x3BBA	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x3BBC	0xF008ECA6  	CALL        _StopMotor, 0
0x3BC0	0x0102      	MOVLB       2
0x3BC2	0x2B97      	INCF        _LearnPhase, 1, 1
0x3BC4	0x5166      	MOVF        LearnAuto_startT_L0, 0, 1
0x3BC6	0x0101      	MOVLB       1
0x3BC8	0x5D04      	SUBWF       _ms500, 0, 1
0x3BCA	0x6E00      	MOVWF       R0 
0x3BCC	0xF26CC000  	MOVFF       R0, LearnAuto_RawData_L0+2
L_LearnAuto671:
;FirmV_0_7_0.c,2431 :: 		if(CheckTask(21))OverloadCheckFlag2=1;
0x3BD0	0x0E15      	MOVLW       21
0x3BD2	0x0103      	MOVLB       3
0x3BD4	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3BD6	0xF009EC28  	CALL        _CheckTask, 0
0x3BDA	0x5200      	MOVF        R0, 1 
0x3BDC	0xE003      	BZ          L_LearnAuto672
0x3BDE	0x0E01      	MOVLW       1
0x3BE0	0x0100      	MOVLB       0
0x3BE2	0x6FB6      	MOVWF       _OverloadCheckFlag2, 1
L_LearnAuto672:
;FirmV_0_7_0.c,2432 :: 		break;
0x3BE4	0xD0D9      	BRA         L_LearnAuto637
;FirmV_0_7_0.c,2434 :: 		case 11: //Start D1 for closing and save start time and enable overload sensing after 3s
L_LearnAuto673:
;FirmV_0_7_0.c,2435 :: 		startT=ms500;StartMotor(1,_Close);AddTask(ms500+6,20);LearnPhase=LearnPhase+1;
0x3BE6	0xF266C104  	MOVFF       _ms500, LearnAuto_startT_L0
0x3BEA	0xF267C105  	MOVFF       _ms500+1, LearnAuto_startT_L0+1
0x3BEE	0xF268C106  	MOVFF       _ms500+2, LearnAuto_startT_L0+2
0x3BF2	0xF269C107  	MOVFF       _ms500+3, LearnAuto_startT_L0+3
0x3BF6	0x0E01      	MOVLW       1
0x3BF8	0x0103      	MOVLB       3
0x3BFA	0x6FD9      	MOVWF       FARG_StartMotor_Mx, 1
0x3BFC	0x6BDA      	CLRF        FARG_StartMotor_Dir, 1
0x3BFE	0xF011ECCA  	CALL        _StartMotor, 0
0x3C02	0x0E06      	MOVLW       6
0x3C04	0x0101      	MOVLB       1
0x3C06	0x2504      	ADDWF       _ms500, 0, 1
0x3C08	0x0103      	MOVLB       3
0x3C0A	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x3C0C	0x0E00      	MOVLW       0
0x3C0E	0x0101      	MOVLB       1
0x3C10	0x2105      	ADDWFC      _ms500+1, 0, 1
0x3C12	0x0103      	MOVLB       3
0x3C14	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x3C16	0x0E00      	MOVLW       0
0x3C18	0x0101      	MOVLB       1
0x3C1A	0x2106      	ADDWFC      _ms500+2, 0, 1
0x3C1C	0x0103      	MOVLB       3
0x3C1E	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x3C20	0x0E00      	MOVLW       0
0x3C22	0x0101      	MOVLB       1
0x3C24	0x2107      	ADDWFC      _ms500+3, 0, 1
0x3C26	0x0103      	MOVLB       3
0x3C28	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x3C2A	0x0E14      	MOVLW       20
0x3C2C	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x3C2E	0xF008ECB5  	CALL        _AddTask, 0
0x3C32	0x0102      	MOVLB       2
0x3C34	0x2B97      	INCF        _LearnPhase, 1, 1
;FirmV_0_7_0.c,2436 :: 		break;
0x3C36	0xD0B0      	BRA         L_LearnAuto637
;FirmV_0_7_0.c,2438 :: 		case 12: //Check if D1 reaches end of its course and save the stop time
L_LearnAuto674:
;FirmV_0_7_0.c,2439 :: 		if((Events.Overload.b0==1)&&(OverloadCheckFlag1==1)){OverloadCheckFlag1=0;StopMotor(1);LearnPhase=LearnPhase+1;stopT=ms500;RawData.D1CloseTime=(char)(stopT-startT);}
0x3C38	0xA19F      	BTFSS       _Events+5, 0, 1
0x3C3A	0xD012      	BRA         L_LearnAuto677
0x3C3C	0x0100      	MOVLB       0
0x3C3E	0x51B9      	MOVF        _OverloadCheckFlag1, 0, 1
0x3C40	0x0A01      	XORLW       1
0x3C42	0xE10E      	BNZ         L_LearnAuto677
L__LearnAuto919:
0x3C44	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
0x3C46	0x0E01      	MOVLW       1
0x3C48	0x0103      	MOVLB       3
0x3C4A	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x3C4C	0xF008ECA6  	CALL        _StopMotor, 0
0x3C50	0x0102      	MOVLB       2
0x3C52	0x2B97      	INCF        _LearnPhase, 1, 1
0x3C54	0x5166      	MOVF        LearnAuto_startT_L0, 0, 1
0x3C56	0x0101      	MOVLB       1
0x3C58	0x5D04      	SUBWF       _ms500, 0, 1
0x3C5A	0x6E00      	MOVWF       R0 
0x3C5C	0xF26AC000  	MOVFF       R0, LearnAuto_RawData_L0
L_LearnAuto677:
;FirmV_0_7_0.c,2440 :: 		if(CheckTask(20))OverloadCheckFlag1=1;
0x3C60	0x0E14      	MOVLW       20
0x3C62	0x0103      	MOVLB       3
0x3C64	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3C66	0xF009EC28  	CALL        _CheckTask, 0
0x3C6A	0x5200      	MOVF        R0, 1 
0x3C6C	0xE003      	BZ          L_LearnAuto678
0x3C6E	0x0E01      	MOVLW       1
0x3C70	0x0100      	MOVLB       0
0x3C72	0x6FB9      	MOVWF       _OverloadCheckFlag1, 1
L_LearnAuto678:
;FirmV_0_7_0.c,2441 :: 		break;
0x3C74	0xD091      	BRA         L_LearnAuto637
;FirmV_0_7_0.c,2443 :: 		case 13:
L_LearnAuto679:
;FirmV_0_7_0.c,2444 :: 		AutoLearnCalculator(&RawData);
0x3C76	0x0E6A      	MOVLW       LearnAuto_RawData_L0
0x3C78	0x0103      	MOVLB       3
0x3C7A	0x6FD9      	MOVWF       FARG_AutoLearnCalculator_raw, 1
0x3C7C	0x0E02      	MOVLW       hi_addr(LearnAuto_RawData_L0)
0x3C7E	0x6FDA      	MOVWF       FARG_AutoLearnCalculator_raw+1, 1
0x3C80	0xF008EC1E  	CALL        _AutoLearnCalculator, 0
;FirmV_0_7_0.c,2445 :: 		SaveLearnData(&RawData,DoorNo);
0x3C84	0x0E6A      	MOVLW       LearnAuto_RawData_L0
0x3C86	0x6FD9      	MOVWF       FARG_SaveLearnData_d, 1
0x3C88	0x0E02      	MOVLW       hi_addr(LearnAuto_RawData_L0)
0x3C8A	0x6FDA      	MOVWF       FARG_SaveLearnData_d+1, 1
0x3C8C	0xF3DBC265  	MOVFF       LearnAuto_DoorNo_L0, FARG_SaveLearnData_DCount
0x3C90	0xF00AECA6  	CALL        _SaveLearnData, 0
;FirmV_0_7_0.c,2446 :: 		memcpy(LCDLine1," Learn Complete ",16);
0x3C94	0x0EBD      	MOVLW       _LCDLine1
0x3C96	0x0105      	MOVLB       5
0x3C98	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x3C9A	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x3C9C	0x0106      	MOVLB       6
0x3C9E	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x3CA0	0x0EC4      	MOVLW       ?ICS?lstr107_FirmV_0_7_0
0x3CA2	0x6EF6      	MOVWF       4086 
0x3CA4	0x0E8D      	MOVLW       hi_addr(?ICS?lstr107_FirmV_0_7_0)
0x3CA6	0x6EF7      	MOVWF       TBLPTRH 
0x3CA8	0x0E00      	MOVLW       higher_addr(?ICS?lstr107_FirmV_0_7_0)
0x3CAA	0x6EF8      	MOVWF       TBLPTRU 
0x3CAC	0x0EBF      	MOVLW       ?lstr107_FirmV_0_7_0
0x3CAE	0x6EE1      	MOVWF       FSR1L 
0x3CB0	0x0E02      	MOVLW       hi_addr(?lstr107_FirmV_0_7_0)
0x3CB2	0x6EE2      	MOVWF       FSR1H 
0x3CB4	0x0E11      	MOVLW       17
0x3CB6	0x6E00      	MOVWF       R0 
0x3CB8	0x0E01      	MOVLW       1
0x3CBA	0x6E01      	MOVWF       R1 
0x3CBC	0xF005EC2B  	CALL        ___CC2DW, 0
0x3CC0	0x0EBF      	MOVLW       ?lstr107_FirmV_0_7_0
0x3CC2	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x3CC4	0x0E02      	MOVLW       hi_addr(?lstr107_FirmV_0_7_0)
0x3CC6	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x3CC8	0x0E10      	MOVLW       16
0x3CCA	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x3CCC	0x0E00      	MOVLW       0
0x3CCE	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x3CD0	0xF001EC0D  	CALL        _memcpy, 0
;FirmV_0_7_0.c,2447 :: 		memcpy(LCDLine2,"     Ready      ",16);
0x3CD4	0x0EA3      	MOVLW       _LCDLine2
0x3CD6	0x0105      	MOVLB       5
0x3CD8	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x3CDA	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x3CDC	0x0106      	MOVLB       6
0x3CDE	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x3CE0	0x0ED5      	MOVLW       ?ICS?lstr108_FirmV_0_7_0
0x3CE2	0x6EF6      	MOVWF       4086 
0x3CE4	0x0E8D      	MOVLW       hi_addr(?ICS?lstr108_FirmV_0_7_0)
0x3CE6	0x6EF7      	MOVWF       TBLPTRH 
0x3CE8	0x0E00      	MOVLW       higher_addr(?ICS?lstr108_FirmV_0_7_0)
0x3CEA	0x6EF8      	MOVWF       TBLPTRU 
0x3CEC	0x0ED0      	MOVLW       ?lstr108_FirmV_0_7_0
0x3CEE	0x6EE1      	MOVWF       FSR1L 
0x3CF0	0x0E02      	MOVLW       hi_addr(?lstr108_FirmV_0_7_0)
0x3CF2	0x6EE2      	MOVWF       FSR1H 
0x3CF4	0x0E11      	MOVLW       17
0x3CF6	0x6E00      	MOVWF       R0 
0x3CF8	0x0E01      	MOVLW       1
0x3CFA	0x6E01      	MOVWF       R1 
0x3CFC	0xF005EC2B  	CALL        ___CC2DW, 0
0x3D00	0x0ED0      	MOVLW       ?lstr108_FirmV_0_7_0
0x3D02	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x3D04	0x0E02      	MOVLW       hi_addr(?lstr108_FirmV_0_7_0)
0x3D06	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x3D08	0x0E10      	MOVLW       16
0x3D0A	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x3D0C	0x0E00      	MOVLW       0
0x3D0E	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x3D10	0xF001EC0D  	CALL        _memcpy, 0
;FirmV_0_7_0.c,2448 :: 		LCDLines=2;
0x3D14	0x0E02      	MOVLW       2
0x3D16	0x0100      	MOVLB       0
0x3D18	0x6FB4      	MOVWF       _LCDLines, 1
;FirmV_0_7_0.c,2449 :: 		LCDUpdateFlag=1;
0x3D1A	0x0E01      	MOVLW       1
0x3D1C	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,2450 :: 		Flasher=0;
0x3D1E	0x9E83      	BCF         PORTD, 7 
;FirmV_0_7_0.c,2452 :: 		State=0;
0x3D20	0x0101      	MOVLB       1
0x3D22	0x6B44      	CLRF        _State, 1
;FirmV_0_7_0.c,2453 :: 		break;
0x3D24	0xD039      	BRA         L_LearnAuto637
;FirmV_0_7_0.c,2456 :: 		}
L_LearnAuto636:
0x3D26	0x0102      	MOVLB       2
0x3D28	0x5197      	MOVF        _LearnPhase, 0, 1
0x3D2A	0x0A00      	XORLW       0
0x3D2C	0xB4D8      	BTFSC       STATUS, 2 
0x3D2E	0xD5F0      	BRA         L_LearnAuto638
0x3D30	0x5197      	MOVF        _LearnPhase, 0, 1
0x3D32	0x0A01      	XORLW       1
0x3D34	0xB4D8      	BTFSC       STATUS, 2 
0x3D36	0xD604      	BRA         L_LearnAuto641
0x3D38	0x5197      	MOVF        _LearnPhase, 0, 1
0x3D3A	0x0A02      	XORLW       2
0x3D3C	0xB4D8      	BTFSC       STATUS, 2 
0x3D3E	0xD621      	BRA         L_LearnAuto642
0x3D40	0x5197      	MOVF        _LearnPhase, 0, 1
0x3D42	0x0A03      	XORLW       3
0x3D44	0xB4D8      	BTFSC       STATUS, 2 
0x3D46	0xD636      	BRA         L_LearnAuto647
0x3D48	0x5197      	MOVF        _LearnPhase, 0, 1
0x3D4A	0x0A04      	XORLW       4
0x3D4C	0xB4D8      	BTFSC       STATUS, 2 
0x3D4E	0xD652      	BRA         L_LearnAuto648
0x3D50	0x5197      	MOVF        _LearnPhase, 0, 1
0x3D52	0x0A05      	XORLW       5
0x3D54	0xB4D8      	BTFSC       STATUS, 2 
0x3D56	0xD667      	BRA         L_LearnAuto653
0x3D58	0x5197      	MOVF        _LearnPhase, 0, 1
0x3D5A	0x0A06      	XORLW       6
0x3D5C	0xB4D8      	BTFSC       STATUS, 2 
0x3D5E	0xD68D      	BRA         L_LearnAuto654
0x3D60	0x5197      	MOVF        _LearnPhase, 0, 1
0x3D62	0x0A07      	XORLW       7
0x3D64	0xB4D8      	BTFSC       STATUS, 2 
0x3D66	0xD6AE      	BRA         L_LearnAuto661
0x3D68	0x5197      	MOVF        _LearnPhase, 0, 1
0x3D6A	0x0A08      	XORLW       8
0x3D6C	0xB4D8      	BTFSC       STATUS, 2 
0x3D6E	0xD6D4      	BRA         L_LearnAuto662
0x3D70	0x5197      	MOVF        _LearnPhase, 0, 1
0x3D72	0x0A09      	XORLW       9
0x3D74	0xB4D8      	BTFSC       STATUS, 2 
0x3D76	0xD6EF      	BRA         L_LearnAuto667
0x3D78	0x5197      	MOVF        _LearnPhase, 0, 1
0x3D7A	0x0A0A      	XORLW       10
0x3D7C	0xB4D8      	BTFSC       STATUS, 2 
0x3D7E	0xD714      	BRA         L_LearnAuto668
0x3D80	0x5197      	MOVF        _LearnPhase, 0, 1
0x3D82	0x0A0B      	XORLW       11
0x3D84	0xB4D8      	BTFSC       STATUS, 2 
0x3D86	0xD72F      	BRA         L_LearnAuto673
0x3D88	0x5197      	MOVF        _LearnPhase, 0, 1
0x3D8A	0x0A0C      	XORLW       12
0x3D8C	0xB4D8      	BTFSC       STATUS, 2 
0x3D8E	0xD754      	BRA         L_LearnAuto674
0x3D90	0x5197      	MOVF        _LearnPhase, 0, 1
0x3D92	0x0A0D      	XORLW       13
0x3D94	0xB4D8      	BTFSC       STATUS, 2 
0x3D96	0xD76F      	BRA         L_LearnAuto679
L_LearnAuto637:
;FirmV_0_7_0.c,2460 :: 		}
0x3D98	0x0012      	RETURN      0
; end of _LearnAuto
_Menu3:
;FirmV_0_7_0.c,2357 :: 		void Menu3()
;FirmV_0_7_0.c,2359 :: 		SaveConfigs();
0x3D9A	0xF006ECA8  	CALL        _SaveConfigs, 0
;FirmV_0_7_0.c,2360 :: 		State=0;
0x3D9E	0x0101      	MOVLB       1
0x3DA0	0x6B44      	CLRF        _State, 1
;FirmV_0_7_0.c,2361 :: 		}
0x3DA2	0x0012      	RETURN      0
; end of _Menu3
_State4:
;FirmV_0_7_0.c,829 :: 		void State4()
;FirmV_0_7_0.c,831 :: 		Flasher=1;
0x3DA4	0x8E83      	BSF         PORTD, 7 
;FirmV_0_7_0.c,832 :: 		FlashFlag=1;
0x3DA6	0x0E01      	MOVLW       1
0x3DA8	0x0100      	MOVLB       0
0x3DAA	0x6FBC      	MOVWF       _FlashFlag, 1
;FirmV_0_7_0.c,835 :: 		if(CheckTask(1))
0x3DAC	0x0E01      	MOVLW       1
0x3DAE	0x0103      	MOVLB       3
0x3DB0	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3DB2	0xF009EC28  	CALL        _CheckTask, 0
0x3DB6	0x5200      	MOVF        R0, 1 
0x3DB8	0xE02D      	BZ          L_State4162
;FirmV_0_7_0.c,836 :: 		{StartMotor(1,_Close);Logger("S4 Motor1Start",1);}
0x3DBA	0x0E01      	MOVLW       1
0x3DBC	0x0103      	MOVLB       3
0x3DBE	0x6FD9      	MOVWF       FARG_StartMotor_Mx, 1
0x3DC0	0x6BDA      	CLRF        FARG_StartMotor_Dir, 1
0x3DC2	0xF011ECCA  	CALL        _StartMotor, 0
0x3DC6	0x0E53      	MOVLW       83
0x3DC8	0x0102      	MOVLB       2
0x3DCA	0x6FBF      	MOVWF       ?lstr23_FirmV_0_7_0, 1
0x3DCC	0x0E34      	MOVLW       52
0x3DCE	0x6FC0      	MOVWF       ?lstr23_FirmV_0_7_0+1, 1
0x3DD0	0x0E20      	MOVLW       32
0x3DD2	0x6FC1      	MOVWF       ?lstr23_FirmV_0_7_0+2, 1
0x3DD4	0x0E4D      	MOVLW       77
0x3DD6	0x6FC2      	MOVWF       ?lstr23_FirmV_0_7_0+3, 1
0x3DD8	0x0E6F      	MOVLW       111
0x3DDA	0x6FC3      	MOVWF       ?lstr23_FirmV_0_7_0+4, 1
0x3DDC	0x0E74      	MOVLW       116
0x3DDE	0x6FC4      	MOVWF       ?lstr23_FirmV_0_7_0+5, 1
0x3DE0	0x0E6F      	MOVLW       111
0x3DE2	0x6FC5      	MOVWF       ?lstr23_FirmV_0_7_0+6, 1
0x3DE4	0x0E72      	MOVLW       114
0x3DE6	0x6FC6      	MOVWF       ?lstr23_FirmV_0_7_0+7, 1
0x3DE8	0x0E31      	MOVLW       49
0x3DEA	0x6FC7      	MOVWF       ?lstr23_FirmV_0_7_0+8, 1
0x3DEC	0x0E53      	MOVLW       83
0x3DEE	0x6FC8      	MOVWF       ?lstr23_FirmV_0_7_0+9, 1
0x3DF0	0x0E74      	MOVLW       116
0x3DF2	0x6FC9      	MOVWF       ?lstr23_FirmV_0_7_0+10, 1
0x3DF4	0x0E61      	MOVLW       97
0x3DF6	0x6FCA      	MOVWF       ?lstr23_FirmV_0_7_0+11, 1
0x3DF8	0x0E72      	MOVLW       114
0x3DFA	0x6FCB      	MOVWF       ?lstr23_FirmV_0_7_0+12, 1
0x3DFC	0x0E74      	MOVLW       116
0x3DFE	0x6FCC      	MOVWF       ?lstr23_FirmV_0_7_0+13, 1
0x3E00	0x6BCD      	CLRF        ?lstr23_FirmV_0_7_0+14, 1
0x3E02	0x0EBF      	MOVLW       ?lstr23_FirmV_0_7_0
0x3E04	0x0103      	MOVLB       3
0x3E06	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x3E08	0x0E02      	MOVLW       hi_addr(?lstr23_FirmV_0_7_0)
0x3E0A	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x3E0C	0x0E01      	MOVLW       1
0x3E0E	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x3E10	0xF009EC69  	CALL        _Logger, 0
L_State4162:
;FirmV_0_7_0.c,838 :: 		if(CheckTask(2))
0x3E14	0x0E02      	MOVLW       2
0x3E16	0x0103      	MOVLB       3
0x3E18	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3E1A	0xF009EC28  	CALL        _CheckTask, 0
0x3E1E	0x5200      	MOVF        R0, 1 
0x3E20	0xE052      	BZ          L_State4163
;FirmV_0_7_0.c,839 :: 		{StartMotor(2,_Close);Logger("S4 Motor2Start",1);memcpy(LCDLine1,_closing,16);memcpy(LCDLine2,_Blank,16);LCDUpdateFlag=1;LCDLines=1;}
0x3E22	0x0E02      	MOVLW       2
0x3E24	0x0103      	MOVLB       3
0x3E26	0x6FD9      	MOVWF       FARG_StartMotor_Mx, 1
0x3E28	0x6BDA      	CLRF        FARG_StartMotor_Dir, 1
0x3E2A	0xF011ECCA  	CALL        _StartMotor, 0
0x3E2E	0x0E53      	MOVLW       83
0x3E30	0x0102      	MOVLB       2
0x3E32	0x6FCE      	MOVWF       ?lstr24_FirmV_0_7_0, 1
0x3E34	0x0E34      	MOVLW       52
0x3E36	0x6FCF      	MOVWF       ?lstr24_FirmV_0_7_0+1, 1
0x3E38	0x0E20      	MOVLW       32
0x3E3A	0x6FD0      	MOVWF       ?lstr24_FirmV_0_7_0+2, 1
0x3E3C	0x0E4D      	MOVLW       77
0x3E3E	0x6FD1      	MOVWF       ?lstr24_FirmV_0_7_0+3, 1
0x3E40	0x0E6F      	MOVLW       111
0x3E42	0x6FD2      	MOVWF       ?lstr24_FirmV_0_7_0+4, 1
0x3E44	0x0E74      	MOVLW       116
0x3E46	0x6FD3      	MOVWF       ?lstr24_FirmV_0_7_0+5, 1
0x3E48	0x0E6F      	MOVLW       111
0x3E4A	0x6FD4      	MOVWF       ?lstr24_FirmV_0_7_0+6, 1
0x3E4C	0x0E72      	MOVLW       114
0x3E4E	0x6FD5      	MOVWF       ?lstr24_FirmV_0_7_0+7, 1
0x3E50	0x0E32      	MOVLW       50
0x3E52	0x6FD6      	MOVWF       ?lstr24_FirmV_0_7_0+8, 1
0x3E54	0x0E53      	MOVLW       83
0x3E56	0x6FD7      	MOVWF       ?lstr24_FirmV_0_7_0+9, 1
0x3E58	0x0E74      	MOVLW       116
0x3E5A	0x6FD8      	MOVWF       ?lstr24_FirmV_0_7_0+10, 1
0x3E5C	0x0E61      	MOVLW       97
0x3E5E	0x6FD9      	MOVWF       ?lstr24_FirmV_0_7_0+11, 1
0x3E60	0x0E72      	MOVLW       114
0x3E62	0x6FDA      	MOVWF       ?lstr24_FirmV_0_7_0+12, 1
0x3E64	0x0E74      	MOVLW       116
0x3E66	0x6FDB      	MOVWF       ?lstr24_FirmV_0_7_0+13, 1
0x3E68	0x6BDC      	CLRF        ?lstr24_FirmV_0_7_0+14, 1
0x3E6A	0x0ECE      	MOVLW       ?lstr24_FirmV_0_7_0
0x3E6C	0x0103      	MOVLB       3
0x3E6E	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x3E70	0x0E02      	MOVLW       hi_addr(?lstr24_FirmV_0_7_0)
0x3E72	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x3E74	0x0E01      	MOVLW       1
0x3E76	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x3E78	0xF009EC69  	CALL        _Logger, 0
0x3E7C	0x0EBD      	MOVLW       _LCDLine1
0x3E7E	0x0105      	MOVLB       5
0x3E80	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x3E82	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x3E84	0x0106      	MOVLB       6
0x3E86	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x3E88	0x0EF3      	MOVLW       __closing
0x3E8A	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x3E8C	0x0E00      	MOVLW       hi_addr(__closing)
0x3E8E	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x3E90	0x0E10      	MOVLW       16
0x3E92	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x3E94	0x0E00      	MOVLW       0
0x3E96	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x3E98	0xF001EC0D  	CALL        _memcpy, 0
0x3E9C	0x0EA3      	MOVLW       _LCDLine2
0x3E9E	0x0105      	MOVLB       5
0x3EA0	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x3EA2	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x3EA4	0x0106      	MOVLB       6
0x3EA6	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x3EA8	0x0E91      	MOVLW       __Blank
0x3EAA	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x3EAC	0x0E00      	MOVLW       hi_addr(__Blank)
0x3EAE	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x3EB0	0x0E10      	MOVLW       16
0x3EB2	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x3EB4	0x0E00      	MOVLW       0
0x3EB6	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x3EB8	0xF001EC0D  	CALL        _memcpy, 0
0x3EBC	0x0E01      	MOVLW       1
0x3EBE	0x0100      	MOVLB       0
0x3EC0	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
0x3EC2	0x0E01      	MOVLW       1
0x3EC4	0x6FB4      	MOVWF       _LCDLines, 1
L_State4163:
;FirmV_0_7_0.c,841 :: 		if(CheckTask(10))
0x3EC6	0x0E0A      	MOVLW       10
0x3EC8	0x0103      	MOVLB       3
0x3ECA	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3ECC	0xF009EC28  	CALL        _CheckTask, 0
0x3ED0	0x5200      	MOVF        R0, 1 
0x3ED2	0xE021      	BZ          L_State4164
;FirmV_0_7_0.c,842 :: 		{OverloadCheckFlag1=1; OverloadInit(1);Logger("S4 M1 Overload Check",1);}
0x3ED4	0x0E01      	MOVLW       1
0x3ED6	0x0100      	MOVLB       0
0x3ED8	0x6FB9      	MOVWF       _OverloadCheckFlag1, 1
0x3EDA	0x0E01      	MOVLW       1
0x3EDC	0x0103      	MOVLB       3
0x3EDE	0x6FD9      	MOVWF       FARG_OverloadInit_ch, 1
0x3EE0	0xF00BEC66  	CALL        _OverloadInit, 0
0x3EE4	0x0E55      	MOVLW       ?ICS?lstr25_FirmV_0_7_0
0x3EE6	0x6EF6      	MOVWF       4086 
0x3EE8	0x0E8A      	MOVLW       hi_addr(?ICS?lstr25_FirmV_0_7_0)
0x3EEA	0x6EF7      	MOVWF       TBLPTRH 
0x3EEC	0x0E00      	MOVLW       higher_addr(?ICS?lstr25_FirmV_0_7_0)
0x3EEE	0x6EF8      	MOVWF       TBLPTRU 
0x3EF0	0x0EDD      	MOVLW       ?lstr25_FirmV_0_7_0
0x3EF2	0x6EE1      	MOVWF       FSR1L 
0x3EF4	0x0E02      	MOVLW       hi_addr(?lstr25_FirmV_0_7_0)
0x3EF6	0x6EE2      	MOVWF       FSR1H 
0x3EF8	0x0E15      	MOVLW       21
0x3EFA	0x6E00      	MOVWF       R0 
0x3EFC	0x0E01      	MOVLW       1
0x3EFE	0x6E01      	MOVWF       R1 
0x3F00	0xF005EC2B  	CALL        ___CC2DW, 0
0x3F04	0x0EDD      	MOVLW       ?lstr25_FirmV_0_7_0
0x3F06	0x0103      	MOVLB       3
0x3F08	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x3F0A	0x0E02      	MOVLW       hi_addr(?lstr25_FirmV_0_7_0)
0x3F0C	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x3F0E	0x0E01      	MOVLW       1
0x3F10	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x3F12	0xF009EC69  	CALL        _Logger, 0
L_State4164:
;FirmV_0_7_0.c,844 :: 		if(CheckTask(11))
0x3F16	0x0E0B      	MOVLW       11
0x3F18	0x0103      	MOVLB       3
0x3F1A	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3F1C	0xF009EC28  	CALL        _CheckTask, 0
0x3F20	0x5200      	MOVF        R0, 1 
0x3F22	0xE021      	BZ          L_State4165
;FirmV_0_7_0.c,845 :: 		{OverloadCheckFlag2=1; OverloadInit(2);Logger("S4 M2 Overload Check",1);}
0x3F24	0x0E01      	MOVLW       1
0x3F26	0x0100      	MOVLB       0
0x3F28	0x6FB6      	MOVWF       _OverloadCheckFlag2, 1
0x3F2A	0x0E02      	MOVLW       2
0x3F2C	0x0103      	MOVLB       3
0x3F2E	0x6FD9      	MOVWF       FARG_OverloadInit_ch, 1
0x3F30	0xF00BEC66  	CALL        _OverloadInit, 0
0x3F34	0x0E6A      	MOVLW       ?ICS?lstr26_FirmV_0_7_0
0x3F36	0x6EF6      	MOVWF       4086 
0x3F38	0x0E8A      	MOVLW       hi_addr(?ICS?lstr26_FirmV_0_7_0)
0x3F3A	0x6EF7      	MOVWF       TBLPTRH 
0x3F3C	0x0E00      	MOVLW       higher_addr(?ICS?lstr26_FirmV_0_7_0)
0x3F3E	0x6EF8      	MOVWF       TBLPTRU 
0x3F40	0x0EF2      	MOVLW       ?lstr26_FirmV_0_7_0
0x3F42	0x6EE1      	MOVWF       FSR1L 
0x3F44	0x0E02      	MOVLW       hi_addr(?lstr26_FirmV_0_7_0)
0x3F46	0x6EE2      	MOVWF       FSR1H 
0x3F48	0x0E15      	MOVLW       21
0x3F4A	0x6E00      	MOVWF       R0 
0x3F4C	0x0E01      	MOVLW       1
0x3F4E	0x6E01      	MOVWF       R1 
0x3F50	0xF005EC2B  	CALL        ___CC2DW, 0
0x3F54	0x0EF2      	MOVLW       ?lstr26_FirmV_0_7_0
0x3F56	0x0103      	MOVLB       3
0x3F58	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x3F5A	0x0E02      	MOVLW       hi_addr(?lstr26_FirmV_0_7_0)
0x3F5C	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x3F5E	0x0E01      	MOVLW       1
0x3F60	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x3F62	0xF009EC69  	CALL        _Logger, 0
L_State4165:
;FirmV_0_7_0.c,847 :: 		if(CheckTask(5))
0x3F66	0x0E05      	MOVLW       5
0x3F68	0x0103      	MOVLB       3
0x3F6A	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3F6C	0xF009EC28  	CALL        _CheckTask, 0
0x3F70	0x5200      	MOVF        R0, 1 
0x3F72	0xE030      	BZ          L_State4166
;FirmV_0_7_0.c,848 :: 		{SetMotorSpeed(1,Motor2FullSpeed); OverloadCheckFlag1=0; M1isSlow=0;Logger("S4 M1 Speed UP",1);}
0x3F74	0x0E01      	MOVLW       1
0x3F76	0x0103      	MOVLB       3
0x3F78	0x6FD9      	MOVWF       FARG_SetMotorSpeed_M1FullSpeed, 1
0x3F7A	0xF3DAC0B8  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x3F7E	0xF011ECBA  	CALL        _SetMotorSpeed, 0
0x3F82	0x0100      	MOVLB       0
0x3F84	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
0x3F86	0x6BBA      	CLRF        _M1isSlow, 1
0x3F88	0x0E53      	MOVLW       83
0x3F8A	0x0103      	MOVLB       3
0x3F8C	0x6F07      	MOVWF       ?lstr27_FirmV_0_7_0, 1
0x3F8E	0x0E34      	MOVLW       52
0x3F90	0x6F08      	MOVWF       ?lstr27_FirmV_0_7_0+1, 1
0x3F92	0x0E20      	MOVLW       32
0x3F94	0x6F09      	MOVWF       ?lstr27_FirmV_0_7_0+2, 1
0x3F96	0x0E4D      	MOVLW       77
0x3F98	0x6F0A      	MOVWF       ?lstr27_FirmV_0_7_0+3, 1
0x3F9A	0x0E31      	MOVLW       49
0x3F9C	0x6F0B      	MOVWF       ?lstr27_FirmV_0_7_0+4, 1
0x3F9E	0x0E20      	MOVLW       32
0x3FA0	0x6F0C      	MOVWF       ?lstr27_FirmV_0_7_0+5, 1
0x3FA2	0x0E53      	MOVLW       83
0x3FA4	0x6F0D      	MOVWF       ?lstr27_FirmV_0_7_0+6, 1
0x3FA6	0x0E70      	MOVLW       112
0x3FA8	0x6F0E      	MOVWF       ?lstr27_FirmV_0_7_0+7, 1
0x3FAA	0x0E65      	MOVLW       101
0x3FAC	0x6F0F      	MOVWF       ?lstr27_FirmV_0_7_0+8, 1
0x3FAE	0x0E65      	MOVLW       101
0x3FB0	0x6F10      	MOVWF       ?lstr27_FirmV_0_7_0+9, 1
0x3FB2	0x0E64      	MOVLW       100
0x3FB4	0x6F11      	MOVWF       ?lstr27_FirmV_0_7_0+10, 1
0x3FB6	0x0E20      	MOVLW       32
0x3FB8	0x6F12      	MOVWF       ?lstr27_FirmV_0_7_0+11, 1
0x3FBA	0x0E55      	MOVLW       85
0x3FBC	0x6F13      	MOVWF       ?lstr27_FirmV_0_7_0+12, 1
0x3FBE	0x0E50      	MOVLW       80
0x3FC0	0x6F14      	MOVWF       ?lstr27_FirmV_0_7_0+13, 1
0x3FC2	0x6B15      	CLRF        ?lstr27_FirmV_0_7_0+14, 1
0x3FC4	0x0E07      	MOVLW       ?lstr27_FirmV_0_7_0
0x3FC6	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x3FC8	0x0E03      	MOVLW       hi_addr(?lstr27_FirmV_0_7_0)
0x3FCA	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x3FCC	0x0E01      	MOVLW       1
0x3FCE	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x3FD0	0xF009EC69  	CALL        _Logger, 0
L_State4166:
;FirmV_0_7_0.c,850 :: 		if(CheckTask(7))
0x3FD4	0x0E07      	MOVLW       7
0x3FD6	0x0103      	MOVLB       3
0x3FD8	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x3FDA	0xF009EC28  	CALL        _CheckTask, 0
0x3FDE	0x5200      	MOVF        R0, 1 
0x3FE0	0xE023      	BZ          L_State4167
;FirmV_0_7_0.c,851 :: 		{SetMotorSpeed(0,Motor2FullSpeed); OverloadCheckFlag1=0; M1isSlow=1;Logger("S4 M1 Speed Down",1);}
0x3FE2	0x0103      	MOVLB       3
0x3FE4	0x6BD9      	CLRF        FARG_SetMotorSpeed_M1FullSpeed, 1
0x3FE6	0xF3DAC0B8  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x3FEA	0xF011ECBA  	CALL        _SetMotorSpeed, 0
0x3FEE	0x0100      	MOVLB       0
0x3FF0	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
0x3FF2	0x0E01      	MOVLW       1
0x3FF4	0x6FBA      	MOVWF       _M1isSlow, 1
0x3FF6	0x0E8E      	MOVLW       ?ICS?lstr28_FirmV_0_7_0
0x3FF8	0x6EF6      	MOVWF       4086 
0x3FFA	0x0E8A      	MOVLW       hi_addr(?ICS?lstr28_FirmV_0_7_0)
0x3FFC	0x6EF7      	MOVWF       TBLPTRH 
0x3FFE	0x0E00      	MOVLW       higher_addr(?ICS?lstr28_FirmV_0_7_0)
0x4000	0x6EF8      	MOVWF       TBLPTRU 
0x4002	0x0E16      	MOVLW       ?lstr28_FirmV_0_7_0
0x4004	0x6EE1      	MOVWF       FSR1L 
0x4006	0x0E03      	MOVLW       hi_addr(?lstr28_FirmV_0_7_0)
0x4008	0x6EE2      	MOVWF       FSR1H 
0x400A	0x0E11      	MOVLW       17
0x400C	0x6E00      	MOVWF       R0 
0x400E	0x0E01      	MOVLW       1
0x4010	0x6E01      	MOVWF       R1 
0x4012	0xF005EC2B  	CALL        ___CC2DW, 0
0x4016	0x0E16      	MOVLW       ?lstr28_FirmV_0_7_0
0x4018	0x0103      	MOVLB       3
0x401A	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x401C	0x0E03      	MOVLW       hi_addr(?lstr28_FirmV_0_7_0)
0x401E	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x4020	0x0E01      	MOVLW       1
0x4022	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x4024	0xF009EC69  	CALL        _Logger, 0
L_State4167:
;FirmV_0_7_0.c,853 :: 		if(CheckTask(6))
0x4028	0x0E06      	MOVLW       6
0x402A	0x0103      	MOVLB       3
0x402C	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x402E	0xF009EC28  	CALL        _CheckTask, 0
0x4032	0x5200      	MOVF        R0, 1 
0x4034	0xE02F      	BZ          L_State4168
;FirmV_0_7_0.c,854 :: 		{SetMotorSpeed(Motor1FullSpeed,1); M2isSlow=0;Logger("S4 M2 Speed UP",1);}
0x4036	0xF3D9C0B5  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x403A	0x0E01      	MOVLW       1
0x403C	0x0103      	MOVLB       3
0x403E	0x6FDA      	MOVWF       FARG_SetMotorSpeed_M2FullSpeed, 1
0x4040	0xF011ECBA  	CALL        _SetMotorSpeed, 0
0x4044	0x0100      	MOVLB       0
0x4046	0x6BB7      	CLRF        _M2isSlow, 1
0x4048	0x0E53      	MOVLW       83
0x404A	0x0103      	MOVLB       3
0x404C	0x6F27      	MOVWF       ?lstr29_FirmV_0_7_0, 1
0x404E	0x0E34      	MOVLW       52
0x4050	0x6F28      	MOVWF       ?lstr29_FirmV_0_7_0+1, 1
0x4052	0x0E20      	MOVLW       32
0x4054	0x6F29      	MOVWF       ?lstr29_FirmV_0_7_0+2, 1
0x4056	0x0E4D      	MOVLW       77
0x4058	0x6F2A      	MOVWF       ?lstr29_FirmV_0_7_0+3, 1
0x405A	0x0E32      	MOVLW       50
0x405C	0x6F2B      	MOVWF       ?lstr29_FirmV_0_7_0+4, 1
0x405E	0x0E20      	MOVLW       32
0x4060	0x6F2C      	MOVWF       ?lstr29_FirmV_0_7_0+5, 1
0x4062	0x0E53      	MOVLW       83
0x4064	0x6F2D      	MOVWF       ?lstr29_FirmV_0_7_0+6, 1
0x4066	0x0E70      	MOVLW       112
0x4068	0x6F2E      	MOVWF       ?lstr29_FirmV_0_7_0+7, 1
0x406A	0x0E65      	MOVLW       101
0x406C	0x6F2F      	MOVWF       ?lstr29_FirmV_0_7_0+8, 1
0x406E	0x0E65      	MOVLW       101
0x4070	0x6F30      	MOVWF       ?lstr29_FirmV_0_7_0+9, 1
0x4072	0x0E64      	MOVLW       100
0x4074	0x6F31      	MOVWF       ?lstr29_FirmV_0_7_0+10, 1
0x4076	0x0E20      	MOVLW       32
0x4078	0x6F32      	MOVWF       ?lstr29_FirmV_0_7_0+11, 1
0x407A	0x0E55      	MOVLW       85
0x407C	0x6F33      	MOVWF       ?lstr29_FirmV_0_7_0+12, 1
0x407E	0x0E50      	MOVLW       80
0x4080	0x6F34      	MOVWF       ?lstr29_FirmV_0_7_0+13, 1
0x4082	0x6B35      	CLRF        ?lstr29_FirmV_0_7_0+14, 1
0x4084	0x0E27      	MOVLW       ?lstr29_FirmV_0_7_0
0x4086	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x4088	0x0E03      	MOVLW       hi_addr(?lstr29_FirmV_0_7_0)
0x408A	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x408C	0x0E01      	MOVLW       1
0x408E	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x4090	0xF009EC69  	CALL        _Logger, 0
L_State4168:
;FirmV_0_7_0.c,856 :: 		if(CheckTask(8))
0x4094	0x0E08      	MOVLW       8
0x4096	0x0103      	MOVLB       3
0x4098	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x409A	0xF009EC28  	CALL        _CheckTask, 0
0x409E	0x5200      	MOVF        R0, 1 
0x40A0	0xE022      	BZ          L_State4169
;FirmV_0_7_0.c,857 :: 		{SetMotorSpeed(Motor1FullSpeed,0); M2isSlow=1;Logger("S4 M2 Speed Down",1);}
0x40A2	0xF3D9C0B5  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x40A6	0x0103      	MOVLB       3
0x40A8	0x6BDA      	CLRF        FARG_SetMotorSpeed_M2FullSpeed, 1
0x40AA	0xF011ECBA  	CALL        _SetMotorSpeed, 0
0x40AE	0x0E01      	MOVLW       1
0x40B0	0x0100      	MOVLB       0
0x40B2	0x6FB7      	MOVWF       _M2isSlow, 1
0x40B4	0x0EAE      	MOVLW       ?ICS?lstr30_FirmV_0_7_0
0x40B6	0x6EF6      	MOVWF       4086 
0x40B8	0x0E8A      	MOVLW       hi_addr(?ICS?lstr30_FirmV_0_7_0)
0x40BA	0x6EF7      	MOVWF       TBLPTRH 
0x40BC	0x0E00      	MOVLW       higher_addr(?ICS?lstr30_FirmV_0_7_0)
0x40BE	0x6EF8      	MOVWF       TBLPTRU 
0x40C0	0x0E36      	MOVLW       ?lstr30_FirmV_0_7_0
0x40C2	0x6EE1      	MOVWF       FSR1L 
0x40C4	0x0E03      	MOVLW       hi_addr(?lstr30_FirmV_0_7_0)
0x40C6	0x6EE2      	MOVWF       FSR1H 
0x40C8	0x0E11      	MOVLW       17
0x40CA	0x6E00      	MOVWF       R0 
0x40CC	0x0E01      	MOVLW       1
0x40CE	0x6E01      	MOVWF       R1 
0x40D0	0xF005EC2B  	CALL        ___CC2DW, 0
0x40D4	0x0E36      	MOVLW       ?lstr30_FirmV_0_7_0
0x40D6	0x0103      	MOVLB       3
0x40D8	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x40DA	0x0E03      	MOVLW       hi_addr(?lstr30_FirmV_0_7_0)
0x40DC	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x40DE	0x0E01      	MOVLW       1
0x40E0	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x40E2	0xF009EC69  	CALL        _Logger, 0
L_State4169:
;FirmV_0_7_0.c,859 :: 		if(CheckTask(3))
0x40E6	0x0E03      	MOVLW       3
0x40E8	0x0103      	MOVLB       3
0x40EA	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x40EC	0xF009EC28  	CALL        _CheckTask, 0
0x40F0	0x5200      	MOVF        R0, 1 
0x40F2	0xE029      	BZ          L_State4170
;FirmV_0_7_0.c,860 :: 		{CloseDone.b0=0; StopMotor(1);Logger("S4 M1 Stoped",1);}
0x40F4	0x0101      	MOVLB       1
0x40F6	0x911F      	BCF         _CloseDone, 0, 1
0x40F8	0x0E01      	MOVLW       1
0x40FA	0x0103      	MOVLB       3
0x40FC	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x40FE	0xF008ECA6  	CALL        _StopMotor, 0
0x4102	0x0E53      	MOVLW       83
0x4104	0x0103      	MOVLB       3
0x4106	0x6F47      	MOVWF       ?lstr31_FirmV_0_7_0, 1
0x4108	0x0E34      	MOVLW       52
0x410A	0x6F48      	MOVWF       ?lstr31_FirmV_0_7_0+1, 1
0x410C	0x0E20      	MOVLW       32
0x410E	0x6F49      	MOVWF       ?lstr31_FirmV_0_7_0+2, 1
0x4110	0x0E4D      	MOVLW       77
0x4112	0x6F4A      	MOVWF       ?lstr31_FirmV_0_7_0+3, 1
0x4114	0x0E31      	MOVLW       49
0x4116	0x6F4B      	MOVWF       ?lstr31_FirmV_0_7_0+4, 1
0x4118	0x0E20      	MOVLW       32
0x411A	0x6F4C      	MOVWF       ?lstr31_FirmV_0_7_0+5, 1
0x411C	0x0E53      	MOVLW       83
0x411E	0x6F4D      	MOVWF       ?lstr31_FirmV_0_7_0+6, 1
0x4120	0x0E74      	MOVLW       116
0x4122	0x6F4E      	MOVWF       ?lstr31_FirmV_0_7_0+7, 1
0x4124	0x0E6F      	MOVLW       111
0x4126	0x6F4F      	MOVWF       ?lstr31_FirmV_0_7_0+8, 1
0x4128	0x0E70      	MOVLW       112
0x412A	0x6F50      	MOVWF       ?lstr31_FirmV_0_7_0+9, 1
0x412C	0x0E65      	MOVLW       101
0x412E	0x6F51      	MOVWF       ?lstr31_FirmV_0_7_0+10, 1
0x4130	0x0E64      	MOVLW       100
0x4132	0x6F52      	MOVWF       ?lstr31_FirmV_0_7_0+11, 1
0x4134	0x6B53      	CLRF        ?lstr31_FirmV_0_7_0+12, 1
0x4136	0x0E47      	MOVLW       ?lstr31_FirmV_0_7_0
0x4138	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x413A	0x0E03      	MOVLW       hi_addr(?lstr31_FirmV_0_7_0)
0x413C	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x413E	0x0E01      	MOVLW       1
0x4140	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x4142	0xF009EC69  	CALL        _Logger, 0
L_State4170:
;FirmV_0_7_0.c,862 :: 		if(CheckTask(4))
0x4146	0x0E04      	MOVLW       4
0x4148	0x0103      	MOVLB       3
0x414A	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x414C	0xF009EC28  	CALL        _CheckTask, 0
0x4150	0x5200      	MOVF        R0, 1 
0x4152	0xE029      	BZ          L_State4171
;FirmV_0_7_0.c,863 :: 		{CloseDone.b1=0; StopMotor(2);Logger("S4 M2 Stoped",1);}
0x4154	0x0101      	MOVLB       1
0x4156	0x931F      	BCF         _CloseDone, 1, 1
0x4158	0x0E02      	MOVLW       2
0x415A	0x0103      	MOVLB       3
0x415C	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x415E	0xF008ECA6  	CALL        _StopMotor, 0
0x4162	0x0E53      	MOVLW       83
0x4164	0x0103      	MOVLB       3
0x4166	0x6F54      	MOVWF       ?lstr32_FirmV_0_7_0, 1
0x4168	0x0E34      	MOVLW       52
0x416A	0x6F55      	MOVWF       ?lstr32_FirmV_0_7_0+1, 1
0x416C	0x0E20      	MOVLW       32
0x416E	0x6F56      	MOVWF       ?lstr32_FirmV_0_7_0+2, 1
0x4170	0x0E4D      	MOVLW       77
0x4172	0x6F57      	MOVWF       ?lstr32_FirmV_0_7_0+3, 1
0x4174	0x0E32      	MOVLW       50
0x4176	0x6F58      	MOVWF       ?lstr32_FirmV_0_7_0+4, 1
0x4178	0x0E20      	MOVLW       32
0x417A	0x6F59      	MOVWF       ?lstr32_FirmV_0_7_0+5, 1
0x417C	0x0E53      	MOVLW       83
0x417E	0x6F5A      	MOVWF       ?lstr32_FirmV_0_7_0+6, 1
0x4180	0x0E74      	MOVLW       116
0x4182	0x6F5B      	MOVWF       ?lstr32_FirmV_0_7_0+7, 1
0x4184	0x0E6F      	MOVLW       111
0x4186	0x6F5C      	MOVWF       ?lstr32_FirmV_0_7_0+8, 1
0x4188	0x0E70      	MOVLW       112
0x418A	0x6F5D      	MOVWF       ?lstr32_FirmV_0_7_0+9, 1
0x418C	0x0E65      	MOVLW       101
0x418E	0x6F5E      	MOVWF       ?lstr32_FirmV_0_7_0+10, 1
0x4190	0x0E64      	MOVLW       100
0x4192	0x6F5F      	MOVWF       ?lstr32_FirmV_0_7_0+11, 1
0x4194	0x6B60      	CLRF        ?lstr32_FirmV_0_7_0+12, 1
0x4196	0x0E54      	MOVLW       ?lstr32_FirmV_0_7_0
0x4198	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x419A	0x0E03      	MOVLW       hi_addr(?lstr32_FirmV_0_7_0)
0x419C	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x419E	0x0E01      	MOVLW       1
0x41A0	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x41A2	0xF009EC69  	CALL        _Logger, 0
L_State4171:
;FirmV_0_7_0.c,865 :: 		if((OverloadCheckFlag1==1)&&(Events.Overload.b0==1)&&(M1isSlow==0))
0x41A6	0x0100      	MOVLB       0
0x41A8	0x51B9      	MOVF        _OverloadCheckFlag1, 0, 1
0x41AA	0x0A01      	XORLW       1
0x41AC	0xE15A      	BNZ         L_State4174
0x41AE	0x0102      	MOVLB       2
0x41B0	0xA19F      	BTFSS       _Events+5, 0, 1
0x41B2	0xD057      	BRA         L_State4174
0x41B4	0x0100      	MOVLB       0
0x41B6	0x51BA      	MOVF        _M1isSlow, 0, 1
0x41B8	0x0A00      	XORLW       0
0x41BA	0xE153      	BNZ         L_State4174
L__State4831:
;FirmV_0_7_0.c,866 :: 		{StopMotor(1); StopMotor(2); State=6;OverloadCheckFlag1=0;OverloadCheckFlag2=0;Logger("S4 M1 Overloaded",1);ClearTasks(9);
0x41BC	0x0E01      	MOVLW       1
0x41BE	0x0103      	MOVLB       3
0x41C0	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x41C2	0xF008ECA6  	CALL        _StopMotor, 0
0x41C6	0x0E02      	MOVLW       2
0x41C8	0x0103      	MOVLB       3
0x41CA	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x41CC	0xF008ECA6  	CALL        _StopMotor, 0
0x41D0	0x0E06      	MOVLW       6
0x41D2	0x0101      	MOVLB       1
0x41D4	0x6F44      	MOVWF       _State, 1
0x41D6	0x0100      	MOVLB       0
0x41D8	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
0x41DA	0x6BB6      	CLRF        _OverloadCheckFlag2, 1
0x41DC	0x0ED9      	MOVLW       ?ICS?lstr33_FirmV_0_7_0
0x41DE	0x6EF6      	MOVWF       4086 
0x41E0	0x0E8A      	MOVLW       hi_addr(?ICS?lstr33_FirmV_0_7_0)
0x41E2	0x6EF7      	MOVWF       TBLPTRH 
0x41E4	0x0E00      	MOVLW       higher_addr(?ICS?lstr33_FirmV_0_7_0)
0x41E6	0x6EF8      	MOVWF       TBLPTRU 
0x41E8	0x0E61      	MOVLW       ?lstr33_FirmV_0_7_0
0x41EA	0x6EE1      	MOVWF       FSR1L 
0x41EC	0x0E03      	MOVLW       hi_addr(?lstr33_FirmV_0_7_0)
0x41EE	0x6EE2      	MOVWF       FSR1H 
0x41F0	0x0E11      	MOVLW       17
0x41F2	0x6E00      	MOVWF       R0 
0x41F4	0x0E01      	MOVLW       1
0x41F6	0x6E01      	MOVWF       R1 
0x41F8	0xF005EC2B  	CALL        ___CC2DW, 0
0x41FC	0x0E61      	MOVLW       ?lstr33_FirmV_0_7_0
0x41FE	0x0103      	MOVLB       3
0x4200	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x4202	0x0E03      	MOVLW       hi_addr(?lstr33_FirmV_0_7_0)
0x4204	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x4206	0x0E01      	MOVLW       1
0x4208	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x420A	0xF009EC69  	CALL        _Logger, 0
0x420E	0x0E09      	MOVLW       9
0x4210	0x0103      	MOVLB       3
0x4212	0x6FD9      	MOVWF       FARG_ClearTasks_except, 1
0x4214	0xF00AEC5C  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,867 :: 		memcpy(LCDLine1,_stop,16);memcpy(LCDLine2,_ErrOverload,16);LCDUpdateFlag=1;LCDLines=2;}
0x4218	0x0EBD      	MOVLW       _LCDLine1
0x421A	0x0105      	MOVLB       5
0x421C	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x421E	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x4220	0x0106      	MOVLB       6
0x4222	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x4224	0x0E56      	MOVLW       __stop
0x4226	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x4228	0x0E01      	MOVLW       hi_addr(__stop)
0x422A	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x422C	0x0E10      	MOVLW       16
0x422E	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x4230	0x0E00      	MOVLW       0
0x4232	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x4234	0xF001EC0D  	CALL        _memcpy, 0
0x4238	0x0EA3      	MOVLW       _LCDLine2
0x423A	0x0105      	MOVLB       5
0x423C	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x423E	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x4240	0x0106      	MOVLB       6
0x4242	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x4244	0x0E45      	MOVLW       __errOverload
0x4246	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x4248	0x0E01      	MOVLW       hi_addr(__errOverload)
0x424A	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x424C	0x0E10      	MOVLW       16
0x424E	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x4250	0x0E00      	MOVLW       0
0x4252	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x4254	0xF001EC0D  	CALL        _memcpy, 0
0x4258	0x0E01      	MOVLW       1
0x425A	0x0100      	MOVLB       0
0x425C	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
0x425E	0x0E02      	MOVLW       2
0x4260	0x6FB4      	MOVWF       _LCDLines, 1
L_State4174:
0x4262	0x0100      	MOVLB       0
;FirmV_0_7_0.c,869 :: 		if((OverloadCheckFlag2==1)&&(Events.Overload.b1==1)&&(M2isSlow==0))
0x4264	0x51B6      	MOVF        _OverloadCheckFlag2, 0, 1
0x4266	0x0A01      	XORLW       1
0x4268	0xE15A      	BNZ         L_State4177
0x426A	0x0102      	MOVLB       2
0x426C	0xA39F      	BTFSS       _Events+5, 1, 1
0x426E	0xD057      	BRA         L_State4177
0x4270	0x0100      	MOVLB       0
0x4272	0x51B7      	MOVF        _M2isSlow, 0, 1
0x4274	0x0A00      	XORLW       0
0x4276	0xE153      	BNZ         L_State4177
L__State4830:
;FirmV_0_7_0.c,870 :: 		{StopMotor(1); StopMotor(2); State=6;OverloadCheckFlag1=0;OverloadCheckFlag2=0;Logger("S4 M2 Overloaded",1);ClearTasks(9);
0x4278	0x0E01      	MOVLW       1
0x427A	0x0103      	MOVLB       3
0x427C	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x427E	0xF008ECA6  	CALL        _StopMotor, 0
0x4282	0x0E02      	MOVLW       2
0x4284	0x0103      	MOVLB       3
0x4286	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x4288	0xF008ECA6  	CALL        _StopMotor, 0
0x428C	0x0E06      	MOVLW       6
0x428E	0x0101      	MOVLB       1
0x4290	0x6F44      	MOVWF       _State, 1
0x4292	0x0100      	MOVLB       0
0x4294	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
0x4296	0x6BB6      	CLRF        _OverloadCheckFlag2, 1
0x4298	0x0EEA      	MOVLW       ?ICS?lstr34_FirmV_0_7_0
0x429A	0x6EF6      	MOVWF       4086 
0x429C	0x0E8A      	MOVLW       hi_addr(?ICS?lstr34_FirmV_0_7_0)
0x429E	0x6EF7      	MOVWF       TBLPTRH 
0x42A0	0x0E00      	MOVLW       higher_addr(?ICS?lstr34_FirmV_0_7_0)
0x42A2	0x6EF8      	MOVWF       TBLPTRU 
0x42A4	0x0E72      	MOVLW       ?lstr34_FirmV_0_7_0
0x42A6	0x6EE1      	MOVWF       FSR1L 
0x42A8	0x0E03      	MOVLW       hi_addr(?lstr34_FirmV_0_7_0)
0x42AA	0x6EE2      	MOVWF       FSR1H 
0x42AC	0x0E11      	MOVLW       17
0x42AE	0x6E00      	MOVWF       R0 
0x42B0	0x0E01      	MOVLW       1
0x42B2	0x6E01      	MOVWF       R1 
0x42B4	0xF005EC2B  	CALL        ___CC2DW, 0
0x42B8	0x0E72      	MOVLW       ?lstr34_FirmV_0_7_0
0x42BA	0x0103      	MOVLB       3
0x42BC	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x42BE	0x0E03      	MOVLW       hi_addr(?lstr34_FirmV_0_7_0)
0x42C0	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x42C2	0x0E01      	MOVLW       1
0x42C4	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x42C6	0xF009EC69  	CALL        _Logger, 0
0x42CA	0x0E09      	MOVLW       9
0x42CC	0x0103      	MOVLB       3
0x42CE	0x6FD9      	MOVWF       FARG_ClearTasks_except, 1
0x42D0	0xF00AEC5C  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,871 :: 		memcpy(LCDLine1,_stop,16);memcpy(LCDLine2,_ErrOverload,16);LCDUpdateFlag=1;LCDLines=2;}
0x42D4	0x0EBD      	MOVLW       _LCDLine1
0x42D6	0x0105      	MOVLB       5
0x42D8	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x42DA	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x42DC	0x0106      	MOVLB       6
0x42DE	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x42E0	0x0E56      	MOVLW       __stop
0x42E2	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x42E4	0x0E01      	MOVLW       hi_addr(__stop)
0x42E6	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x42E8	0x0E10      	MOVLW       16
0x42EA	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x42EC	0x0E00      	MOVLW       0
0x42EE	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x42F0	0xF001EC0D  	CALL        _memcpy, 0
0x42F4	0x0EA3      	MOVLW       _LCDLine2
0x42F6	0x0105      	MOVLB       5
0x42F8	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x42FA	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x42FC	0x0106      	MOVLB       6
0x42FE	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x4300	0x0E45      	MOVLW       __errOverload
0x4302	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x4304	0x0E01      	MOVLW       hi_addr(__errOverload)
0x4306	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x4308	0x0E10      	MOVLW       16
0x430A	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x430C	0x0E00      	MOVLW       0
0x430E	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x4310	0xF001EC0D  	CALL        _memcpy, 0
0x4314	0x0E01      	MOVLW       1
0x4316	0x0100      	MOVLB       0
0x4318	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
0x431A	0x0E02      	MOVLW       2
0x431C	0x6FB4      	MOVWF       _LCDLines, 1
L_State4177:
;FirmV_0_7_0.c,873 :: 		if((Door2OpenTime==0)||(ActiveDoors==1))
0x431E	0x0102      	MOVLB       2
0x4320	0x5198      	MOVF        _Door2OpenTime, 0, 1
0x4322	0x0A00      	XORLW       0
0x4324	0xE005      	BZ          L__State4829
0x4326	0x0101      	MOVLB       1
0x4328	0x5132      	MOVF        _ActiveDoors, 0, 1
0x432A	0x0A01      	XORLW       1
0x432C	0xE001      	BZ          L__State4829
0x432E	0xD002      	BRA         L_State4180
L__State4829:
0x4330	0x0101      	MOVLB       1
;FirmV_0_7_0.c,874 :: 		CloseDone.b1=0;
0x4332	0x931F      	BCF         _CloseDone, 1, 1
L_State4180:
;FirmV_0_7_0.c,876 :: 		if((Events.Photocell.b0==1))
0x4334	0x0102      	MOVLB       2
0x4336	0xA1A0      	BTFSS       _Events+6, 0, 1
0x4338	0xD055      	BRA         L_State4181
;FirmV_0_7_0.c,877 :: 		{StopMotor(1); StopMotor(2); OverloadCheckFlag1=0;OverloadCheckFlag2=0;State=6;PhotocellOpenFlag=1;Logger("S4 Photocell Int",1);ClearTasks(9);
0x433A	0x0E01      	MOVLW       1
0x433C	0x0103      	MOVLB       3
0x433E	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x4340	0xF008ECA6  	CALL        _StopMotor, 0
0x4344	0x0E02      	MOVLW       2
0x4346	0x0103      	MOVLB       3
0x4348	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x434A	0xF008ECA6  	CALL        _StopMotor, 0
0x434E	0x0100      	MOVLB       0
0x4350	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
0x4352	0x6BB6      	CLRF        _OverloadCheckFlag2, 1
0x4354	0x0E06      	MOVLW       6
0x4356	0x0101      	MOVLB       1
0x4358	0x6F44      	MOVWF       _State, 1
0x435A	0x0E01      	MOVLW       1
0x435C	0x6F20      	MOVWF       _PhotocellOpenFlag, 1
0x435E	0x0EFB      	MOVLW       ?ICS?lstr35_FirmV_0_7_0
0x4360	0x6EF6      	MOVWF       4086 
0x4362	0x0E8A      	MOVLW       hi_addr(?ICS?lstr35_FirmV_0_7_0)
0x4364	0x6EF7      	MOVWF       TBLPTRH 
0x4366	0x0E00      	MOVLW       higher_addr(?ICS?lstr35_FirmV_0_7_0)
0x4368	0x6EF8      	MOVWF       TBLPTRU 
0x436A	0x0E83      	MOVLW       ?lstr35_FirmV_0_7_0
0x436C	0x6EE1      	MOVWF       FSR1L 
0x436E	0x0E03      	MOVLW       hi_addr(?lstr35_FirmV_0_7_0)
0x4370	0x6EE2      	MOVWF       FSR1H 
0x4372	0x0E11      	MOVLW       17
0x4374	0x6E00      	MOVWF       R0 
0x4376	0x0E01      	MOVLW       1
0x4378	0x6E01      	MOVWF       R1 
0x437A	0xF005EC2B  	CALL        ___CC2DW, 0
0x437E	0x0E83      	MOVLW       ?lstr35_FirmV_0_7_0
0x4380	0x0103      	MOVLB       3
0x4382	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x4384	0x0E03      	MOVLW       hi_addr(?lstr35_FirmV_0_7_0)
0x4386	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x4388	0x0E01      	MOVLW       1
0x438A	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x438C	0xF009EC69  	CALL        _Logger, 0
0x4390	0x0E09      	MOVLW       9
0x4392	0x0103      	MOVLB       3
0x4394	0x6FD9      	MOVWF       FARG_ClearTasks_except, 1
0x4396	0xF00AEC5C  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,878 :: 		memcpy(LCDLine1,_stop,16);memcpy(LCDLine2,_ErrPhoto,16);LCDUpdateFlag=1;LCDLines=2;}
0x439A	0x0EBD      	MOVLW       _LCDLine1
0x439C	0x0105      	MOVLB       5
0x439E	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x43A0	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x43A2	0x0106      	MOVLB       6
0x43A4	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x43A6	0x0E56      	MOVLW       __stop
0x43A8	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x43AA	0x0E01      	MOVLW       hi_addr(__stop)
0x43AC	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x43AE	0x0E10      	MOVLW       16
0x43B0	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x43B2	0x0E00      	MOVLW       0
0x43B4	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x43B6	0xF001EC0D  	CALL        _memcpy, 0
0x43BA	0x0EA3      	MOVLW       _LCDLine2
0x43BC	0x0105      	MOVLB       5
0x43BE	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x43C0	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x43C2	0x0106      	MOVLB       6
0x43C4	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x43C6	0x0E33      	MOVLW       __errPhoto
0x43C8	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x43CA	0x0E01      	MOVLW       hi_addr(__errPhoto)
0x43CC	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x43CE	0x0E10      	MOVLW       16
0x43D0	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x43D2	0x0E00      	MOVLW       0
0x43D4	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x43D6	0xF001EC0D  	CALL        _memcpy, 0
0x43DA	0x0E01      	MOVLW       1
0x43DC	0x0100      	MOVLB       0
0x43DE	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
0x43E0	0x0E02      	MOVLW       2
0x43E2	0x6FB4      	MOVWF       _LCDLines, 1
L_State4181:
;FirmV_0_7_0.c,880 :: 		if((Events.Limiter==1)&&(LimiterEnable))
0x43E4	0x0102      	MOVLB       2
0x43E6	0x51A1      	MOVF        _Events+7, 0, 1
0x43E8	0x0A01      	XORLW       1
0x43EA	0xE155      	BNZ         L_State4184
0x43EC	0x53A4      	MOVF        _LimiterEnable, 1, 1
0x43EE	0xE053      	BZ          L_State4184
L__State4828:
;FirmV_0_7_0.c,881 :: 		{StopMotor(1); StopMotor(2); State=6;OverloadCheckFlag1=0;OverloadCheckFlag2=0;Logger("S4 Limit Switch Stop",1);ClearTasks(9);
0x43F0	0x0E01      	MOVLW       1
0x43F2	0x0103      	MOVLB       3
0x43F4	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x43F6	0xF008ECA6  	CALL        _StopMotor, 0
0x43FA	0x0E02      	MOVLW       2
0x43FC	0x0103      	MOVLB       3
0x43FE	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x4400	0xF008ECA6  	CALL        _StopMotor, 0
0x4404	0x0E06      	MOVLW       6
0x4406	0x0101      	MOVLB       1
0x4408	0x6F44      	MOVWF       _State, 1
0x440A	0x0100      	MOVLB       0
0x440C	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
0x440E	0x6BB6      	CLRF        _OverloadCheckFlag2, 1
0x4410	0x0E0C      	MOVLW       ?ICS?lstr36_FirmV_0_7_0
0x4412	0x6EF6      	MOVWF       4086 
0x4414	0x0E8B      	MOVLW       hi_addr(?ICS?lstr36_FirmV_0_7_0)
0x4416	0x6EF7      	MOVWF       TBLPTRH 
0x4418	0x0E00      	MOVLW       higher_addr(?ICS?lstr36_FirmV_0_7_0)
0x441A	0x6EF8      	MOVWF       TBLPTRU 
0x441C	0x0E94      	MOVLW       ?lstr36_FirmV_0_7_0
0x441E	0x6EE1      	MOVWF       FSR1L 
0x4420	0x0E03      	MOVLW       hi_addr(?lstr36_FirmV_0_7_0)
0x4422	0x6EE2      	MOVWF       FSR1H 
0x4424	0x0E15      	MOVLW       21
0x4426	0x6E00      	MOVWF       R0 
0x4428	0x0E01      	MOVLW       1
0x442A	0x6E01      	MOVWF       R1 
0x442C	0xF005EC2B  	CALL        ___CC2DW, 0
0x4430	0x0E94      	MOVLW       ?lstr36_FirmV_0_7_0
0x4432	0x0103      	MOVLB       3
0x4434	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x4436	0x0E03      	MOVLW       hi_addr(?lstr36_FirmV_0_7_0)
0x4438	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x443A	0x0E01      	MOVLW       1
0x443C	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x443E	0xF009EC69  	CALL        _Logger, 0
0x4442	0x0E09      	MOVLW       9
0x4444	0x0103      	MOVLB       3
0x4446	0x6FD9      	MOVWF       FARG_ClearTasks_except, 1
0x4448	0xF00AEC5C  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,882 :: 		memcpy(LCDLine1,_stop,16);memcpy(LCDLine2,_ErrLimit,16);LCDUpdateFlag=1;LCDLines=2;}
0x444C	0x0EBD      	MOVLW       _LCDLine1
0x444E	0x0105      	MOVLB       5
0x4450	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x4452	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x4454	0x0106      	MOVLB       6
0x4456	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x4458	0x0E56      	MOVLW       __stop
0x445A	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x445C	0x0E01      	MOVLW       hi_addr(__stop)
0x445E	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x4460	0x0E10      	MOVLW       16
0x4462	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x4464	0x0E00      	MOVLW       0
0x4466	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x4468	0xF001EC0D  	CALL        _memcpy, 0
0x446C	0x0EA3      	MOVLW       _LCDLine2
0x446E	0x0105      	MOVLB       5
0x4470	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x4472	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x4474	0x0106      	MOVLB       6
0x4476	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x4478	0x0E78      	MOVLW       __errLimit
0x447A	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x447C	0x0E01      	MOVLW       hi_addr(__errLimit)
0x447E	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x4480	0x0E10      	MOVLW       16
0x4482	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x4484	0x0E00      	MOVLW       0
0x4486	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x4488	0xF001EC0D  	CALL        _memcpy, 0
0x448C	0x0E01      	MOVLW       1
0x448E	0x0100      	MOVLB       0
0x4490	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
0x4492	0x0E02      	MOVLW       2
0x4494	0x6FB4      	MOVWF       _LCDLines, 1
L_State4184:
;FirmV_0_7_0.c,884 :: 		if((Events.Remote!=0))
0x4496	0x0102      	MOVLB       2
0x4498	0x519E      	MOVF        _Events+4, 0, 1
0x449A	0x0A00      	XORLW       0
0x449C	0xE053      	BZ          L_State4185
;FirmV_0_7_0.c,885 :: 		{StopMotor(1); StopMotor(2); State=6;OverloadCheckFlag1=0;OverloadCheckFlag2=0;Logger("S4 Remote Pressed",1);ClearTasks(9);
0x449E	0x0E01      	MOVLW       1
0x44A0	0x0103      	MOVLB       3
0x44A2	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x44A4	0xF008ECA6  	CALL        _StopMotor, 0
0x44A8	0x0E02      	MOVLW       2
0x44AA	0x0103      	MOVLB       3
0x44AC	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x44AE	0xF008ECA6  	CALL        _StopMotor, 0
0x44B2	0x0E06      	MOVLW       6
0x44B4	0x0101      	MOVLB       1
0x44B6	0x6F44      	MOVWF       _State, 1
0x44B8	0x0100      	MOVLB       0
0x44BA	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
0x44BC	0x6BB6      	CLRF        _OverloadCheckFlag2, 1
0x44BE	0x0E21      	MOVLW       ?ICS?lstr37_FirmV_0_7_0
0x44C0	0x6EF6      	MOVWF       4086 
0x44C2	0x0E8B      	MOVLW       hi_addr(?ICS?lstr37_FirmV_0_7_0)
0x44C4	0x6EF7      	MOVWF       TBLPTRH 
0x44C6	0x0E00      	MOVLW       higher_addr(?ICS?lstr37_FirmV_0_7_0)
0x44C8	0x6EF8      	MOVWF       TBLPTRU 
0x44CA	0x0EA9      	MOVLW       ?lstr37_FirmV_0_7_0
0x44CC	0x6EE1      	MOVWF       FSR1L 
0x44CE	0x0E03      	MOVLW       hi_addr(?lstr37_FirmV_0_7_0)
0x44D0	0x6EE2      	MOVWF       FSR1H 
0x44D2	0x0E12      	MOVLW       18
0x44D4	0x6E00      	MOVWF       R0 
0x44D6	0x0E01      	MOVLW       1
0x44D8	0x6E01      	MOVWF       R1 
0x44DA	0xF005EC2B  	CALL        ___CC2DW, 0
0x44DE	0x0EA9      	MOVLW       ?lstr37_FirmV_0_7_0
0x44E0	0x0103      	MOVLB       3
0x44E2	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x44E4	0x0E03      	MOVLW       hi_addr(?lstr37_FirmV_0_7_0)
0x44E6	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x44E8	0x0E01      	MOVLW       1
0x44EA	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x44EC	0xF009EC69  	CALL        _Logger, 0
0x44F0	0x0E09      	MOVLW       9
0x44F2	0x0103      	MOVLB       3
0x44F4	0x6FD9      	MOVWF       FARG_ClearTasks_except, 1
0x44F6	0xF00AEC5C  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,886 :: 		memcpy(LCDLine1,_stop,16);memcpy(LCDLine2,_ErrRemote,16);LCDUpdateFlag=1;LCDLines=2;}
0x44FA	0x0EBD      	MOVLW       _LCDLine1
0x44FC	0x0105      	MOVLB       5
0x44FE	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x4500	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x4502	0x0106      	MOVLB       6
0x4504	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x4506	0x0E56      	MOVLW       __stop
0x4508	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x450A	0x0E01      	MOVLW       hi_addr(__stop)
0x450C	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x450E	0x0E10      	MOVLW       16
0x4510	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x4512	0x0E00      	MOVLW       0
0x4514	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x4516	0xF001EC0D  	CALL        _memcpy, 0
0x451A	0x0EA3      	MOVLW       _LCDLine2
0x451C	0x0105      	MOVLB       5
0x451E	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x4520	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x4522	0x0106      	MOVLB       6
0x4524	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x4526	0x0E67      	MOVLW       __errRemote
0x4528	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x452A	0x0E01      	MOVLW       hi_addr(__errRemote)
0x452C	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x452E	0x0E10      	MOVLW       16
0x4530	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x4532	0x0E00      	MOVLW       0
0x4534	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x4536	0xF001EC0D  	CALL        _memcpy, 0
0x453A	0x0E01      	MOVLW       1
0x453C	0x0100      	MOVLB       0
0x453E	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
0x4540	0x0E02      	MOVLW       2
0x4542	0x6FB4      	MOVWF       _LCDLines, 1
L_State4185:
;FirmV_0_7_0.c,888 :: 		if(CloseDone==0)
0x4544	0x0101      	MOVLB       1
0x4546	0x511F      	MOVF        _CloseDone, 0, 1
0x4548	0x0A00      	XORLW       0
0x454A	0xA4D8      	BTFSS       STATUS, 2 
0x454C	0xD0A7      	BRA         L_State4186
;FirmV_0_7_0.c,889 :: 		if(LockEnable)
0x454E	0x0102      	MOVLB       2
0x4550	0x53A3      	MOVF        _LockEnable, 1, 1
0x4552	0xB4D8      	BTFSC       STATUS, 2 
0x4554	0xD089      	BRA         L_State4187
;FirmV_0_7_0.c,890 :: 		{StartMotor(1,_Open);AddTask(ms500+1,14);SetMotorSpeed(1,Motor2FullSpeed);OverloadCheckFlag1=0;M1isSlow=0;SetMotorSpeed(Motor1FullSpeed,1);OverloadCheckFlag2=0;M2isSlow=0;
0x4556	0x0E01      	MOVLW       1
0x4558	0x0103      	MOVLB       3
0x455A	0x6FD9      	MOVWF       FARG_StartMotor_Mx, 1
0x455C	0x0E01      	MOVLW       1
0x455E	0x6FDA      	MOVWF       FARG_StartMotor_Dir, 1
0x4560	0xF011ECCA  	CALL        _StartMotor, 0
0x4564	0x0E01      	MOVLW       1
0x4566	0x0101      	MOVLB       1
0x4568	0x2504      	ADDWF       _ms500, 0, 1
0x456A	0x0103      	MOVLB       3
0x456C	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x456E	0x0E00      	MOVLW       0
0x4570	0x0101      	MOVLB       1
0x4572	0x2105      	ADDWFC      _ms500+1, 0, 1
0x4574	0x0103      	MOVLB       3
0x4576	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x4578	0x0E00      	MOVLW       0
0x457A	0x0101      	MOVLB       1
0x457C	0x2106      	ADDWFC      _ms500+2, 0, 1
0x457E	0x0103      	MOVLB       3
0x4580	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x4582	0x0E00      	MOVLW       0
0x4584	0x0101      	MOVLB       1
0x4586	0x2107      	ADDWFC      _ms500+3, 0, 1
0x4588	0x0103      	MOVLB       3
0x458A	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x458C	0x0E0E      	MOVLW       14
0x458E	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x4590	0xF008ECB5  	CALL        _AddTask, 0
0x4594	0x0E01      	MOVLW       1
0x4596	0x6FD9      	MOVWF       FARG_SetMotorSpeed_M1FullSpeed, 1
0x4598	0xF3DAC0B8  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x459C	0xF011ECBA  	CALL        _SetMotorSpeed, 0
0x45A0	0x0100      	MOVLB       0
0x45A2	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
0x45A4	0x6BBA      	CLRF        _M1isSlow, 1
0x45A6	0xF3D9C0B5  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x45AA	0x0E01      	MOVLW       1
0x45AC	0x0103      	MOVLB       3
0x45AE	0x6FDA      	MOVWF       FARG_SetMotorSpeed_M2FullSpeed, 1
0x45B0	0xF011ECBA  	CALL        _SetMotorSpeed, 0
0x45B4	0x0100      	MOVLB       0
0x45B6	0x6BB6      	CLRF        _OverloadCheckFlag2, 1
0x45B8	0x6BB7      	CLRF        _M2isSlow, 1
;FirmV_0_7_0.c,891 :: 		AddTask(ms500+RelaseTime,3);AddTask(ms500+1+RelaseTime,4);AddTask(ms500+1+RelaseTime,13);CloseDone.b2=1;}
0x45BA	0x0E01      	MOVLW       1
0x45BC	0x0101      	MOVLB       1
0x45BE	0x2504      	ADDWF       _ms500, 0, 1
0x45C0	0x0103      	MOVLB       3
0x45C2	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x45C4	0x0E00      	MOVLW       0
0x45C6	0x0101      	MOVLB       1
0x45C8	0x2105      	ADDWFC      _ms500+1, 0, 1
0x45CA	0x0103      	MOVLB       3
0x45CC	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x45CE	0x0E00      	MOVLW       0
0x45D0	0x0101      	MOVLB       1
0x45D2	0x2106      	ADDWFC      _ms500+2, 0, 1
0x45D4	0x0103      	MOVLB       3
0x45D6	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x45D8	0x0E00      	MOVLW       0
0x45DA	0x0101      	MOVLB       1
0x45DC	0x2107      	ADDWFC      _ms500+3, 0, 1
0x45DE	0x0103      	MOVLB       3
0x45E0	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x45E2	0x0E03      	MOVLW       3
0x45E4	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x45E6	0xF008ECB5  	CALL        _AddTask, 0
0x45EA	0x0E01      	MOVLW       1
0x45EC	0x0101      	MOVLB       1
0x45EE	0x2504      	ADDWF       _ms500, 0, 1
0x45F0	0x0103      	MOVLB       3
0x45F2	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x45F4	0x0E00      	MOVLW       0
0x45F6	0x0101      	MOVLB       1
0x45F8	0x2105      	ADDWFC      _ms500+1, 0, 1
0x45FA	0x0103      	MOVLB       3
0x45FC	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x45FE	0x0E00      	MOVLW       0
0x4600	0x0101      	MOVLB       1
0x4602	0x2106      	ADDWFC      _ms500+2, 0, 1
0x4604	0x0103      	MOVLB       3
0x4606	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x4608	0x0E00      	MOVLW       0
0x460A	0x0101      	MOVLB       1
0x460C	0x2107      	ADDWFC      _ms500+3, 0, 1
0x460E	0x0103      	MOVLB       3
0x4610	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x4612	0x0E01      	MOVLW       1
0x4614	0x27D9      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x4616	0x0E00      	MOVLW       0
0x4618	0x23DA      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x461A	0x23DB      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x461C	0x23DC      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x461E	0x0E04      	MOVLW       4
0x4620	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x4622	0xF008ECB5  	CALL        _AddTask, 0
0x4626	0x0E01      	MOVLW       1
0x4628	0x0101      	MOVLB       1
0x462A	0x2504      	ADDWF       _ms500, 0, 1
0x462C	0x0103      	MOVLB       3
0x462E	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x4630	0x0E00      	MOVLW       0
0x4632	0x0101      	MOVLB       1
0x4634	0x2105      	ADDWFC      _ms500+1, 0, 1
0x4636	0x0103      	MOVLB       3
0x4638	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x463A	0x0E00      	MOVLW       0
0x463C	0x0101      	MOVLB       1
0x463E	0x2106      	ADDWFC      _ms500+2, 0, 1
0x4640	0x0103      	MOVLB       3
0x4642	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x4644	0x0E00      	MOVLW       0
0x4646	0x0101      	MOVLB       1
0x4648	0x2107      	ADDWFC      _ms500+3, 0, 1
0x464A	0x0103      	MOVLB       3
0x464C	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x464E	0x0E01      	MOVLW       1
0x4650	0x27D9      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x4652	0x0E00      	MOVLW       0
0x4654	0x23DA      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x4656	0x23DB      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x4658	0x23DC      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x465A	0x0E0D      	MOVLW       13
0x465C	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x465E	0xF008ECB5  	CALL        _AddTask, 0
0x4662	0x0101      	MOVLB       1
0x4664	0x851F      	BSF         _CloseDone, 2, 1
0x4666	0xD01A      	BRA         L_State4188
L_State4187:
0x4668	0x0101      	MOVLB       1
;FirmV_0_7_0.c,893 :: 		{AddTask(ms500+1,13);CloseDone.b2=1;}
0x466A	0x0E01      	MOVLW       1
0x466C	0x2504      	ADDWF       _ms500, 0, 1
0x466E	0x0103      	MOVLB       3
0x4670	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x4672	0x0E00      	MOVLW       0
0x4674	0x0101      	MOVLB       1
0x4676	0x2105      	ADDWFC      _ms500+1, 0, 1
0x4678	0x0103      	MOVLB       3
0x467A	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x467C	0x0E00      	MOVLW       0
0x467E	0x0101      	MOVLB       1
0x4680	0x2106      	ADDWFC      _ms500+2, 0, 1
0x4682	0x0103      	MOVLB       3
0x4684	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x4686	0x0E00      	MOVLW       0
0x4688	0x0101      	MOVLB       1
0x468A	0x2107      	ADDWFC      _ms500+3, 0, 1
0x468C	0x0103      	MOVLB       3
0x468E	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x4690	0x0E0D      	MOVLW       13
0x4692	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x4694	0xF008ECB5  	CALL        _AddTask, 0
0x4698	0x0101      	MOVLB       1
0x469A	0x851F      	BSF         _CloseDone, 2, 1
L_State4188:
L_State4186:
;FirmV_0_7_0.c,895 :: 		if(CheckTask(14))
0x469C	0x0E0E      	MOVLW       14
0x469E	0x0103      	MOVLB       3
0x46A0	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x46A2	0xF009EC28  	CALL        _CheckTask, 0
0x46A6	0x5200      	MOVF        R0, 1 
0x46A8	0xE007      	BZ          L_State4189
;FirmV_0_7_0.c,896 :: 		StartMotor(2,_Open);
0x46AA	0x0E02      	MOVLW       2
0x46AC	0x0103      	MOVLB       3
0x46AE	0x6FD9      	MOVWF       FARG_StartMotor_Mx, 1
0x46B0	0x0E01      	MOVLW       1
0x46B2	0x6FDA      	MOVWF       FARG_StartMotor_Dir, 1
0x46B4	0xF011ECCA  	CALL        _StartMotor, 0
L_State4189:
;FirmV_0_7_0.c,898 :: 		if(CheckTask(13))
0x46B8	0x0E0D      	MOVLW       13
0x46BA	0x0103      	MOVLB       3
0x46BC	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x46BE	0xF009EC28  	CALL        _CheckTask, 0
0x46C2	0x5200      	MOVF        R0, 1 
0x46C4	0xE02E      	BZ          L_State4190
;FirmV_0_7_0.c,899 :: 		{State=1; PassFlag=0;ClearTasks(9);memcpy(LCDLine1,_close,16);memcpy(LCDLine2,_Blank,16);LCDUpdateFlag=1;LCDLines=1;}
0x46C6	0x0E01      	MOVLW       1
0x46C8	0x0101      	MOVLB       1
0x46CA	0x6F44      	MOVWF       _State, 1
0x46CC	0x6B08      	CLRF        _PassFlag, 1
0x46CE	0x0E09      	MOVLW       9
0x46D0	0x0103      	MOVLB       3
0x46D2	0x6FD9      	MOVWF       FARG_ClearTasks_except, 1
0x46D4	0xF00AEC5C  	CALL        _ClearTasks, 0
0x46D8	0x0EBD      	MOVLW       _LCDLine1
0x46DA	0x0105      	MOVLB       5
0x46DC	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x46DE	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x46E0	0x0106      	MOVLB       6
0x46E2	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x46E4	0x0E21      	MOVLW       __close
0x46E6	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x46E8	0x0E01      	MOVLW       hi_addr(__close)
0x46EA	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x46EC	0x0E10      	MOVLW       16
0x46EE	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x46F0	0x0E00      	MOVLW       0
0x46F2	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x46F4	0xF001EC0D  	CALL        _memcpy, 0
0x46F8	0x0EA3      	MOVLW       _LCDLine2
0x46FA	0x0105      	MOVLB       5
0x46FC	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x46FE	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x4700	0x0106      	MOVLB       6
0x4702	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x4704	0x0E91      	MOVLW       __Blank
0x4706	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x4708	0x0E00      	MOVLW       hi_addr(__Blank)
0x470A	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x470C	0x0E10      	MOVLW       16
0x470E	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x4710	0x0E00      	MOVLW       0
0x4712	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x4714	0xF001EC0D  	CALL        _memcpy, 0
0x4718	0x0E01      	MOVLW       1
0x471A	0x0100      	MOVLB       0
0x471C	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
0x471E	0x0E01      	MOVLW       1
0x4720	0x6FB4      	MOVWF       _LCDLines, 1
L_State4190:
;FirmV_0_7_0.c,901 :: 		if((State==5)||(State==6))
0x4722	0x0101      	MOVLB       1
0x4724	0x5144      	MOVF        _State, 0, 1
0x4726	0x0A05      	XORLW       5
0x4728	0xE004      	BZ          L__State4827
0x472A	0x5144      	MOVF        _State, 0, 1
0x472C	0x0A06      	XORLW       6
0x472E	0xE001      	BZ          L__State4827
0x4730	0xD051      	BRA         L_State4193
L__State4827:
;FirmV_0_7_0.c,902 :: 		{ClearTasks(0);if(AutoCloseTime!=0){AddTask(ms500+AutoCloseTime,9);Logger("S4 Autoclose Renewed",1);memcpy(LCDLine2,_autoclose,16);LCDUpdateFlag=1;LCDLines=2;}}
0x4732	0x0103      	MOVLB       3
0x4734	0x6BD9      	CLRF        FARG_ClearTasks_except, 1
0x4736	0xF00AEC5C  	CALL        _ClearTasks, 0
0x473A	0x0E00      	MOVLW       0
0x473C	0x0102      	MOVLB       2
0x473E	0x1996      	XORWF       _AutoCloseTime+1, 0, 1
0x4740	0xE102      	BNZ         L__State4932
0x4742	0x0E00      	MOVLW       0
0x4744	0x1995      	XORWF       _AutoCloseTime, 0, 1
L__State4932:
0x4746	0xE046      	BZ          L_State4194
0x4748	0x5195      	MOVF        _AutoCloseTime, 0, 1
0x474A	0x0101      	MOVLB       1
0x474C	0x2504      	ADDWF       _ms500, 0, 1
0x474E	0x0103      	MOVLB       3
0x4750	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x4752	0x0102      	MOVLB       2
0x4754	0x5196      	MOVF        _AutoCloseTime+1, 0, 1
0x4756	0x0101      	MOVLB       1
0x4758	0x2105      	ADDWFC      _ms500+1, 0, 1
0x475A	0x0103      	MOVLB       3
0x475C	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x475E	0x0E00      	MOVLW       0
0x4760	0x0101      	MOVLB       1
0x4762	0x2106      	ADDWFC      _ms500+2, 0, 1
0x4764	0x0103      	MOVLB       3
0x4766	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x4768	0x0E00      	MOVLW       0
0x476A	0x0101      	MOVLB       1
0x476C	0x2107      	ADDWFC      _ms500+3, 0, 1
0x476E	0x0103      	MOVLB       3
0x4770	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x4772	0x0E09      	MOVLW       9
0x4774	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x4776	0xF008ECB5  	CALL        _AddTask, 0
0x477A	0x0E33      	MOVLW       ?ICS?lstr38_FirmV_0_7_0
0x477C	0x6EF6      	MOVWF       4086 
0x477E	0x0E8B      	MOVLW       hi_addr(?ICS?lstr38_FirmV_0_7_0)
0x4780	0x6EF7      	MOVWF       TBLPTRH 
0x4782	0x0E00      	MOVLW       higher_addr(?ICS?lstr38_FirmV_0_7_0)
0x4784	0x6EF8      	MOVWF       TBLPTRU 
0x4786	0x0EBB      	MOVLW       ?lstr38_FirmV_0_7_0
0x4788	0x6EE1      	MOVWF       FSR1L 
0x478A	0x0E03      	MOVLW       hi_addr(?lstr38_FirmV_0_7_0)
0x478C	0x6EE2      	MOVWF       FSR1H 
0x478E	0x0E15      	MOVLW       21
0x4790	0x6E00      	MOVWF       R0 
0x4792	0x0E01      	MOVLW       1
0x4794	0x6E01      	MOVWF       R1 
0x4796	0xF005EC2B  	CALL        ___CC2DW, 0
0x479A	0x0EBB      	MOVLW       ?lstr38_FirmV_0_7_0
0x479C	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x479E	0x0E03      	MOVLW       hi_addr(?lstr38_FirmV_0_7_0)
0x47A0	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x47A2	0x0E01      	MOVLW       1
0x47A4	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x47A6	0xF009EC69  	CALL        _Logger, 0
0x47AA	0x0EA3      	MOVLW       _LCDLine2
0x47AC	0x0105      	MOVLB       5
0x47AE	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x47B0	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x47B2	0x0106      	MOVLB       6
0x47B4	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x47B6	0x0EE2      	MOVLW       __autoclose
0x47B8	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x47BA	0x0E00      	MOVLW       hi_addr(__autoclose)
0x47BC	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x47BE	0x0E10      	MOVLW       16
0x47C0	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x47C2	0x0E00      	MOVLW       0
0x47C4	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x47C6	0xF001EC0D  	CALL        _memcpy, 0
0x47CA	0x0E01      	MOVLW       1
0x47CC	0x0100      	MOVLB       0
0x47CE	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
0x47D0	0x0E02      	MOVLW       2
0x47D2	0x6FB4      	MOVWF       _LCDLines, 1
L_State4194:
L_State4193:
;FirmV_0_7_0.c,904 :: 		}
0x47D4	0x0012      	RETURN      0
; end of _State4
_State6:
;FirmV_0_7_0.c,1000 :: 		void State6()
;FirmV_0_7_0.c,1004 :: 		char delay=3;
0x47D6	0x0E03      	MOVLW       3
0x47D8	0x0102      	MOVLB       2
0x47DA	0x6FF5      	MOVWF       State6_delay_L0, 1
;FirmV_0_7_0.c,1005 :: 		Flasher=0;
0x47DC	0x9E83      	BCF         PORTD, 7 
;FirmV_0_7_0.c,1006 :: 		FlashFlag=0;
0x47DE	0x0100      	MOVLB       0
0x47E0	0x6BBC      	CLRF        _FlashFlag, 1
;FirmV_0_7_0.c,1007 :: 		if((Events.Remote!=0)||(PhotocellOpenFlag))
0x47E2	0x0102      	MOVLB       2
0x47E4	0x519E      	MOVF        _Events+4, 0, 1
0x47E6	0x0A00      	XORLW       0
0x47E8	0xE104      	BNZ         L__State6841
0x47EA	0x0101      	MOVLB       1
0x47EC	0x5320      	MOVF        _PhotocellOpenFlag, 1, 1
0x47EE	0xE101      	BNZ         L__State6841
0x47F0	0xD151      	BRA         L_State6214
L__State6841:
0x47F2	0x0101      	MOVLB       1
;FirmV_0_7_0.c,1009 :: 		PhotocellOpenFlag=0;
0x47F4	0x6B20      	CLRF        _PhotocellOpenFlag, 1
;FirmV_0_7_0.c,1010 :: 		Flasher=1;
0x47F6	0x8E83      	BSF         PORTD, 7 
;FirmV_0_7_0.c,1011 :: 		FlashFlag=1;
0x47F8	0x0E01      	MOVLW       1
0x47FA	0x0100      	MOVLB       0
0x47FC	0x6FBC      	MOVWF       _FlashFlag, 1
;FirmV_0_7_0.c,1012 :: 		ClearTasks(9);
0x47FE	0x0E09      	MOVLW       9
0x4800	0x0103      	MOVLB       3
0x4802	0x6FD9      	MOVWF       FARG_ClearTasks_except, 1
0x4804	0xF00AEC5C  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,1013 :: 		if(Lockenable)
0x4808	0x0102      	MOVLB       2
0x480A	0x53A3      	MOVF        _LockEnable, 1, 1
0x480C	0xE018      	BZ          L_State6215
;FirmV_0_7_0.c,1014 :: 		AddTask(ms500+1,12);
0x480E	0x0E01      	MOVLW       1
0x4810	0x0101      	MOVLB       1
0x4812	0x2504      	ADDWF       _ms500, 0, 1
0x4814	0x0103      	MOVLB       3
0x4816	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x4818	0x0E00      	MOVLW       0
0x481A	0x0101      	MOVLB       1
0x481C	0x2105      	ADDWFC      _ms500+1, 0, 1
0x481E	0x0103      	MOVLB       3
0x4820	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x4822	0x0E00      	MOVLW       0
0x4824	0x0101      	MOVLB       1
0x4826	0x2106      	ADDWFC      _ms500+2, 0, 1
0x4828	0x0103      	MOVLB       3
0x482A	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x482C	0x0E00      	MOVLW       0
0x482E	0x0101      	MOVLB       1
0x4830	0x2107      	ADDWFC      _ms500+3, 0, 1
0x4832	0x0103      	MOVLB       3
0x4834	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x4836	0x0E0C      	MOVLW       12
0x4838	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x483A	0xF008ECB5  	CALL        _AddTask, 0
L_State6215:
;FirmV_0_7_0.c,1015 :: 		temp=ms500+delay;
0x483E	0x0102      	MOVLB       2
0x4840	0x51F5      	MOVF        State6_delay_L0, 0, 1
0x4842	0x0101      	MOVLB       1
0x4844	0x2504      	ADDWF       _ms500, 0, 1
0x4846	0x6E00      	MOVWF       R0 
0x4848	0x0E00      	MOVLW       0
0x484A	0x2105      	ADDWFC      _ms500+1, 0, 1
0x484C	0x6E01      	MOVWF       R1 
0x484E	0x0E00      	MOVLW       0
0x4850	0x2106      	ADDWFC      _ms500+2, 0, 1
0x4852	0x6E02      	MOVWF       R2 
0x4854	0x0E00      	MOVLW       0
0x4856	0x2107      	ADDWFC      _ms500+3, 0, 1
0x4858	0x6E03      	MOVWF       R3 
0x485A	0xF243C000  	MOVFF       R0, _temp
0x485E	0xF244C001  	MOVFF       R1, _temp+1
0x4862	0xF245C002  	MOVFF       R2, _temp+2
0x4866	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,1016 :: 		AddTask(temp,1);
0x486A	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x486E	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x4872	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x4876	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x487A	0x0E01      	MOVLW       1
0x487C	0x0103      	MOVLB       3
0x487E	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x4880	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,1017 :: 		AddTask(temp,5);
0x4884	0xF3D9C243  	MOVFF       _temp, FARG_AddTask_OccTime
0x4888	0xF3DAC244  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x488C	0xF3DBC245  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x4890	0xF3DCC246  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x4894	0x0E05      	MOVLW       5
0x4896	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x4898	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,1018 :: 		M1isSlow=0;//speed up
0x489C	0x0100      	MOVLB       0
0x489E	0x6BBA      	CLRF        _M1isSlow, 1
;FirmV_0_7_0.c,1019 :: 		temp=ms500+OverloadDelay+delay;
0x48A0	0x0E06      	MOVLW       6
0x48A2	0x0101      	MOVLB       1
0x48A4	0x2504      	ADDWF       _ms500, 0, 1
0x48A6	0x6E00      	MOVWF       R0 
0x48A8	0x0E00      	MOVLW       0
0x48AA	0x2105      	ADDWFC      _ms500+1, 0, 1
0x48AC	0x6E01      	MOVWF       R1 
0x48AE	0x0E00      	MOVLW       0
0x48B0	0x2106      	ADDWFC      _ms500+2, 0, 1
0x48B2	0x6E02      	MOVWF       R2 
0x48B4	0x0E00      	MOVLW       0
0x48B6	0x2107      	ADDWFC      _ms500+3, 0, 1
0x48B8	0x6E03      	MOVWF       R3 
0x48BA	0x0102      	MOVLB       2
0x48BC	0x51F5      	MOVF        State6_delay_L0, 0, 1
0x48BE	0x2600      	ADDWF       R0, 1 
0x48C0	0x0E00      	MOVLW       0
0x48C2	0x2201      	ADDWFC      R1, 1 
0x48C4	0x2202      	ADDWFC      R2, 1 
0x48C6	0x2203      	ADDWFC      R3, 1 
0x48C8	0xF243C000  	MOVFF       R0, _temp
0x48CC	0xF244C001  	MOVFF       R1, _temp+1
0x48D0	0xF245C002  	MOVFF       R2, _temp+2
0x48D4	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,1020 :: 		AddTask(temp,10); //overload check
0x48D8	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x48DC	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x48E0	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x48E4	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x48E8	0x0E0A      	MOVLW       10
0x48EA	0x0103      	MOVLB       3
0x48EC	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x48EE	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,1021 :: 		temp=ms500+Door1OpenTime+delay;
0x48F2	0x0102      	MOVLB       2
0x48F4	0x5134      	MOVF        _Door1OpenTime, 0, 1
0x48F6	0x0101      	MOVLB       1
0x48F8	0x2504      	ADDWF       _ms500, 0, 1
0x48FA	0x6E00      	MOVWF       R0 
0x48FC	0x0E00      	MOVLW       0
0x48FE	0x2105      	ADDWFC      _ms500+1, 0, 1
0x4900	0x6E01      	MOVWF       R1 
0x4902	0x0E00      	MOVLW       0
0x4904	0x2106      	ADDWFC      _ms500+2, 0, 1
0x4906	0x6E02      	MOVWF       R2 
0x4908	0x0E00      	MOVLW       0
0x490A	0x2107      	ADDWFC      _ms500+3, 0, 1
0x490C	0x6E03      	MOVWF       R3 
0x490E	0x0102      	MOVLB       2
0x4910	0x51F5      	MOVF        State6_delay_L0, 0, 1
0x4912	0x2600      	ADDWF       R0, 1 
0x4914	0x0E00      	MOVLW       0
0x4916	0x2201      	ADDWFC      R1, 1 
0x4918	0x2202      	ADDWFC      R2, 1 
0x491A	0x2203      	ADDWFC      R3, 1 
0x491C	0xF243C000  	MOVFF       R0, _temp
0x4920	0xF244C001  	MOVFF       R1, _temp+1
0x4924	0xF245C002  	MOVFF       R2, _temp+2
0x4928	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,1022 :: 		AddTask(temp,3);//Stop motor
0x492C	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x4930	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x4934	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x4938	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x493C	0x0E03      	MOVLW       3
0x493E	0x0103      	MOVLB       3
0x4940	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x4942	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,1023 :: 		if((Door2OpenTime!=0)&&(ActiveDoors==2))
0x4946	0x0102      	MOVLB       2
0x4948	0x5198      	MOVF        _Door2OpenTime, 0, 1
0x494A	0x0A00      	XORLW       0
0x494C	0xB4D8      	BTFSC       STATUS, 2 
0x494E	0xD099      	BRA         L_State6218
0x4950	0x0101      	MOVLB       1
0x4952	0x5132      	MOVF        _ActiveDoors, 0, 1
0x4954	0x0A02      	XORLW       2
0x4956	0xA4D8      	BTFSS       STATUS, 2 
0x4958	0xD094      	BRA         L_State6218
L__State6840:
;FirmV_0_7_0.c,1025 :: 		AddTask(ms500+ActionTimeDiff+delay,2);
0x495A	0x0102      	MOVLB       2
0x495C	0x5147      	MOVF        _ActionTimeDiff, 0, 1
0x495E	0x0101      	MOVLB       1
0x4960	0x2504      	ADDWF       _ms500, 0, 1
0x4962	0x0103      	MOVLB       3
0x4964	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x4966	0x0E00      	MOVLW       0
0x4968	0x0101      	MOVLB       1
0x496A	0x2105      	ADDWFC      _ms500+1, 0, 1
0x496C	0x0103      	MOVLB       3
0x496E	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x4970	0x0E00      	MOVLW       0
0x4972	0x0101      	MOVLB       1
0x4974	0x2106      	ADDWFC      _ms500+2, 0, 1
0x4976	0x0103      	MOVLB       3
0x4978	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x497A	0x0E00      	MOVLW       0
0x497C	0x0101      	MOVLB       1
0x497E	0x2107      	ADDWFC      _ms500+3, 0, 1
0x4980	0x0103      	MOVLB       3
0x4982	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x4984	0x0102      	MOVLB       2
0x4986	0x51F5      	MOVF        State6_delay_L0, 0, 1
0x4988	0x0103      	MOVLB       3
0x498A	0x27D9      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x498C	0x0E00      	MOVLW       0
0x498E	0x23DA      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x4990	0x23DB      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x4992	0x23DC      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x4994	0x0E02      	MOVLW       2
0x4996	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x4998	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,1026 :: 		AddTask(ms500+ActionTimeDiff+delay,6);
0x499C	0x0102      	MOVLB       2
0x499E	0x5147      	MOVF        _ActionTimeDiff, 0, 1
0x49A0	0x0101      	MOVLB       1
0x49A2	0x2504      	ADDWF       _ms500, 0, 1
0x49A4	0x0103      	MOVLB       3
0x49A6	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x49A8	0x0E00      	MOVLW       0
0x49AA	0x0101      	MOVLB       1
0x49AC	0x2105      	ADDWFC      _ms500+1, 0, 1
0x49AE	0x0103      	MOVLB       3
0x49B0	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x49B2	0x0E00      	MOVLW       0
0x49B4	0x0101      	MOVLB       1
0x49B6	0x2106      	ADDWFC      _ms500+2, 0, 1
0x49B8	0x0103      	MOVLB       3
0x49BA	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x49BC	0x0E00      	MOVLW       0
0x49BE	0x0101      	MOVLB       1
0x49C0	0x2107      	ADDWFC      _ms500+3, 0, 1
0x49C2	0x0103      	MOVLB       3
0x49C4	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x49C6	0x0102      	MOVLB       2
0x49C8	0x51F5      	MOVF        State6_delay_L0, 0, 1
0x49CA	0x0103      	MOVLB       3
0x49CC	0x27D9      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x49CE	0x0E00      	MOVLW       0
0x49D0	0x23DA      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x49D2	0x23DB      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x49D4	0x23DC      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x49D6	0x0E06      	MOVLW       6
0x49D8	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x49DA	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,1027 :: 		M2isSlow=0;//speed up
0x49DE	0x0100      	MOVLB       0
0x49E0	0x6BB7      	CLRF        _M2isSlow, 1
;FirmV_0_7_0.c,1028 :: 		AddTask(ms500+ActionTimeDiff+OverloadDelay+delay,11); //overload check
0x49E2	0x0102      	MOVLB       2
0x49E4	0x5147      	MOVF        _ActionTimeDiff, 0, 1
0x49E6	0x0101      	MOVLB       1
0x49E8	0x2504      	ADDWF       _ms500, 0, 1
0x49EA	0x0103      	MOVLB       3
0x49EC	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x49EE	0x0E00      	MOVLW       0
0x49F0	0x0101      	MOVLB       1
0x49F2	0x2105      	ADDWFC      _ms500+1, 0, 1
0x49F4	0x0103      	MOVLB       3
0x49F6	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x49F8	0x0E00      	MOVLW       0
0x49FA	0x0101      	MOVLB       1
0x49FC	0x2106      	ADDWFC      _ms500+2, 0, 1
0x49FE	0x0103      	MOVLB       3
0x4A00	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x4A02	0x0E00      	MOVLW       0
0x4A04	0x0101      	MOVLB       1
0x4A06	0x2107      	ADDWFC      _ms500+3, 0, 1
0x4A08	0x0103      	MOVLB       3
0x4A0A	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x4A0C	0x0E06      	MOVLW       6
0x4A0E	0x27D9      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x4A10	0x0E00      	MOVLW       0
0x4A12	0x23DA      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x4A14	0x23DB      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x4A16	0x23DC      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x4A18	0x0102      	MOVLB       2
0x4A1A	0x51F5      	MOVF        State6_delay_L0, 0, 1
0x4A1C	0x0103      	MOVLB       3
0x4A1E	0x27D9      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x4A20	0x0E00      	MOVLW       0
0x4A22	0x23DA      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x4A24	0x23DB      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x4A26	0x23DC      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x4A28	0x0E0B      	MOVLW       11
0x4A2A	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x4A2C	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,1029 :: 		AddTask(ms500+Door2OpenTime+ActionTimeDiff+delay,4);//Stop motor
0x4A30	0x0102      	MOVLB       2
0x4A32	0x5198      	MOVF        _Door2OpenTime, 0, 1
0x4A34	0x0101      	MOVLB       1
0x4A36	0x2504      	ADDWF       _ms500, 0, 1
0x4A38	0x0103      	MOVLB       3
0x4A3A	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x4A3C	0x0E00      	MOVLW       0
0x4A3E	0x0101      	MOVLB       1
0x4A40	0x2105      	ADDWFC      _ms500+1, 0, 1
0x4A42	0x0103      	MOVLB       3
0x4A44	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x4A46	0x0E00      	MOVLW       0
0x4A48	0x0101      	MOVLB       1
0x4A4A	0x2106      	ADDWFC      _ms500+2, 0, 1
0x4A4C	0x0103      	MOVLB       3
0x4A4E	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x4A50	0x0E00      	MOVLW       0
0x4A52	0x0101      	MOVLB       1
0x4A54	0x2107      	ADDWFC      _ms500+3, 0, 1
0x4A56	0x0103      	MOVLB       3
0x4A58	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x4A5A	0x0102      	MOVLB       2
0x4A5C	0x5147      	MOVF        _ActionTimeDiff, 0, 1
0x4A5E	0x0103      	MOVLB       3
0x4A60	0x27D9      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x4A62	0x0E00      	MOVLW       0
0x4A64	0x23DA      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x4A66	0x23DB      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x4A68	0x23DC      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x4A6A	0x0102      	MOVLB       2
0x4A6C	0x51F5      	MOVF        State6_delay_L0, 0, 1
0x4A6E	0x0103      	MOVLB       3
0x4A70	0x27D9      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x4A72	0x0E00      	MOVLW       0
0x4A74	0x23DA      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x4A76	0x23DB      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x4A78	0x23DC      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x4A7A	0x0E04      	MOVLW       4
0x4A7C	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x4A7E	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,1030 :: 		}
L_State6218:
;FirmV_0_7_0.c,1031 :: 		OpenDone=3;
0x4A82	0x0E03      	MOVLW       3
0x4A84	0x0100      	MOVLB       0
0x4A86	0x6FE1      	MOVWF       _OpenDone, 1
;FirmV_0_7_0.c,1032 :: 		OverloadCheckFlag1=0;
0x4A88	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
;FirmV_0_7_0.c,1033 :: 		OverloadCheckFlag2=0;
0x4A8A	0x6BB6      	CLRF        _OverloadCheckFlag2, 1
;FirmV_0_7_0.c,1034 :: 		PassFlag=0;
0x4A8C	0x0101      	MOVLB       1
0x4A8E	0x6B08      	CLRF        _PassFlag, 1
;FirmV_0_7_0.c,1035 :: 		State=8;
0x4A90	0x0E08      	MOVLW       8
0x4A92	0x6F44      	MOVWF       _State, 1
;FirmV_0_7_0.c,1036 :: 		}
L_State6214:
;FirmV_0_7_0.c,1039 :: 		if(CheckTask(9)==1)
0x4A94	0x0E09      	MOVLW       9
0x4A96	0x0103      	MOVLB       3
0x4A98	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x4A9A	0xF009EC28  	CALL        _CheckTask, 0
0x4A9E	0x5000      	MOVF        R0, 0 
0x4AA0	0x0A01      	XORLW       1
0x4AA2	0xA4D8      	BTFSS       STATUS, 2 
0x4AA4	0xD130      	BRA         L_State6219
;FirmV_0_7_0.c,1041 :: 		ClearTasks(9);
0x4AA6	0x0E09      	MOVLW       9
0x4AA8	0x0103      	MOVLB       3
0x4AAA	0x6FD9      	MOVWF       FARG_ClearTasks_except, 1
0x4AAC	0xF00AEC5C  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,1042 :: 		temp=ms500+delay;
0x4AB0	0x0102      	MOVLB       2
0x4AB2	0x51F5      	MOVF        State6_delay_L0, 0, 1
0x4AB4	0x0101      	MOVLB       1
0x4AB6	0x2504      	ADDWF       _ms500, 0, 1
0x4AB8	0x6E00      	MOVWF       R0 
0x4ABA	0x0E00      	MOVLW       0
0x4ABC	0x2105      	ADDWFC      _ms500+1, 0, 1
0x4ABE	0x6E01      	MOVWF       R1 
0x4AC0	0x0E00      	MOVLW       0
0x4AC2	0x2106      	ADDWFC      _ms500+2, 0, 1
0x4AC4	0x6E02      	MOVWF       R2 
0x4AC6	0x0E00      	MOVLW       0
0x4AC8	0x2107      	ADDWFC      _ms500+3, 0, 1
0x4ACA	0x6E03      	MOVWF       R3 
0x4ACC	0xF243C000  	MOVFF       R0, _temp
0x4AD0	0xF244C001  	MOVFF       R1, _temp+1
0x4AD4	0xF245C002  	MOVFF       R2, _temp+2
0x4AD8	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,1043 :: 		AddTask(temp,1);
0x4ADC	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x4AE0	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x4AE4	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x4AE8	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x4AEC	0x0E01      	MOVLW       1
0x4AEE	0x0103      	MOVLB       3
0x4AF0	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x4AF2	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,1044 :: 		AddTask(temp,5);
0x4AF6	0xF3D9C243  	MOVFF       _temp, FARG_AddTask_OccTime
0x4AFA	0xF3DAC244  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x4AFE	0xF3DBC245  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x4B02	0xF3DCC246  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x4B06	0x0E05      	MOVLW       5
0x4B08	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x4B0A	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,1045 :: 		M1isSlow=0;//speed up
0x4B0E	0x0100      	MOVLB       0
0x4B10	0x6BBA      	CLRF        _M1isSlow, 1
;FirmV_0_7_0.c,1046 :: 		temp=ms500+OverloadDelay+delay;
0x4B12	0x0E06      	MOVLW       6
0x4B14	0x0101      	MOVLB       1
0x4B16	0x2504      	ADDWF       _ms500, 0, 1
0x4B18	0x6E00      	MOVWF       R0 
0x4B1A	0x0E00      	MOVLW       0
0x4B1C	0x2105      	ADDWFC      _ms500+1, 0, 1
0x4B1E	0x6E01      	MOVWF       R1 
0x4B20	0x0E00      	MOVLW       0
0x4B22	0x2106      	ADDWFC      _ms500+2, 0, 1
0x4B24	0x6E02      	MOVWF       R2 
0x4B26	0x0E00      	MOVLW       0
0x4B28	0x2107      	ADDWFC      _ms500+3, 0, 1
0x4B2A	0x6E03      	MOVWF       R3 
0x4B2C	0x0102      	MOVLB       2
0x4B2E	0x51F5      	MOVF        State6_delay_L0, 0, 1
0x4B30	0x2600      	ADDWF       R0, 1 
0x4B32	0x0E00      	MOVLW       0
0x4B34	0x2201      	ADDWFC      R1, 1 
0x4B36	0x2202      	ADDWFC      R2, 1 
0x4B38	0x2203      	ADDWFC      R3, 1 
0x4B3A	0xF243C000  	MOVFF       R0, _temp
0x4B3E	0xF244C001  	MOVFF       R1, _temp+1
0x4B42	0xF245C002  	MOVFF       R2, _temp+2
0x4B46	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,1047 :: 		AddTask(temp,10); //overload check
0x4B4A	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x4B4E	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x4B52	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x4B56	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x4B5A	0x0E0A      	MOVLW       10
0x4B5C	0x0103      	MOVLB       3
0x4B5E	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x4B60	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,1048 :: 		temp=ms500+Door1CloseTime+delay;
0x4B64	0x0102      	MOVLB       2
0x4B66	0x5135      	MOVF        _Door1CloseTime, 0, 1
0x4B68	0x0101      	MOVLB       1
0x4B6A	0x2504      	ADDWF       _ms500, 0, 1
0x4B6C	0x6E00      	MOVWF       R0 
0x4B6E	0x0E00      	MOVLW       0
0x4B70	0x2105      	ADDWFC      _ms500+1, 0, 1
0x4B72	0x6E01      	MOVWF       R1 
0x4B74	0x0E00      	MOVLW       0
0x4B76	0x2106      	ADDWFC      _ms500+2, 0, 1
0x4B78	0x6E02      	MOVWF       R2 
0x4B7A	0x0E00      	MOVLW       0
0x4B7C	0x2107      	ADDWFC      _ms500+3, 0, 1
0x4B7E	0x6E03      	MOVWF       R3 
0x4B80	0x0102      	MOVLB       2
0x4B82	0x51F5      	MOVF        State6_delay_L0, 0, 1
0x4B84	0x2600      	ADDWF       R0, 1 
0x4B86	0x0E00      	MOVLW       0
0x4B88	0x2201      	ADDWFC      R1, 1 
0x4B8A	0x2202      	ADDWFC      R2, 1 
0x4B8C	0x2203      	ADDWFC      R3, 1 
0x4B8E	0xF243C000  	MOVFF       R0, _temp
0x4B92	0xF244C001  	MOVFF       R1, _temp+1
0x4B96	0xF245C002  	MOVFF       R2, _temp+2
0x4B9A	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,1049 :: 		AddTask(temp,3);//Stop motor
0x4B9E	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x4BA2	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x4BA6	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x4BAA	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x4BAE	0x0E03      	MOVLW       3
0x4BB0	0x0103      	MOVLB       3
0x4BB2	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x4BB4	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,1051 :: 		if((Door2CloseTime!=0)&&(ActiveDoors==2))
0x4BB8	0x0101      	MOVLB       1
0x4BBA	0x51A7      	MOVF        _Door2CloseTime, 0, 1
0x4BBC	0x0A00      	XORLW       0
0x4BBE	0xB4D8      	BTFSC       STATUS, 2 
0x4BC0	0xD098      	BRA         L_State6222
0x4BC2	0x5132      	MOVF        _ActiveDoors, 0, 1
0x4BC4	0x0A02      	XORLW       2
0x4BC6	0xA4D8      	BTFSS       STATUS, 2 
0x4BC8	0xD094      	BRA         L_State6222
L__State6839:
;FirmV_0_7_0.c,1053 :: 		AddTask(ms500+ActionTimeDiff+delay,2);
0x4BCA	0x0102      	MOVLB       2
0x4BCC	0x5147      	MOVF        _ActionTimeDiff, 0, 1
0x4BCE	0x0101      	MOVLB       1
0x4BD0	0x2504      	ADDWF       _ms500, 0, 1
0x4BD2	0x0103      	MOVLB       3
0x4BD4	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x4BD6	0x0E00      	MOVLW       0
0x4BD8	0x0101      	MOVLB       1
0x4BDA	0x2105      	ADDWFC      _ms500+1, 0, 1
0x4BDC	0x0103      	MOVLB       3
0x4BDE	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x4BE0	0x0E00      	MOVLW       0
0x4BE2	0x0101      	MOVLB       1
0x4BE4	0x2106      	ADDWFC      _ms500+2, 0, 1
0x4BE6	0x0103      	MOVLB       3
0x4BE8	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x4BEA	0x0E00      	MOVLW       0
0x4BEC	0x0101      	MOVLB       1
0x4BEE	0x2107      	ADDWFC      _ms500+3, 0, 1
0x4BF0	0x0103      	MOVLB       3
0x4BF2	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x4BF4	0x0102      	MOVLB       2
0x4BF6	0x51F5      	MOVF        State6_delay_L0, 0, 1
0x4BF8	0x0103      	MOVLB       3
0x4BFA	0x27D9      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x4BFC	0x0E00      	MOVLW       0
0x4BFE	0x23DA      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x4C00	0x23DB      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x4C02	0x23DC      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x4C04	0x0E02      	MOVLW       2
0x4C06	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x4C08	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,1054 :: 		AddTask(ms500+ActionTimeDiff+delay,6);
0x4C0C	0x0102      	MOVLB       2
0x4C0E	0x5147      	MOVF        _ActionTimeDiff, 0, 1
0x4C10	0x0101      	MOVLB       1
0x4C12	0x2504      	ADDWF       _ms500, 0, 1
0x4C14	0x0103      	MOVLB       3
0x4C16	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x4C18	0x0E00      	MOVLW       0
0x4C1A	0x0101      	MOVLB       1
0x4C1C	0x2105      	ADDWFC      _ms500+1, 0, 1
0x4C1E	0x0103      	MOVLB       3
0x4C20	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x4C22	0x0E00      	MOVLW       0
0x4C24	0x0101      	MOVLB       1
0x4C26	0x2106      	ADDWFC      _ms500+2, 0, 1
0x4C28	0x0103      	MOVLB       3
0x4C2A	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x4C2C	0x0E00      	MOVLW       0
0x4C2E	0x0101      	MOVLB       1
0x4C30	0x2107      	ADDWFC      _ms500+3, 0, 1
0x4C32	0x0103      	MOVLB       3
0x4C34	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x4C36	0x0102      	MOVLB       2
0x4C38	0x51F5      	MOVF        State6_delay_L0, 0, 1
0x4C3A	0x0103      	MOVLB       3
0x4C3C	0x27D9      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x4C3E	0x0E00      	MOVLW       0
0x4C40	0x23DA      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x4C42	0x23DB      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x4C44	0x23DC      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x4C46	0x0E06      	MOVLW       6
0x4C48	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x4C4A	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,1055 :: 		M2isSlow=0;//speed up
0x4C4E	0x0100      	MOVLB       0
0x4C50	0x6BB7      	CLRF        _M2isSlow, 1
;FirmV_0_7_0.c,1056 :: 		AddTask(ms500+ActionTimeDiff+OverloadDelay+delay,11); //overload check
0x4C52	0x0102      	MOVLB       2
0x4C54	0x5147      	MOVF        _ActionTimeDiff, 0, 1
0x4C56	0x0101      	MOVLB       1
0x4C58	0x2504      	ADDWF       _ms500, 0, 1
0x4C5A	0x0103      	MOVLB       3
0x4C5C	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x4C5E	0x0E00      	MOVLW       0
0x4C60	0x0101      	MOVLB       1
0x4C62	0x2105      	ADDWFC      _ms500+1, 0, 1
0x4C64	0x0103      	MOVLB       3
0x4C66	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x4C68	0x0E00      	MOVLW       0
0x4C6A	0x0101      	MOVLB       1
0x4C6C	0x2106      	ADDWFC      _ms500+2, 0, 1
0x4C6E	0x0103      	MOVLB       3
0x4C70	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x4C72	0x0E00      	MOVLW       0
0x4C74	0x0101      	MOVLB       1
0x4C76	0x2107      	ADDWFC      _ms500+3, 0, 1
0x4C78	0x0103      	MOVLB       3
0x4C7A	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x4C7C	0x0E06      	MOVLW       6
0x4C7E	0x27D9      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x4C80	0x0E00      	MOVLW       0
0x4C82	0x23DA      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x4C84	0x23DB      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x4C86	0x23DC      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x4C88	0x0102      	MOVLB       2
0x4C8A	0x51F5      	MOVF        State6_delay_L0, 0, 1
0x4C8C	0x0103      	MOVLB       3
0x4C8E	0x27D9      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x4C90	0x0E00      	MOVLW       0
0x4C92	0x23DA      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x4C94	0x23DB      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x4C96	0x23DC      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x4C98	0x0E0B      	MOVLW       11
0x4C9A	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x4C9C	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,1057 :: 		AddTask(ms500+Door1CloseTime+ActionTimeDiff+delay,4);//Stop motor
0x4CA0	0x0102      	MOVLB       2
0x4CA2	0x5135      	MOVF        _Door1CloseTime, 0, 1
0x4CA4	0x0101      	MOVLB       1
0x4CA6	0x2504      	ADDWF       _ms500, 0, 1
0x4CA8	0x0103      	MOVLB       3
0x4CAA	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x4CAC	0x0E00      	MOVLW       0
0x4CAE	0x0101      	MOVLB       1
0x4CB0	0x2105      	ADDWFC      _ms500+1, 0, 1
0x4CB2	0x0103      	MOVLB       3
0x4CB4	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x4CB6	0x0E00      	MOVLW       0
0x4CB8	0x0101      	MOVLB       1
0x4CBA	0x2106      	ADDWFC      _ms500+2, 0, 1
0x4CBC	0x0103      	MOVLB       3
0x4CBE	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x4CC0	0x0E00      	MOVLW       0
0x4CC2	0x0101      	MOVLB       1
0x4CC4	0x2107      	ADDWFC      _ms500+3, 0, 1
0x4CC6	0x0103      	MOVLB       3
0x4CC8	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x4CCA	0x0102      	MOVLB       2
0x4CCC	0x5147      	MOVF        _ActionTimeDiff, 0, 1
0x4CCE	0x0103      	MOVLB       3
0x4CD0	0x27D9      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x4CD2	0x0E00      	MOVLW       0
0x4CD4	0x23DA      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x4CD6	0x23DB      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x4CD8	0x23DC      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x4CDA	0x0102      	MOVLB       2
0x4CDC	0x51F5      	MOVF        State6_delay_L0, 0, 1
0x4CDE	0x0103      	MOVLB       3
0x4CE0	0x27D9      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x4CE2	0x0E00      	MOVLW       0
0x4CE4	0x23DA      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x4CE6	0x23DB      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x4CE8	0x23DC      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x4CEA	0x0E04      	MOVLW       4
0x4CEC	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x4CEE	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,1058 :: 		}
L_State6222:
;FirmV_0_7_0.c,1059 :: 		CloseDone=3;
0x4CF2	0x0E03      	MOVLW       3
0x4CF4	0x0101      	MOVLB       1
0x4CF6	0x6F1F      	MOVWF       _CloseDone, 1
;FirmV_0_7_0.c,1060 :: 		OverloadCheckFlag1=0;
0x4CF8	0x0100      	MOVLB       0
0x4CFA	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
;FirmV_0_7_0.c,1061 :: 		OverloadCheckFlag2=0;
0x4CFC	0x6BB6      	CLRF        _OverloadCheckFlag2, 1
;FirmV_0_7_0.c,1062 :: 		PassFlag=0;
0x4CFE	0x0101      	MOVLB       1
0x4D00	0x6B08      	CLRF        _PassFlag, 1
;FirmV_0_7_0.c,1063 :: 		State=7;
0x4D02	0x0E07      	MOVLW       7
0x4D04	0x6F44      	MOVWF       _State, 1
;FirmV_0_7_0.c,1064 :: 		}
L_State6219:
;FirmV_0_7_0.c,1066 :: 		if((Events.Photocell.b0==1)&&(AutoCloseTime!=0)&&(PassFlag==0))
0x4D06	0x0102      	MOVLB       2
0x4D08	0xA1A0      	BTFSS       _Events+6, 0, 1
0x4D0A	0xD028      	BRA         L_State6225
0x4D0C	0x0E00      	MOVLW       0
0x4D0E	0x1996      	XORWF       _AutoCloseTime+1, 0, 1
0x4D10	0xE102      	BNZ         L__State6935
0x4D12	0x0E00      	MOVLW       0
0x4D14	0x1995      	XORWF       _AutoCloseTime, 0, 1
L__State6935:
0x4D16	0xE022      	BZ          L_State6225
0x4D18	0x0101      	MOVLB       1
0x4D1A	0x5108      	MOVF        _PassFlag, 0, 1
0x4D1C	0x0A00      	XORLW       0
0x4D1E	0xE11E      	BNZ         L_State6225
L__State6838:
;FirmV_0_7_0.c,1067 :: 		{PassFlag=1; _AC=GetAutocloseTime();Logger("S6 Auto Close Deleted",1);}
0x4D20	0x0E01      	MOVLW       1
0x4D22	0x6F08      	MOVWF       _PassFlag, 1
0x4D24	0xF009EC9C  	CALL        _GetAutocloseTime, 0
0x4D28	0xF021C000  	MOVFF       R0, __AC
0x4D2C	0x0E34      	MOVLW       ?ICS?lstr42_FirmV_0_7_0
0x4D2E	0x6EF6      	MOVWF       4086 
0x4D30	0x0E8D      	MOVLW       hi_addr(?ICS?lstr42_FirmV_0_7_0)
0x4D32	0x6EF7      	MOVWF       TBLPTRH 
0x4D34	0x0E00      	MOVLW       higher_addr(?ICS?lstr42_FirmV_0_7_0)
0x4D36	0x6EF8      	MOVWF       TBLPTRU 
0x4D38	0x0EBF      	MOVLW       ?lstr42_FirmV_0_7_0
0x4D3A	0x6EE1      	MOVWF       FSR1L 
0x4D3C	0x0E02      	MOVLW       hi_addr(?lstr42_FirmV_0_7_0)
0x4D3E	0x6EE2      	MOVWF       FSR1H 
0x4D40	0x0E16      	MOVLW       22
0x4D42	0x6E00      	MOVWF       R0 
0x4D44	0x0E01      	MOVLW       1
0x4D46	0x6E01      	MOVWF       R1 
0x4D48	0xF005EC2B  	CALL        ___CC2DW, 0
0x4D4C	0x0EBF      	MOVLW       ?lstr42_FirmV_0_7_0
0x4D4E	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x4D50	0x0E02      	MOVLW       hi_addr(?lstr42_FirmV_0_7_0)
0x4D52	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x4D54	0x0E01      	MOVLW       1
0x4D56	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x4D58	0xF009EC69  	CALL        _Logger, 0
L_State6225:
;FirmV_0_7_0.c,1069 :: 		if((PassFlag==1)&&(Events.Photocell.b0==0)&&(AutoCloseTime!=0))
0x4D5C	0x0101      	MOVLB       1
0x4D5E	0x5108      	MOVF        _PassFlag, 0, 1
0x4D60	0x0A01      	XORLW       1
0x4D62	0xE15E      	BNZ         L_State6228
0x4D64	0x0102      	MOVLB       2
0x4D66	0xB1A0      	BTFSC       _Events+6, 0, 1
0x4D68	0xD05B      	BRA         L_State6228
0x4D6A	0x0E00      	MOVLW       0
0x4D6C	0x1996      	XORWF       _AutoCloseTime+1, 0, 1
0x4D6E	0xE102      	BNZ         L__State6936
0x4D70	0x0E00      	MOVLW       0
0x4D72	0x1995      	XORWF       _AutoCloseTime, 0, 1
L__State6936:
0x4D74	0xE055      	BZ          L_State6228
L__State6837:
;FirmV_0_7_0.c,1071 :: 		{temp=ms500+_AC;AddTask(temp,9);PassFlag=0;longwordtostrwithzeros(temp,t);Logger("S6 Insert 9 at:",1);Logger(t,1);}
0x4D76	0x5021      	MOVF        __AC, 0 
0x4D78	0x0101      	MOVLB       1
0x4D7A	0x2504      	ADDWF       _ms500, 0, 1
0x4D7C	0x6E00      	MOVWF       R0 
0x4D7E	0x0E00      	MOVLW       0
0x4D80	0x2105      	ADDWFC      _ms500+1, 0, 1
0x4D82	0x6E01      	MOVWF       R1 
0x4D84	0x0E00      	MOVLW       0
0x4D86	0x2106      	ADDWFC      _ms500+2, 0, 1
0x4D88	0x6E02      	MOVWF       R2 
0x4D8A	0x0E00      	MOVLW       0
0x4D8C	0x2107      	ADDWFC      _ms500+3, 0, 1
0x4D8E	0x6E03      	MOVWF       R3 
0x4D90	0xF243C000  	MOVFF       R0, _temp
0x4D94	0xF244C001  	MOVFF       R1, _temp+1
0x4D98	0xF245C002  	MOVFF       R2, _temp+2
0x4D9C	0xF246C003  	MOVFF       R3, _temp+3
0x4DA0	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x4DA4	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x4DA8	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x4DAC	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x4DB0	0x0E09      	MOVLW       9
0x4DB2	0x0103      	MOVLB       3
0x4DB4	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x4DB6	0xF008ECB5  	CALL        _AddTask, 0
0x4DBA	0x0101      	MOVLB       1
0x4DBC	0x6B08      	CLRF        _PassFlag, 1
0x4DBE	0xF5F3C243  	MOVFF       _temp, FARG_LongWordToStrWithZeros_input
0x4DC2	0xF5F4C244  	MOVFF       _temp+1, FARG_LongWordToStrWithZeros_input+1
0x4DC6	0xF5F5C245  	MOVFF       _temp+2, FARG_LongWordToStrWithZeros_input+2
0x4DCA	0xF5F6C246  	MOVFF       _temp+3, FARG_LongWordToStrWithZeros_input+3
0x4DCE	0x0E36      	MOVLW       _t
0x4DD0	0x0105      	MOVLB       5
0x4DD2	0x6FF7      	MOVWF       FARG_LongWordToStrWithZeros_output, 1
0x4DD4	0x0E02      	MOVLW       hi_addr(_t)
0x4DD6	0x6FF8      	MOVWF       FARG_LongWordToStrWithZeros_output+1, 1
0x4DD8	0xF005EC33  	CALL        _LongWordToStrWithZeros, 0
0x4DDC	0x0E4A      	MOVLW       ?ICS?lstr43_FirmV_0_7_0
0x4DDE	0x6EF6      	MOVWF       4086 
0x4DE0	0x0E8D      	MOVLW       hi_addr(?ICS?lstr43_FirmV_0_7_0)
0x4DE2	0x6EF7      	MOVWF       TBLPTRH 
0x4DE4	0x0E00      	MOVLW       higher_addr(?ICS?lstr43_FirmV_0_7_0)
0x4DE6	0x6EF8      	MOVWF       TBLPTRU 
0x4DE8	0x0ED5      	MOVLW       ?lstr43_FirmV_0_7_0
0x4DEA	0x6EE1      	MOVWF       FSR1L 
0x4DEC	0x0E02      	MOVLW       hi_addr(?lstr43_FirmV_0_7_0)
0x4DEE	0x6EE2      	MOVWF       FSR1H 
0x4DF0	0x0E10      	MOVLW       16
0x4DF2	0x6E00      	MOVWF       R0 
0x4DF4	0x0E01      	MOVLW       1
0x4DF6	0x6E01      	MOVWF       R1 
0x4DF8	0xF005EC2B  	CALL        ___CC2DW, 0
0x4DFC	0x0ED5      	MOVLW       ?lstr43_FirmV_0_7_0
0x4DFE	0x0103      	MOVLB       3
0x4E00	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x4E02	0x0E02      	MOVLW       hi_addr(?lstr43_FirmV_0_7_0)
0x4E04	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x4E06	0x0E01      	MOVLW       1
0x4E08	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x4E0A	0xF009EC69  	CALL        _Logger, 0
0x4E0E	0x0E36      	MOVLW       _t
0x4E10	0x0103      	MOVLB       3
0x4E12	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x4E14	0x0E02      	MOVLW       hi_addr(_t)
0x4E16	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x4E18	0x0E01      	MOVLW       1
0x4E1A	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x4E1C	0xF009EC69  	CALL        _Logger, 0
;FirmV_0_7_0.c,1073 :: 		{temp=ms500+CloseAfterPass;AddTask(temp,9);PassFlag=0;longwordtostrwithzeros(temp,t);Logger("S6 Insert 9 at:",1);Logger(t,1);}
L_State6230:
;FirmV_0_7_0.c,1074 :: 		}
L_State6228:
;FirmV_0_7_0.c,1076 :: 		}
0x4E20	0x0012      	RETURN      0
; end of _State6
_State2:
;FirmV_0_7_0.c,628 :: 		void State2()
;FirmV_0_7_0.c,630 :: 		char delay=2,PrevAC=0;
0x4E22	0x0E02      	MOVLW       2
0x4E24	0x0103      	MOVLB       3
0x4E26	0x6F01      	MOVWF       State2_delay_L0, 1
0x4E28	0x6B02      	CLRF        State2_PrevAC_L0, 1
;FirmV_0_7_0.c,632 :: 		Flasher=0;
0x4E2A	0x9E83      	BCF         PORTD, 7 
;FirmV_0_7_0.c,633 :: 		FlashFlag=0;
0x4E2C	0x0100      	MOVLB       0
0x4E2E	0x6BBC      	CLRF        _FlashFlag, 1
;FirmV_0_7_0.c,636 :: 		if(ReturnAutoclose()!=PrevAC)
0x4E30	0xF009ECFF  	CALL        _ReturnAutoclose, 0
0x4E34	0x5000      	MOVF        R0, 0 
0x4E36	0x1902      	XORWF       State2_PrevAC_L0, 0, 1
0x4E38	0xE039      	BZ          L_State296
;FirmV_0_7_0.c,638 :: 		LCDFlashFlag=0;
0x4E3A	0x6A1B      	CLRF        _LCDFlashFlag 
;FirmV_0_7_0.c,639 :: 		PrevAC=ReturnAutoclose();
0x4E3C	0xF009ECFF  	CALL        _ReturnAutoclose, 0
0x4E40	0xF302C000  	MOVFF       R0, State2_PrevAC_L0
;FirmV_0_7_0.c,640 :: 		charValueToStr_AC(PrevAC,LCDLine2+11);
0x4E44	0xF3D9C000  	MOVFF       R0, FARG_charValueToStr_AC_val
0x4E48	0x0EAE      	MOVLW       _LCDLine2+11
0x4E4A	0x6FDA      	MOVWF       FARG_charValueToStr_AC_string, 1
0x4E4C	0x0E00      	MOVLW       hi_addr(_LCDLine2+11)
0x4E4E	0x6FDB      	MOVWF       FARG_charValueToStr_AC_string+1, 1
0x4E50	0xF012EC14  	CALL        _charValueToStr_AC, 0
;FirmV_0_7_0.c,641 :: 		memcpy(LCDLine2,"Close after",11);
0x4E54	0x0EA3      	MOVLW       _LCDLine2
0x4E56	0x0105      	MOVLB       5
0x4E58	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x4E5A	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x4E5C	0x0106      	MOVLB       6
0x4E5E	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x4E60	0x0E43      	MOVLW       67
0x4E62	0x0102      	MOVLB       2
0x4E64	0x6FBF      	MOVWF       ?lstr3_FirmV_0_7_0, 1
0x4E66	0x0E6C      	MOVLW       108
0x4E68	0x6FC0      	MOVWF       ?lstr3_FirmV_0_7_0+1, 1
0x4E6A	0x0E6F      	MOVLW       111
0x4E6C	0x6FC1      	MOVWF       ?lstr3_FirmV_0_7_0+2, 1
0x4E6E	0x0E73      	MOVLW       115
0x4E70	0x6FC2      	MOVWF       ?lstr3_FirmV_0_7_0+3, 1
0x4E72	0x0E65      	MOVLW       101
0x4E74	0x6FC3      	MOVWF       ?lstr3_FirmV_0_7_0+4, 1
0x4E76	0x0E20      	MOVLW       32
0x4E78	0x6FC4      	MOVWF       ?lstr3_FirmV_0_7_0+5, 1
0x4E7A	0x0E61      	MOVLW       97
0x4E7C	0x6FC5      	MOVWF       ?lstr3_FirmV_0_7_0+6, 1
0x4E7E	0x0E66      	MOVLW       102
0x4E80	0x6FC6      	MOVWF       ?lstr3_FirmV_0_7_0+7, 1
0x4E82	0x0E74      	MOVLW       116
0x4E84	0x6FC7      	MOVWF       ?lstr3_FirmV_0_7_0+8, 1
0x4E86	0x0E65      	MOVLW       101
0x4E88	0x6FC8      	MOVWF       ?lstr3_FirmV_0_7_0+9, 1
0x4E8A	0x0E72      	MOVLW       114
0x4E8C	0x6FC9      	MOVWF       ?lstr3_FirmV_0_7_0+10, 1
0x4E8E	0x6BCA      	CLRF        ?lstr3_FirmV_0_7_0+11, 1
0x4E90	0x0EBF      	MOVLW       ?lstr3_FirmV_0_7_0
0x4E92	0x0106      	MOVLB       6
0x4E94	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x4E96	0x0E02      	MOVLW       hi_addr(?lstr3_FirmV_0_7_0)
0x4E98	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x4E9A	0x0E0B      	MOVLW       11
0x4E9C	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x4E9E	0x0E00      	MOVLW       0
0x4EA0	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x4EA2	0xF001EC0D  	CALL        _memcpy, 0
;FirmV_0_7_0.c,642 :: 		LCDUpdateFlag=1;
0x4EA6	0x0E01      	MOVLW       1
0x4EA8	0x0100      	MOVLB       0
0x4EAA	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,643 :: 		}
L_State296:
;FirmV_0_7_0.c,646 :: 		if((Events.Remote!=0)||(CheckTask(9)))
0x4EAC	0x0102      	MOVLB       2
0x4EAE	0x519E      	MOVF        _Events+4, 0, 1
0x4EB0	0x0A00      	XORLW       0
0x4EB2	0xE108      	BNZ         L__State2820
0x4EB4	0x0E09      	MOVLW       9
0x4EB6	0x0103      	MOVLB       3
0x4EB8	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x4EBA	0xF009EC28  	CALL        _CheckTask, 0
0x4EBE	0x5200      	MOVF        R0, 1 
0x4EC0	0xE101      	BNZ         L__State2820
0x4EC2	0xD3BC      	BRA         L_State299
L__State2820:
;FirmV_0_7_0.c,649 :: 		ClearTasks(0);
0x4EC4	0x0103      	MOVLB       3
0x4EC6	0x6BD9      	CLRF        FARG_ClearTasks_except, 1
0x4EC8	0xF00AEC5C  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,650 :: 		if((Door2CloseTime==0)||(ActiveDoors==1))
0x4ECC	0x0101      	MOVLB       1
0x4ECE	0x51A7      	MOVF        _Door2CloseTime, 0, 1
0x4ED0	0x0A00      	XORLW       0
0x4ED2	0xE004      	BZ          L__State2819
0x4ED4	0x5132      	MOVF        _ActiveDoors, 0, 1
0x4ED6	0x0A01      	XORLW       1
0x4ED8	0xE001      	BZ          L__State2819
0x4EDA	0xD13F      	BRA         L_State2102
L__State2819:
;FirmV_0_7_0.c,652 :: 		temp=ms500+delay;
0x4EDC	0x0103      	MOVLB       3
0x4EDE	0x5101      	MOVF        State2_delay_L0, 0, 1
0x4EE0	0x0101      	MOVLB       1
0x4EE2	0x2504      	ADDWF       _ms500, 0, 1
0x4EE4	0x6E00      	MOVWF       R0 
0x4EE6	0x0E00      	MOVLW       0
0x4EE8	0x2105      	ADDWFC      _ms500+1, 0, 1
0x4EEA	0x6E01      	MOVWF       R1 
0x4EEC	0x0E00      	MOVLW       0
0x4EEE	0x2106      	ADDWFC      _ms500+2, 0, 1
0x4EF0	0x6E02      	MOVWF       R2 
0x4EF2	0x0E00      	MOVLW       0
0x4EF4	0x2107      	ADDWFC      _ms500+3, 0, 1
0x4EF6	0x6E03      	MOVWF       R3 
0x4EF8	0xF243C000  	MOVFF       R0, _temp
0x4EFC	0xF244C001  	MOVFF       R1, _temp+1
0x4F00	0xF245C002  	MOVFF       R2, _temp+2
0x4F04	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,653 :: 		AddTask(temp,1);
0x4F08	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x4F0C	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x4F10	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x4F14	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x4F18	0x0E01      	MOVLW       1
0x4F1A	0x0103      	MOVLB       3
0x4F1C	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x4F1E	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,654 :: 		if(CloseSoftStartTime!=0)
0x4F22	0x0101      	MOVLB       1
0x4F24	0x51A6      	MOVF        _CloseSoftStartTime, 0, 1
0x4F26	0x0A00      	XORLW       0
0x4F28	0xE011      	BZ          L_State2103
;FirmV_0_7_0.c,655 :: 		{AddTask(temp,7); M1isSlow=1;}//speed down
0x4F2A	0xF3D9C243  	MOVFF       _temp, FARG_AddTask_OccTime
0x4F2E	0xF3DAC244  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x4F32	0xF3DBC245  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x4F36	0xF3DCC246  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x4F3A	0x0E07      	MOVLW       7
0x4F3C	0x0103      	MOVLB       3
0x4F3E	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x4F40	0xF008ECB5  	CALL        _AddTask, 0
0x4F44	0x0E01      	MOVLW       1
0x4F46	0x0100      	MOVLB       0
0x4F48	0x6FBA      	MOVWF       _M1isSlow, 1
0x4F4A	0xD00F      	BRA         L_State2104
L_State2103:
;FirmV_0_7_0.c,657 :: 		{AddTask(temp,5); M1isSlow=0;}//speed up
0x4F4C	0xF3D9C243  	MOVFF       _temp, FARG_AddTask_OccTime
0x4F50	0xF3DAC244  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x4F54	0xF3DBC245  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x4F58	0xF3DCC246  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x4F5C	0x0E05      	MOVLW       5
0x4F5E	0x0103      	MOVLB       3
0x4F60	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x4F62	0xF008ECB5  	CALL        _AddTask, 0
0x4F66	0x0100      	MOVLB       0
0x4F68	0x6BBA      	CLRF        _M1isSlow, 1
L_State2104:
;FirmV_0_7_0.c,658 :: 		temp=ms500+CloseSoftStartTime+OverloadDelay+delay;
0x4F6A	0x0101      	MOVLB       1
0x4F6C	0x51A6      	MOVF        _CloseSoftStartTime, 0, 1
0x4F6E	0x2504      	ADDWF       _ms500, 0, 1
0x4F70	0x6E00      	MOVWF       R0 
0x4F72	0x0E00      	MOVLW       0
0x4F74	0x2105      	ADDWFC      _ms500+1, 0, 1
0x4F76	0x6E01      	MOVWF       R1 
0x4F78	0x0E00      	MOVLW       0
0x4F7A	0x2106      	ADDWFC      _ms500+2, 0, 1
0x4F7C	0x6E02      	MOVWF       R2 
0x4F7E	0x0E00      	MOVLW       0
0x4F80	0x2107      	ADDWFC      _ms500+3, 0, 1
0x4F82	0x6E03      	MOVWF       R3 
0x4F84	0x0E06      	MOVLW       6
0x4F86	0x2600      	ADDWF       R0, 1 
0x4F88	0x0E00      	MOVLW       0
0x4F8A	0x2201      	ADDWFC      R1, 1 
0x4F8C	0x2202      	ADDWFC      R2, 1 
0x4F8E	0x2203      	ADDWFC      R3, 1 
0x4F90	0x0103      	MOVLB       3
0x4F92	0x5101      	MOVF        State2_delay_L0, 0, 1
0x4F94	0x2600      	ADDWF       R0, 1 
0x4F96	0x0E00      	MOVLW       0
0x4F98	0x2201      	ADDWFC      R1, 1 
0x4F9A	0x2202      	ADDWFC      R2, 1 
0x4F9C	0x2203      	ADDWFC      R3, 1 
0x4F9E	0xF243C000  	MOVFF       R0, _temp
0x4FA2	0xF244C001  	MOVFF       R1, _temp+1
0x4FA6	0xF245C002  	MOVFF       R2, _temp+2
0x4FAA	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,659 :: 		AddTask(temp,10); //overload check
0x4FAE	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x4FB2	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x4FB6	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x4FBA	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x4FBE	0x0E0A      	MOVLW       10
0x4FC0	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x4FC2	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,660 :: 		temp=ms500+CloseSoftStartTime+delay;
0x4FC6	0x0101      	MOVLB       1
0x4FC8	0x51A6      	MOVF        _CloseSoftStartTime, 0, 1
0x4FCA	0x2504      	ADDWF       _ms500, 0, 1
0x4FCC	0x6E00      	MOVWF       R0 
0x4FCE	0x0E00      	MOVLW       0
0x4FD0	0x2105      	ADDWFC      _ms500+1, 0, 1
0x4FD2	0x6E01      	MOVWF       R1 
0x4FD4	0x0E00      	MOVLW       0
0x4FD6	0x2106      	ADDWFC      _ms500+2, 0, 1
0x4FD8	0x6E02      	MOVWF       R2 
0x4FDA	0x0E00      	MOVLW       0
0x4FDC	0x2107      	ADDWFC      _ms500+3, 0, 1
0x4FDE	0x6E03      	MOVWF       R3 
0x4FE0	0x0103      	MOVLB       3
0x4FE2	0x5101      	MOVF        State2_delay_L0, 0, 1
0x4FE4	0x2600      	ADDWF       R0, 1 
0x4FE6	0x0E00      	MOVLW       0
0x4FE8	0x2201      	ADDWFC      R1, 1 
0x4FEA	0x2202      	ADDWFC      R2, 1 
0x4FEC	0x2203      	ADDWFC      R3, 1 
0x4FEE	0xF243C000  	MOVFF       R0, _temp
0x4FF2	0xF244C001  	MOVFF       R1, _temp+1
0x4FF6	0xF245C002  	MOVFF       R2, _temp+2
0x4FFA	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,661 :: 		AddTask(temp,5);//Speed up after soft start
0x4FFE	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x5002	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x5006	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x500A	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x500E	0x0E05      	MOVLW       5
0x5010	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x5012	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,662 :: 		if(CloseSoftStopTime!=0)
0x5016	0x0102      	MOVLB       2
0x5018	0x5142      	MOVF        _CloseSoftStopTime, 0, 1
0x501A	0x0A00      	XORLW       0
0x501C	0xE02F      	BZ          L_State2105
;FirmV_0_7_0.c,663 :: 		{temp=ms500+Door1CloseTime-CloseSoftStopTime+delay;AddTask(temp,7);}//Speed down for soft stop
0x501E	0x5135      	MOVF        _Door1CloseTime, 0, 1
0x5020	0x0101      	MOVLB       1
0x5022	0x2504      	ADDWF       _ms500, 0, 1
0x5024	0x6E00      	MOVWF       R0 
0x5026	0x0E00      	MOVLW       0
0x5028	0x2105      	ADDWFC      _ms500+1, 0, 1
0x502A	0x6E01      	MOVWF       R1 
0x502C	0x0E00      	MOVLW       0
0x502E	0x2106      	ADDWFC      _ms500+2, 0, 1
0x5030	0x6E02      	MOVWF       R2 
0x5032	0x0E00      	MOVLW       0
0x5034	0x2107      	ADDWFC      _ms500+3, 0, 1
0x5036	0x6E03      	MOVWF       R3 
0x5038	0x0102      	MOVLB       2
0x503A	0x5142      	MOVF        _CloseSoftStopTime, 0, 1
0x503C	0x5E00      	SUBWF       R0, 1 
0x503E	0x0E00      	MOVLW       0
0x5040	0x5A01      	SUBWFB      R1, 1 
0x5042	0x5A02      	SUBWFB      R2, 1 
0x5044	0x5A03      	SUBWFB      R3, 1 
0x5046	0x0103      	MOVLB       3
0x5048	0x5101      	MOVF        State2_delay_L0, 0, 1
0x504A	0x2600      	ADDWF       R0, 1 
0x504C	0x0E00      	MOVLW       0
0x504E	0x2201      	ADDWFC      R1, 1 
0x5050	0x2202      	ADDWFC      R2, 1 
0x5052	0x2203      	ADDWFC      R3, 1 
0x5054	0xF243C000  	MOVFF       R0, _temp
0x5058	0xF244C001  	MOVFF       R1, _temp+1
0x505C	0xF245C002  	MOVFF       R2, _temp+2
0x5060	0xF246C003  	MOVFF       R3, _temp+3
0x5064	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x5068	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x506C	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x5070	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x5074	0x0E07      	MOVLW       7
0x5076	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x5078	0xF008ECB5  	CALL        _AddTask, 0
L_State2105:
;FirmV_0_7_0.c,664 :: 		if(LockForce!=0)
0x507C	0x0101      	MOVLB       1
0x507E	0x518F      	MOVF        _LockForce, 0, 1
0x5080	0x0A00      	XORLW       0
0x5082	0xE042      	BZ          L_State2106
;FirmV_0_7_0.c,665 :: 		{temp=ms500+Door1CloseTime+delay;AddTask(temp,5);AddTask(temp+LockForceTime,3);}
0x5084	0x0102      	MOVLB       2
0x5086	0x5135      	MOVF        _Door1CloseTime, 0, 1
0x5088	0x0101      	MOVLB       1
0x508A	0x2504      	ADDWF       _ms500, 0, 1
0x508C	0x6E00      	MOVWF       R0 
0x508E	0x0E00      	MOVLW       0
0x5090	0x2105      	ADDWFC      _ms500+1, 0, 1
0x5092	0x6E01      	MOVWF       R1 
0x5094	0x0E00      	MOVLW       0
0x5096	0x2106      	ADDWFC      _ms500+2, 0, 1
0x5098	0x6E02      	MOVWF       R2 
0x509A	0x0E00      	MOVLW       0
0x509C	0x2107      	ADDWFC      _ms500+3, 0, 1
0x509E	0x6E03      	MOVWF       R3 
0x50A0	0x0103      	MOVLB       3
0x50A2	0x5101      	MOVF        State2_delay_L0, 0, 1
0x50A4	0x2600      	ADDWF       R0, 1 
0x50A6	0x0E00      	MOVLW       0
0x50A8	0x2201      	ADDWFC      R1, 1 
0x50AA	0x2202      	ADDWFC      R2, 1 
0x50AC	0x2203      	ADDWFC      R3, 1 
0x50AE	0xF243C000  	MOVFF       R0, _temp
0x50B2	0xF244C001  	MOVFF       R1, _temp+1
0x50B6	0xF245C002  	MOVFF       R2, _temp+2
0x50BA	0xF246C003  	MOVFF       R3, _temp+3
0x50BE	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x50C2	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x50C6	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x50CA	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x50CE	0x0E05      	MOVLW       5
0x50D0	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x50D2	0xF008ECB5  	CALL        _AddTask, 0
0x50D6	0x0E02      	MOVLW       2
0x50D8	0x0102      	MOVLB       2
0x50DA	0x2543      	ADDWF       _temp, 0, 1
0x50DC	0x0103      	MOVLB       3
0x50DE	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x50E0	0x0E00      	MOVLW       0
0x50E2	0x0102      	MOVLB       2
0x50E4	0x2144      	ADDWFC      _temp+1, 0, 1
0x50E6	0x0103      	MOVLB       3
0x50E8	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x50EA	0x0E00      	MOVLW       0
0x50EC	0x0102      	MOVLB       2
0x50EE	0x2145      	ADDWFC      _temp+2, 0, 1
0x50F0	0x0103      	MOVLB       3
0x50F2	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x50F4	0x0E00      	MOVLW       0
0x50F6	0x0102      	MOVLB       2
0x50F8	0x2146      	ADDWFC      _temp+3, 0, 1
0x50FA	0x0103      	MOVLB       3
0x50FC	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x50FE	0x0E03      	MOVLW       3
0x5100	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x5102	0xF008ECB5  	CALL        _AddTask, 0
0x5106	0xD029      	BRA         L_State2107
L_State2106:
;FirmV_0_7_0.c,667 :: 		{temp=ms500+Door1CloseTime+delay;AddTask(temp,3);}
0x5108	0x0102      	MOVLB       2
0x510A	0x5135      	MOVF        _Door1CloseTime, 0, 1
0x510C	0x0101      	MOVLB       1
0x510E	0x2504      	ADDWF       _ms500, 0, 1
0x5110	0x6E00      	MOVWF       R0 
0x5112	0x0E00      	MOVLW       0
0x5114	0x2105      	ADDWFC      _ms500+1, 0, 1
0x5116	0x6E01      	MOVWF       R1 
0x5118	0x0E00      	MOVLW       0
0x511A	0x2106      	ADDWFC      _ms500+2, 0, 1
0x511C	0x6E02      	MOVWF       R2 
0x511E	0x0E00      	MOVLW       0
0x5120	0x2107      	ADDWFC      _ms500+3, 0, 1
0x5122	0x6E03      	MOVWF       R3 
0x5124	0x0103      	MOVLB       3
0x5126	0x5101      	MOVF        State2_delay_L0, 0, 1
0x5128	0x2600      	ADDWF       R0, 1 
0x512A	0x0E00      	MOVLW       0
0x512C	0x2201      	ADDWFC      R1, 1 
0x512E	0x2202      	ADDWFC      R2, 1 
0x5130	0x2203      	ADDWFC      R3, 1 
0x5132	0xF243C000  	MOVFF       R0, _temp
0x5136	0xF244C001  	MOVFF       R1, _temp+1
0x513A	0xF245C002  	MOVFF       R2, _temp+2
0x513E	0xF246C003  	MOVFF       R3, _temp+3
0x5142	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x5146	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x514A	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x514E	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x5152	0x0E03      	MOVLW       3
0x5154	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x5156	0xF008ECB5  	CALL        _AddTask, 0
L_State2107:
;FirmV_0_7_0.c,669 :: 		}
L_State2102:
;FirmV_0_7_0.c,671 :: 		if((Door2CloseTime!=0)&&(ActiveDoors==2))
0x515A	0x0101      	MOVLB       1
0x515C	0x51A7      	MOVF        _Door2CloseTime, 0, 1
0x515E	0x0A00      	XORLW       0
0x5160	0xB4D8      	BTFSC       STATUS, 2 
0x5162	0xD263      	BRA         L_State2110
0x5164	0x5132      	MOVF        _ActiveDoors, 0, 1
0x5166	0x0A02      	XORLW       2
0x5168	0xA4D8      	BTFSS       STATUS, 2 
0x516A	0xD25F      	BRA         L_State2110
L__State2818:
;FirmV_0_7_0.c,673 :: 		temp=ms500+delay;
0x516C	0x0103      	MOVLB       3
0x516E	0x5101      	MOVF        State2_delay_L0, 0, 1
0x5170	0x0101      	MOVLB       1
0x5172	0x2504      	ADDWF       _ms500, 0, 1
0x5174	0x6E00      	MOVWF       R0 
0x5176	0x0E00      	MOVLW       0
0x5178	0x2105      	ADDWFC      _ms500+1, 0, 1
0x517A	0x6E01      	MOVWF       R1 
0x517C	0x0E00      	MOVLW       0
0x517E	0x2106      	ADDWFC      _ms500+2, 0, 1
0x5180	0x6E02      	MOVWF       R2 
0x5182	0x0E00      	MOVLW       0
0x5184	0x2107      	ADDWFC      _ms500+3, 0, 1
0x5186	0x6E03      	MOVWF       R3 
0x5188	0xF243C000  	MOVFF       R0, _temp
0x518C	0xF244C001  	MOVFF       R1, _temp+1
0x5190	0xF245C002  	MOVFF       R2, _temp+2
0x5194	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,674 :: 		AddTask(temp,2);
0x5198	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x519C	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x51A0	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x51A4	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x51A8	0x0E02      	MOVLW       2
0x51AA	0x0103      	MOVLB       3
0x51AC	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x51AE	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,675 :: 		if(CloseSoftStartTime!=0)
0x51B2	0x0101      	MOVLB       1
0x51B4	0x51A6      	MOVF        _CloseSoftStartTime, 0, 1
0x51B6	0x0A00      	XORLW       0
0x51B8	0xE011      	BZ          L_State2111
;FirmV_0_7_0.c,676 :: 		{AddTask(temp,8); M2isSlow=1;}//speed down
0x51BA	0xF3D9C243  	MOVFF       _temp, FARG_AddTask_OccTime
0x51BE	0xF3DAC244  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x51C2	0xF3DBC245  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x51C6	0xF3DCC246  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x51CA	0x0E08      	MOVLW       8
0x51CC	0x0103      	MOVLB       3
0x51CE	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x51D0	0xF008ECB5  	CALL        _AddTask, 0
0x51D4	0x0E01      	MOVLW       1
0x51D6	0x0100      	MOVLB       0
0x51D8	0x6FB7      	MOVWF       _M2isSlow, 1
0x51DA	0xD00F      	BRA         L_State2112
L_State2111:
;FirmV_0_7_0.c,678 :: 		{AddTask(temp,6); M2isSlow=0;}//speed up
0x51DC	0xF3D9C243  	MOVFF       _temp, FARG_AddTask_OccTime
0x51E0	0xF3DAC244  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x51E4	0xF3DBC245  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x51E8	0xF3DCC246  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x51EC	0x0E06      	MOVLW       6
0x51EE	0x0103      	MOVLB       3
0x51F0	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x51F2	0xF008ECB5  	CALL        _AddTask, 0
0x51F6	0x0100      	MOVLB       0
0x51F8	0x6BB7      	CLRF        _M2isSlow, 1
L_State2112:
;FirmV_0_7_0.c,679 :: 		temp=ms500+CloseSoftStartTime+OverloadDelay+delay;
0x51FA	0x0101      	MOVLB       1
0x51FC	0x51A6      	MOVF        _CloseSoftStartTime, 0, 1
0x51FE	0x2504      	ADDWF       _ms500, 0, 1
0x5200	0x6E00      	MOVWF       R0 
0x5202	0x0E00      	MOVLW       0
0x5204	0x2105      	ADDWFC      _ms500+1, 0, 1
0x5206	0x6E01      	MOVWF       R1 
0x5208	0x0E00      	MOVLW       0
0x520A	0x2106      	ADDWFC      _ms500+2, 0, 1
0x520C	0x6E02      	MOVWF       R2 
0x520E	0x0E00      	MOVLW       0
0x5210	0x2107      	ADDWFC      _ms500+3, 0, 1
0x5212	0x6E03      	MOVWF       R3 
0x5214	0x0E06      	MOVLW       6
0x5216	0x2600      	ADDWF       R0, 1 
0x5218	0x0E00      	MOVLW       0
0x521A	0x2201      	ADDWFC      R1, 1 
0x521C	0x2202      	ADDWFC      R2, 1 
0x521E	0x2203      	ADDWFC      R3, 1 
0x5220	0x0103      	MOVLB       3
0x5222	0x5101      	MOVF        State2_delay_L0, 0, 1
0x5224	0x2600      	ADDWF       R0, 1 
0x5226	0x0E00      	MOVLW       0
0x5228	0x2201      	ADDWFC      R1, 1 
0x522A	0x2202      	ADDWFC      R2, 1 
0x522C	0x2203      	ADDWFC      R3, 1 
0x522E	0xF243C000  	MOVFF       R0, _temp
0x5232	0xF244C001  	MOVFF       R1, _temp+1
0x5236	0xF245C002  	MOVFF       R2, _temp+2
0x523A	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,680 :: 		AddTask(temp,11); //overload check
0x523E	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x5242	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x5246	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x524A	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x524E	0x0E0B      	MOVLW       11
0x5250	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x5252	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,681 :: 		temp=ms500+CloseSoftStartTime+delay;
0x5256	0x0101      	MOVLB       1
0x5258	0x51A6      	MOVF        _CloseSoftStartTime, 0, 1
0x525A	0x2504      	ADDWF       _ms500, 0, 1
0x525C	0x6E00      	MOVWF       R0 
0x525E	0x0E00      	MOVLW       0
0x5260	0x2105      	ADDWFC      _ms500+1, 0, 1
0x5262	0x6E01      	MOVWF       R1 
0x5264	0x0E00      	MOVLW       0
0x5266	0x2106      	ADDWFC      _ms500+2, 0, 1
0x5268	0x6E02      	MOVWF       R2 
0x526A	0x0E00      	MOVLW       0
0x526C	0x2107      	ADDWFC      _ms500+3, 0, 1
0x526E	0x6E03      	MOVWF       R3 
0x5270	0x0103      	MOVLB       3
0x5272	0x5101      	MOVF        State2_delay_L0, 0, 1
0x5274	0x2600      	ADDWF       R0, 1 
0x5276	0x0E00      	MOVLW       0
0x5278	0x2201      	ADDWFC      R1, 1 
0x527A	0x2202      	ADDWFC      R2, 1 
0x527C	0x2203      	ADDWFC      R3, 1 
0x527E	0xF243C000  	MOVFF       R0, _temp
0x5282	0xF244C001  	MOVFF       R1, _temp+1
0x5286	0xF245C002  	MOVFF       R2, _temp+2
0x528A	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,682 :: 		AddTask(temp,6);//Speed up after soft start
0x528E	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x5292	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x5296	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x529A	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x529E	0x0E06      	MOVLW       6
0x52A0	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x52A2	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,683 :: 		if(CloseSoftStopTime!=0)
0x52A6	0x0102      	MOVLB       2
0x52A8	0x5142      	MOVF        _CloseSoftStopTime, 0, 1
0x52AA	0x0A00      	XORLW       0
0x52AC	0xE02F      	BZ          L_State2113
;FirmV_0_7_0.c,684 :: 		{temp=ms500+Door2CloseTime-CloseSoftStopTime+delay;AddTask(temp,8);}//Speed down for soft stop
0x52AE	0x0101      	MOVLB       1
0x52B0	0x51A7      	MOVF        _Door2CloseTime, 0, 1
0x52B2	0x2504      	ADDWF       _ms500, 0, 1
0x52B4	0x6E00      	MOVWF       R0 
0x52B6	0x0E00      	MOVLW       0
0x52B8	0x2105      	ADDWFC      _ms500+1, 0, 1
0x52BA	0x6E01      	MOVWF       R1 
0x52BC	0x0E00      	MOVLW       0
0x52BE	0x2106      	ADDWFC      _ms500+2, 0, 1
0x52C0	0x6E02      	MOVWF       R2 
0x52C2	0x0E00      	MOVLW       0
0x52C4	0x2107      	ADDWFC      _ms500+3, 0, 1
0x52C6	0x6E03      	MOVWF       R3 
0x52C8	0x0102      	MOVLB       2
0x52CA	0x5142      	MOVF        _CloseSoftStopTime, 0, 1
0x52CC	0x5E00      	SUBWF       R0, 1 
0x52CE	0x0E00      	MOVLW       0
0x52D0	0x5A01      	SUBWFB      R1, 1 
0x52D2	0x5A02      	SUBWFB      R2, 1 
0x52D4	0x5A03      	SUBWFB      R3, 1 
0x52D6	0x0103      	MOVLB       3
0x52D8	0x5101      	MOVF        State2_delay_L0, 0, 1
0x52DA	0x2600      	ADDWF       R0, 1 
0x52DC	0x0E00      	MOVLW       0
0x52DE	0x2201      	ADDWFC      R1, 1 
0x52E0	0x2202      	ADDWFC      R2, 1 
0x52E2	0x2203      	ADDWFC      R3, 1 
0x52E4	0xF243C000  	MOVFF       R0, _temp
0x52E8	0xF244C001  	MOVFF       R1, _temp+1
0x52EC	0xF245C002  	MOVFF       R2, _temp+2
0x52F0	0xF246C003  	MOVFF       R3, _temp+3
0x52F4	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x52F8	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x52FC	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x5300	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x5304	0x0E08      	MOVLW       8
0x5306	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x5308	0xF008ECB5  	CALL        _AddTask, 0
L_State2113:
;FirmV_0_7_0.c,686 :: 		temp=ms500+Door2CloseTime+delay;
0x530C	0x0101      	MOVLB       1
0x530E	0x51A7      	MOVF        _Door2CloseTime, 0, 1
0x5310	0x2504      	ADDWF       _ms500, 0, 1
0x5312	0x6E00      	MOVWF       R0 
0x5314	0x0E00      	MOVLW       0
0x5316	0x2105      	ADDWFC      _ms500+1, 0, 1
0x5318	0x6E01      	MOVWF       R1 
0x531A	0x0E00      	MOVLW       0
0x531C	0x2106      	ADDWFC      _ms500+2, 0, 1
0x531E	0x6E02      	MOVWF       R2 
0x5320	0x0E00      	MOVLW       0
0x5322	0x2107      	ADDWFC      _ms500+3, 0, 1
0x5324	0x6E03      	MOVWF       R3 
0x5326	0x0103      	MOVLB       3
0x5328	0x5101      	MOVF        State2_delay_L0, 0, 1
0x532A	0x2600      	ADDWF       R0, 1 
0x532C	0x0E00      	MOVLW       0
0x532E	0x2201      	ADDWFC      R1, 1 
0x5330	0x2202      	ADDWFC      R2, 1 
0x5332	0x2203      	ADDWFC      R3, 1 
0x5334	0xF243C000  	MOVFF       R0, _temp
0x5338	0xF244C001  	MOVFF       R1, _temp+1
0x533C	0xF245C002  	MOVFF       R2, _temp+2
0x5340	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,687 :: 		AddTask(temp,4);//Stop motor
0x5344	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x5348	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x534C	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x5350	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x5354	0x0E04      	MOVLW       4
0x5356	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x5358	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,691 :: 		temp=ms500+ActionTimeDiff+delay;
0x535C	0x0102      	MOVLB       2
0x535E	0x5147      	MOVF        _ActionTimeDiff, 0, 1
0x5360	0x0101      	MOVLB       1
0x5362	0x2504      	ADDWF       _ms500, 0, 1
0x5364	0x6E00      	MOVWF       R0 
0x5366	0x0E00      	MOVLW       0
0x5368	0x2105      	ADDWFC      _ms500+1, 0, 1
0x536A	0x6E01      	MOVWF       R1 
0x536C	0x0E00      	MOVLW       0
0x536E	0x2106      	ADDWFC      _ms500+2, 0, 1
0x5370	0x6E02      	MOVWF       R2 
0x5372	0x0E00      	MOVLW       0
0x5374	0x2107      	ADDWFC      _ms500+3, 0, 1
0x5376	0x6E03      	MOVWF       R3 
0x5378	0x0103      	MOVLB       3
0x537A	0x5101      	MOVF        State2_delay_L0, 0, 1
0x537C	0x2600      	ADDWF       R0, 1 
0x537E	0x0E00      	MOVLW       0
0x5380	0x2201      	ADDWFC      R1, 1 
0x5382	0x2202      	ADDWFC      R2, 1 
0x5384	0x2203      	ADDWFC      R3, 1 
0x5386	0xF243C000  	MOVFF       R0, _temp
0x538A	0xF244C001  	MOVFF       R1, _temp+1
0x538E	0xF245C002  	MOVFF       R2, _temp+2
0x5392	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,692 :: 		AddTask(temp,1);
0x5396	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x539A	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x539E	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x53A2	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x53A6	0x0E01      	MOVLW       1
0x53A8	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x53AA	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,693 :: 		if(CloseSoftStartTime!=0)
0x53AE	0x0101      	MOVLB       1
0x53B0	0x51A6      	MOVF        _CloseSoftStartTime, 0, 1
0x53B2	0x0A00      	XORLW       0
0x53B4	0xE011      	BZ          L_State2114
;FirmV_0_7_0.c,694 :: 		{AddTask(temp,7); M1isSlow=1;}//speed down
0x53B6	0xF3D9C243  	MOVFF       _temp, FARG_AddTask_OccTime
0x53BA	0xF3DAC244  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x53BE	0xF3DBC245  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x53C2	0xF3DCC246  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x53C6	0x0E07      	MOVLW       7
0x53C8	0x0103      	MOVLB       3
0x53CA	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x53CC	0xF008ECB5  	CALL        _AddTask, 0
0x53D0	0x0E01      	MOVLW       1
0x53D2	0x0100      	MOVLB       0
0x53D4	0x6FBA      	MOVWF       _M1isSlow, 1
0x53D6	0xD00F      	BRA         L_State2115
L_State2114:
;FirmV_0_7_0.c,696 :: 		{AddTask(temp,5); M1isSlow=0;}//speed up
0x53D8	0xF3D9C243  	MOVFF       _temp, FARG_AddTask_OccTime
0x53DC	0xF3DAC244  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x53E0	0xF3DBC245  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x53E4	0xF3DCC246  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x53E8	0x0E05      	MOVLW       5
0x53EA	0x0103      	MOVLB       3
0x53EC	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x53EE	0xF008ECB5  	CALL        _AddTask, 0
0x53F2	0x0100      	MOVLB       0
0x53F4	0x6BBA      	CLRF        _M1isSlow, 1
L_State2115:
;FirmV_0_7_0.c,697 :: 		temp=ms500+ActionTimeDiff+CloseSoftStartTime+OverloadDelay+delay;
0x53F6	0x0102      	MOVLB       2
0x53F8	0x5147      	MOVF        _ActionTimeDiff, 0, 1
0x53FA	0x0101      	MOVLB       1
0x53FC	0x2504      	ADDWF       _ms500, 0, 1
0x53FE	0x6E00      	MOVWF       R0 
0x5400	0x0E00      	MOVLW       0
0x5402	0x2105      	ADDWFC      _ms500+1, 0, 1
0x5404	0x6E01      	MOVWF       R1 
0x5406	0x0E00      	MOVLW       0
0x5408	0x2106      	ADDWFC      _ms500+2, 0, 1
0x540A	0x6E02      	MOVWF       R2 
0x540C	0x0E00      	MOVLW       0
0x540E	0x2107      	ADDWFC      _ms500+3, 0, 1
0x5410	0x6E03      	MOVWF       R3 
0x5412	0x51A6      	MOVF        _CloseSoftStartTime, 0, 1
0x5414	0x2600      	ADDWF       R0, 1 
0x5416	0x0E00      	MOVLW       0
0x5418	0x2201      	ADDWFC      R1, 1 
0x541A	0x2202      	ADDWFC      R2, 1 
0x541C	0x2203      	ADDWFC      R3, 1 
0x541E	0x0E06      	MOVLW       6
0x5420	0x2600      	ADDWF       R0, 1 
0x5422	0x0E00      	MOVLW       0
0x5424	0x2201      	ADDWFC      R1, 1 
0x5426	0x2202      	ADDWFC      R2, 1 
0x5428	0x2203      	ADDWFC      R3, 1 
0x542A	0x0103      	MOVLB       3
0x542C	0x5101      	MOVF        State2_delay_L0, 0, 1
0x542E	0x2600      	ADDWF       R0, 1 
0x5430	0x0E00      	MOVLW       0
0x5432	0x2201      	ADDWFC      R1, 1 
0x5434	0x2202      	ADDWFC      R2, 1 
0x5436	0x2203      	ADDWFC      R3, 1 
0x5438	0xF243C000  	MOVFF       R0, _temp
0x543C	0xF244C001  	MOVFF       R1, _temp+1
0x5440	0xF245C002  	MOVFF       R2, _temp+2
0x5444	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,698 :: 		AddTask(temp,10); //overload check
0x5448	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x544C	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x5450	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x5454	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x5458	0x0E0A      	MOVLW       10
0x545A	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x545C	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,699 :: 		temp=ms500+ActionTimeDiff+CloseSoftStartTime+delay;
0x5460	0x0102      	MOVLB       2
0x5462	0x5147      	MOVF        _ActionTimeDiff, 0, 1
0x5464	0x0101      	MOVLB       1
0x5466	0x2504      	ADDWF       _ms500, 0, 1
0x5468	0x6E00      	MOVWF       R0 
0x546A	0x0E00      	MOVLW       0
0x546C	0x2105      	ADDWFC      _ms500+1, 0, 1
0x546E	0x6E01      	MOVWF       R1 
0x5470	0x0E00      	MOVLW       0
0x5472	0x2106      	ADDWFC      _ms500+2, 0, 1
0x5474	0x6E02      	MOVWF       R2 
0x5476	0x0E00      	MOVLW       0
0x5478	0x2107      	ADDWFC      _ms500+3, 0, 1
0x547A	0x6E03      	MOVWF       R3 
0x547C	0x51A6      	MOVF        _CloseSoftStartTime, 0, 1
0x547E	0x2600      	ADDWF       R0, 1 
0x5480	0x0E00      	MOVLW       0
0x5482	0x2201      	ADDWFC      R1, 1 
0x5484	0x2202      	ADDWFC      R2, 1 
0x5486	0x2203      	ADDWFC      R3, 1 
0x5488	0x0103      	MOVLB       3
0x548A	0x5101      	MOVF        State2_delay_L0, 0, 1
0x548C	0x2600      	ADDWF       R0, 1 
0x548E	0x0E00      	MOVLW       0
0x5490	0x2201      	ADDWFC      R1, 1 
0x5492	0x2202      	ADDWFC      R2, 1 
0x5494	0x2203      	ADDWFC      R3, 1 
0x5496	0xF243C000  	MOVFF       R0, _temp
0x549A	0xF244C001  	MOVFF       R1, _temp+1
0x549E	0xF245C002  	MOVFF       R2, _temp+2
0x54A2	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,700 :: 		AddTask(temp,5);//Speed up after soft start
0x54A6	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x54AA	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x54AE	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x54B2	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x54B6	0x0E05      	MOVLW       5
0x54B8	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x54BA	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,701 :: 		if(CloseSoftStopTime!=0)
0x54BE	0x0102      	MOVLB       2
0x54C0	0x5142      	MOVF        _CloseSoftStopTime, 0, 1
0x54C2	0x0A00      	XORLW       0
0x54C4	0xE035      	BZ          L_State2116
;FirmV_0_7_0.c,702 :: 		{temp=ms500+ActionTimeDiff+Door1CloseTime-CloseSoftStopTime+delay;AddTask(temp,7);}//Speed down for soft stop
0x54C6	0x5147      	MOVF        _ActionTimeDiff, 0, 1
0x54C8	0x0101      	MOVLB       1
0x54CA	0x2504      	ADDWF       _ms500, 0, 1
0x54CC	0x6E00      	MOVWF       R0 
0x54CE	0x0E00      	MOVLW       0
0x54D0	0x2105      	ADDWFC      _ms500+1, 0, 1
0x54D2	0x6E01      	MOVWF       R1 
0x54D4	0x0E00      	MOVLW       0
0x54D6	0x2106      	ADDWFC      _ms500+2, 0, 1
0x54D8	0x6E02      	MOVWF       R2 
0x54DA	0x0E00      	MOVLW       0
0x54DC	0x2107      	ADDWFC      _ms500+3, 0, 1
0x54DE	0x6E03      	MOVWF       R3 
0x54E0	0x0102      	MOVLB       2
0x54E2	0x5135      	MOVF        _Door1CloseTime, 0, 1
0x54E4	0x2600      	ADDWF       R0, 1 
0x54E6	0x0E00      	MOVLW       0
0x54E8	0x2201      	ADDWFC      R1, 1 
0x54EA	0x2202      	ADDWFC      R2, 1 
0x54EC	0x2203      	ADDWFC      R3, 1 
0x54EE	0x5142      	MOVF        _CloseSoftStopTime, 0, 1
0x54F0	0x5E00      	SUBWF       R0, 1 
0x54F2	0x0E00      	MOVLW       0
0x54F4	0x5A01      	SUBWFB      R1, 1 
0x54F6	0x5A02      	SUBWFB      R2, 1 
0x54F8	0x5A03      	SUBWFB      R3, 1 
0x54FA	0x0103      	MOVLB       3
0x54FC	0x5101      	MOVF        State2_delay_L0, 0, 1
0x54FE	0x2600      	ADDWF       R0, 1 
0x5500	0x0E00      	MOVLW       0
0x5502	0x2201      	ADDWFC      R1, 1 
0x5504	0x2202      	ADDWFC      R2, 1 
0x5506	0x2203      	ADDWFC      R3, 1 
0x5508	0xF243C000  	MOVFF       R0, _temp
0x550C	0xF244C001  	MOVFF       R1, _temp+1
0x5510	0xF245C002  	MOVFF       R2, _temp+2
0x5514	0xF246C003  	MOVFF       R3, _temp+3
0x5518	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x551C	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x5520	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x5524	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x5528	0x0E07      	MOVLW       7
0x552A	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x552C	0xF008ECB5  	CALL        _AddTask, 0
L_State2116:
;FirmV_0_7_0.c,703 :: 		if(LockForce!=0)
0x5530	0x0101      	MOVLB       1
0x5532	0x518F      	MOVF        _LockForce, 0, 1
0x5534	0x0A00      	XORLW       0
0x5536	0xE049      	BZ          L_State2117
;FirmV_0_7_0.c,704 :: 		{temp=ms500+Door1CloseTime+ActionTimeDiff+delay;AddTask(temp,5);AddTask(temp+LockForceTime,3);}
0x5538	0x0102      	MOVLB       2
0x553A	0x5135      	MOVF        _Door1CloseTime, 0, 1
0x553C	0x0101      	MOVLB       1
0x553E	0x2504      	ADDWF       _ms500, 0, 1
0x5540	0x6E00      	MOVWF       R0 
0x5542	0x0E00      	MOVLW       0
0x5544	0x2105      	ADDWFC      _ms500+1, 0, 1
0x5546	0x6E01      	MOVWF       R1 
0x5548	0x0E00      	MOVLW       0
0x554A	0x2106      	ADDWFC      _ms500+2, 0, 1
0x554C	0x6E02      	MOVWF       R2 
0x554E	0x0E00      	MOVLW       0
0x5550	0x2107      	ADDWFC      _ms500+3, 0, 1
0x5552	0x6E03      	MOVWF       R3 
0x5554	0x0102      	MOVLB       2
0x5556	0x5147      	MOVF        _ActionTimeDiff, 0, 1
0x5558	0x2600      	ADDWF       R0, 1 
0x555A	0x0E00      	MOVLW       0
0x555C	0x2201      	ADDWFC      R1, 1 
0x555E	0x2202      	ADDWFC      R2, 1 
0x5560	0x2203      	ADDWFC      R3, 1 
0x5562	0x0103      	MOVLB       3
0x5564	0x5101      	MOVF        State2_delay_L0, 0, 1
0x5566	0x2600      	ADDWF       R0, 1 
0x5568	0x0E00      	MOVLW       0
0x556A	0x2201      	ADDWFC      R1, 1 
0x556C	0x2202      	ADDWFC      R2, 1 
0x556E	0x2203      	ADDWFC      R3, 1 
0x5570	0xF243C000  	MOVFF       R0, _temp
0x5574	0xF244C001  	MOVFF       R1, _temp+1
0x5578	0xF245C002  	MOVFF       R2, _temp+2
0x557C	0xF246C003  	MOVFF       R3, _temp+3
0x5580	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x5584	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x5588	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x558C	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x5590	0x0E05      	MOVLW       5
0x5592	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x5594	0xF008ECB5  	CALL        _AddTask, 0
0x5598	0x0E02      	MOVLW       2
0x559A	0x0102      	MOVLB       2
0x559C	0x2543      	ADDWF       _temp, 0, 1
0x559E	0x0103      	MOVLB       3
0x55A0	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x55A2	0x0E00      	MOVLW       0
0x55A4	0x0102      	MOVLB       2
0x55A6	0x2144      	ADDWFC      _temp+1, 0, 1
0x55A8	0x0103      	MOVLB       3
0x55AA	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x55AC	0x0E00      	MOVLW       0
0x55AE	0x0102      	MOVLB       2
0x55B0	0x2145      	ADDWFC      _temp+2, 0, 1
0x55B2	0x0103      	MOVLB       3
0x55B4	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x55B6	0x0E00      	MOVLW       0
0x55B8	0x0102      	MOVLB       2
0x55BA	0x2146      	ADDWFC      _temp+3, 0, 1
0x55BC	0x0103      	MOVLB       3
0x55BE	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x55C0	0x0E03      	MOVLW       3
0x55C2	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x55C4	0xF008ECB5  	CALL        _AddTask, 0
0x55C8	0xD030      	BRA         L_State2118
L_State2117:
;FirmV_0_7_0.c,706 :: 		{temp=ms500+Door1CloseTime+ActionTimeDiff+delay;AddTask(temp,3);}
0x55CA	0x0102      	MOVLB       2
0x55CC	0x5135      	MOVF        _Door1CloseTime, 0, 1
0x55CE	0x0101      	MOVLB       1
0x55D0	0x2504      	ADDWF       _ms500, 0, 1
0x55D2	0x6E00      	MOVWF       R0 
0x55D4	0x0E00      	MOVLW       0
0x55D6	0x2105      	ADDWFC      _ms500+1, 0, 1
0x55D8	0x6E01      	MOVWF       R1 
0x55DA	0x0E00      	MOVLW       0
0x55DC	0x2106      	ADDWFC      _ms500+2, 0, 1
0x55DE	0x6E02      	MOVWF       R2 
0x55E0	0x0E00      	MOVLW       0
0x55E2	0x2107      	ADDWFC      _ms500+3, 0, 1
0x55E4	0x6E03      	MOVWF       R3 
0x55E6	0x0102      	MOVLB       2
0x55E8	0x5147      	MOVF        _ActionTimeDiff, 0, 1
0x55EA	0x2600      	ADDWF       R0, 1 
0x55EC	0x0E00      	MOVLW       0
0x55EE	0x2201      	ADDWFC      R1, 1 
0x55F0	0x2202      	ADDWFC      R2, 1 
0x55F2	0x2203      	ADDWFC      R3, 1 
0x55F4	0x0103      	MOVLB       3
0x55F6	0x5101      	MOVF        State2_delay_L0, 0, 1
0x55F8	0x2600      	ADDWF       R0, 1 
0x55FA	0x0E00      	MOVLW       0
0x55FC	0x2201      	ADDWFC      R1, 1 
0x55FE	0x2202      	ADDWFC      R2, 1 
0x5600	0x2203      	ADDWFC      R3, 1 
0x5602	0xF243C000  	MOVFF       R0, _temp
0x5606	0xF244C001  	MOVFF       R1, _temp+1
0x560A	0xF245C002  	MOVFF       R2, _temp+2
0x560E	0xF246C003  	MOVFF       R3, _temp+3
0x5612	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x5616	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x561A	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x561E	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x5622	0x0E03      	MOVLW       3
0x5624	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x5626	0xF008ECB5  	CALL        _AddTask, 0
L_State2118:
;FirmV_0_7_0.c,708 :: 		}
L_State2110:
;FirmV_0_7_0.c,711 :: 		CloseDone=3;
0x562A	0x0E03      	MOVLW       3
0x562C	0x0101      	MOVLB       1
0x562E	0x6F1F      	MOVWF       _CloseDone, 1
;FirmV_0_7_0.c,712 :: 		OverloadCheckFlag1=0;
0x5630	0x0100      	MOVLB       0
0x5632	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
;FirmV_0_7_0.c,713 :: 		OverloadCheckFlag2=0;
0x5634	0x6BB6      	CLRF        _OverloadCheckFlag2, 1
;FirmV_0_7_0.c,714 :: 		State=4;
0x5636	0x0E04      	MOVLW       4
0x5638	0x0101      	MOVLB       1
0x563A	0x6F44      	MOVWF       _State, 1
;FirmV_0_7_0.c,715 :: 		}
L_State299:
;FirmV_0_7_0.c,717 :: 		if((Events.Photocell.b0==1)&&(AutoCloseTime!=0)&&(PassFlag==0))
0x563C	0x0102      	MOVLB       2
0x563E	0xA1A0      	BTFSS       _Events+6, 0, 1
0x5640	0xD028      	BRA         L_State2121
0x5642	0x0E00      	MOVLW       0
0x5644	0x1996      	XORWF       _AutoCloseTime+1, 0, 1
0x5646	0xE102      	BNZ         L__State2929
0x5648	0x0E00      	MOVLW       0
0x564A	0x1995      	XORWF       _AutoCloseTime, 0, 1
L__State2929:
0x564C	0xE022      	BZ          L_State2121
0x564E	0x0101      	MOVLB       1
0x5650	0x5108      	MOVF        _PassFlag, 0, 1
0x5652	0x0A00      	XORLW       0
0x5654	0xE11E      	BNZ         L_State2121
L__State2817:
;FirmV_0_7_0.c,718 :: 		{PassFlag=1; _AC=GetAutocloseTime();Logger("S2 Auto Close Deleted",1);}
0x5656	0x0E01      	MOVLW       1
0x5658	0x6F08      	MOVWF       _PassFlag, 1
0x565A	0xF009EC9C  	CALL        _GetAutocloseTime, 0
0x565E	0xF021C000  	MOVFF       R0, __AC
0x5662	0x0EFC      	MOVLW       ?ICS?lstr4_FirmV_0_7_0
0x5664	0x6EF6      	MOVWF       4086 
0x5666	0x0E8C      	MOVLW       hi_addr(?ICS?lstr4_FirmV_0_7_0)
0x5668	0x6EF7      	MOVWF       TBLPTRH 
0x566A	0x0E00      	MOVLW       higher_addr(?ICS?lstr4_FirmV_0_7_0)
0x566C	0x6EF8      	MOVWF       TBLPTRU 
0x566E	0x0ECB      	MOVLW       ?lstr4_FirmV_0_7_0
0x5670	0x6EE1      	MOVWF       FSR1L 
0x5672	0x0E02      	MOVLW       hi_addr(?lstr4_FirmV_0_7_0)
0x5674	0x6EE2      	MOVWF       FSR1H 
0x5676	0x0E16      	MOVLW       22
0x5678	0x6E00      	MOVWF       R0 
0x567A	0x0E01      	MOVLW       1
0x567C	0x6E01      	MOVWF       R1 
0x567E	0xF005EC2B  	CALL        ___CC2DW, 0
0x5682	0x0ECB      	MOVLW       ?lstr4_FirmV_0_7_0
0x5684	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x5686	0x0E02      	MOVLW       hi_addr(?lstr4_FirmV_0_7_0)
0x5688	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x568A	0x0E01      	MOVLW       1
0x568C	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x568E	0xF009EC69  	CALL        _Logger, 0
L_State2121:
;FirmV_0_7_0.c,720 :: 		if((PassFlag==1)&&(Events.Photocell.b0==0)&&(AutoCloseTime!=0))
0x5692	0x0101      	MOVLB       1
0x5694	0x5108      	MOVF        _PassFlag, 0, 1
0x5696	0x0A01      	XORLW       1
0x5698	0xA4D8      	BTFSS       STATUS, 2 
0x569A	0xD0B9      	BRA         L_State2124
0x569C	0x0102      	MOVLB       2
0x569E	0xB1A0      	BTFSC       _Events+6, 0, 1
0x56A0	0xD0B6      	BRA         L_State2124
0x56A2	0x0E00      	MOVLW       0
0x56A4	0x1996      	XORWF       _AutoCloseTime+1, 0, 1
0x56A6	0xE102      	BNZ         L__State2930
0x56A8	0x0E00      	MOVLW       0
0x56AA	0x1995      	XORWF       _AutoCloseTime, 0, 1
L__State2930:
0x56AC	0xB4D8      	BTFSC       STATUS, 2 
0x56AE	0xD0AF      	BRA         L_State2124
L__State2816:
;FirmV_0_7_0.c,721 :: 		if(CloseAfterPass==0)
0x56B0	0x5141      	MOVF        _CloseAfterPass, 0, 1
0x56B2	0x0A00      	XORLW       0
0x56B4	0xE156      	BNZ         L_State2125
;FirmV_0_7_0.c,722 :: 		{temp=ms500+_AC;AddTask(temp,9);PassFlag=0;longwordtostrwithzeros(temp,t);Logger("S2 Insert 9 at:",1);Logger(t,1);}
0x56B6	0x5021      	MOVF        __AC, 0 
0x56B8	0x0101      	MOVLB       1
0x56BA	0x2504      	ADDWF       _ms500, 0, 1
0x56BC	0x6E00      	MOVWF       R0 
0x56BE	0x0E00      	MOVLW       0
0x56C0	0x2105      	ADDWFC      _ms500+1, 0, 1
0x56C2	0x6E01      	MOVWF       R1 
0x56C4	0x0E00      	MOVLW       0
0x56C6	0x2106      	ADDWFC      _ms500+2, 0, 1
0x56C8	0x6E02      	MOVWF       R2 
0x56CA	0x0E00      	MOVLW       0
0x56CC	0x2107      	ADDWFC      _ms500+3, 0, 1
0x56CE	0x6E03      	MOVWF       R3 
0x56D0	0xF243C000  	MOVFF       R0, _temp
0x56D4	0xF244C001  	MOVFF       R1, _temp+1
0x56D8	0xF245C002  	MOVFF       R2, _temp+2
0x56DC	0xF246C003  	MOVFF       R3, _temp+3
0x56E0	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x56E4	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x56E8	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x56EC	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x56F0	0x0E09      	MOVLW       9
0x56F2	0x0103      	MOVLB       3
0x56F4	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x56F6	0xF008ECB5  	CALL        _AddTask, 0
0x56FA	0x0101      	MOVLB       1
0x56FC	0x6B08      	CLRF        _PassFlag, 1
0x56FE	0xF5F3C243  	MOVFF       _temp, FARG_LongWordToStrWithZeros_input
0x5702	0xF5F4C244  	MOVFF       _temp+1, FARG_LongWordToStrWithZeros_input+1
0x5706	0xF5F5C245  	MOVFF       _temp+2, FARG_LongWordToStrWithZeros_input+2
0x570A	0xF5F6C246  	MOVFF       _temp+3, FARG_LongWordToStrWithZeros_input+3
0x570E	0x0E36      	MOVLW       _t
0x5710	0x0105      	MOVLB       5
0x5712	0x6FF7      	MOVWF       FARG_LongWordToStrWithZeros_output, 1
0x5714	0x0E02      	MOVLW       hi_addr(_t)
0x5716	0x6FF8      	MOVWF       FARG_LongWordToStrWithZeros_output+1, 1
0x5718	0xF005EC33  	CALL        _LongWordToStrWithZeros, 0
0x571C	0x0E12      	MOVLW       ?ICS?lstr5_FirmV_0_7_0
0x571E	0x6EF6      	MOVWF       4086 
0x5720	0x0E8D      	MOVLW       hi_addr(?ICS?lstr5_FirmV_0_7_0)
0x5722	0x6EF7      	MOVWF       TBLPTRH 
0x5724	0x0E00      	MOVLW       higher_addr(?ICS?lstr5_FirmV_0_7_0)
0x5726	0x6EF8      	MOVWF       TBLPTRU 
0x5728	0x0EE1      	MOVLW       ?lstr5_FirmV_0_7_0
0x572A	0x6EE1      	MOVWF       FSR1L 
0x572C	0x0E02      	MOVLW       hi_addr(?lstr5_FirmV_0_7_0)
0x572E	0x6EE2      	MOVWF       FSR1H 
0x5730	0x0E10      	MOVLW       16
0x5732	0x6E00      	MOVWF       R0 
0x5734	0x0E01      	MOVLW       1
0x5736	0x6E01      	MOVWF       R1 
0x5738	0xF005EC2B  	CALL        ___CC2DW, 0
0x573C	0x0EE1      	MOVLW       ?lstr5_FirmV_0_7_0
0x573E	0x0103      	MOVLB       3
0x5740	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x5742	0x0E02      	MOVLW       hi_addr(?lstr5_FirmV_0_7_0)
0x5744	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x5746	0x0E01      	MOVLW       1
0x5748	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x574A	0xF009EC69  	CALL        _Logger, 0
0x574E	0x0E36      	MOVLW       _t
0x5750	0x0103      	MOVLB       3
0x5752	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x5754	0x0E02      	MOVLW       hi_addr(_t)
0x5756	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x5758	0x0E01      	MOVLW       1
0x575A	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x575C	0xF009EC69  	CALL        _Logger, 0
0x5760	0xD056      	BRA         L_State2126
L_State2125:
;FirmV_0_7_0.c,724 :: 		{temp=ms500+CloseAfterPass;AddTask(temp,9);PassFlag=0;longwordtostrwithzeros(temp,t);Logger("S2 Insert 9 at:",1);Logger(t,1);}
0x5762	0x0102      	MOVLB       2
0x5764	0x5141      	MOVF        _CloseAfterPass, 0, 1
0x5766	0x0101      	MOVLB       1
0x5768	0x2504      	ADDWF       _ms500, 0, 1
0x576A	0x6E00      	MOVWF       R0 
0x576C	0x0E00      	MOVLW       0
0x576E	0x2105      	ADDWFC      _ms500+1, 0, 1
0x5770	0x6E01      	MOVWF       R1 
0x5772	0x0E00      	MOVLW       0
0x5774	0x2106      	ADDWFC      _ms500+2, 0, 1
0x5776	0x6E02      	MOVWF       R2 
0x5778	0x0E00      	MOVLW       0
0x577A	0x2107      	ADDWFC      _ms500+3, 0, 1
0x577C	0x6E03      	MOVWF       R3 
0x577E	0xF243C000  	MOVFF       R0, _temp
0x5782	0xF244C001  	MOVFF       R1, _temp+1
0x5786	0xF245C002  	MOVFF       R2, _temp+2
0x578A	0xF246C003  	MOVFF       R3, _temp+3
0x578E	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x5792	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x5796	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x579A	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x579E	0x0E09      	MOVLW       9
0x57A0	0x0103      	MOVLB       3
0x57A2	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x57A4	0xF008ECB5  	CALL        _AddTask, 0
0x57A8	0x0101      	MOVLB       1
0x57AA	0x6B08      	CLRF        _PassFlag, 1
0x57AC	0xF5F3C243  	MOVFF       _temp, FARG_LongWordToStrWithZeros_input
0x57B0	0xF5F4C244  	MOVFF       _temp+1, FARG_LongWordToStrWithZeros_input+1
0x57B4	0xF5F5C245  	MOVFF       _temp+2, FARG_LongWordToStrWithZeros_input+2
0x57B8	0xF5F6C246  	MOVFF       _temp+3, FARG_LongWordToStrWithZeros_input+3
0x57BC	0x0E36      	MOVLW       _t
0x57BE	0x0105      	MOVLB       5
0x57C0	0x6FF7      	MOVWF       FARG_LongWordToStrWithZeros_output, 1
0x57C2	0x0E02      	MOVLW       hi_addr(_t)
0x57C4	0x6FF8      	MOVWF       FARG_LongWordToStrWithZeros_output+1, 1
0x57C6	0xF005EC33  	CALL        _LongWordToStrWithZeros, 0
0x57CA	0x0E22      	MOVLW       ?ICS?lstr6_FirmV_0_7_0
0x57CC	0x6EF6      	MOVWF       4086 
0x57CE	0x0E8D      	MOVLW       hi_addr(?ICS?lstr6_FirmV_0_7_0)
0x57D0	0x6EF7      	MOVWF       TBLPTRH 
0x57D2	0x0E00      	MOVLW       higher_addr(?ICS?lstr6_FirmV_0_7_0)
0x57D4	0x6EF8      	MOVWF       TBLPTRU 
0x57D6	0x0EF1      	MOVLW       ?lstr6_FirmV_0_7_0
0x57D8	0x6EE1      	MOVWF       FSR1L 
0x57DA	0x0E02      	MOVLW       hi_addr(?lstr6_FirmV_0_7_0)
0x57DC	0x6EE2      	MOVWF       FSR1H 
0x57DE	0x0E10      	MOVLW       16
0x57E0	0x6E00      	MOVWF       R0 
0x57E2	0x0E01      	MOVLW       1
0x57E4	0x6E01      	MOVWF       R1 
0x57E6	0xF005EC2B  	CALL        ___CC2DW, 0
0x57EA	0x0EF1      	MOVLW       ?lstr6_FirmV_0_7_0
0x57EC	0x0103      	MOVLB       3
0x57EE	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x57F0	0x0E02      	MOVLW       hi_addr(?lstr6_FirmV_0_7_0)
0x57F2	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x57F4	0x0E01      	MOVLW       1
0x57F6	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x57F8	0xF009EC69  	CALL        _Logger, 0
0x57FC	0x0E36      	MOVLW       _t
0x57FE	0x0103      	MOVLB       3
0x5800	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x5802	0x0E02      	MOVLW       hi_addr(_t)
0x5804	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x5806	0x0E01      	MOVLW       1
0x5808	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x580A	0xF009EC69  	CALL        _Logger, 0
L_State2126:
L_State2124:
;FirmV_0_7_0.c,726 :: 		}
0x580E	0x0012      	RETURN      0
; end of _State2
_State5:
;FirmV_0_7_0.c,919 :: 		void State5()
;FirmV_0_7_0.c,921 :: 		char delay=2;
0x5810	0x0E02      	MOVLW       2
0x5812	0x0102      	MOVLB       2
0x5814	0x6FF5      	MOVWF       State5_delay_L0, 1
;FirmV_0_7_0.c,922 :: 		Flasher=0;
0x5816	0x9E83      	BCF         PORTD, 7 
;FirmV_0_7_0.c,923 :: 		FlashFlag=0;
0x5818	0x0100      	MOVLB       0
0x581A	0x6BBC      	CLRF        _FlashFlag, 1
;FirmV_0_7_0.c,924 :: 		if((Events.Remote!=0)||(CheckTask(9)==1))
0x581C	0x0102      	MOVLB       2
0x581E	0x519E      	MOVF        _Events+4, 0, 1
0x5820	0x0A00      	XORLW       0
0x5822	0xE109      	BNZ         L__State5836
0x5824	0x0E09      	MOVLW       9
0x5826	0x0103      	MOVLB       3
0x5828	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x582A	0xF009EC28  	CALL        _CheckTask, 0
0x582E	0x5000      	MOVF        R0, 0 
0x5830	0x0A01      	XORLW       1
0x5832	0xE001      	BZ          L__State5836
0x5834	0xD1E1      	BRA         L_State5197
L__State5836:
;FirmV_0_7_0.c,926 :: 		if((Door2CloseTime==0)||(ActiveDoors==1))
0x5836	0x0101      	MOVLB       1
0x5838	0x51A7      	MOVF        _Door2CloseTime, 0, 1
0x583A	0x0A00      	XORLW       0
0x583C	0xE004      	BZ          L__State5835
0x583E	0x5132      	MOVF        _ActiveDoors, 0, 1
0x5840	0x0A01      	XORLW       1
0x5842	0xE001      	BZ          L__State5835
0x5844	0xD089      	BRA         L_State5200
L__State5835:
;FirmV_0_7_0.c,928 :: 		ClearTasks(9);
0x5846	0x0E09      	MOVLW       9
0x5848	0x0103      	MOVLB       3
0x584A	0x6FD9      	MOVWF       FARG_ClearTasks_except, 1
0x584C	0xF00AEC5C  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,929 :: 		temp=ms500+delay;
0x5850	0x0102      	MOVLB       2
0x5852	0x51F5      	MOVF        State5_delay_L0, 0, 1
0x5854	0x0101      	MOVLB       1
0x5856	0x2504      	ADDWF       _ms500, 0, 1
0x5858	0x6E00      	MOVWF       R0 
0x585A	0x0E00      	MOVLW       0
0x585C	0x2105      	ADDWFC      _ms500+1, 0, 1
0x585E	0x6E01      	MOVWF       R1 
0x5860	0x0E00      	MOVLW       0
0x5862	0x2106      	ADDWFC      _ms500+2, 0, 1
0x5864	0x6E02      	MOVWF       R2 
0x5866	0x0E00      	MOVLW       0
0x5868	0x2107      	ADDWFC      _ms500+3, 0, 1
0x586A	0x6E03      	MOVWF       R3 
0x586C	0xF243C000  	MOVFF       R0, _temp
0x5870	0xF244C001  	MOVFF       R1, _temp+1
0x5874	0xF245C002  	MOVFF       R2, _temp+2
0x5878	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,930 :: 		AddTask(temp,1);
0x587C	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x5880	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x5884	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x5888	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x588C	0x0E01      	MOVLW       1
0x588E	0x0103      	MOVLB       3
0x5890	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x5892	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,931 :: 		AddTask(temp,5);
0x5896	0xF3D9C243  	MOVFF       _temp, FARG_AddTask_OccTime
0x589A	0xF3DAC244  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x589E	0xF3DBC245  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x58A2	0xF3DCC246  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x58A6	0x0E05      	MOVLW       5
0x58A8	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x58AA	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,932 :: 		M1isSlow=0;//speed up
0x58AE	0x0100      	MOVLB       0
0x58B0	0x6BBA      	CLRF        _M1isSlow, 1
;FirmV_0_7_0.c,933 :: 		temp=ms500+OverloadDelay+delay;
0x58B2	0x0E06      	MOVLW       6
0x58B4	0x0101      	MOVLB       1
0x58B6	0x2504      	ADDWF       _ms500, 0, 1
0x58B8	0x6E00      	MOVWF       R0 
0x58BA	0x0E00      	MOVLW       0
0x58BC	0x2105      	ADDWFC      _ms500+1, 0, 1
0x58BE	0x6E01      	MOVWF       R1 
0x58C0	0x0E00      	MOVLW       0
0x58C2	0x2106      	ADDWFC      _ms500+2, 0, 1
0x58C4	0x6E02      	MOVWF       R2 
0x58C6	0x0E00      	MOVLW       0
0x58C8	0x2107      	ADDWFC      _ms500+3, 0, 1
0x58CA	0x6E03      	MOVWF       R3 
0x58CC	0x0102      	MOVLB       2
0x58CE	0x51F5      	MOVF        State5_delay_L0, 0, 1
0x58D0	0x2600      	ADDWF       R0, 1 
0x58D2	0x0E00      	MOVLW       0
0x58D4	0x2201      	ADDWFC      R1, 1 
0x58D6	0x2202      	ADDWFC      R2, 1 
0x58D8	0x2203      	ADDWFC      R3, 1 
0x58DA	0xF243C000  	MOVFF       R0, _temp
0x58DE	0xF244C001  	MOVFF       R1, _temp+1
0x58E2	0xF245C002  	MOVFF       R2, _temp+2
0x58E6	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,934 :: 		AddTask(temp,10); //overload check
0x58EA	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x58EE	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x58F2	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x58F6	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x58FA	0x0E0A      	MOVLW       10
0x58FC	0x0103      	MOVLB       3
0x58FE	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x5900	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,935 :: 		temp=ms500+Door1CloseTime+delay;
0x5904	0x0102      	MOVLB       2
0x5906	0x5135      	MOVF        _Door1CloseTime, 0, 1
0x5908	0x0101      	MOVLB       1
0x590A	0x2504      	ADDWF       _ms500, 0, 1
0x590C	0x6E00      	MOVWF       R0 
0x590E	0x0E00      	MOVLW       0
0x5910	0x2105      	ADDWFC      _ms500+1, 0, 1
0x5912	0x6E01      	MOVWF       R1 
0x5914	0x0E00      	MOVLW       0
0x5916	0x2106      	ADDWFC      _ms500+2, 0, 1
0x5918	0x6E02      	MOVWF       R2 
0x591A	0x0E00      	MOVLW       0
0x591C	0x2107      	ADDWFC      _ms500+3, 0, 1
0x591E	0x6E03      	MOVWF       R3 
0x5920	0x0102      	MOVLB       2
0x5922	0x51F5      	MOVF        State5_delay_L0, 0, 1
0x5924	0x2600      	ADDWF       R0, 1 
0x5926	0x0E00      	MOVLW       0
0x5928	0x2201      	ADDWFC      R1, 1 
0x592A	0x2202      	ADDWFC      R2, 1 
0x592C	0x2203      	ADDWFC      R3, 1 
0x592E	0xF243C000  	MOVFF       R0, _temp
0x5932	0xF244C001  	MOVFF       R1, _temp+1
0x5936	0xF245C002  	MOVFF       R2, _temp+2
0x593A	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,936 :: 		AddTask(temp,3);//Stop motor
0x593E	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x5942	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x5946	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x594A	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x594E	0x0E03      	MOVLW       3
0x5950	0x0103      	MOVLB       3
0x5952	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x5954	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,937 :: 		}
L_State5200:
;FirmV_0_7_0.c,938 :: 		if((Door2CloseTime!=0)&&(ActiveDoors==2))
0x5958	0x0101      	MOVLB       1
0x595A	0x51A7      	MOVF        _Door2CloseTime, 0, 1
0x595C	0x0A00      	XORLW       0
0x595E	0xB4D8      	BTFSC       STATUS, 2 
0x5960	0xD142      	BRA         L_State5203
0x5962	0x5132      	MOVF        _ActiveDoors, 0, 1
0x5964	0x0A02      	XORLW       2
0x5966	0xA4D8      	BTFSS       STATUS, 2 
0x5968	0xD13E      	BRA         L_State5203
L__State5834:
;FirmV_0_7_0.c,940 :: 		ClearTasks(9);
0x596A	0x0E09      	MOVLW       9
0x596C	0x0103      	MOVLB       3
0x596E	0x6FD9      	MOVWF       FARG_ClearTasks_except, 1
0x5970	0xF00AEC5C  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,941 :: 		temp=ms500+delay;
0x5974	0x0102      	MOVLB       2
0x5976	0x51F5      	MOVF        State5_delay_L0, 0, 1
0x5978	0x0101      	MOVLB       1
0x597A	0x2504      	ADDWF       _ms500, 0, 1
0x597C	0x6E00      	MOVWF       R0 
0x597E	0x0E00      	MOVLW       0
0x5980	0x2105      	ADDWFC      _ms500+1, 0, 1
0x5982	0x6E01      	MOVWF       R1 
0x5984	0x0E00      	MOVLW       0
0x5986	0x2106      	ADDWFC      _ms500+2, 0, 1
0x5988	0x6E02      	MOVWF       R2 
0x598A	0x0E00      	MOVLW       0
0x598C	0x2107      	ADDWFC      _ms500+3, 0, 1
0x598E	0x6E03      	MOVWF       R3 
0x5990	0xF243C000  	MOVFF       R0, _temp
0x5994	0xF244C001  	MOVFF       R1, _temp+1
0x5998	0xF245C002  	MOVFF       R2, _temp+2
0x599C	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,942 :: 		AddTask(temp,2);
0x59A0	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x59A4	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x59A8	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x59AC	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x59B0	0x0E02      	MOVLW       2
0x59B2	0x0103      	MOVLB       3
0x59B4	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x59B6	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,943 :: 		AddTask(temp,6);
0x59BA	0xF3D9C243  	MOVFF       _temp, FARG_AddTask_OccTime
0x59BE	0xF3DAC244  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x59C2	0xF3DBC245  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x59C6	0xF3DCC246  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x59CA	0x0E06      	MOVLW       6
0x59CC	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x59CE	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,944 :: 		M1isSlow=0;//speed up
0x59D2	0x0100      	MOVLB       0
0x59D4	0x6BBA      	CLRF        _M1isSlow, 1
;FirmV_0_7_0.c,945 :: 		temp=ms500+OverloadDelay+delay;
0x59D6	0x0E06      	MOVLW       6
0x59D8	0x0101      	MOVLB       1
0x59DA	0x2504      	ADDWF       _ms500, 0, 1
0x59DC	0x6E00      	MOVWF       R0 
0x59DE	0x0E00      	MOVLW       0
0x59E0	0x2105      	ADDWFC      _ms500+1, 0, 1
0x59E2	0x6E01      	MOVWF       R1 
0x59E4	0x0E00      	MOVLW       0
0x59E6	0x2106      	ADDWFC      _ms500+2, 0, 1
0x59E8	0x6E02      	MOVWF       R2 
0x59EA	0x0E00      	MOVLW       0
0x59EC	0x2107      	ADDWFC      _ms500+3, 0, 1
0x59EE	0x6E03      	MOVWF       R3 
0x59F0	0x0102      	MOVLB       2
0x59F2	0x51F5      	MOVF        State5_delay_L0, 0, 1
0x59F4	0x2600      	ADDWF       R0, 1 
0x59F6	0x0E00      	MOVLW       0
0x59F8	0x2201      	ADDWFC      R1, 1 
0x59FA	0x2202      	ADDWFC      R2, 1 
0x59FC	0x2203      	ADDWFC      R3, 1 
0x59FE	0xF243C000  	MOVFF       R0, _temp
0x5A02	0xF244C001  	MOVFF       R1, _temp+1
0x5A06	0xF245C002  	MOVFF       R2, _temp+2
0x5A0A	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,946 :: 		AddTask(temp,11); //overload check
0x5A0E	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x5A12	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x5A16	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x5A1A	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x5A1E	0x0E0B      	MOVLW       11
0x5A20	0x0103      	MOVLB       3
0x5A22	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x5A24	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,947 :: 		temp=ms500+Door1CloseTime+delay;
0x5A28	0x0102      	MOVLB       2
0x5A2A	0x5135      	MOVF        _Door1CloseTime, 0, 1
0x5A2C	0x0101      	MOVLB       1
0x5A2E	0x2504      	ADDWF       _ms500, 0, 1
0x5A30	0x6E00      	MOVWF       R0 
0x5A32	0x0E00      	MOVLW       0
0x5A34	0x2105      	ADDWFC      _ms500+1, 0, 1
0x5A36	0x6E01      	MOVWF       R1 
0x5A38	0x0E00      	MOVLW       0
0x5A3A	0x2106      	ADDWFC      _ms500+2, 0, 1
0x5A3C	0x6E02      	MOVWF       R2 
0x5A3E	0x0E00      	MOVLW       0
0x5A40	0x2107      	ADDWFC      _ms500+3, 0, 1
0x5A42	0x6E03      	MOVWF       R3 
0x5A44	0x0102      	MOVLB       2
0x5A46	0x51F5      	MOVF        State5_delay_L0, 0, 1
0x5A48	0x2600      	ADDWF       R0, 1 
0x5A4A	0x0E00      	MOVLW       0
0x5A4C	0x2201      	ADDWFC      R1, 1 
0x5A4E	0x2202      	ADDWFC      R2, 1 
0x5A50	0x2203      	ADDWFC      R3, 1 
0x5A52	0xF243C000  	MOVFF       R0, _temp
0x5A56	0xF244C001  	MOVFF       R1, _temp+1
0x5A5A	0xF245C002  	MOVFF       R2, _temp+2
0x5A5E	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,948 :: 		AddTask(temp,4);//Stop motor
0x5A62	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x5A66	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x5A6A	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x5A6E	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x5A72	0x0E04      	MOVLW       4
0x5A74	0x0103      	MOVLB       3
0x5A76	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x5A78	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,953 :: 		temp=ms500+ActionTimeDiff+delay;
0x5A7C	0x0102      	MOVLB       2
0x5A7E	0x5147      	MOVF        _ActionTimeDiff, 0, 1
0x5A80	0x0101      	MOVLB       1
0x5A82	0x2504      	ADDWF       _ms500, 0, 1
0x5A84	0x6E00      	MOVWF       R0 
0x5A86	0x0E00      	MOVLW       0
0x5A88	0x2105      	ADDWFC      _ms500+1, 0, 1
0x5A8A	0x6E01      	MOVWF       R1 
0x5A8C	0x0E00      	MOVLW       0
0x5A8E	0x2106      	ADDWFC      _ms500+2, 0, 1
0x5A90	0x6E02      	MOVWF       R2 
0x5A92	0x0E00      	MOVLW       0
0x5A94	0x2107      	ADDWFC      _ms500+3, 0, 1
0x5A96	0x6E03      	MOVWF       R3 
0x5A98	0x0102      	MOVLB       2
0x5A9A	0x51F5      	MOVF        State5_delay_L0, 0, 1
0x5A9C	0x2600      	ADDWF       R0, 1 
0x5A9E	0x0E00      	MOVLW       0
0x5AA0	0x2201      	ADDWFC      R1, 1 
0x5AA2	0x2202      	ADDWFC      R2, 1 
0x5AA4	0x2203      	ADDWFC      R3, 1 
0x5AA6	0xF243C000  	MOVFF       R0, _temp
0x5AAA	0xF244C001  	MOVFF       R1, _temp+1
0x5AAE	0xF245C002  	MOVFF       R2, _temp+2
0x5AB2	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,954 :: 		AddTask(temp,1);
0x5AB6	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x5ABA	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x5ABE	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x5AC2	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x5AC6	0x0E01      	MOVLW       1
0x5AC8	0x0103      	MOVLB       3
0x5ACA	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x5ACC	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,955 :: 		temp=ms500+ActionTimeDiff+delay;
0x5AD0	0x0102      	MOVLB       2
0x5AD2	0x5147      	MOVF        _ActionTimeDiff, 0, 1
0x5AD4	0x0101      	MOVLB       1
0x5AD6	0x2504      	ADDWF       _ms500, 0, 1
0x5AD8	0x6E00      	MOVWF       R0 
0x5ADA	0x0E00      	MOVLW       0
0x5ADC	0x2105      	ADDWFC      _ms500+1, 0, 1
0x5ADE	0x6E01      	MOVWF       R1 
0x5AE0	0x0E00      	MOVLW       0
0x5AE2	0x2106      	ADDWFC      _ms500+2, 0, 1
0x5AE4	0x6E02      	MOVWF       R2 
0x5AE6	0x0E00      	MOVLW       0
0x5AE8	0x2107      	ADDWFC      _ms500+3, 0, 1
0x5AEA	0x6E03      	MOVWF       R3 
0x5AEC	0x0102      	MOVLB       2
0x5AEE	0x51F5      	MOVF        State5_delay_L0, 0, 1
0x5AF0	0x2600      	ADDWF       R0, 1 
0x5AF2	0x0E00      	MOVLW       0
0x5AF4	0x2201      	ADDWFC      R1, 1 
0x5AF6	0x2202      	ADDWFC      R2, 1 
0x5AF8	0x2203      	ADDWFC      R3, 1 
0x5AFA	0xF243C000  	MOVFF       R0, _temp
0x5AFE	0xF244C001  	MOVFF       R1, _temp+1
0x5B02	0xF245C002  	MOVFF       R2, _temp+2
0x5B06	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,956 :: 		AddTask(temp,5);
0x5B0A	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x5B0E	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x5B12	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x5B16	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x5B1A	0x0E05      	MOVLW       5
0x5B1C	0x0103      	MOVLB       3
0x5B1E	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x5B20	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,957 :: 		M2isSlow=0;//speed up
0x5B24	0x0100      	MOVLB       0
0x5B26	0x6BB7      	CLRF        _M2isSlow, 1
;FirmV_0_7_0.c,958 :: 		temp=ms500+ActionTimeDiff+OverloadDelay+delay;
0x5B28	0x0102      	MOVLB       2
0x5B2A	0x5147      	MOVF        _ActionTimeDiff, 0, 1
0x5B2C	0x0101      	MOVLB       1
0x5B2E	0x2504      	ADDWF       _ms500, 0, 1
0x5B30	0x6E00      	MOVWF       R0 
0x5B32	0x0E00      	MOVLW       0
0x5B34	0x2105      	ADDWFC      _ms500+1, 0, 1
0x5B36	0x6E01      	MOVWF       R1 
0x5B38	0x0E00      	MOVLW       0
0x5B3A	0x2106      	ADDWFC      _ms500+2, 0, 1
0x5B3C	0x6E02      	MOVWF       R2 
0x5B3E	0x0E00      	MOVLW       0
0x5B40	0x2107      	ADDWFC      _ms500+3, 0, 1
0x5B42	0x6E03      	MOVWF       R3 
0x5B44	0x0E06      	MOVLW       6
0x5B46	0x2600      	ADDWF       R0, 1 
0x5B48	0x0E00      	MOVLW       0
0x5B4A	0x2201      	ADDWFC      R1, 1 
0x5B4C	0x2202      	ADDWFC      R2, 1 
0x5B4E	0x2203      	ADDWFC      R3, 1 
0x5B50	0x0102      	MOVLB       2
0x5B52	0x51F5      	MOVF        State5_delay_L0, 0, 1
0x5B54	0x2600      	ADDWF       R0, 1 
0x5B56	0x0E00      	MOVLW       0
0x5B58	0x2201      	ADDWFC      R1, 1 
0x5B5A	0x2202      	ADDWFC      R2, 1 
0x5B5C	0x2203      	ADDWFC      R3, 1 
0x5B5E	0xF243C000  	MOVFF       R0, _temp
0x5B62	0xF244C001  	MOVFF       R1, _temp+1
0x5B66	0xF245C002  	MOVFF       R2, _temp+2
0x5B6A	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,959 :: 		AddTask(temp,10); //overload check
0x5B6E	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x5B72	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x5B76	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x5B7A	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x5B7E	0x0E0A      	MOVLW       10
0x5B80	0x0103      	MOVLB       3
0x5B82	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x5B84	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,960 :: 		temp=ms500+Door2CloseTime+delay+ActionTimeDiff;
0x5B88	0x0101      	MOVLB       1
0x5B8A	0x51A7      	MOVF        _Door2CloseTime, 0, 1
0x5B8C	0x2504      	ADDWF       _ms500, 0, 1
0x5B8E	0x6E00      	MOVWF       R0 
0x5B90	0x0E00      	MOVLW       0
0x5B92	0x2105      	ADDWFC      _ms500+1, 0, 1
0x5B94	0x6E01      	MOVWF       R1 
0x5B96	0x0E00      	MOVLW       0
0x5B98	0x2106      	ADDWFC      _ms500+2, 0, 1
0x5B9A	0x6E02      	MOVWF       R2 
0x5B9C	0x0E00      	MOVLW       0
0x5B9E	0x2107      	ADDWFC      _ms500+3, 0, 1
0x5BA0	0x6E03      	MOVWF       R3 
0x5BA2	0x0102      	MOVLB       2
0x5BA4	0x51F5      	MOVF        State5_delay_L0, 0, 1
0x5BA6	0x2600      	ADDWF       R0, 1 
0x5BA8	0x0E00      	MOVLW       0
0x5BAA	0x2201      	ADDWFC      R1, 1 
0x5BAC	0x2202      	ADDWFC      R2, 1 
0x5BAE	0x2203      	ADDWFC      R3, 1 
0x5BB0	0x5147      	MOVF        _ActionTimeDiff, 0, 1
0x5BB2	0x2600      	ADDWF       R0, 1 
0x5BB4	0x0E00      	MOVLW       0
0x5BB6	0x2201      	ADDWFC      R1, 1 
0x5BB8	0x2202      	ADDWFC      R2, 1 
0x5BBA	0x2203      	ADDWFC      R3, 1 
0x5BBC	0xF243C000  	MOVFF       R0, _temp
0x5BC0	0xF244C001  	MOVFF       R1, _temp+1
0x5BC4	0xF245C002  	MOVFF       R2, _temp+2
0x5BC8	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,961 :: 		AddTask(temp,3);//Stop motor
0x5BCC	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x5BD0	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x5BD4	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x5BD8	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x5BDC	0x0E03      	MOVLW       3
0x5BDE	0x0103      	MOVLB       3
0x5BE0	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x5BE2	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,962 :: 		}
L_State5203:
;FirmV_0_7_0.c,963 :: 		CloseDone=3;
0x5BE6	0x0E03      	MOVLW       3
0x5BE8	0x0101      	MOVLB       1
0x5BEA	0x6F1F      	MOVWF       _CloseDone, 1
;FirmV_0_7_0.c,964 :: 		OverloadCheckFlag1=0;
0x5BEC	0x0100      	MOVLB       0
0x5BEE	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
;FirmV_0_7_0.c,965 :: 		OverloadCheckFlag2=0;
0x5BF0	0x6BB6      	CLRF        _OverloadCheckFlag2, 1
;FirmV_0_7_0.c,966 :: 		State=7;
0x5BF2	0x0E07      	MOVLW       7
0x5BF4	0x0101      	MOVLB       1
0x5BF6	0x6F44      	MOVWF       _State, 1
;FirmV_0_7_0.c,967 :: 		}
L_State5197:
;FirmV_0_7_0.c,969 :: 		if((Events.Photocell.b0==1)&&(AutoCloseTime!=0)&&(PassFlag==0))
0x5BF8	0x0102      	MOVLB       2
0x5BFA	0xA1A0      	BTFSS       _Events+6, 0, 1
0x5BFC	0xD028      	BRA         L_State5206
0x5BFE	0x0E00      	MOVLW       0
0x5C00	0x1996      	XORWF       _AutoCloseTime+1, 0, 1
0x5C02	0xE102      	BNZ         L__State5933
0x5C04	0x0E00      	MOVLW       0
0x5C06	0x1995      	XORWF       _AutoCloseTime, 0, 1
L__State5933:
0x5C08	0xE022      	BZ          L_State5206
0x5C0A	0x0101      	MOVLB       1
0x5C0C	0x5108      	MOVF        _PassFlag, 0, 1
0x5C0E	0x0A00      	XORLW       0
0x5C10	0xE11E      	BNZ         L_State5206
L__State5833:
;FirmV_0_7_0.c,970 :: 		{PassFlag=1; _AC=GetAutocloseTime();Logger("S5 Auto Close Deleted",1);}
0x5C12	0x0E01      	MOVLW       1
0x5C14	0x6F08      	MOVWF       _PassFlag, 1
0x5C16	0xF009EC9C  	CALL        _GetAutocloseTime, 0
0x5C1A	0xF021C000  	MOVFF       R0, __AC
0x5C1E	0x0E6B      	MOVLW       ?ICS?lstr39_FirmV_0_7_0
0x5C20	0x6EF6      	MOVWF       4086 
0x5C22	0x0E8D      	MOVLW       hi_addr(?ICS?lstr39_FirmV_0_7_0)
0x5C24	0x6EF7      	MOVWF       TBLPTRH 
0x5C26	0x0E00      	MOVLW       higher_addr(?ICS?lstr39_FirmV_0_7_0)
0x5C28	0x6EF8      	MOVWF       TBLPTRU 
0x5C2A	0x0EBF      	MOVLW       ?lstr39_FirmV_0_7_0
0x5C2C	0x6EE1      	MOVWF       FSR1L 
0x5C2E	0x0E02      	MOVLW       hi_addr(?lstr39_FirmV_0_7_0)
0x5C30	0x6EE2      	MOVWF       FSR1H 
0x5C32	0x0E16      	MOVLW       22
0x5C34	0x6E00      	MOVWF       R0 
0x5C36	0x0E01      	MOVLW       1
0x5C38	0x6E01      	MOVWF       R1 
0x5C3A	0xF005EC2B  	CALL        ___CC2DW, 0
0x5C3E	0x0EBF      	MOVLW       ?lstr39_FirmV_0_7_0
0x5C40	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x5C42	0x0E02      	MOVLW       hi_addr(?lstr39_FirmV_0_7_0)
0x5C44	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x5C46	0x0E01      	MOVLW       1
0x5C48	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x5C4A	0xF009EC69  	CALL        _Logger, 0
L_State5206:
;FirmV_0_7_0.c,972 :: 		if((PassFlag==1)&&(Events.Photocell.b0==0)&&(AutoCloseTime!=0))
0x5C4E	0x0101      	MOVLB       1
0x5C50	0x5108      	MOVF        _PassFlag, 0, 1
0x5C52	0x0A01      	XORLW       1
0x5C54	0xE15E      	BNZ         L_State5209
0x5C56	0x0102      	MOVLB       2
0x5C58	0xB1A0      	BTFSC       _Events+6, 0, 1
0x5C5A	0xD05B      	BRA         L_State5209
0x5C5C	0x0E00      	MOVLW       0
0x5C5E	0x1996      	XORWF       _AutoCloseTime+1, 0, 1
0x5C60	0xE102      	BNZ         L__State5934
0x5C62	0x0E00      	MOVLW       0
0x5C64	0x1995      	XORWF       _AutoCloseTime, 0, 1
L__State5934:
0x5C66	0xE055      	BZ          L_State5209
L__State5832:
;FirmV_0_7_0.c,975 :: 		{temp=ms500+_AC;AddTask(temp,9);PassFlag=0;longwordtostrwithzeros(temp,t);Logger("S5 Insert 9 at:",1);Logger(t,1);}
0x5C68	0x5021      	MOVF        __AC, 0 
0x5C6A	0x0101      	MOVLB       1
0x5C6C	0x2504      	ADDWF       _ms500, 0, 1
0x5C6E	0x6E00      	MOVWF       R0 
0x5C70	0x0E00      	MOVLW       0
0x5C72	0x2105      	ADDWFC      _ms500+1, 0, 1
0x5C74	0x6E01      	MOVWF       R1 
0x5C76	0x0E00      	MOVLW       0
0x5C78	0x2106      	ADDWFC      _ms500+2, 0, 1
0x5C7A	0x6E02      	MOVWF       R2 
0x5C7C	0x0E00      	MOVLW       0
0x5C7E	0x2107      	ADDWFC      _ms500+3, 0, 1
0x5C80	0x6E03      	MOVWF       R3 
0x5C82	0xF243C000  	MOVFF       R0, _temp
0x5C86	0xF244C001  	MOVFF       R1, _temp+1
0x5C8A	0xF245C002  	MOVFF       R2, _temp+2
0x5C8E	0xF246C003  	MOVFF       R3, _temp+3
0x5C92	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x5C96	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x5C9A	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x5C9E	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x5CA2	0x0E09      	MOVLW       9
0x5CA4	0x0103      	MOVLB       3
0x5CA6	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x5CA8	0xF008ECB5  	CALL        _AddTask, 0
0x5CAC	0x0101      	MOVLB       1
0x5CAE	0x6B08      	CLRF        _PassFlag, 1
0x5CB0	0xF5F3C243  	MOVFF       _temp, FARG_LongWordToStrWithZeros_input
0x5CB4	0xF5F4C244  	MOVFF       _temp+1, FARG_LongWordToStrWithZeros_input+1
0x5CB8	0xF5F5C245  	MOVFF       _temp+2, FARG_LongWordToStrWithZeros_input+2
0x5CBC	0xF5F6C246  	MOVFF       _temp+3, FARG_LongWordToStrWithZeros_input+3
0x5CC0	0x0E36      	MOVLW       _t
0x5CC2	0x0105      	MOVLB       5
0x5CC4	0x6FF7      	MOVWF       FARG_LongWordToStrWithZeros_output, 1
0x5CC6	0x0E02      	MOVLW       hi_addr(_t)
0x5CC8	0x6FF8      	MOVWF       FARG_LongWordToStrWithZeros_output+1, 1
0x5CCA	0xF005EC33  	CALL        _LongWordToStrWithZeros, 0
0x5CCE	0x0E81      	MOVLW       ?ICS?lstr40_FirmV_0_7_0
0x5CD0	0x6EF6      	MOVWF       4086 
0x5CD2	0x0E8D      	MOVLW       hi_addr(?ICS?lstr40_FirmV_0_7_0)
0x5CD4	0x6EF7      	MOVWF       TBLPTRH 
0x5CD6	0x0E00      	MOVLW       higher_addr(?ICS?lstr40_FirmV_0_7_0)
0x5CD8	0x6EF8      	MOVWF       TBLPTRU 
0x5CDA	0x0ED5      	MOVLW       ?lstr40_FirmV_0_7_0
0x5CDC	0x6EE1      	MOVWF       FSR1L 
0x5CDE	0x0E02      	MOVLW       hi_addr(?lstr40_FirmV_0_7_0)
0x5CE0	0x6EE2      	MOVWF       FSR1H 
0x5CE2	0x0E10      	MOVLW       16
0x5CE4	0x6E00      	MOVWF       R0 
0x5CE6	0x0E01      	MOVLW       1
0x5CE8	0x6E01      	MOVWF       R1 
0x5CEA	0xF005EC2B  	CALL        ___CC2DW, 0
0x5CEE	0x0ED5      	MOVLW       ?lstr40_FirmV_0_7_0
0x5CF0	0x0103      	MOVLB       3
0x5CF2	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x5CF4	0x0E02      	MOVLW       hi_addr(?lstr40_FirmV_0_7_0)
0x5CF6	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x5CF8	0x0E01      	MOVLW       1
0x5CFA	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x5CFC	0xF009EC69  	CALL        _Logger, 0
0x5D00	0x0E36      	MOVLW       _t
0x5D02	0x0103      	MOVLB       3
0x5D04	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x5D06	0x0E02      	MOVLW       hi_addr(_t)
0x5D08	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x5D0A	0x0E01      	MOVLW       1
0x5D0C	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x5D0E	0xF009EC69  	CALL        _Logger, 0
;FirmV_0_7_0.c,977 :: 		{temp=ms500+CloseAfterPass;AddTask(temp,9);PassFlag=0;longwordtostrwithzeros(temp,t);Logger("S5 Insert 9 at:",1);Logger(t,1);}
L_State5211:
;FirmV_0_7_0.c,978 :: 		}
L_State5209:
;FirmV_0_7_0.c,980 :: 		}
0x5D12	0x0012      	RETURN      0
; end of _State5
_State1:
;FirmV_0_7_0.c,548 :: 		void State1()
;FirmV_0_7_0.c,550 :: 		char delay=3;
0x5D14	0x0E03      	MOVLW       3
0x5D16	0x0102      	MOVLB       2
0x5D18	0x6FBF      	MOVWF       State1_delay_L0, 1
;FirmV_0_7_0.c,551 :: 		unsigned long AutoCloseTemp=0;
0x5D1A	0x6BC0      	CLRF        State1_AutoCloseTemp_L0, 1
0x5D1C	0x6BC1      	CLRF        State1_AutoCloseTemp_L0+1, 1
0x5D1E	0x6BC2      	CLRF        State1_AutoCloseTemp_L0+2, 1
0x5D20	0x6BC3      	CLRF        State1_AutoCloseTemp_L0+3, 1
;FirmV_0_7_0.c,552 :: 		Flasher=0;
0x5D22	0x9E83      	BCF         PORTD, 7 
;FirmV_0_7_0.c,553 :: 		FlashFlag=0;
0x5D24	0x0100      	MOVLB       0
0x5D26	0x6BBC      	CLRF        _FlashFlag, 1
;FirmV_0_7_0.c,555 :: 		if(Events.Keys==2)
0x5D28	0x0102      	MOVLB       2
0x5D2A	0x519A      	MOVF        _Events, 0, 1
0x5D2C	0x0A02      	XORLW       2
0x5D2E	0xE104      	BNZ         L_State183
;FirmV_0_7_0.c,556 :: 		{State=100;MenuPointer=0;}
0x5D30	0x0E64      	MOVLW       100
0x5D32	0x0101      	MOVLB       1
0x5D34	0x6F44      	MOVWF       _State, 1
0x5D36	0x6A1E      	CLRF        _MenuPointer 
L_State183:
;FirmV_0_7_0.c,558 :: 		ActiveDoors=3-Events.Remote;
0x5D38	0x0102      	MOVLB       2
0x5D3A	0x519E      	MOVF        _Events+4, 0, 1
0x5D3C	0x0803      	SUBLW       3
0x5D3E	0x0101      	MOVLB       1
0x5D40	0x6F32      	MOVWF       _ActiveDoors, 1
;FirmV_0_7_0.c,562 :: 		if(Events.Remote!=0)
0x5D42	0x0102      	MOVLB       2
0x5D44	0x519E      	MOVF        _Events+4, 0, 1
0x5D46	0x0A00      	XORLW       0
0x5D48	0xB4D8      	BTFSC       STATUS, 2 
0x5D4A	0xD2F1      	BRA         L_State184
;FirmV_0_7_0.c,565 :: 		ClearTasks(9);
0x5D4C	0x0E09      	MOVLW       9
0x5D4E	0x0103      	MOVLB       3
0x5D50	0x6FD9      	MOVWF       FARG_ClearTasks_except, 1
0x5D52	0xF00AEC5C  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,566 :: 		Flasher=1;
0x5D56	0x8E83      	BSF         PORTD, 7 
;FirmV_0_7_0.c,567 :: 		FlashFlag=1;
0x5D58	0x0E01      	MOVLW       1
0x5D5A	0x0100      	MOVLB       0
0x5D5C	0x6FBC      	MOVWF       _FlashFlag, 1
;FirmV_0_7_0.c,568 :: 		if(Lockenable)
0x5D5E	0x0102      	MOVLB       2
0x5D60	0x53A3      	MOVF        _LockEnable, 1, 1
0x5D62	0xE018      	BZ          L_State185
;FirmV_0_7_0.c,569 :: 		AddTask(ms500+1,12);
0x5D64	0x0E01      	MOVLW       1
0x5D66	0x0101      	MOVLB       1
0x5D68	0x2504      	ADDWF       _ms500, 0, 1
0x5D6A	0x0103      	MOVLB       3
0x5D6C	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x5D6E	0x0E00      	MOVLW       0
0x5D70	0x0101      	MOVLB       1
0x5D72	0x2105      	ADDWFC      _ms500+1, 0, 1
0x5D74	0x0103      	MOVLB       3
0x5D76	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x5D78	0x0E00      	MOVLW       0
0x5D7A	0x0101      	MOVLB       1
0x5D7C	0x2106      	ADDWFC      _ms500+2, 0, 1
0x5D7E	0x0103      	MOVLB       3
0x5D80	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x5D82	0x0E00      	MOVLW       0
0x5D84	0x0101      	MOVLB       1
0x5D86	0x2107      	ADDWFC      _ms500+3, 0, 1
0x5D88	0x0103      	MOVLB       3
0x5D8A	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x5D8C	0x0E0C      	MOVLW       12
0x5D8E	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x5D90	0xF008ECB5  	CALL        _AddTask, 0
L_State185:
;FirmV_0_7_0.c,570 :: 		temp=ms500+delay;
0x5D94	0x0102      	MOVLB       2
0x5D96	0x51BF      	MOVF        State1_delay_L0, 0, 1
0x5D98	0x0101      	MOVLB       1
0x5D9A	0x2504      	ADDWF       _ms500, 0, 1
0x5D9C	0x6E00      	MOVWF       R0 
0x5D9E	0x0E00      	MOVLW       0
0x5DA0	0x2105      	ADDWFC      _ms500+1, 0, 1
0x5DA2	0x6E01      	MOVWF       R1 
0x5DA4	0x0E00      	MOVLW       0
0x5DA6	0x2106      	ADDWFC      _ms500+2, 0, 1
0x5DA8	0x6E02      	MOVWF       R2 
0x5DAA	0x0E00      	MOVLW       0
0x5DAC	0x2107      	ADDWFC      _ms500+3, 0, 1
0x5DAE	0x6E03      	MOVWF       R3 
0x5DB0	0xF243C000  	MOVFF       R0, _temp
0x5DB4	0xF244C001  	MOVFF       R1, _temp+1
0x5DB8	0xF245C002  	MOVFF       R2, _temp+2
0x5DBC	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,571 :: 		AddTask(temp,1);
0x5DC0	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x5DC4	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x5DC8	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x5DCC	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x5DD0	0x0E01      	MOVLW       1
0x5DD2	0x0103      	MOVLB       3
0x5DD4	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x5DD6	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,572 :: 		if(OpenSoftStartTime!=0)
0x5DDA	0x0101      	MOVLB       1
0x5DDC	0x51A4      	MOVF        _OpenSoftStartTime, 0, 1
0x5DDE	0x0A00      	XORLW       0
0x5DE0	0xE011      	BZ          L_State186
;FirmV_0_7_0.c,573 :: 		{AddTask(temp,7); M1isSlow=1;}//speed down
0x5DE2	0xF3D9C243  	MOVFF       _temp, FARG_AddTask_OccTime
0x5DE6	0xF3DAC244  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x5DEA	0xF3DBC245  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x5DEE	0xF3DCC246  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x5DF2	0x0E07      	MOVLW       7
0x5DF4	0x0103      	MOVLB       3
0x5DF6	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x5DF8	0xF008ECB5  	CALL        _AddTask, 0
0x5DFC	0x0E01      	MOVLW       1
0x5DFE	0x0100      	MOVLB       0
0x5E00	0x6FBA      	MOVWF       _M1isSlow, 1
0x5E02	0xD00F      	BRA         L_State187
L_State186:
;FirmV_0_7_0.c,575 :: 		{AddTask(temp,5); M1isSlow=0;}//speed up
0x5E04	0xF3D9C243  	MOVFF       _temp, FARG_AddTask_OccTime
0x5E08	0xF3DAC244  	MOVFF       _temp+1, FARG_AddTask_OccTime+1
0x5E0C	0xF3DBC245  	MOVFF       _temp+2, FARG_AddTask_OccTime+2
0x5E10	0xF3DCC246  	MOVFF       _temp+3, FARG_AddTask_OccTime+3
0x5E14	0x0E05      	MOVLW       5
0x5E16	0x0103      	MOVLB       3
0x5E18	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x5E1A	0xF008ECB5  	CALL        _AddTask, 0
0x5E1E	0x0100      	MOVLB       0
0x5E20	0x6BBA      	CLRF        _M1isSlow, 1
L_State187:
;FirmV_0_7_0.c,576 :: 		temp=ms500+OpenSoftStartTime+OverloadDelay+delay;
0x5E22	0x0101      	MOVLB       1
0x5E24	0x51A4      	MOVF        _OpenSoftStartTime, 0, 1
0x5E26	0x2504      	ADDWF       _ms500, 0, 1
0x5E28	0x6E00      	MOVWF       R0 
0x5E2A	0x0E00      	MOVLW       0
0x5E2C	0x2105      	ADDWFC      _ms500+1, 0, 1
0x5E2E	0x6E01      	MOVWF       R1 
0x5E30	0x0E00      	MOVLW       0
0x5E32	0x2106      	ADDWFC      _ms500+2, 0, 1
0x5E34	0x6E02      	MOVWF       R2 
0x5E36	0x0E00      	MOVLW       0
0x5E38	0x2107      	ADDWFC      _ms500+3, 0, 1
0x5E3A	0x6E03      	MOVWF       R3 
0x5E3C	0x0E06      	MOVLW       6
0x5E3E	0x2600      	ADDWF       R0, 1 
0x5E40	0x0E00      	MOVLW       0
0x5E42	0x2201      	ADDWFC      R1, 1 
0x5E44	0x2202      	ADDWFC      R2, 1 
0x5E46	0x2203      	ADDWFC      R3, 1 
0x5E48	0x0102      	MOVLB       2
0x5E4A	0x51BF      	MOVF        State1_delay_L0, 0, 1
0x5E4C	0x2600      	ADDWF       R0, 1 
0x5E4E	0x0E00      	MOVLW       0
0x5E50	0x2201      	ADDWFC      R1, 1 
0x5E52	0x2202      	ADDWFC      R2, 1 
0x5E54	0x2203      	ADDWFC      R3, 1 
0x5E56	0xF243C000  	MOVFF       R0, _temp
0x5E5A	0xF244C001  	MOVFF       R1, _temp+1
0x5E5E	0xF245C002  	MOVFF       R2, _temp+2
0x5E62	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,577 :: 		AddTask(temp,10); //overload check
0x5E66	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x5E6A	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x5E6E	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x5E72	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x5E76	0x0E0A      	MOVLW       10
0x5E78	0x0103      	MOVLB       3
0x5E7A	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x5E7C	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,578 :: 		temp=ms500+OpenSoftStartTime+delay;
0x5E80	0x0101      	MOVLB       1
0x5E82	0x51A4      	MOVF        _OpenSoftStartTime, 0, 1
0x5E84	0x2504      	ADDWF       _ms500, 0, 1
0x5E86	0x6E00      	MOVWF       R0 
0x5E88	0x0E00      	MOVLW       0
0x5E8A	0x2105      	ADDWFC      _ms500+1, 0, 1
0x5E8C	0x6E01      	MOVWF       R1 
0x5E8E	0x0E00      	MOVLW       0
0x5E90	0x2106      	ADDWFC      _ms500+2, 0, 1
0x5E92	0x6E02      	MOVWF       R2 
0x5E94	0x0E00      	MOVLW       0
0x5E96	0x2107      	ADDWFC      _ms500+3, 0, 1
0x5E98	0x6E03      	MOVWF       R3 
0x5E9A	0x0102      	MOVLB       2
0x5E9C	0x51BF      	MOVF        State1_delay_L0, 0, 1
0x5E9E	0x2600      	ADDWF       R0, 1 
0x5EA0	0x0E00      	MOVLW       0
0x5EA2	0x2201      	ADDWFC      R1, 1 
0x5EA4	0x2202      	ADDWFC      R2, 1 
0x5EA6	0x2203      	ADDWFC      R3, 1 
0x5EA8	0xF243C000  	MOVFF       R0, _temp
0x5EAC	0xF244C001  	MOVFF       R1, _temp+1
0x5EB0	0xF245C002  	MOVFF       R2, _temp+2
0x5EB4	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,579 :: 		AddTask(temp,5);//Speed up after soft start
0x5EB8	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x5EBC	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x5EC0	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x5EC4	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x5EC8	0x0E05      	MOVLW       5
0x5ECA	0x0103      	MOVLB       3
0x5ECC	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x5ECE	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,580 :: 		if(OpenSoftStopTime!=0)
0x5ED2	0x0101      	MOVLB       1
0x5ED4	0x51A5      	MOVF        _OpenSoftStopTime, 0, 1
0x5ED6	0x0A00      	XORLW       0
0x5ED8	0xE030      	BZ          L_State188
;FirmV_0_7_0.c,581 :: 		{temp=ms500+Door1OpenTime-OpenSoftStopTime+delay;AddTask(temp,7);}//Speed down for soft stop
0x5EDA	0x0102      	MOVLB       2
0x5EDC	0x5134      	MOVF        _Door1OpenTime, 0, 1
0x5EDE	0x0101      	MOVLB       1
0x5EE0	0x2504      	ADDWF       _ms500, 0, 1
0x5EE2	0x6E00      	MOVWF       R0 
0x5EE4	0x0E00      	MOVLW       0
0x5EE6	0x2105      	ADDWFC      _ms500+1, 0, 1
0x5EE8	0x6E01      	MOVWF       R1 
0x5EEA	0x0E00      	MOVLW       0
0x5EEC	0x2106      	ADDWFC      _ms500+2, 0, 1
0x5EEE	0x6E02      	MOVWF       R2 
0x5EF0	0x0E00      	MOVLW       0
0x5EF2	0x2107      	ADDWFC      _ms500+3, 0, 1
0x5EF4	0x6E03      	MOVWF       R3 
0x5EF6	0x51A5      	MOVF        _OpenSoftStopTime, 0, 1
0x5EF8	0x5E00      	SUBWF       R0, 1 
0x5EFA	0x0E00      	MOVLW       0
0x5EFC	0x5A01      	SUBWFB      R1, 1 
0x5EFE	0x5A02      	SUBWFB      R2, 1 
0x5F00	0x5A03      	SUBWFB      R3, 1 
0x5F02	0x0102      	MOVLB       2
0x5F04	0x51BF      	MOVF        State1_delay_L0, 0, 1
0x5F06	0x2600      	ADDWF       R0, 1 
0x5F08	0x0E00      	MOVLW       0
0x5F0A	0x2201      	ADDWFC      R1, 1 
0x5F0C	0x2202      	ADDWFC      R2, 1 
0x5F0E	0x2203      	ADDWFC      R3, 1 
0x5F10	0xF243C000  	MOVFF       R0, _temp
0x5F14	0xF244C001  	MOVFF       R1, _temp+1
0x5F18	0xF245C002  	MOVFF       R2, _temp+2
0x5F1C	0xF246C003  	MOVFF       R3, _temp+3
0x5F20	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x5F24	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x5F28	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x5F2C	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x5F30	0x0E07      	MOVLW       7
0x5F32	0x0103      	MOVLB       3
0x5F34	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x5F36	0xF008ECB5  	CALL        _AddTask, 0
L_State188:
;FirmV_0_7_0.c,582 :: 		temp=ms500+Door1OpenTime+delay;
0x5F3A	0x0102      	MOVLB       2
0x5F3C	0x5134      	MOVF        _Door1OpenTime, 0, 1
0x5F3E	0x0101      	MOVLB       1
0x5F40	0x2504      	ADDWF       _ms500, 0, 1
0x5F42	0x6E00      	MOVWF       R0 
0x5F44	0x0E00      	MOVLW       0
0x5F46	0x2105      	ADDWFC      _ms500+1, 0, 1
0x5F48	0x6E01      	MOVWF       R1 
0x5F4A	0x0E00      	MOVLW       0
0x5F4C	0x2106      	ADDWFC      _ms500+2, 0, 1
0x5F4E	0x6E02      	MOVWF       R2 
0x5F50	0x0E00      	MOVLW       0
0x5F52	0x2107      	ADDWFC      _ms500+3, 0, 1
0x5F54	0x6E03      	MOVWF       R3 
0x5F56	0x0102      	MOVLB       2
0x5F58	0x51BF      	MOVF        State1_delay_L0, 0, 1
0x5F5A	0x2600      	ADDWF       R0, 1 
0x5F5C	0x0E00      	MOVLW       0
0x5F5E	0x2201      	ADDWFC      R1, 1 
0x5F60	0x2202      	ADDWFC      R2, 1 
0x5F62	0x2203      	ADDWFC      R3, 1 
0x5F64	0xF243C000  	MOVFF       R0, _temp
0x5F68	0xF244C001  	MOVFF       R1, _temp+1
0x5F6C	0xF245C002  	MOVFF       R2, _temp+2
0x5F70	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,583 :: 		AddTask(temp,3);//Stop motor
0x5F74	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x5F78	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x5F7C	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x5F80	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x5F84	0x0E03      	MOVLW       3
0x5F86	0x0103      	MOVLB       3
0x5F88	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x5F8A	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,584 :: 		AutoCloseTemp=ms500+Door1OpenTime+delay;
0x5F8E	0x0102      	MOVLB       2
0x5F90	0x5134      	MOVF        _Door1OpenTime, 0, 1
0x5F92	0x0101      	MOVLB       1
0x5F94	0x2504      	ADDWF       _ms500, 0, 1
0x5F96	0x0102      	MOVLB       2
0x5F98	0x6FC0      	MOVWF       State1_AutoCloseTemp_L0, 1
0x5F9A	0x0E00      	MOVLW       0
0x5F9C	0x0101      	MOVLB       1
0x5F9E	0x2105      	ADDWFC      _ms500+1, 0, 1
0x5FA0	0x0102      	MOVLB       2
0x5FA2	0x6FC1      	MOVWF       State1_AutoCloseTemp_L0+1, 1
0x5FA4	0x0E00      	MOVLW       0
0x5FA6	0x0101      	MOVLB       1
0x5FA8	0x2106      	ADDWFC      _ms500+2, 0, 1
0x5FAA	0x0102      	MOVLB       2
0x5FAC	0x6FC2      	MOVWF       State1_AutoCloseTemp_L0+2, 1
0x5FAE	0x0E00      	MOVLW       0
0x5FB0	0x0101      	MOVLB       1
0x5FB2	0x2107      	ADDWFC      _ms500+3, 0, 1
0x5FB4	0x0102      	MOVLB       2
0x5FB6	0x6FC3      	MOVWF       State1_AutoCloseTemp_L0+3, 1
0x5FB8	0x51BF      	MOVF        State1_delay_L0, 0, 1
0x5FBA	0x27C0      	ADDWF       State1_AutoCloseTemp_L0, 1, 1
0x5FBC	0x0E00      	MOVLW       0
0x5FBE	0x23C1      	ADDWFC      State1_AutoCloseTemp_L0+1, 1, 1
0x5FC0	0x23C2      	ADDWFC      State1_AutoCloseTemp_L0+2, 1, 1
0x5FC2	0x23C3      	ADDWFC      State1_AutoCloseTemp_L0+3, 1, 1
;FirmV_0_7_0.c,586 :: 		if((Door2OpenTime!=0)&&(ActiveDoors==2))
0x5FC4	0x5198      	MOVF        _Door2OpenTime, 0, 1
0x5FC6	0x0A00      	XORLW       0
0x5FC8	0xB4D8      	BTFSC       STATUS, 2 
0x5FCA	0xD180      	BRA         L_State191
0x5FCC	0x0101      	MOVLB       1
0x5FCE	0x5132      	MOVF        _ActiveDoors, 0, 1
0x5FD0	0x0A02      	XORLW       2
0x5FD2	0xA4D8      	BTFSS       STATUS, 2 
0x5FD4	0xD17B      	BRA         L_State191
L__State1815:
;FirmV_0_7_0.c,588 :: 		temp=ms500+ActionTimeDiff+delay;
0x5FD6	0x0102      	MOVLB       2
0x5FD8	0x5147      	MOVF        _ActionTimeDiff, 0, 1
0x5FDA	0x0101      	MOVLB       1
0x5FDC	0x2504      	ADDWF       _ms500, 0, 1
0x5FDE	0x6E00      	MOVWF       R0 
0x5FE0	0x0E00      	MOVLW       0
0x5FE2	0x2105      	ADDWFC      _ms500+1, 0, 1
0x5FE4	0x6E01      	MOVWF       R1 
0x5FE6	0x0E00      	MOVLW       0
0x5FE8	0x2106      	ADDWFC      _ms500+2, 0, 1
0x5FEA	0x6E02      	MOVWF       R2 
0x5FEC	0x0E00      	MOVLW       0
0x5FEE	0x2107      	ADDWFC      _ms500+3, 0, 1
0x5FF0	0x6E03      	MOVWF       R3 
0x5FF2	0x0102      	MOVLB       2
0x5FF4	0x51BF      	MOVF        State1_delay_L0, 0, 1
0x5FF6	0x2600      	ADDWF       R0, 1 
0x5FF8	0x0E00      	MOVLW       0
0x5FFA	0x2201      	ADDWFC      R1, 1 
0x5FFC	0x2202      	ADDWFC      R2, 1 
0x5FFE	0x2203      	ADDWFC      R3, 1 
0x6000	0xF243C000  	MOVFF       R0, _temp
0x6004	0xF244C001  	MOVFF       R1, _temp+1
0x6008	0xF245C002  	MOVFF       R2, _temp+2
0x600C	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,589 :: 		AddTask(temp,2);
0x6010	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x6014	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x6018	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x601C	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x6020	0x0E02      	MOVLW       2
0x6022	0x0103      	MOVLB       3
0x6024	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x6026	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,590 :: 		if(OpenSoftStartTime!=0)
0x602A	0x0101      	MOVLB       1
0x602C	0x51A4      	MOVF        _OpenSoftStartTime, 0, 1
0x602E	0x0A00      	XORLW       0
0x6030	0xE02E      	BZ          L_State192
;FirmV_0_7_0.c,591 :: 		{temp=ms500+ActionTimeDiff+delay;AddTask(temp,8); M2isSlow=1;}//speed down
0x6032	0x0102      	MOVLB       2
0x6034	0x5147      	MOVF        _ActionTimeDiff, 0, 1
0x6036	0x0101      	MOVLB       1
0x6038	0x2504      	ADDWF       _ms500, 0, 1
0x603A	0x6E00      	MOVWF       R0 
0x603C	0x0E00      	MOVLW       0
0x603E	0x2105      	ADDWFC      _ms500+1, 0, 1
0x6040	0x6E01      	MOVWF       R1 
0x6042	0x0E00      	MOVLW       0
0x6044	0x2106      	ADDWFC      _ms500+2, 0, 1
0x6046	0x6E02      	MOVWF       R2 
0x6048	0x0E00      	MOVLW       0
0x604A	0x2107      	ADDWFC      _ms500+3, 0, 1
0x604C	0x6E03      	MOVWF       R3 
0x604E	0x0102      	MOVLB       2
0x6050	0x51BF      	MOVF        State1_delay_L0, 0, 1
0x6052	0x2600      	ADDWF       R0, 1 
0x6054	0x0E00      	MOVLW       0
0x6056	0x2201      	ADDWFC      R1, 1 
0x6058	0x2202      	ADDWFC      R2, 1 
0x605A	0x2203      	ADDWFC      R3, 1 
0x605C	0xF243C000  	MOVFF       R0, _temp
0x6060	0xF244C001  	MOVFF       R1, _temp+1
0x6064	0xF245C002  	MOVFF       R2, _temp+2
0x6068	0xF246C003  	MOVFF       R3, _temp+3
0x606C	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x6070	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x6074	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x6078	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x607C	0x0E08      	MOVLW       8
0x607E	0x0103      	MOVLB       3
0x6080	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x6082	0xF008ECB5  	CALL        _AddTask, 0
0x6086	0x0E01      	MOVLW       1
0x6088	0x0100      	MOVLB       0
0x608A	0x6FB7      	MOVWF       _M2isSlow, 1
0x608C	0xD02C      	BRA         L_State193
L_State192:
;FirmV_0_7_0.c,593 :: 		{temp=ms500+ActionTimeDiff+delay;AddTask(temp,6); M2isSlow=0;}//speed up
0x608E	0x0102      	MOVLB       2
0x6090	0x5147      	MOVF        _ActionTimeDiff, 0, 1
0x6092	0x0101      	MOVLB       1
0x6094	0x2504      	ADDWF       _ms500, 0, 1
0x6096	0x6E00      	MOVWF       R0 
0x6098	0x0E00      	MOVLW       0
0x609A	0x2105      	ADDWFC      _ms500+1, 0, 1
0x609C	0x6E01      	MOVWF       R1 
0x609E	0x0E00      	MOVLW       0
0x60A0	0x2106      	ADDWFC      _ms500+2, 0, 1
0x60A2	0x6E02      	MOVWF       R2 
0x60A4	0x0E00      	MOVLW       0
0x60A6	0x2107      	ADDWFC      _ms500+3, 0, 1
0x60A8	0x6E03      	MOVWF       R3 
0x60AA	0x0102      	MOVLB       2
0x60AC	0x51BF      	MOVF        State1_delay_L0, 0, 1
0x60AE	0x2600      	ADDWF       R0, 1 
0x60B0	0x0E00      	MOVLW       0
0x60B2	0x2201      	ADDWFC      R1, 1 
0x60B4	0x2202      	ADDWFC      R2, 1 
0x60B6	0x2203      	ADDWFC      R3, 1 
0x60B8	0xF243C000  	MOVFF       R0, _temp
0x60BC	0xF244C001  	MOVFF       R1, _temp+1
0x60C0	0xF245C002  	MOVFF       R2, _temp+2
0x60C4	0xF246C003  	MOVFF       R3, _temp+3
0x60C8	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x60CC	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x60D0	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x60D4	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x60D8	0x0E06      	MOVLW       6
0x60DA	0x0103      	MOVLB       3
0x60DC	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x60DE	0xF008ECB5  	CALL        _AddTask, 0
0x60E2	0x0100      	MOVLB       0
0x60E4	0x6BB7      	CLRF        _M2isSlow, 1
L_State193:
;FirmV_0_7_0.c,594 :: 		temp=ms500+ActionTimeDiff+OpenSoftStartTime+OverloadDelay+delay;
0x60E6	0x0102      	MOVLB       2
0x60E8	0x5147      	MOVF        _ActionTimeDiff, 0, 1
0x60EA	0x0101      	MOVLB       1
0x60EC	0x2504      	ADDWF       _ms500, 0, 1
0x60EE	0x6E00      	MOVWF       R0 
0x60F0	0x0E00      	MOVLW       0
0x60F2	0x2105      	ADDWFC      _ms500+1, 0, 1
0x60F4	0x6E01      	MOVWF       R1 
0x60F6	0x0E00      	MOVLW       0
0x60F8	0x2106      	ADDWFC      _ms500+2, 0, 1
0x60FA	0x6E02      	MOVWF       R2 
0x60FC	0x0E00      	MOVLW       0
0x60FE	0x2107      	ADDWFC      _ms500+3, 0, 1
0x6100	0x6E03      	MOVWF       R3 
0x6102	0x51A4      	MOVF        _OpenSoftStartTime, 0, 1
0x6104	0x2600      	ADDWF       R0, 1 
0x6106	0x0E00      	MOVLW       0
0x6108	0x2201      	ADDWFC      R1, 1 
0x610A	0x2202      	ADDWFC      R2, 1 
0x610C	0x2203      	ADDWFC      R3, 1 
0x610E	0x0E06      	MOVLW       6
0x6110	0x2600      	ADDWF       R0, 1 
0x6112	0x0E00      	MOVLW       0
0x6114	0x2201      	ADDWFC      R1, 1 
0x6116	0x2202      	ADDWFC      R2, 1 
0x6118	0x2203      	ADDWFC      R3, 1 
0x611A	0x0102      	MOVLB       2
0x611C	0x51BF      	MOVF        State1_delay_L0, 0, 1
0x611E	0x2600      	ADDWF       R0, 1 
0x6120	0x0E00      	MOVLW       0
0x6122	0x2201      	ADDWFC      R1, 1 
0x6124	0x2202      	ADDWFC      R2, 1 
0x6126	0x2203      	ADDWFC      R3, 1 
0x6128	0xF243C000  	MOVFF       R0, _temp
0x612C	0xF244C001  	MOVFF       R1, _temp+1
0x6130	0xF245C002  	MOVFF       R2, _temp+2
0x6134	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,595 :: 		AddTask(temp,11); //overload check
0x6138	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x613C	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x6140	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x6144	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x6148	0x0E0B      	MOVLW       11
0x614A	0x0103      	MOVLB       3
0x614C	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x614E	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,596 :: 		temp=ms500+ActionTimeDiff+OpenSoftStartTime+delay;
0x6152	0x0102      	MOVLB       2
0x6154	0x5147      	MOVF        _ActionTimeDiff, 0, 1
0x6156	0x0101      	MOVLB       1
0x6158	0x2504      	ADDWF       _ms500, 0, 1
0x615A	0x6E00      	MOVWF       R0 
0x615C	0x0E00      	MOVLW       0
0x615E	0x2105      	ADDWFC      _ms500+1, 0, 1
0x6160	0x6E01      	MOVWF       R1 
0x6162	0x0E00      	MOVLW       0
0x6164	0x2106      	ADDWFC      _ms500+2, 0, 1
0x6166	0x6E02      	MOVWF       R2 
0x6168	0x0E00      	MOVLW       0
0x616A	0x2107      	ADDWFC      _ms500+3, 0, 1
0x616C	0x6E03      	MOVWF       R3 
0x616E	0x51A4      	MOVF        _OpenSoftStartTime, 0, 1
0x6170	0x2600      	ADDWF       R0, 1 
0x6172	0x0E00      	MOVLW       0
0x6174	0x2201      	ADDWFC      R1, 1 
0x6176	0x2202      	ADDWFC      R2, 1 
0x6178	0x2203      	ADDWFC      R3, 1 
0x617A	0x0102      	MOVLB       2
0x617C	0x51BF      	MOVF        State1_delay_L0, 0, 1
0x617E	0x2600      	ADDWF       R0, 1 
0x6180	0x0E00      	MOVLW       0
0x6182	0x2201      	ADDWFC      R1, 1 
0x6184	0x2202      	ADDWFC      R2, 1 
0x6186	0x2203      	ADDWFC      R3, 1 
0x6188	0xF243C000  	MOVFF       R0, _temp
0x618C	0xF244C001  	MOVFF       R1, _temp+1
0x6190	0xF245C002  	MOVFF       R2, _temp+2
0x6194	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,597 :: 		AddTask(temp,6);//Speed up after soft start
0x6198	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x619C	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x61A0	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x61A4	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x61A8	0x0E06      	MOVLW       6
0x61AA	0x0103      	MOVLB       3
0x61AC	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x61AE	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,598 :: 		if(OpenSoftStopTime!=0)
0x61B2	0x0101      	MOVLB       1
0x61B4	0x51A5      	MOVF        _OpenSoftStopTime, 0, 1
0x61B6	0x0A00      	XORLW       0
0x61B8	0xE038      	BZ          L_State194
;FirmV_0_7_0.c,599 :: 		{temp=ms500+ActionTimeDiff+Door2OpenTime-OpenSoftStopTime+delay;AddTask(temp,8);}//Speed down for soft stop
0x61BA	0x0102      	MOVLB       2
0x61BC	0x5147      	MOVF        _ActionTimeDiff, 0, 1
0x61BE	0x0101      	MOVLB       1
0x61C0	0x2504      	ADDWF       _ms500, 0, 1
0x61C2	0x6E00      	MOVWF       R0 
0x61C4	0x0E00      	MOVLW       0
0x61C6	0x2105      	ADDWFC      _ms500+1, 0, 1
0x61C8	0x6E01      	MOVWF       R1 
0x61CA	0x0E00      	MOVLW       0
0x61CC	0x2106      	ADDWFC      _ms500+2, 0, 1
0x61CE	0x6E02      	MOVWF       R2 
0x61D0	0x0E00      	MOVLW       0
0x61D2	0x2107      	ADDWFC      _ms500+3, 0, 1
0x61D4	0x6E03      	MOVWF       R3 
0x61D6	0x0102      	MOVLB       2
0x61D8	0x5198      	MOVF        _Door2OpenTime, 0, 1
0x61DA	0x2600      	ADDWF       R0, 1 
0x61DC	0x0E00      	MOVLW       0
0x61DE	0x2201      	ADDWFC      R1, 1 
0x61E0	0x2202      	ADDWFC      R2, 1 
0x61E2	0x2203      	ADDWFC      R3, 1 
0x61E4	0x0101      	MOVLB       1
0x61E6	0x51A5      	MOVF        _OpenSoftStopTime, 0, 1
0x61E8	0x5E00      	SUBWF       R0, 1 
0x61EA	0x0E00      	MOVLW       0
0x61EC	0x5A01      	SUBWFB      R1, 1 
0x61EE	0x5A02      	SUBWFB      R2, 1 
0x61F0	0x5A03      	SUBWFB      R3, 1 
0x61F2	0x0102      	MOVLB       2
0x61F4	0x51BF      	MOVF        State1_delay_L0, 0, 1
0x61F6	0x2600      	ADDWF       R0, 1 
0x61F8	0x0E00      	MOVLW       0
0x61FA	0x2201      	ADDWFC      R1, 1 
0x61FC	0x2202      	ADDWFC      R2, 1 
0x61FE	0x2203      	ADDWFC      R3, 1 
0x6200	0xF243C000  	MOVFF       R0, _temp
0x6204	0xF244C001  	MOVFF       R1, _temp+1
0x6208	0xF245C002  	MOVFF       R2, _temp+2
0x620C	0xF246C003  	MOVFF       R3, _temp+3
0x6210	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x6214	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x6218	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x621C	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x6220	0x0E08      	MOVLW       8
0x6222	0x0103      	MOVLB       3
0x6224	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x6226	0xF008ECB5  	CALL        _AddTask, 0
L_State194:
;FirmV_0_7_0.c,600 :: 		temp=ms500+Door2OpenTime+ActionTimeDiff+delay;
0x622A	0x0102      	MOVLB       2
0x622C	0x5198      	MOVF        _Door2OpenTime, 0, 1
0x622E	0x0101      	MOVLB       1
0x6230	0x2504      	ADDWF       _ms500, 0, 1
0x6232	0x6E00      	MOVWF       R0 
0x6234	0x0E00      	MOVLW       0
0x6236	0x2105      	ADDWFC      _ms500+1, 0, 1
0x6238	0x6E01      	MOVWF       R1 
0x623A	0x0E00      	MOVLW       0
0x623C	0x2106      	ADDWFC      _ms500+2, 0, 1
0x623E	0x6E02      	MOVWF       R2 
0x6240	0x0E00      	MOVLW       0
0x6242	0x2107      	ADDWFC      _ms500+3, 0, 1
0x6244	0x6E03      	MOVWF       R3 
0x6246	0x0102      	MOVLB       2
0x6248	0x5147      	MOVF        _ActionTimeDiff, 0, 1
0x624A	0x2600      	ADDWF       R0, 1 
0x624C	0x0E00      	MOVLW       0
0x624E	0x2201      	ADDWFC      R1, 1 
0x6250	0x2202      	ADDWFC      R2, 1 
0x6252	0x2203      	ADDWFC      R3, 1 
0x6254	0x51BF      	MOVF        State1_delay_L0, 0, 1
0x6256	0x2600      	ADDWF       R0, 1 
0x6258	0x0E00      	MOVLW       0
0x625A	0x2201      	ADDWFC      R1, 1 
0x625C	0x2202      	ADDWFC      R2, 1 
0x625E	0x2203      	ADDWFC      R3, 1 
0x6260	0xF243C000  	MOVFF       R0, _temp
0x6264	0xF244C001  	MOVFF       R1, _temp+1
0x6268	0xF245C002  	MOVFF       R2, _temp+2
0x626C	0xF246C003  	MOVFF       R3, _temp+3
;FirmV_0_7_0.c,601 :: 		AddTask(temp,4);//Stop motor
0x6270	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x6274	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x6278	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x627C	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x6280	0x0E04      	MOVLW       4
0x6282	0x0103      	MOVLB       3
0x6284	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x6286	0xF008ECB5  	CALL        _AddTask, 0
;FirmV_0_7_0.c,602 :: 		AutoCloseTemp=ms500+Door2OpenTime+ActionTimeDiff+delay;
0x628A	0x0102      	MOVLB       2
0x628C	0x5198      	MOVF        _Door2OpenTime, 0, 1
0x628E	0x0101      	MOVLB       1
0x6290	0x2504      	ADDWF       _ms500, 0, 1
0x6292	0x0102      	MOVLB       2
0x6294	0x6FC0      	MOVWF       State1_AutoCloseTemp_L0, 1
0x6296	0x0E00      	MOVLW       0
0x6298	0x0101      	MOVLB       1
0x629A	0x2105      	ADDWFC      _ms500+1, 0, 1
0x629C	0x0102      	MOVLB       2
0x629E	0x6FC1      	MOVWF       State1_AutoCloseTemp_L0+1, 1
0x62A0	0x0E00      	MOVLW       0
0x62A2	0x0101      	MOVLB       1
0x62A4	0x2106      	ADDWFC      _ms500+2, 0, 1
0x62A6	0x0102      	MOVLB       2
0x62A8	0x6FC2      	MOVWF       State1_AutoCloseTemp_L0+2, 1
0x62AA	0x0E00      	MOVLW       0
0x62AC	0x0101      	MOVLB       1
0x62AE	0x2107      	ADDWFC      _ms500+3, 0, 1
0x62B0	0x0102      	MOVLB       2
0x62B2	0x6FC3      	MOVWF       State1_AutoCloseTemp_L0+3, 1
0x62B4	0x5147      	MOVF        _ActionTimeDiff, 0, 1
0x62B6	0x27C0      	ADDWF       State1_AutoCloseTemp_L0, 1, 1
0x62B8	0x0E00      	MOVLW       0
0x62BA	0x23C1      	ADDWFC      State1_AutoCloseTemp_L0+1, 1, 1
0x62BC	0x23C2      	ADDWFC      State1_AutoCloseTemp_L0+2, 1, 1
0x62BE	0x23C3      	ADDWFC      State1_AutoCloseTemp_L0+3, 1, 1
0x62C0	0x51BF      	MOVF        State1_delay_L0, 0, 1
0x62C2	0x27C0      	ADDWF       State1_AutoCloseTemp_L0, 1, 1
0x62C4	0x0E00      	MOVLW       0
0x62C6	0x23C1      	ADDWFC      State1_AutoCloseTemp_L0+1, 1, 1
0x62C8	0x23C2      	ADDWFC      State1_AutoCloseTemp_L0+2, 1, 1
0x62CA	0x23C3      	ADDWFC      State1_AutoCloseTemp_L0+3, 1, 1
;FirmV_0_7_0.c,603 :: 		}
L_State191:
0x62CC	0x0102      	MOVLB       2
;FirmV_0_7_0.c,605 :: 		if(AutoCloseTime!=0)
0x62CE	0x0E00      	MOVLW       0
0x62D0	0x1996      	XORWF       _AutoCloseTime+1, 0, 1
0x62D2	0xE102      	BNZ         L__State1928
0x62D4	0x0E00      	MOVLW       0
0x62D6	0x1995      	XORWF       _AutoCloseTime, 0, 1
L__State1928:
0x62D8	0xE021      	BZ          L_State195
;FirmV_0_7_0.c,606 :: 		{temp=AutoCloseTemp+AutoCloseTime;AddTask(temp,9);}
0x62DA	0x5195      	MOVF        _AutoCloseTime, 0, 1
0x62DC	0x25C0      	ADDWF       State1_AutoCloseTemp_L0, 0, 1
0x62DE	0x6E00      	MOVWF       R0 
0x62E0	0x5196      	MOVF        _AutoCloseTime+1, 0, 1
0x62E2	0x21C1      	ADDWFC      State1_AutoCloseTemp_L0+1, 0, 1
0x62E4	0x6E01      	MOVWF       R1 
0x62E6	0x0E00      	MOVLW       0
0x62E8	0x21C2      	ADDWFC      State1_AutoCloseTemp_L0+2, 0, 1
0x62EA	0x6E02      	MOVWF       R2 
0x62EC	0x0E00      	MOVLW       0
0x62EE	0x21C3      	ADDWFC      State1_AutoCloseTemp_L0+3, 0, 1
0x62F0	0x6E03      	MOVWF       R3 
0x62F2	0xF243C000  	MOVFF       R0, _temp
0x62F6	0xF244C001  	MOVFF       R1, _temp+1
0x62FA	0xF245C002  	MOVFF       R2, _temp+2
0x62FE	0xF246C003  	MOVFF       R3, _temp+3
0x6302	0xF3D9C000  	MOVFF       R0, FARG_AddTask_OccTime
0x6306	0xF3DAC001  	MOVFF       R1, FARG_AddTask_OccTime+1
0x630A	0xF3DBC002  	MOVFF       R2, FARG_AddTask_OccTime+2
0x630E	0xF3DCC003  	MOVFF       R3, FARG_AddTask_OccTime+3
0x6312	0x0E09      	MOVLW       9
0x6314	0x0103      	MOVLB       3
0x6316	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x6318	0xF008ECB5  	CALL        _AddTask, 0
L_State195:
;FirmV_0_7_0.c,608 :: 		OpenDone=3;
0x631C	0x0E03      	MOVLW       3
0x631E	0x0100      	MOVLB       0
0x6320	0x6FE1      	MOVWF       _OpenDone, 1
;FirmV_0_7_0.c,609 :: 		OverloadCheckFlag1=0;
0x6322	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
;FirmV_0_7_0.c,610 :: 		OverloadCheckFlag2=0;
0x6324	0x6BB6      	CLRF        _OverloadCheckFlag2, 1
;FirmV_0_7_0.c,611 :: 		State=3;
0x6326	0x0E03      	MOVLW       3
0x6328	0x0101      	MOVLB       1
0x632A	0x6F44      	MOVWF       _State, 1
;FirmV_0_7_0.c,612 :: 		PassFlag=0;
0x632C	0x6B08      	CLRF        _PassFlag, 1
;FirmV_0_7_0.c,613 :: 		}
L_State184:
;FirmV_0_7_0.c,614 :: 		}
0x632E	0x0012      	RETURN      0
; end of _State1
_GetPhotocellState:
;FirmV_0_7_0.c,1657 :: 		char GetPhotocellState()
;FirmV_0_7_0.c,1659 :: 		if(Phcell1==0)
0x6330	0xB683      	BTFSC       PORTD, 3 
0x6332	0xD005      	BRA         L_GetPhotocellState397
;FirmV_0_7_0.c,1660 :: 		{if(PhotocellCount<=20)PhotocellCount=PhotocellCount+1;}
0x6334	0x502A      	MOVF        _PhotocellCount, 0 
0x6336	0x0814      	SUBLW       20
0x6338	0xE301      	BNC         L_GetPhotocellState398
0x633A	0x2A2A      	INCF        _PhotocellCount, 1 
L_GetPhotocellState398:
0x633C	0xD001      	BRA         L_GetPhotocellState399
L_GetPhotocellState397:
;FirmV_0_7_0.c,1662 :: 		{PhotocellCount=0;}
0x633E	0x6A2A      	CLRF        _PhotocellCount 
L_GetPhotocellState399:
;FirmV_0_7_0.c,1663 :: 		if(PhotocellCount>=20)
0x6340	0x0E14      	MOVLW       20
0x6342	0x5C2A      	SUBWF       _PhotocellCount, 0 
0x6344	0xE303      	BNC         L_GetPhotocellState400
;FirmV_0_7_0.c,1664 :: 		return 1;
0x6346	0x0E01      	MOVLW       1
0x6348	0x6E00      	MOVWF       R0 
0x634A	0x0012      	RETURN      0
L_GetPhotocellState400:
;FirmV_0_7_0.c,1666 :: 		return 0;
0x634C	0x6A00      	CLRF        R0 
;FirmV_0_7_0.c,1667 :: 		}
0x634E	0x0012      	RETURN      0
; end of _GetPhotocellState
_LearnManual:
;FirmV_0_7_0.c,2549 :: 		void LearnManual()
;FirmV_0_7_0.c,2557 :: 		switch(LearnPhase)
0x6350	0xD29D      	BRA         L_LearnManual682
;FirmV_0_7_0.c,2559 :: 		case 0:
L_LearnManual684:
;FirmV_0_7_0.c,2560 :: 		Flasher=1;
0x6352	0x8E83      	BSF         PORTD, 7 
;FirmV_0_7_0.c,2562 :: 		if(Events.Remote.b0==1){LearnPhase=LearnPhase+1; DoorNo=2;BuzzFlag=1;}if(Events.Remote.b1==1){LearnPhase=3; DoorNo=1;BuzzFlag=1;}
0x6354	0x0102      	MOVLB       2
0x6356	0xA19E      	BTFSS       _Events+4, 0, 1
0x6358	0xD006      	BRA         L_LearnManual685
0x635A	0x2B97      	INCF        _LearnPhase, 1, 1
0x635C	0x0E02      	MOVLW       2
0x635E	0x6F93      	MOVWF       LearnManual_DoorNo_L0, 1
0x6360	0x0E01      	MOVLW       1
0x6362	0x0101      	MOVLB       1
0x6364	0x6F1C      	MOVWF       _BuzzFlag, 1
L_LearnManual685:
0x6366	0x0102      	MOVLB       2
0x6368	0xA39E      	BTFSS       _Events+4, 1, 1
0x636A	0xD007      	BRA         L_LearnManual686
0x636C	0x0E03      	MOVLW       3
0x636E	0x6F97      	MOVWF       _LearnPhase, 1
0x6370	0x0E01      	MOVLW       1
0x6372	0x6F93      	MOVWF       LearnManual_DoorNo_L0, 1
0x6374	0x0E01      	MOVLW       1
0x6376	0x0101      	MOVLB       1
0x6378	0x6F1C      	MOVWF       _BuzzFlag, 1
L_LearnManual686:
;FirmV_0_7_0.c,2563 :: 		break;
0x637A	0xD2E1      	BRA         L_LearnManual683
;FirmV_0_7_0.c,2565 :: 		case 1: //Start D2 and enable overload sensing after 1s
L_LearnManual687:
;FirmV_0_7_0.c,2566 :: 		StartMotor(2,_Close);AddTask(ms500+4,21);LearnPhase=LearnPhase+1;OverloadCheckFlag2=0;
0x637C	0x0E02      	MOVLW       2
0x637E	0x0103      	MOVLB       3
0x6380	0x6FD9      	MOVWF       FARG_StartMotor_Mx, 1
0x6382	0x6BDA      	CLRF        FARG_StartMotor_Dir, 1
0x6384	0xF011ECCA  	CALL        _StartMotor, 0
0x6388	0x0E04      	MOVLW       4
0x638A	0x0101      	MOVLB       1
0x638C	0x2504      	ADDWF       _ms500, 0, 1
0x638E	0x0103      	MOVLB       3
0x6390	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x6392	0x0E00      	MOVLW       0
0x6394	0x0101      	MOVLB       1
0x6396	0x2105      	ADDWFC      _ms500+1, 0, 1
0x6398	0x0103      	MOVLB       3
0x639A	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x639C	0x0E00      	MOVLW       0
0x639E	0x0101      	MOVLB       1
0x63A0	0x2106      	ADDWFC      _ms500+2, 0, 1
0x63A2	0x0103      	MOVLB       3
0x63A4	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x63A6	0x0E00      	MOVLW       0
0x63A8	0x0101      	MOVLB       1
0x63AA	0x2107      	ADDWFC      _ms500+3, 0, 1
0x63AC	0x0103      	MOVLB       3
0x63AE	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x63B0	0x0E15      	MOVLW       21
0x63B2	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x63B4	0xF008ECB5  	CALL        _AddTask, 0
0x63B8	0x0102      	MOVLB       2
0x63BA	0x2B97      	INCF        _LearnPhase, 1, 1
0x63BC	0x0100      	MOVLB       0
0x63BE	0x6BB6      	CLRF        _OverloadCheckFlag2, 1
;FirmV_0_7_0.c,2567 :: 		break;
0x63C0	0xD2BE      	BRA         L_LearnManual683
;FirmV_0_7_0.c,2569 :: 		case 2: //Check if D2 reaches end of its course
L_LearnManual688:
;FirmV_0_7_0.c,2570 :: 		if((Events.Overload.b1==1)&&(OverloadCheckFlag2==1)){OverloadCheckFlag2=0;StopMotor(2);LearnPhase=LearnPhase+1;}
0x63C2	0x0102      	MOVLB       2
0x63C4	0xA39F      	BTFSS       _Events+5, 1, 1
0x63C6	0xD00C      	BRA         L_LearnManual691
0x63C8	0x0100      	MOVLB       0
0x63CA	0x51B6      	MOVF        _OverloadCheckFlag2, 0, 1
0x63CC	0x0A01      	XORLW       1
0x63CE	0xE108      	BNZ         L_LearnManual691
L__LearnManual926:
0x63D0	0x6BB6      	CLRF        _OverloadCheckFlag2, 1
0x63D2	0x0E02      	MOVLW       2
0x63D4	0x0103      	MOVLB       3
0x63D6	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x63D8	0xF008ECA6  	CALL        _StopMotor, 0
0x63DC	0x0102      	MOVLB       2
0x63DE	0x2B97      	INCF        _LearnPhase, 1, 1
L_LearnManual691:
;FirmV_0_7_0.c,2571 :: 		if(CheckTask(21))OverloadCheckFlag2=1;
0x63E0	0x0E15      	MOVLW       21
0x63E2	0x0103      	MOVLB       3
0x63E4	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x63E6	0xF009EC28  	CALL        _CheckTask, 0
0x63EA	0x5200      	MOVF        R0, 1 
0x63EC	0xE003      	BZ          L_LearnManual692
0x63EE	0x0E01      	MOVLW       1
0x63F0	0x0100      	MOVLB       0
0x63F2	0x6FB6      	MOVWF       _OverloadCheckFlag2, 1
L_LearnManual692:
;FirmV_0_7_0.c,2572 :: 		break;
0x63F4	0xD2A4      	BRA         L_LearnManual683
;FirmV_0_7_0.c,2574 :: 		case 3: //Start D1 and enable overload sensin after 1 s
L_LearnManual693:
;FirmV_0_7_0.c,2575 :: 		StartMotor(1,_Close);AddTask(ms500+4,20);LearnPhase=LearnPhase+1;;OverloadCheckFlag1=0;
0x63F6	0x0E01      	MOVLW       1
0x63F8	0x0103      	MOVLB       3
0x63FA	0x6FD9      	MOVWF       FARG_StartMotor_Mx, 1
0x63FC	0x6BDA      	CLRF        FARG_StartMotor_Dir, 1
0x63FE	0xF011ECCA  	CALL        _StartMotor, 0
0x6402	0x0E04      	MOVLW       4
0x6404	0x0101      	MOVLB       1
0x6406	0x2504      	ADDWF       _ms500, 0, 1
0x6408	0x0103      	MOVLB       3
0x640A	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x640C	0x0E00      	MOVLW       0
0x640E	0x0101      	MOVLB       1
0x6410	0x2105      	ADDWFC      _ms500+1, 0, 1
0x6412	0x0103      	MOVLB       3
0x6414	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x6416	0x0E00      	MOVLW       0
0x6418	0x0101      	MOVLB       1
0x641A	0x2106      	ADDWFC      _ms500+2, 0, 1
0x641C	0x0103      	MOVLB       3
0x641E	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x6420	0x0E00      	MOVLW       0
0x6422	0x0101      	MOVLB       1
0x6424	0x2107      	ADDWFC      _ms500+3, 0, 1
0x6426	0x0103      	MOVLB       3
0x6428	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x642A	0x0E14      	MOVLW       20
0x642C	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x642E	0xF008ECB5  	CALL        _AddTask, 0
0x6432	0x0102      	MOVLB       2
0x6434	0x2B97      	INCF        _LearnPhase, 1, 1
0x6436	0x0100      	MOVLB       0
0x6438	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
;FirmV_0_7_0.c,2577 :: 		case 4: //Check if D1 reaches end of its course
L_LearnManual694:
;FirmV_0_7_0.c,2578 :: 		if((Events.Overload.b0==1)&&(OverloadCheckFlag1==1)){OverloadCheckFlag1=0;StopMotor(1);LearnPhase=LearnPhase+1;}
0x643A	0x0102      	MOVLB       2
0x643C	0xA19F      	BTFSS       _Events+5, 0, 1
0x643E	0xD00C      	BRA         L_LearnManual697
0x6440	0x0100      	MOVLB       0
0x6442	0x51B9      	MOVF        _OverloadCheckFlag1, 0, 1
0x6444	0x0A01      	XORLW       1
0x6446	0xE108      	BNZ         L_LearnManual697
L__LearnManual925:
0x6448	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
0x644A	0x0E01      	MOVLW       1
0x644C	0x0103      	MOVLB       3
0x644E	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x6450	0xF008ECA6  	CALL        _StopMotor, 0
0x6454	0x0102      	MOVLB       2
0x6456	0x2B97      	INCF        _LearnPhase, 1, 1
L_LearnManual697:
;FirmV_0_7_0.c,2579 :: 		if(CheckTask(20))OverloadCheckFlag1=1;
0x6458	0x0E14      	MOVLW       20
0x645A	0x0103      	MOVLB       3
0x645C	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x645E	0xF009EC28  	CALL        _CheckTask, 0
0x6462	0x5200      	MOVF        R0, 1 
0x6464	0xE003      	BZ          L_LearnManual698
0x6466	0x0E01      	MOVLW       1
0x6468	0x0100      	MOVLB       0
0x646A	0x6FB9      	MOVWF       _OverloadCheckFlag1, 1
L_LearnManual698:
;FirmV_0_7_0.c,2580 :: 		break;
0x646C	0xD268      	BRA         L_LearnManual683
;FirmV_0_7_0.c,2582 :: 		case 5: //Wait for remote to start D1 and slow down
L_LearnManual699:
;FirmV_0_7_0.c,2583 :: 		if(Events.Remote!=0){t1=ms500;StartMotor(1,_Open);SetMotorSpeed(0,Motor2FullSpeed);M1isSlow=1;LearnPhase=LearnPhase+1;}
0x646E	0x0102      	MOVLB       2
0x6470	0x519E      	MOVF        _Events+4, 0, 1
0x6472	0x0A00      	XORLW       0
0x6474	0xE01A      	BZ          L_LearnManual700
0x6476	0xF28BC104  	MOVFF       _ms500, LearnManual_t1_L0
0x647A	0xF28CC105  	MOVFF       _ms500+1, LearnManual_t1_L0+1
0x647E	0xF28DC106  	MOVFF       _ms500+2, LearnManual_t1_L0+2
0x6482	0xF28EC107  	MOVFF       _ms500+3, LearnManual_t1_L0+3
0x6486	0x0E01      	MOVLW       1
0x6488	0x0103      	MOVLB       3
0x648A	0x6FD9      	MOVWF       FARG_StartMotor_Mx, 1
0x648C	0x0E01      	MOVLW       1
0x648E	0x6FDA      	MOVWF       FARG_StartMotor_Dir, 1
0x6490	0xF011ECCA  	CALL        _StartMotor, 0
0x6494	0x0103      	MOVLB       3
0x6496	0x6BD9      	CLRF        FARG_SetMotorSpeed_M1FullSpeed, 1
0x6498	0xF3DAC0B8  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x649C	0xF011ECBA  	CALL        _SetMotorSpeed, 0
0x64A0	0x0E01      	MOVLW       1
0x64A2	0x0100      	MOVLB       0
0x64A4	0x6FBA      	MOVWF       _M1isSlow, 1
0x64A6	0x0102      	MOVLB       2
0x64A8	0x2B97      	INCF        _LearnPhase, 1, 1
L_LearnManual700:
;FirmV_0_7_0.c,2584 :: 		break;
0x64AA	0xD249      	BRA         L_LearnManual683
;FirmV_0_7_0.c,2586 :: 		case 6: //check for Remote press and fast up
L_LearnManual701:
;FirmV_0_7_0.c,2587 :: 		if(Events.Remote!=0){LearnPhase=LearnPhase+1;t2=ms500;SetMotorSpeed(1,Motor2FullSpeed);M1isSlow=0;}
0x64AC	0x519E      	MOVF        _Events+4, 0, 1
0x64AE	0x0A00      	XORLW       0
0x64B0	0xE012      	BZ          L_LearnManual702
0x64B2	0x2B97      	INCF        _LearnPhase, 1, 1
0x64B4	0xF287C104  	MOVFF       _ms500, LearnManual_t2_L0
0x64B8	0xF288C105  	MOVFF       _ms500+1, LearnManual_t2_L0+1
0x64BC	0xF289C106  	MOVFF       _ms500+2, LearnManual_t2_L0+2
0x64C0	0xF28AC107  	MOVFF       _ms500+3, LearnManual_t2_L0+3
0x64C4	0x0E01      	MOVLW       1
0x64C6	0x0103      	MOVLB       3
0x64C8	0x6FD9      	MOVWF       FARG_SetMotorSpeed_M1FullSpeed, 1
0x64CA	0xF3DAC0B8  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x64CE	0xF011ECBA  	CALL        _SetMotorSpeed, 0
0x64D2	0x0100      	MOVLB       0
0x64D4	0x6BBA      	CLRF        _M1isSlow, 1
L_LearnManual702:
;FirmV_0_7_0.c,2588 :: 		break;
0x64D6	0xD233      	BRA         L_LearnManual683
;FirmV_0_7_0.c,2590 :: 		case 7: //check for Remote press and slow down
L_LearnManual703:
;FirmV_0_7_0.c,2591 :: 		if(Events.Remote!=0){LearnPhase=LearnPhase+1;t3=ms500;SetMotorSpeed(0,Motor2FullSpeed);M1isSlow=1;}
0x64D8	0x0102      	MOVLB       2
0x64DA	0x519E      	MOVF        _Events+4, 0, 1
0x64DC	0x0A00      	XORLW       0
0x64DE	0xE012      	BZ          L_LearnManual704
0x64E0	0x2B97      	INCF        _LearnPhase, 1, 1
0x64E2	0xF283C104  	MOVFF       _ms500, LearnManual_t3_L0
0x64E6	0xF284C105  	MOVFF       _ms500+1, LearnManual_t3_L0+1
0x64EA	0xF285C106  	MOVFF       _ms500+2, LearnManual_t3_L0+2
0x64EE	0xF286C107  	MOVFF       _ms500+3, LearnManual_t3_L0+3
0x64F2	0x0103      	MOVLB       3
0x64F4	0x6BD9      	CLRF        FARG_SetMotorSpeed_M1FullSpeed, 1
0x64F6	0xF3DAC0B8  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x64FA	0xF011ECBA  	CALL        _SetMotorSpeed, 0
0x64FE	0x0E01      	MOVLW       1
0x6500	0x0100      	MOVLB       0
0x6502	0x6FBA      	MOVWF       _M1isSlow, 1
L_LearnManual704:
;FirmV_0_7_0.c,2592 :: 		break;
0x6504	0xD21C      	BRA         L_LearnManual683
;FirmV_0_7_0.c,2594 :: 		case 8: //check for Remote press and stop
L_LearnManual705:
;FirmV_0_7_0.c,2595 :: 		if(Events.Remote!=0){if(DoorNo==2)LearnPhase=LearnPhase+1;else LearnPhase=17;t4=ms500;StopMotor(1);
0x6506	0x0102      	MOVLB       2
0x6508	0x519E      	MOVF        _Events+4, 0, 1
0x650A	0x0A00      	XORLW       0
0x650C	0xE024      	BZ          L_LearnManual706
0x650E	0x5193      	MOVF        LearnManual_DoorNo_L0, 0, 1
0x6510	0x0A02      	XORLW       2
0x6512	0xE102      	BNZ         L_LearnManual707
0x6514	0x2B97      	INCF        _LearnPhase, 1, 1
0x6516	0xD002      	BRA         L_LearnManual708
L_LearnManual707:
0x6518	0x0E11      	MOVLW       17
0x651A	0x6F97      	MOVWF       _LearnPhase, 1
L_LearnManual708:
0x651C	0xF28FC104  	MOVFF       _ms500, LearnManual_t4_L0
0x6520	0xF290C105  	MOVFF       _ms500+1, LearnManual_t4_L0+1
0x6524	0xF291C106  	MOVFF       _ms500+2, LearnManual_t4_L0+2
0x6528	0xF292C107  	MOVFF       _ms500+3, LearnManual_t4_L0+3
0x652C	0x0E01      	MOVLW       1
0x652E	0x0103      	MOVLB       3
0x6530	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x6532	0xF008ECA6  	CALL        _StopMotor, 0
;FirmV_0_7_0.c,2596 :: 		RawData.D1OpenTime=(char)(t4-t1);
0x6536	0x0102      	MOVLB       2
0x6538	0x518B      	MOVF        LearnManual_t1_L0, 0, 1
0x653A	0x5D8F      	SUBWF       LearnManual_t4_L0, 0, 1
0x653C	0x6E00      	MOVWF       R0 
0x653E	0xF277C000  	MOVFF       R0, LearnManual_RawData_L0+1
;FirmV_0_7_0.c,2597 :: 		RawData.D1OpenSoftStart=(char)(t2-t1);
0x6542	0x518B      	MOVF        LearnManual_t1_L0, 0, 1
0x6544	0x5D87      	SUBWF       LearnManual_t2_L0, 0, 1
0x6546	0x6E00      	MOVWF       R0 
0x6548	0xF27AC000  	MOVFF       R0, LearnManual_RawData_L0+4
;FirmV_0_7_0.c,2598 :: 		RawData.D1OpenSoftStop=(char)(t4-t3);
0x654C	0x5183      	MOVF        LearnManual_t3_L0, 0, 1
0x654E	0x5D8F      	SUBWF       LearnManual_t4_L0, 0, 1
0x6550	0x6E00      	MOVWF       R0 
0x6552	0xF27BC000  	MOVFF       R0, LearnManual_RawData_L0+5
;FirmV_0_7_0.c,2599 :: 		}
L_LearnManual706:
;FirmV_0_7_0.c,2600 :: 		break;
0x6556	0xD1F3      	BRA         L_LearnManual683
;FirmV_0_7_0.c,2602 :: 		case 9: //Wait for remote to start D2 and slow down
L_LearnManual709:
;FirmV_0_7_0.c,2603 :: 		if(Events.Remote!=0){t1=ms500;StartMotor(2,_Open);SetMotorSpeed(Motor1FullSpeed,0);M2isSlow=1;LearnPhase=LearnPhase+1;}
0x6558	0x519E      	MOVF        _Events+4, 0, 1
0x655A	0x0A00      	XORLW       0
0x655C	0xE01A      	BZ          L_LearnManual710
0x655E	0xF28BC104  	MOVFF       _ms500, LearnManual_t1_L0
0x6562	0xF28CC105  	MOVFF       _ms500+1, LearnManual_t1_L0+1
0x6566	0xF28DC106  	MOVFF       _ms500+2, LearnManual_t1_L0+2
0x656A	0xF28EC107  	MOVFF       _ms500+3, LearnManual_t1_L0+3
0x656E	0x0E02      	MOVLW       2
0x6570	0x0103      	MOVLB       3
0x6572	0x6FD9      	MOVWF       FARG_StartMotor_Mx, 1
0x6574	0x0E01      	MOVLW       1
0x6576	0x6FDA      	MOVWF       FARG_StartMotor_Dir, 1
0x6578	0xF011ECCA  	CALL        _StartMotor, 0
0x657C	0xF3D9C0B5  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x6580	0x0103      	MOVLB       3
0x6582	0x6BDA      	CLRF        FARG_SetMotorSpeed_M2FullSpeed, 1
0x6584	0xF011ECBA  	CALL        _SetMotorSpeed, 0
0x6588	0x0E01      	MOVLW       1
0x658A	0x0100      	MOVLB       0
0x658C	0x6FB7      	MOVWF       _M2isSlow, 1
0x658E	0x0102      	MOVLB       2
0x6590	0x2B97      	INCF        _LearnPhase, 1, 1
L_LearnManual710:
;FirmV_0_7_0.c,2604 :: 		break;
0x6592	0xD1D5      	BRA         L_LearnManual683
;FirmV_0_7_0.c,2606 :: 		case 10: //check for Remote press and fast up
L_LearnManual711:
;FirmV_0_7_0.c,2607 :: 		if(Events.Remote!=0){LearnPhase=LearnPhase+1;t2=ms500;SetMotorSpeed(Motor1FullSpeed,1);M2isSlow=0;}
0x6594	0x519E      	MOVF        _Events+4, 0, 1
0x6596	0x0A00      	XORLW       0
0x6598	0xE012      	BZ          L_LearnManual712
0x659A	0x2B97      	INCF        _LearnPhase, 1, 1
0x659C	0xF287C104  	MOVFF       _ms500, LearnManual_t2_L0
0x65A0	0xF288C105  	MOVFF       _ms500+1, LearnManual_t2_L0+1
0x65A4	0xF289C106  	MOVFF       _ms500+2, LearnManual_t2_L0+2
0x65A8	0xF28AC107  	MOVFF       _ms500+3, LearnManual_t2_L0+3
0x65AC	0xF3D9C0B5  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x65B0	0x0E01      	MOVLW       1
0x65B2	0x0103      	MOVLB       3
0x65B4	0x6FDA      	MOVWF       FARG_SetMotorSpeed_M2FullSpeed, 1
0x65B6	0xF011ECBA  	CALL        _SetMotorSpeed, 0
0x65BA	0x0100      	MOVLB       0
0x65BC	0x6BB7      	CLRF        _M2isSlow, 1
L_LearnManual712:
;FirmV_0_7_0.c,2608 :: 		break;
0x65BE	0xD1BF      	BRA         L_LearnManual683
;FirmV_0_7_0.c,2610 :: 		case 11: //check for Remote press and slow down
L_LearnManual713:
;FirmV_0_7_0.c,2611 :: 		if(Events.Remote!=0){LearnPhase=LearnPhase+1;t3=ms500;SetMotorSpeed(Motor1FullSpeed,0);M2isSlow=1;}
0x65C0	0x0102      	MOVLB       2
0x65C2	0x519E      	MOVF        _Events+4, 0, 1
0x65C4	0x0A00      	XORLW       0
0x65C6	0xE012      	BZ          L_LearnManual714
0x65C8	0x2B97      	INCF        _LearnPhase, 1, 1
0x65CA	0xF283C104  	MOVFF       _ms500, LearnManual_t3_L0
0x65CE	0xF284C105  	MOVFF       _ms500+1, LearnManual_t3_L0+1
0x65D2	0xF285C106  	MOVFF       _ms500+2, LearnManual_t3_L0+2
0x65D6	0xF286C107  	MOVFF       _ms500+3, LearnManual_t3_L0+3
0x65DA	0xF3D9C0B5  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x65DE	0x0103      	MOVLB       3
0x65E0	0x6BDA      	CLRF        FARG_SetMotorSpeed_M2FullSpeed, 1
0x65E2	0xF011ECBA  	CALL        _SetMotorSpeed, 0
0x65E6	0x0E01      	MOVLW       1
0x65E8	0x0100      	MOVLB       0
0x65EA	0x6FB7      	MOVWF       _M2isSlow, 1
L_LearnManual714:
;FirmV_0_7_0.c,2612 :: 		break;
0x65EC	0xD1A8      	BRA         L_LearnManual683
;FirmV_0_7_0.c,2614 :: 		case 12: //check for Remote press and stop
L_LearnManual715:
;FirmV_0_7_0.c,2615 :: 		if(Events.Remote!=0){LearnPhase=LearnPhase+1;t4=ms500;StopMotor(2);
0x65EE	0x0102      	MOVLB       2
0x65F0	0x519E      	MOVF        _Events+4, 0, 1
0x65F2	0x0A00      	XORLW       0
0x65F4	0xE01E      	BZ          L_LearnManual716
0x65F6	0x2B97      	INCF        _LearnPhase, 1, 1
0x65F8	0xF28FC104  	MOVFF       _ms500, LearnManual_t4_L0
0x65FC	0xF290C105  	MOVFF       _ms500+1, LearnManual_t4_L0+1
0x6600	0xF291C106  	MOVFF       _ms500+2, LearnManual_t4_L0+2
0x6604	0xF292C107  	MOVFF       _ms500+3, LearnManual_t4_L0+3
0x6608	0x0E02      	MOVLW       2
0x660A	0x0103      	MOVLB       3
0x660C	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x660E	0xF008ECA6  	CALL        _StopMotor, 0
;FirmV_0_7_0.c,2616 :: 		RawData.D2OpenTime=(char)(t4-t1);
0x6612	0x0102      	MOVLB       2
0x6614	0x518B      	MOVF        LearnManual_t1_L0, 0, 1
0x6616	0x5D8F      	SUBWF       LearnManual_t4_L0, 0, 1
0x6618	0x6E00      	MOVWF       R0 
0x661A	0xF279C000  	MOVFF       R0, LearnManual_RawData_L0+3
;FirmV_0_7_0.c,2617 :: 		RawData.D2OpenSoftStart=(char)(t2-t1);
0x661E	0x518B      	MOVF        LearnManual_t1_L0, 0, 1
0x6620	0x5D87      	SUBWF       LearnManual_t2_L0, 0, 1
0x6622	0x6E00      	MOVWF       R0 
0x6624	0xF27EC000  	MOVFF       R0, LearnManual_RawData_L0+8
;FirmV_0_7_0.c,2618 :: 		RawData.D2OpenSoftStop=(char)(t4-t3);
0x6628	0x5183      	MOVF        LearnManual_t3_L0, 0, 1
0x662A	0x5D8F      	SUBWF       LearnManual_t4_L0, 0, 1
0x662C	0x6E00      	MOVWF       R0 
0x662E	0xF27FC000  	MOVFF       R0, LearnManual_RawData_L0+9
;FirmV_0_7_0.c,2619 :: 		}
L_LearnManual716:
;FirmV_0_7_0.c,2620 :: 		break;
0x6632	0xD185      	BRA         L_LearnManual683
;FirmV_0_7_0.c,2622 :: 		case 13: //Wait for remote to start D2 and slow down
L_LearnManual717:
;FirmV_0_7_0.c,2623 :: 		if(Events.Remote!=0){t1=ms500;StartMotor(2,_Close);SetMotorSpeed(Motor1FullSpeed,0);M2isSlow=1;LearnPhase=LearnPhase+1;}
0x6634	0x519E      	MOVF        _Events+4, 0, 1
0x6636	0x0A00      	XORLW       0
0x6638	0xE019      	BZ          L_LearnManual718
0x663A	0xF28BC104  	MOVFF       _ms500, LearnManual_t1_L0
0x663E	0xF28CC105  	MOVFF       _ms500+1, LearnManual_t1_L0+1
0x6642	0xF28DC106  	MOVFF       _ms500+2, LearnManual_t1_L0+2
0x6646	0xF28EC107  	MOVFF       _ms500+3, LearnManual_t1_L0+3
0x664A	0x0E02      	MOVLW       2
0x664C	0x0103      	MOVLB       3
0x664E	0x6FD9      	MOVWF       FARG_StartMotor_Mx, 1
0x6650	0x6BDA      	CLRF        FARG_StartMotor_Dir, 1
0x6652	0xF011ECCA  	CALL        _StartMotor, 0
0x6656	0xF3D9C0B5  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x665A	0x0103      	MOVLB       3
0x665C	0x6BDA      	CLRF        FARG_SetMotorSpeed_M2FullSpeed, 1
0x665E	0xF011ECBA  	CALL        _SetMotorSpeed, 0
0x6662	0x0E01      	MOVLW       1
0x6664	0x0100      	MOVLB       0
0x6666	0x6FB7      	MOVWF       _M2isSlow, 1
0x6668	0x0102      	MOVLB       2
0x666A	0x2B97      	INCF        _LearnPhase, 1, 1
L_LearnManual718:
;FirmV_0_7_0.c,2624 :: 		break;
0x666C	0xD168      	BRA         L_LearnManual683
;FirmV_0_7_0.c,2626 :: 		case 14: //check for Remote press and fast up
L_LearnManual719:
;FirmV_0_7_0.c,2627 :: 		if(Events.Remote!=0){LearnPhase=LearnPhase+1;t2=ms500;SetMotorSpeed(Motor1FullSpeed,1);M2isSlow=0;}
0x666E	0x519E      	MOVF        _Events+4, 0, 1
0x6670	0x0A00      	XORLW       0
0x6672	0xE012      	BZ          L_LearnManual720
0x6674	0x2B97      	INCF        _LearnPhase, 1, 1
0x6676	0xF287C104  	MOVFF       _ms500, LearnManual_t2_L0
0x667A	0xF288C105  	MOVFF       _ms500+1, LearnManual_t2_L0+1
0x667E	0xF289C106  	MOVFF       _ms500+2, LearnManual_t2_L0+2
0x6682	0xF28AC107  	MOVFF       _ms500+3, LearnManual_t2_L0+3
0x6686	0xF3D9C0B5  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x668A	0x0E01      	MOVLW       1
0x668C	0x0103      	MOVLB       3
0x668E	0x6FDA      	MOVWF       FARG_SetMotorSpeed_M2FullSpeed, 1
0x6690	0xF011ECBA  	CALL        _SetMotorSpeed, 0
0x6694	0x0100      	MOVLB       0
0x6696	0x6BB7      	CLRF        _M2isSlow, 1
L_LearnManual720:
;FirmV_0_7_0.c,2628 :: 		break;
0x6698	0xD152      	BRA         L_LearnManual683
;FirmV_0_7_0.c,2630 :: 		case 15: //check for Remote press and slow down
L_LearnManual721:
;FirmV_0_7_0.c,2631 :: 		if(Events.Remote!=0){LearnPhase=LearnPhase+1;t3=ms500;SetMotorSpeed(Motor1FullSpeed,0);M2isSlow=1;}
0x669A	0x0102      	MOVLB       2
0x669C	0x519E      	MOVF        _Events+4, 0, 1
0x669E	0x0A00      	XORLW       0
0x66A0	0xE012      	BZ          L_LearnManual722
0x66A2	0x2B97      	INCF        _LearnPhase, 1, 1
0x66A4	0xF283C104  	MOVFF       _ms500, LearnManual_t3_L0
0x66A8	0xF284C105  	MOVFF       _ms500+1, LearnManual_t3_L0+1
0x66AC	0xF285C106  	MOVFF       _ms500+2, LearnManual_t3_L0+2
0x66B0	0xF286C107  	MOVFF       _ms500+3, LearnManual_t3_L0+3
0x66B4	0xF3D9C0B5  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x66B8	0x0103      	MOVLB       3
0x66BA	0x6BDA      	CLRF        FARG_SetMotorSpeed_M2FullSpeed, 1
0x66BC	0xF011ECBA  	CALL        _SetMotorSpeed, 0
0x66C0	0x0E01      	MOVLW       1
0x66C2	0x0100      	MOVLB       0
0x66C4	0x6FB7      	MOVWF       _M2isSlow, 1
L_LearnManual722:
;FirmV_0_7_0.c,2632 :: 		break;
0x66C6	0xD13B      	BRA         L_LearnManual683
;FirmV_0_7_0.c,2634 :: 		case 16: //check for Remote press and stop
L_LearnManual723:
;FirmV_0_7_0.c,2635 :: 		if(Events.Remote!=0){LearnPhase=LearnPhase+1;t4=ms500;StopMotor(2);
0x66C8	0x0102      	MOVLB       2
0x66CA	0x519E      	MOVF        _Events+4, 0, 1
0x66CC	0x0A00      	XORLW       0
0x66CE	0xE01E      	BZ          L_LearnManual724
0x66D0	0x2B97      	INCF        _LearnPhase, 1, 1
0x66D2	0xF28FC104  	MOVFF       _ms500, LearnManual_t4_L0
0x66D6	0xF290C105  	MOVFF       _ms500+1, LearnManual_t4_L0+1
0x66DA	0xF291C106  	MOVFF       _ms500+2, LearnManual_t4_L0+2
0x66DE	0xF292C107  	MOVFF       _ms500+3, LearnManual_t4_L0+3
0x66E2	0x0E02      	MOVLW       2
0x66E4	0x0103      	MOVLB       3
0x66E6	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x66E8	0xF008ECA6  	CALL        _StopMotor, 0
;FirmV_0_7_0.c,2636 :: 		RawData.D2CloseTime=(char)(t4-t1);
0x66EC	0x0102      	MOVLB       2
0x66EE	0x518B      	MOVF        LearnManual_t1_L0, 0, 1
0x66F0	0x5D8F      	SUBWF       LearnManual_t4_L0, 0, 1
0x66F2	0x6E00      	MOVWF       R0 
0x66F4	0xF278C000  	MOVFF       R0, LearnManual_RawData_L0+2
;FirmV_0_7_0.c,2637 :: 		RawData.D2CloseSoftStart=(char)(t2-t1);
0x66F8	0x518B      	MOVF        LearnManual_t1_L0, 0, 1
0x66FA	0x5D87      	SUBWF       LearnManual_t2_L0, 0, 1
0x66FC	0x6E00      	MOVWF       R0 
0x66FE	0xF280C000  	MOVFF       R0, LearnManual_RawData_L0+10
;FirmV_0_7_0.c,2638 :: 		RawData.D2CloseSoftStop=(char)(t4-t3);
0x6702	0x5183      	MOVF        LearnManual_t3_L0, 0, 1
0x6704	0x5D8F      	SUBWF       LearnManual_t4_L0, 0, 1
0x6706	0x6E00      	MOVWF       R0 
0x6708	0xF281C000  	MOVFF       R0, LearnManual_RawData_L0+11
;FirmV_0_7_0.c,2639 :: 		}
L_LearnManual724:
;FirmV_0_7_0.c,2640 :: 		break;
0x670C	0xD118      	BRA         L_LearnManual683
;FirmV_0_7_0.c,2642 :: 		case 17: //Wait for remote to start D1 and slow down
L_LearnManual725:
;FirmV_0_7_0.c,2643 :: 		if(Events.Remote!=0){t1=ms500;StartMotor(1,_Close);SetMotorSpeed(0,Motor2FullSpeed);M1isSlow=1;LearnPhase=LearnPhase+1;}
0x670E	0x519E      	MOVF        _Events+4, 0, 1
0x6710	0x0A00      	XORLW       0
0x6712	0xE019      	BZ          L_LearnManual726
0x6714	0xF28BC104  	MOVFF       _ms500, LearnManual_t1_L0
0x6718	0xF28CC105  	MOVFF       _ms500+1, LearnManual_t1_L0+1
0x671C	0xF28DC106  	MOVFF       _ms500+2, LearnManual_t1_L0+2
0x6720	0xF28EC107  	MOVFF       _ms500+3, LearnManual_t1_L0+3
0x6724	0x0E01      	MOVLW       1
0x6726	0x0103      	MOVLB       3
0x6728	0x6FD9      	MOVWF       FARG_StartMotor_Mx, 1
0x672A	0x6BDA      	CLRF        FARG_StartMotor_Dir, 1
0x672C	0xF011ECCA  	CALL        _StartMotor, 0
0x6730	0x0103      	MOVLB       3
0x6732	0x6BD9      	CLRF        FARG_SetMotorSpeed_M1FullSpeed, 1
0x6734	0xF3DAC0B8  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x6738	0xF011ECBA  	CALL        _SetMotorSpeed, 0
0x673C	0x0E01      	MOVLW       1
0x673E	0x0100      	MOVLB       0
0x6740	0x6FBA      	MOVWF       _M1isSlow, 1
0x6742	0x0102      	MOVLB       2
0x6744	0x2B97      	INCF        _LearnPhase, 1, 1
L_LearnManual726:
;FirmV_0_7_0.c,2644 :: 		break;
0x6746	0xD0FB      	BRA         L_LearnManual683
;FirmV_0_7_0.c,2646 :: 		case 18: //check for Remote press and fast up
L_LearnManual727:
;FirmV_0_7_0.c,2647 :: 		if(Events.Remote!=0){LearnPhase=LearnPhase+1;t2=ms500;SetMotorSpeed(1,Motor2FullSpeed);M1isSlow=0;}
0x6748	0x519E      	MOVF        _Events+4, 0, 1
0x674A	0x0A00      	XORLW       0
0x674C	0xE012      	BZ          L_LearnManual728
0x674E	0x2B97      	INCF        _LearnPhase, 1, 1
0x6750	0xF287C104  	MOVFF       _ms500, LearnManual_t2_L0
0x6754	0xF288C105  	MOVFF       _ms500+1, LearnManual_t2_L0+1
0x6758	0xF289C106  	MOVFF       _ms500+2, LearnManual_t2_L0+2
0x675C	0xF28AC107  	MOVFF       _ms500+3, LearnManual_t2_L0+3
0x6760	0x0E01      	MOVLW       1
0x6762	0x0103      	MOVLB       3
0x6764	0x6FD9      	MOVWF       FARG_SetMotorSpeed_M1FullSpeed, 1
0x6766	0xF3DAC0B8  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x676A	0xF011ECBA  	CALL        _SetMotorSpeed, 0
0x676E	0x0100      	MOVLB       0
0x6770	0x6BBA      	CLRF        _M1isSlow, 1
L_LearnManual728:
;FirmV_0_7_0.c,2648 :: 		break;
0x6772	0xD0E5      	BRA         L_LearnManual683
;FirmV_0_7_0.c,2650 :: 		case 19: //check for Remote press and slow down
L_LearnManual729:
;FirmV_0_7_0.c,2651 :: 		if(Events.Remote!=0){LearnPhase=LearnPhase+1;t3=ms500;SetMotorSpeed(0,Motor2FullSpeed);M1isSlow=1;}
0x6774	0x0102      	MOVLB       2
0x6776	0x519E      	MOVF        _Events+4, 0, 1
0x6778	0x0A00      	XORLW       0
0x677A	0xE012      	BZ          L_LearnManual730
0x677C	0x2B97      	INCF        _LearnPhase, 1, 1
0x677E	0xF283C104  	MOVFF       _ms500, LearnManual_t3_L0
0x6782	0xF284C105  	MOVFF       _ms500+1, LearnManual_t3_L0+1
0x6786	0xF285C106  	MOVFF       _ms500+2, LearnManual_t3_L0+2
0x678A	0xF286C107  	MOVFF       _ms500+3, LearnManual_t3_L0+3
0x678E	0x0103      	MOVLB       3
0x6790	0x6BD9      	CLRF        FARG_SetMotorSpeed_M1FullSpeed, 1
0x6792	0xF3DAC0B8  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x6796	0xF011ECBA  	CALL        _SetMotorSpeed, 0
0x679A	0x0E01      	MOVLW       1
0x679C	0x0100      	MOVLB       0
0x679E	0x6FBA      	MOVWF       _M1isSlow, 1
L_LearnManual730:
;FirmV_0_7_0.c,2652 :: 		break;
0x67A0	0xD0CE      	BRA         L_LearnManual683
;FirmV_0_7_0.c,2654 :: 		case 20: //check for Remote press and stop
L_LearnManual731:
;FirmV_0_7_0.c,2655 :: 		if(Events.Remote!=0){LearnPhase=LearnPhase+1;t4=ms500;StopMotor(1);
0x67A2	0x0102      	MOVLB       2
0x67A4	0x519E      	MOVF        _Events+4, 0, 1
0x67A6	0x0A00      	XORLW       0
0x67A8	0xE01E      	BZ          L_LearnManual732
0x67AA	0x2B97      	INCF        _LearnPhase, 1, 1
0x67AC	0xF28FC104  	MOVFF       _ms500, LearnManual_t4_L0
0x67B0	0xF290C105  	MOVFF       _ms500+1, LearnManual_t4_L0+1
0x67B4	0xF291C106  	MOVFF       _ms500+2, LearnManual_t4_L0+2
0x67B8	0xF292C107  	MOVFF       _ms500+3, LearnManual_t4_L0+3
0x67BC	0x0E01      	MOVLW       1
0x67BE	0x0103      	MOVLB       3
0x67C0	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x67C2	0xF008ECA6  	CALL        _StopMotor, 0
;FirmV_0_7_0.c,2656 :: 		RawData.D1CloseTime=(char)(t4-t1);
0x67C6	0x0102      	MOVLB       2
0x67C8	0x518B      	MOVF        LearnManual_t1_L0, 0, 1
0x67CA	0x5D8F      	SUBWF       LearnManual_t4_L0, 0, 1
0x67CC	0x6E00      	MOVWF       R0 
0x67CE	0xF276C000  	MOVFF       R0, LearnManual_RawData_L0
;FirmV_0_7_0.c,2657 :: 		RawData.D1CloseSoftStart=(char)(t2-t1);
0x67D2	0x518B      	MOVF        LearnManual_t1_L0, 0, 1
0x67D4	0x5D87      	SUBWF       LearnManual_t2_L0, 0, 1
0x67D6	0x6E00      	MOVWF       R0 
0x67D8	0xF27CC000  	MOVFF       R0, LearnManual_RawData_L0+6
;FirmV_0_7_0.c,2658 :: 		RawData.D1CloseSoftStop=(char)(t4-t3);
0x67DC	0x5183      	MOVF        LearnManual_t3_L0, 0, 1
0x67DE	0x5D8F      	SUBWF       LearnManual_t4_L0, 0, 1
0x67E0	0x6E00      	MOVWF       R0 
0x67E2	0xF27DC000  	MOVFF       R0, LearnManual_RawData_L0+7
;FirmV_0_7_0.c,2659 :: 		}
L_LearnManual732:
;FirmV_0_7_0.c,2660 :: 		break;
0x67E6	0xD0AB      	BRA         L_LearnManual683
;FirmV_0_7_0.c,2662 :: 		case 21:
L_LearnManual733:
;FirmV_0_7_0.c,2663 :: 		SaveLearnData(&RawData,DoorNo);
0x67E8	0x0E76      	MOVLW       LearnManual_RawData_L0
0x67EA	0x0103      	MOVLB       3
0x67EC	0x6FD9      	MOVWF       FARG_SaveLearnData_d, 1
0x67EE	0x0E02      	MOVLW       hi_addr(LearnManual_RawData_L0)
0x67F0	0x6FDA      	MOVWF       FARG_SaveLearnData_d+1, 1
0x67F2	0xF3DBC293  	MOVFF       LearnManual_DoorNo_L0, FARG_SaveLearnData_DCount
0x67F6	0xF00AECA6  	CALL        _SaveLearnData, 0
;FirmV_0_7_0.c,2664 :: 		memcpy(LCDLine1," Learn Complete ",16);
0x67FA	0x0EBD      	MOVLW       _LCDLine1
0x67FC	0x0105      	MOVLB       5
0x67FE	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x6800	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x6802	0x0106      	MOVLB       6
0x6804	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x6806	0x0EA2      	MOVLW       ?ICS?lstr109_FirmV_0_7_0
0x6808	0x6EF6      	MOVWF       4086 
0x680A	0x0E8D      	MOVLW       hi_addr(?ICS?lstr109_FirmV_0_7_0)
0x680C	0x6EF7      	MOVWF       TBLPTRH 
0x680E	0x0E00      	MOVLW       higher_addr(?ICS?lstr109_FirmV_0_7_0)
0x6810	0x6EF8      	MOVWF       TBLPTRU 
0x6812	0x0EBF      	MOVLW       ?lstr109_FirmV_0_7_0
0x6814	0x6EE1      	MOVWF       FSR1L 
0x6816	0x0E02      	MOVLW       hi_addr(?lstr109_FirmV_0_7_0)
0x6818	0x6EE2      	MOVWF       FSR1H 
0x681A	0x0E11      	MOVLW       17
0x681C	0x6E00      	MOVWF       R0 
0x681E	0x0E01      	MOVLW       1
0x6820	0x6E01      	MOVWF       R1 
0x6822	0xF005EC2B  	CALL        ___CC2DW, 0
0x6826	0x0EBF      	MOVLW       ?lstr109_FirmV_0_7_0
0x6828	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x682A	0x0E02      	MOVLW       hi_addr(?lstr109_FirmV_0_7_0)
0x682C	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x682E	0x0E10      	MOVLW       16
0x6830	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x6832	0x0E00      	MOVLW       0
0x6834	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x6836	0xF001EC0D  	CALL        _memcpy, 0
;FirmV_0_7_0.c,2665 :: 		memcpy(LCDLine2,"     Ready      ",16);
0x683A	0x0EA3      	MOVLW       _LCDLine2
0x683C	0x0105      	MOVLB       5
0x683E	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x6840	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x6842	0x0106      	MOVLB       6
0x6844	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x6846	0x0EB3      	MOVLW       ?ICS?lstr110_FirmV_0_7_0
0x6848	0x6EF6      	MOVWF       4086 
0x684A	0x0E8D      	MOVLW       hi_addr(?ICS?lstr110_FirmV_0_7_0)
0x684C	0x6EF7      	MOVWF       TBLPTRH 
0x684E	0x0E00      	MOVLW       higher_addr(?ICS?lstr110_FirmV_0_7_0)
0x6850	0x6EF8      	MOVWF       TBLPTRU 
0x6852	0x0ED0      	MOVLW       ?lstr110_FirmV_0_7_0
0x6854	0x6EE1      	MOVWF       FSR1L 
0x6856	0x0E02      	MOVLW       hi_addr(?lstr110_FirmV_0_7_0)
0x6858	0x6EE2      	MOVWF       FSR1H 
0x685A	0x0E11      	MOVLW       17
0x685C	0x6E00      	MOVWF       R0 
0x685E	0x0E01      	MOVLW       1
0x6860	0x6E01      	MOVWF       R1 
0x6862	0xF005EC2B  	CALL        ___CC2DW, 0
0x6866	0x0ED0      	MOVLW       ?lstr110_FirmV_0_7_0
0x6868	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x686A	0x0E02      	MOVLW       hi_addr(?lstr110_FirmV_0_7_0)
0x686C	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x686E	0x0E10      	MOVLW       16
0x6870	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x6872	0x0E00      	MOVLW       0
0x6874	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x6876	0xF001EC0D  	CALL        _memcpy, 0
;FirmV_0_7_0.c,2666 :: 		LCDLines=2;
0x687A	0x0E02      	MOVLW       2
0x687C	0x0100      	MOVLB       0
0x687E	0x6FB4      	MOVWF       _LCDLines, 1
;FirmV_0_7_0.c,2667 :: 		LCDUpdateFlag=1;
0x6880	0x0E01      	MOVLW       1
0x6882	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,2668 :: 		Flasher=0;
0x6884	0x9E83      	BCF         PORTD, 7 
;FirmV_0_7_0.c,2670 :: 		State=0;
0x6886	0x0101      	MOVLB       1
0x6888	0x6B44      	CLRF        _State, 1
;FirmV_0_7_0.c,2671 :: 		break;
0x688A	0xD059      	BRA         L_LearnManual683
;FirmV_0_7_0.c,2672 :: 		}
L_LearnManual682:
0x688C	0x0102      	MOVLB       2
0x688E	0x5197      	MOVF        _LearnPhase, 0, 1
0x6890	0x0A00      	XORLW       0
0x6892	0xB4D8      	BTFSC       STATUS, 2 
0x6894	0xD55E      	BRA         L_LearnManual684
0x6896	0x5197      	MOVF        _LearnPhase, 0, 1
0x6898	0x0A01      	XORLW       1
0x689A	0xB4D8      	BTFSC       STATUS, 2 
0x689C	0xD56F      	BRA         L_LearnManual687
0x689E	0x5197      	MOVF        _LearnPhase, 0, 1
0x68A0	0x0A02      	XORLW       2
0x68A2	0xB4D8      	BTFSC       STATUS, 2 
0x68A4	0xD58E      	BRA         L_LearnManual688
0x68A6	0x5197      	MOVF        _LearnPhase, 0, 1
0x68A8	0x0A03      	XORLW       3
0x68AA	0xB4D8      	BTFSC       STATUS, 2 
0x68AC	0xD5A4      	BRA         L_LearnManual693
0x68AE	0x5197      	MOVF        _LearnPhase, 0, 1
0x68B0	0x0A04      	XORLW       4
0x68B2	0xB4D8      	BTFSC       STATUS, 2 
0x68B4	0xD5C2      	BRA         L_LearnManual694
0x68B6	0x5197      	MOVF        _LearnPhase, 0, 1
0x68B8	0x0A05      	XORLW       5
0x68BA	0xB4D8      	BTFSC       STATUS, 2 
0x68BC	0xD5D8      	BRA         L_LearnManual699
0x68BE	0x5197      	MOVF        _LearnPhase, 0, 1
0x68C0	0x0A06      	XORLW       6
0x68C2	0xB4D8      	BTFSC       STATUS, 2 
0x68C4	0xD5F3      	BRA         L_LearnManual701
0x68C6	0x5197      	MOVF        _LearnPhase, 0, 1
0x68C8	0x0A07      	XORLW       7
0x68CA	0xB4D8      	BTFSC       STATUS, 2 
0x68CC	0xD605      	BRA         L_LearnManual703
0x68CE	0x5197      	MOVF        _LearnPhase, 0, 1
0x68D0	0x0A08      	XORLW       8
0x68D2	0xB4D8      	BTFSC       STATUS, 2 
0x68D4	0xD618      	BRA         L_LearnManual705
0x68D6	0x5197      	MOVF        _LearnPhase, 0, 1
0x68D8	0x0A09      	XORLW       9
0x68DA	0xB4D8      	BTFSC       STATUS, 2 
0x68DC	0xD63D      	BRA         L_LearnManual709
0x68DE	0x5197      	MOVF        _LearnPhase, 0, 1
0x68E0	0x0A0A      	XORLW       10
0x68E2	0xB4D8      	BTFSC       STATUS, 2 
0x68E4	0xD657      	BRA         L_LearnManual711
0x68E6	0x5197      	MOVF        _LearnPhase, 0, 1
0x68E8	0x0A0B      	XORLW       11
0x68EA	0xB4D8      	BTFSC       STATUS, 2 
0x68EC	0xD669      	BRA         L_LearnManual713
0x68EE	0x5197      	MOVF        _LearnPhase, 0, 1
0x68F0	0x0A0C      	XORLW       12
0x68F2	0xB4D8      	BTFSC       STATUS, 2 
0x68F4	0xD67C      	BRA         L_LearnManual715
0x68F6	0x5197      	MOVF        _LearnPhase, 0, 1
0x68F8	0x0A0D      	XORLW       13
0x68FA	0xB4D8      	BTFSC       STATUS, 2 
0x68FC	0xD69B      	BRA         L_LearnManual717
0x68FE	0x5197      	MOVF        _LearnPhase, 0, 1
0x6900	0x0A0E      	XORLW       14
0x6902	0xB4D8      	BTFSC       STATUS, 2 
0x6904	0xD6B4      	BRA         L_LearnManual719
0x6906	0x5197      	MOVF        _LearnPhase, 0, 1
0x6908	0x0A0F      	XORLW       15
0x690A	0xB4D8      	BTFSC       STATUS, 2 
0x690C	0xD6C6      	BRA         L_LearnManual721
0x690E	0x5197      	MOVF        _LearnPhase, 0, 1
0x6910	0x0A10      	XORLW       16
0x6912	0xB4D8      	BTFSC       STATUS, 2 
0x6914	0xD6D9      	BRA         L_LearnManual723
0x6916	0x5197      	MOVF        _LearnPhase, 0, 1
0x6918	0x0A11      	XORLW       17
0x691A	0xB4D8      	BTFSC       STATUS, 2 
0x691C	0xD6F8      	BRA         L_LearnManual725
0x691E	0x5197      	MOVF        _LearnPhase, 0, 1
0x6920	0x0A12      	XORLW       18
0x6922	0xB4D8      	BTFSC       STATUS, 2 
0x6924	0xD711      	BRA         L_LearnManual727
0x6926	0x5197      	MOVF        _LearnPhase, 0, 1
0x6928	0x0A13      	XORLW       19
0x692A	0xB4D8      	BTFSC       STATUS, 2 
0x692C	0xD723      	BRA         L_LearnManual729
0x692E	0x5197      	MOVF        _LearnPhase, 0, 1
0x6930	0x0A14      	XORLW       20
0x6932	0xB4D8      	BTFSC       STATUS, 2 
0x6934	0xD736      	BRA         L_LearnManual731
0x6936	0x5197      	MOVF        _LearnPhase, 0, 1
0x6938	0x0A15      	XORLW       21
0x693A	0xB4D8      	BTFSC       STATUS, 2 
0x693C	0xD755      	BRA         L_LearnManual733
L_LearnManual683:
;FirmV_0_7_0.c,2673 :: 		}
0x693E	0x0012      	RETURN      0
; end of _LearnManual
_State00:
;FirmV_0_7_0.c,526 :: 		void State00()
;FirmV_0_7_0.c,531 :: 		Flasher=1;
0x6940	0x8E83      	BSF         PORTD, 7 
;FirmV_0_7_0.c,532 :: 		FlashFlag=1;
0x6942	0x0E01      	MOVLW       1
0x6944	0x0100      	MOVLB       0
0x6946	0x6FBC      	MOVWF       _FlashFlag, 1
;FirmV_0_7_0.c,533 :: 		StartMotor(1,_Close);
0x6948	0x0E01      	MOVLW       1
0x694A	0x0103      	MOVLB       3
0x694C	0x6FD9      	MOVWF       FARG_StartMotor_Mx, 1
0x694E	0x6BDA      	CLRF        FARG_StartMotor_Dir, 1
0x6950	0xF011ECCA  	CALL        _StartMotor, 0
;FirmV_0_7_0.c,534 :: 		StartMotor(2,_Close);
0x6954	0x0E02      	MOVLW       2
0x6956	0x0103      	MOVLB       3
0x6958	0x6FD9      	MOVWF       FARG_StartMotor_Mx, 1
0x695A	0x6BDA      	CLRF        FARG_StartMotor_Dir, 1
0x695C	0xF011ECCA  	CALL        _StartMotor, 0
;FirmV_0_7_0.c,536 :: 		if(Events.Remote.b0==1)
0x6960	0x0102      	MOVLB       2
0x6962	0xA19E      	BTFSS       _Events+4, 0, 1
0x6964	0xD010      	BRA         L_State0082
;FirmV_0_7_0.c,537 :: 		{Flasher=0;FlashFlag=0;StopMotor(1);StopMotor(2);
0x6966	0x9E83      	BCF         PORTD, 7 
0x6968	0x0100      	MOVLB       0
0x696A	0x6BBC      	CLRF        _FlashFlag, 1
0x696C	0x0E01      	MOVLW       1
0x696E	0x0103      	MOVLB       3
0x6970	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x6972	0xF008ECA6  	CALL        _StopMotor, 0
0x6976	0x0E02      	MOVLW       2
0x6978	0x0103      	MOVLB       3
0x697A	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x697C	0xF008ECA6  	CALL        _StopMotor, 0
;FirmV_0_7_0.c,538 :: 		State=1;                }
0x6980	0x0E01      	MOVLW       1
0x6982	0x0101      	MOVLB       1
0x6984	0x6F44      	MOVWF       _State, 1
L_State0082:
;FirmV_0_7_0.c,539 :: 		}
0x6986	0x0012      	RETURN      0
; end of _State00
_State8:
;FirmV_0_7_0.c,1176 :: 		void State8()
;FirmV_0_7_0.c,1178 :: 		Flasher=1;
0x6988	0x8E83      	BSF         PORTD, 7 
;FirmV_0_7_0.c,1179 :: 		FlashFlag=1;
0x698A	0x0E01      	MOVLW       1
0x698C	0x0100      	MOVLB       0
0x698E	0x6FBC      	MOVWF       _FlashFlag, 1
;FirmV_0_7_0.c,1181 :: 		if(CheckTask(1))
0x6990	0x0E01      	MOVLW       1
0x6992	0x0103      	MOVLB       3
0x6994	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x6996	0xF009EC28  	CALL        _CheckTask, 0
0x699A	0x5200      	MOVF        R0, 1 
0x699C	0xE054      	BZ          L_State8268
;FirmV_0_7_0.c,1182 :: 		{StartMotor(1,_Open);Logger("S8 Motor1Start",1); Lock=0;memcpy(LCDLine1,_opening,16);memcpy(LCDLine2,_Blank,16);LCDUpdateFlag=1;LCDLines=1;}
0x699E	0x0E01      	MOVLW       1
0x69A0	0x0103      	MOVLB       3
0x69A2	0x6FD9      	MOVWF       FARG_StartMotor_Mx, 1
0x69A4	0x0E01      	MOVLW       1
0x69A6	0x6FDA      	MOVWF       FARG_StartMotor_Dir, 1
0x69A8	0xF011ECCA  	CALL        _StartMotor, 0
0x69AC	0x0E53      	MOVLW       83
0x69AE	0x0102      	MOVLB       2
0x69B0	0x6FBF      	MOVWF       ?lstr57_FirmV_0_7_0, 1
0x69B2	0x0E38      	MOVLW       56
0x69B4	0x6FC0      	MOVWF       ?lstr57_FirmV_0_7_0+1, 1
0x69B6	0x0E20      	MOVLW       32
0x69B8	0x6FC1      	MOVWF       ?lstr57_FirmV_0_7_0+2, 1
0x69BA	0x0E4D      	MOVLW       77
0x69BC	0x6FC2      	MOVWF       ?lstr57_FirmV_0_7_0+3, 1
0x69BE	0x0E6F      	MOVLW       111
0x69C0	0x6FC3      	MOVWF       ?lstr57_FirmV_0_7_0+4, 1
0x69C2	0x0E74      	MOVLW       116
0x69C4	0x6FC4      	MOVWF       ?lstr57_FirmV_0_7_0+5, 1
0x69C6	0x0E6F      	MOVLW       111
0x69C8	0x6FC5      	MOVWF       ?lstr57_FirmV_0_7_0+6, 1
0x69CA	0x0E72      	MOVLW       114
0x69CC	0x6FC6      	MOVWF       ?lstr57_FirmV_0_7_0+7, 1
0x69CE	0x0E31      	MOVLW       49
0x69D0	0x6FC7      	MOVWF       ?lstr57_FirmV_0_7_0+8, 1
0x69D2	0x0E53      	MOVLW       83
0x69D4	0x6FC8      	MOVWF       ?lstr57_FirmV_0_7_0+9, 1
0x69D6	0x0E74      	MOVLW       116
0x69D8	0x6FC9      	MOVWF       ?lstr57_FirmV_0_7_0+10, 1
0x69DA	0x0E61      	MOVLW       97
0x69DC	0x6FCA      	MOVWF       ?lstr57_FirmV_0_7_0+11, 1
0x69DE	0x0E72      	MOVLW       114
0x69E0	0x6FCB      	MOVWF       ?lstr57_FirmV_0_7_0+12, 1
0x69E2	0x0E74      	MOVLW       116
0x69E4	0x6FCC      	MOVWF       ?lstr57_FirmV_0_7_0+13, 1
0x69E6	0x6BCD      	CLRF        ?lstr57_FirmV_0_7_0+14, 1
0x69E8	0x0EBF      	MOVLW       ?lstr57_FirmV_0_7_0
0x69EA	0x0103      	MOVLB       3
0x69EC	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x69EE	0x0E02      	MOVLW       hi_addr(?lstr57_FirmV_0_7_0)
0x69F0	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x69F2	0x0E01      	MOVLW       1
0x69F4	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x69F6	0xF009EC69  	CALL        _Logger, 0
0x69FA	0x9C83      	BCF         PORTD, 6 
0x69FC	0x0EBD      	MOVLW       _LCDLine1
0x69FE	0x0105      	MOVLB       5
0x6A00	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x6A02	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x6A04	0x0106      	MOVLB       6
0x6A06	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x6A08	0x0ECE      	MOVLW       __opening
0x6A0A	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x6A0C	0x0E00      	MOVLW       hi_addr(__opening)
0x6A0E	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x6A10	0x0E10      	MOVLW       16
0x6A12	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x6A14	0x0E00      	MOVLW       0
0x6A16	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x6A18	0xF001EC0D  	CALL        _memcpy, 0
0x6A1C	0x0EA3      	MOVLW       _LCDLine2
0x6A1E	0x0105      	MOVLB       5
0x6A20	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x6A22	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x6A24	0x0106      	MOVLB       6
0x6A26	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x6A28	0x0E91      	MOVLW       __Blank
0x6A2A	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x6A2C	0x0E00      	MOVLW       hi_addr(__Blank)
0x6A2E	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x6A30	0x0E10      	MOVLW       16
0x6A32	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x6A34	0x0E00      	MOVLW       0
0x6A36	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x6A38	0xF001EC0D  	CALL        _memcpy, 0
0x6A3C	0x0E01      	MOVLW       1
0x6A3E	0x0100      	MOVLB       0
0x6A40	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
0x6A42	0x0E01      	MOVLW       1
0x6A44	0x6FB4      	MOVWF       _LCDLines, 1
L_State8268:
;FirmV_0_7_0.c,1184 :: 		if(CheckTask(2))
0x6A46	0x0E02      	MOVLW       2
0x6A48	0x0103      	MOVLB       3
0x6A4A	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x6A4C	0xF009EC28  	CALL        _CheckTask, 0
0x6A50	0x5200      	MOVF        R0, 1 
0x6A52	0xE02F      	BZ          L_State8269
;FirmV_0_7_0.c,1185 :: 		{StartMotor(2,_Open);Logger("S8 Motor2Start",1); Lock=0;}
0x6A54	0x0E02      	MOVLW       2
0x6A56	0x0103      	MOVLB       3
0x6A58	0x6FD9      	MOVWF       FARG_StartMotor_Mx, 1
0x6A5A	0x0E01      	MOVLW       1
0x6A5C	0x6FDA      	MOVWF       FARG_StartMotor_Dir, 1
0x6A5E	0xF011ECCA  	CALL        _StartMotor, 0
0x6A62	0x0E53      	MOVLW       83
0x6A64	0x0102      	MOVLB       2
0x6A66	0x6FCE      	MOVWF       ?lstr58_FirmV_0_7_0, 1
0x6A68	0x0E38      	MOVLW       56
0x6A6A	0x6FCF      	MOVWF       ?lstr58_FirmV_0_7_0+1, 1
0x6A6C	0x0E20      	MOVLW       32
0x6A6E	0x6FD0      	MOVWF       ?lstr58_FirmV_0_7_0+2, 1
0x6A70	0x0E4D      	MOVLW       77
0x6A72	0x6FD1      	MOVWF       ?lstr58_FirmV_0_7_0+3, 1
0x6A74	0x0E6F      	MOVLW       111
0x6A76	0x6FD2      	MOVWF       ?lstr58_FirmV_0_7_0+4, 1
0x6A78	0x0E74      	MOVLW       116
0x6A7A	0x6FD3      	MOVWF       ?lstr58_FirmV_0_7_0+5, 1
0x6A7C	0x0E6F      	MOVLW       111
0x6A7E	0x6FD4      	MOVWF       ?lstr58_FirmV_0_7_0+6, 1
0x6A80	0x0E72      	MOVLW       114
0x6A82	0x6FD5      	MOVWF       ?lstr58_FirmV_0_7_0+7, 1
0x6A84	0x0E32      	MOVLW       50
0x6A86	0x6FD6      	MOVWF       ?lstr58_FirmV_0_7_0+8, 1
0x6A88	0x0E53      	MOVLW       83
0x6A8A	0x6FD7      	MOVWF       ?lstr58_FirmV_0_7_0+9, 1
0x6A8C	0x0E74      	MOVLW       116
0x6A8E	0x6FD8      	MOVWF       ?lstr58_FirmV_0_7_0+10, 1
0x6A90	0x0E61      	MOVLW       97
0x6A92	0x6FD9      	MOVWF       ?lstr58_FirmV_0_7_0+11, 1
0x6A94	0x0E72      	MOVLW       114
0x6A96	0x6FDA      	MOVWF       ?lstr58_FirmV_0_7_0+12, 1
0x6A98	0x0E74      	MOVLW       116
0x6A9A	0x6FDB      	MOVWF       ?lstr58_FirmV_0_7_0+13, 1
0x6A9C	0x6BDC      	CLRF        ?lstr58_FirmV_0_7_0+14, 1
0x6A9E	0x0ECE      	MOVLW       ?lstr58_FirmV_0_7_0
0x6AA0	0x0103      	MOVLB       3
0x6AA2	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x6AA4	0x0E02      	MOVLW       hi_addr(?lstr58_FirmV_0_7_0)
0x6AA6	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x6AA8	0x0E01      	MOVLW       1
0x6AAA	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x6AAC	0xF009EC69  	CALL        _Logger, 0
0x6AB0	0x9C83      	BCF         PORTD, 6 
L_State8269:
;FirmV_0_7_0.c,1187 :: 		if(CheckTask(10))
0x6AB2	0x0E0A      	MOVLW       10
0x6AB4	0x0103      	MOVLB       3
0x6AB6	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x6AB8	0xF009EC28  	CALL        _CheckTask, 0
0x6ABC	0x5200      	MOVF        R0, 1 
0x6ABE	0xE021      	BZ          L_State8270
;FirmV_0_7_0.c,1188 :: 		{OverloadCheckFlag1=1; OverloadInit(1);Logger("S8 Overflow Flag1 Set",1);}
0x6AC0	0x0E01      	MOVLW       1
0x6AC2	0x0100      	MOVLB       0
0x6AC4	0x6FB9      	MOVWF       _OverloadCheckFlag1, 1
0x6AC6	0x0E01      	MOVLW       1
0x6AC8	0x0103      	MOVLB       3
0x6ACA	0x6FD9      	MOVWF       FARG_OverloadInit_ch, 1
0x6ACC	0xF00BEC66  	CALL        _OverloadInit, 0
0x6AD0	0x0E66      	MOVLW       ?ICS?lstr59_FirmV_0_7_0
0x6AD2	0x6EF6      	MOVWF       4086 
0x6AD4	0x0E8B      	MOVLW       hi_addr(?ICS?lstr59_FirmV_0_7_0)
0x6AD6	0x6EF7      	MOVWF       TBLPTRH 
0x6AD8	0x0E00      	MOVLW       higher_addr(?ICS?lstr59_FirmV_0_7_0)
0x6ADA	0x6EF8      	MOVWF       TBLPTRU 
0x6ADC	0x0EDD      	MOVLW       ?lstr59_FirmV_0_7_0
0x6ADE	0x6EE1      	MOVWF       FSR1L 
0x6AE0	0x0E02      	MOVLW       hi_addr(?lstr59_FirmV_0_7_0)
0x6AE2	0x6EE2      	MOVWF       FSR1H 
0x6AE4	0x0E16      	MOVLW       22
0x6AE6	0x6E00      	MOVWF       R0 
0x6AE8	0x0E01      	MOVLW       1
0x6AEA	0x6E01      	MOVWF       R1 
0x6AEC	0xF005EC2B  	CALL        ___CC2DW, 0
0x6AF0	0x0EDD      	MOVLW       ?lstr59_FirmV_0_7_0
0x6AF2	0x0103      	MOVLB       3
0x6AF4	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x6AF6	0x0E02      	MOVLW       hi_addr(?lstr59_FirmV_0_7_0)
0x6AF8	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x6AFA	0x0E01      	MOVLW       1
0x6AFC	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x6AFE	0xF009EC69  	CALL        _Logger, 0
L_State8270:
;FirmV_0_7_0.c,1190 :: 		if(CheckTask(11))
0x6B02	0x0E0B      	MOVLW       11
0x6B04	0x0103      	MOVLB       3
0x6B06	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x6B08	0xF009EC28  	CALL        _CheckTask, 0
0x6B0C	0x5200      	MOVF        R0, 1 
0x6B0E	0xE021      	BZ          L_State8271
;FirmV_0_7_0.c,1191 :: 		{OverloadCheckFlag2=1; OverloadInit(2);Logger("S8 Overflow Flag2 Set",1);}
0x6B10	0x0E01      	MOVLW       1
0x6B12	0x0100      	MOVLB       0
0x6B14	0x6FB6      	MOVWF       _OverloadCheckFlag2, 1
0x6B16	0x0E02      	MOVLW       2
0x6B18	0x0103      	MOVLB       3
0x6B1A	0x6FD9      	MOVWF       FARG_OverloadInit_ch, 1
0x6B1C	0xF00BEC66  	CALL        _OverloadInit, 0
0x6B20	0x0E7C      	MOVLW       ?ICS?lstr60_FirmV_0_7_0
0x6B22	0x6EF6      	MOVWF       4086 
0x6B24	0x0E8B      	MOVLW       hi_addr(?ICS?lstr60_FirmV_0_7_0)
0x6B26	0x6EF7      	MOVWF       TBLPTRH 
0x6B28	0x0E00      	MOVLW       higher_addr(?ICS?lstr60_FirmV_0_7_0)
0x6B2A	0x6EF8      	MOVWF       TBLPTRU 
0x6B2C	0x0EF3      	MOVLW       ?lstr60_FirmV_0_7_0
0x6B2E	0x6EE1      	MOVWF       FSR1L 
0x6B30	0x0E02      	MOVLW       hi_addr(?lstr60_FirmV_0_7_0)
0x6B32	0x6EE2      	MOVWF       FSR1H 
0x6B34	0x0E16      	MOVLW       22
0x6B36	0x6E00      	MOVWF       R0 
0x6B38	0x0E01      	MOVLW       1
0x6B3A	0x6E01      	MOVWF       R1 
0x6B3C	0xF005EC2B  	CALL        ___CC2DW, 0
0x6B40	0x0EF3      	MOVLW       ?lstr60_FirmV_0_7_0
0x6B42	0x0103      	MOVLB       3
0x6B44	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x6B46	0x0E02      	MOVLW       hi_addr(?lstr60_FirmV_0_7_0)
0x6B48	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x6B4A	0x0E01      	MOVLW       1
0x6B4C	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x6B4E	0xF009EC69  	CALL        _Logger, 0
L_State8271:
;FirmV_0_7_0.c,1193 :: 		if(CheckTask(5))
0x6B52	0x0E05      	MOVLW       5
0x6B54	0x0103      	MOVLB       3
0x6B56	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x6B58	0xF009EC28  	CALL        _CheckTask, 0
0x6B5C	0x5200      	MOVF        R0, 1 
0x6B5E	0xE02F      	BZ          L_State8272
;FirmV_0_7_0.c,1194 :: 		{SetMotorSpeed(1,Motor2FullSpeed); M1isSlow=0;Logger("S8 Motor1 Fast",1);}
0x6B60	0x0E01      	MOVLW       1
0x6B62	0x0103      	MOVLB       3
0x6B64	0x6FD9      	MOVWF       FARG_SetMotorSpeed_M1FullSpeed, 1
0x6B66	0xF3DAC0B8  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x6B6A	0xF011ECBA  	CALL        _SetMotorSpeed, 0
0x6B6E	0x0100      	MOVLB       0
0x6B70	0x6BBA      	CLRF        _M1isSlow, 1
0x6B72	0x0E53      	MOVLW       83
0x6B74	0x0103      	MOVLB       3
0x6B76	0x6F09      	MOVWF       ?lstr61_FirmV_0_7_0, 1
0x6B78	0x0E38      	MOVLW       56
0x6B7A	0x6F0A      	MOVWF       ?lstr61_FirmV_0_7_0+1, 1
0x6B7C	0x0E20      	MOVLW       32
0x6B7E	0x6F0B      	MOVWF       ?lstr61_FirmV_0_7_0+2, 1
0x6B80	0x0E4D      	MOVLW       77
0x6B82	0x6F0C      	MOVWF       ?lstr61_FirmV_0_7_0+3, 1
0x6B84	0x0E6F      	MOVLW       111
0x6B86	0x6F0D      	MOVWF       ?lstr61_FirmV_0_7_0+4, 1
0x6B88	0x0E74      	MOVLW       116
0x6B8A	0x6F0E      	MOVWF       ?lstr61_FirmV_0_7_0+5, 1
0x6B8C	0x0E6F      	MOVLW       111
0x6B8E	0x6F0F      	MOVWF       ?lstr61_FirmV_0_7_0+6, 1
0x6B90	0x0E72      	MOVLW       114
0x6B92	0x6F10      	MOVWF       ?lstr61_FirmV_0_7_0+7, 1
0x6B94	0x0E31      	MOVLW       49
0x6B96	0x6F11      	MOVWF       ?lstr61_FirmV_0_7_0+8, 1
0x6B98	0x0E20      	MOVLW       32
0x6B9A	0x6F12      	MOVWF       ?lstr61_FirmV_0_7_0+9, 1
0x6B9C	0x0E46      	MOVLW       70
0x6B9E	0x6F13      	MOVWF       ?lstr61_FirmV_0_7_0+10, 1
0x6BA0	0x0E61      	MOVLW       97
0x6BA2	0x6F14      	MOVWF       ?lstr61_FirmV_0_7_0+11, 1
0x6BA4	0x0E73      	MOVLW       115
0x6BA6	0x6F15      	MOVWF       ?lstr61_FirmV_0_7_0+12, 1
0x6BA8	0x0E74      	MOVLW       116
0x6BAA	0x6F16      	MOVWF       ?lstr61_FirmV_0_7_0+13, 1
0x6BAC	0x6B17      	CLRF        ?lstr61_FirmV_0_7_0+14, 1
0x6BAE	0x0E09      	MOVLW       ?lstr61_FirmV_0_7_0
0x6BB0	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x6BB2	0x0E03      	MOVLW       hi_addr(?lstr61_FirmV_0_7_0)
0x6BB4	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x6BB6	0x0E01      	MOVLW       1
0x6BB8	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x6BBA	0xF009EC69  	CALL        _Logger, 0
L_State8272:
;FirmV_0_7_0.c,1196 :: 		if(CheckTask(6))
0x6BBE	0x0E06      	MOVLW       6
0x6BC0	0x0103      	MOVLB       3
0x6BC2	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x6BC4	0xF009EC28  	CALL        _CheckTask, 0
0x6BC8	0x5200      	MOVF        R0, 1 
0x6BCA	0xE02F      	BZ          L_State8273
;FirmV_0_7_0.c,1197 :: 		{SetMotorSpeed(Motor1FullSpeed,1); M2isSlow=0;Logger("S8 Motor2 Fast",1);}
0x6BCC	0xF3D9C0B5  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x6BD0	0x0E01      	MOVLW       1
0x6BD2	0x0103      	MOVLB       3
0x6BD4	0x6FDA      	MOVWF       FARG_SetMotorSpeed_M2FullSpeed, 1
0x6BD6	0xF011ECBA  	CALL        _SetMotorSpeed, 0
0x6BDA	0x0100      	MOVLB       0
0x6BDC	0x6BB7      	CLRF        _M2isSlow, 1
0x6BDE	0x0E53      	MOVLW       83
0x6BE0	0x0103      	MOVLB       3
0x6BE2	0x6F18      	MOVWF       ?lstr62_FirmV_0_7_0, 1
0x6BE4	0x0E38      	MOVLW       56
0x6BE6	0x6F19      	MOVWF       ?lstr62_FirmV_0_7_0+1, 1
0x6BE8	0x0E20      	MOVLW       32
0x6BEA	0x6F1A      	MOVWF       ?lstr62_FirmV_0_7_0+2, 1
0x6BEC	0x0E4D      	MOVLW       77
0x6BEE	0x6F1B      	MOVWF       ?lstr62_FirmV_0_7_0+3, 1
0x6BF0	0x0E6F      	MOVLW       111
0x6BF2	0x6F1C      	MOVWF       ?lstr62_FirmV_0_7_0+4, 1
0x6BF4	0x0E74      	MOVLW       116
0x6BF6	0x6F1D      	MOVWF       ?lstr62_FirmV_0_7_0+5, 1
0x6BF8	0x0E6F      	MOVLW       111
0x6BFA	0x6F1E      	MOVWF       ?lstr62_FirmV_0_7_0+6, 1
0x6BFC	0x0E72      	MOVLW       114
0x6BFE	0x6F1F      	MOVWF       ?lstr62_FirmV_0_7_0+7, 1
0x6C00	0x0E32      	MOVLW       50
0x6C02	0x6F20      	MOVWF       ?lstr62_FirmV_0_7_0+8, 1
0x6C04	0x0E20      	MOVLW       32
0x6C06	0x6F21      	MOVWF       ?lstr62_FirmV_0_7_0+9, 1
0x6C08	0x0E46      	MOVLW       70
0x6C0A	0x6F22      	MOVWF       ?lstr62_FirmV_0_7_0+10, 1
0x6C0C	0x0E61      	MOVLW       97
0x6C0E	0x6F23      	MOVWF       ?lstr62_FirmV_0_7_0+11, 1
0x6C10	0x0E73      	MOVLW       115
0x6C12	0x6F24      	MOVWF       ?lstr62_FirmV_0_7_0+12, 1
0x6C14	0x0E74      	MOVLW       116
0x6C16	0x6F25      	MOVWF       ?lstr62_FirmV_0_7_0+13, 1
0x6C18	0x6B26      	CLRF        ?lstr62_FirmV_0_7_0+14, 1
0x6C1A	0x0E18      	MOVLW       ?lstr62_FirmV_0_7_0
0x6C1C	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x6C1E	0x0E03      	MOVLW       hi_addr(?lstr62_FirmV_0_7_0)
0x6C20	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x6C22	0x0E01      	MOVLW       1
0x6C24	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x6C26	0xF009EC69  	CALL        _Logger, 0
L_State8273:
;FirmV_0_7_0.c,1199 :: 		if((CheckTask(3)||((OverloadCheckFlag1==1)&&(Events.Overload.b0==1)))&&(OpenDone.b0))
0x6C2A	0x0E03      	MOVLW       3
0x6C2C	0x0103      	MOVLB       3
0x6C2E	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x6C30	0xF009EC28  	CALL        _CheckTask, 0
0x6C34	0x5200      	MOVF        R0, 1 
0x6C36	0xE109      	BNZ         L__State8859
0x6C38	0x0100      	MOVLB       0
0x6C3A	0x51B9      	MOVF        _OverloadCheckFlag1, 0, 1
0x6C3C	0x0A01      	XORLW       1
0x6C3E	0xE104      	BNZ         L__State8860
0x6C40	0x0102      	MOVLB       2
0x6C42	0xA19F      	BTFSS       _Events+5, 0, 1
0x6C44	0xD001      	BRA         L__State8860
0x6C46	0xD001      	BRA         L__State8859
L__State8860:
0x6C48	0xD02F      	BRA         L_State8280
L__State8859:
0x6C4A	0x0100      	MOVLB       0
0x6C4C	0xA1E1      	BTFSS       _OpenDone, 0, 1
0x6C4E	0xD02C      	BRA         L_State8280
L__State8858:
;FirmV_0_7_0.c,1200 :: 		{OpenDone.b0=0; StopMotor(1);Logger("S8 Motor1 Stop",1);}
0x6C50	0x91E1      	BCF         _OpenDone, 0, 1
0x6C52	0x0E01      	MOVLW       1
0x6C54	0x0103      	MOVLB       3
0x6C56	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x6C58	0xF008ECA6  	CALL        _StopMotor, 0
0x6C5C	0x0E53      	MOVLW       83
0x6C5E	0x0103      	MOVLB       3
0x6C60	0x6F27      	MOVWF       ?lstr63_FirmV_0_7_0, 1
0x6C62	0x0E38      	MOVLW       56
0x6C64	0x6F28      	MOVWF       ?lstr63_FirmV_0_7_0+1, 1
0x6C66	0x0E20      	MOVLW       32
0x6C68	0x6F29      	MOVWF       ?lstr63_FirmV_0_7_0+2, 1
0x6C6A	0x0E4D      	MOVLW       77
0x6C6C	0x6F2A      	MOVWF       ?lstr63_FirmV_0_7_0+3, 1
0x6C6E	0x0E6F      	MOVLW       111
0x6C70	0x6F2B      	MOVWF       ?lstr63_FirmV_0_7_0+4, 1
0x6C72	0x0E74      	MOVLW       116
0x6C74	0x6F2C      	MOVWF       ?lstr63_FirmV_0_7_0+5, 1
0x6C76	0x0E6F      	MOVLW       111
0x6C78	0x6F2D      	MOVWF       ?lstr63_FirmV_0_7_0+6, 1
0x6C7A	0x0E72      	MOVLW       114
0x6C7C	0x6F2E      	MOVWF       ?lstr63_FirmV_0_7_0+7, 1
0x6C7E	0x0E31      	MOVLW       49
0x6C80	0x6F2F      	MOVWF       ?lstr63_FirmV_0_7_0+8, 1
0x6C82	0x0E20      	MOVLW       32
0x6C84	0x6F30      	MOVWF       ?lstr63_FirmV_0_7_0+9, 1
0x6C86	0x0E53      	MOVLW       83
0x6C88	0x6F31      	MOVWF       ?lstr63_FirmV_0_7_0+10, 1
0x6C8A	0x0E74      	MOVLW       116
0x6C8C	0x6F32      	MOVWF       ?lstr63_FirmV_0_7_0+11, 1
0x6C8E	0x0E6F      	MOVLW       111
0x6C90	0x6F33      	MOVWF       ?lstr63_FirmV_0_7_0+12, 1
0x6C92	0x0E70      	MOVLW       112
0x6C94	0x6F34      	MOVWF       ?lstr63_FirmV_0_7_0+13, 1
0x6C96	0x6B35      	CLRF        ?lstr63_FirmV_0_7_0+14, 1
0x6C98	0x0E27      	MOVLW       ?lstr63_FirmV_0_7_0
0x6C9A	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x6C9C	0x0E03      	MOVLW       hi_addr(?lstr63_FirmV_0_7_0)
0x6C9E	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x6CA0	0x0E01      	MOVLW       1
0x6CA2	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x6CA4	0xF009EC69  	CALL        _Logger, 0
L_State8280:
;FirmV_0_7_0.c,1202 :: 		if((CheckTask(4)||((OverloadCheckFlag2==1)&&(Events.Overload.b1==1)))&&(OpenDone.b1))
0x6CA8	0x0E04      	MOVLW       4
0x6CAA	0x0103      	MOVLB       3
0x6CAC	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x6CAE	0xF009EC28  	CALL        _CheckTask, 0
0x6CB2	0x5200      	MOVF        R0, 1 
0x6CB4	0xE109      	BNZ         L__State8856
0x6CB6	0x0100      	MOVLB       0
0x6CB8	0x51B6      	MOVF        _OverloadCheckFlag2, 0, 1
0x6CBA	0x0A01      	XORLW       1
0x6CBC	0xE104      	BNZ         L__State8857
0x6CBE	0x0102      	MOVLB       2
0x6CC0	0xA39F      	BTFSS       _Events+5, 1, 1
0x6CC2	0xD001      	BRA         L__State8857
0x6CC4	0xD001      	BRA         L__State8856
L__State8857:
0x6CC6	0xD02F      	BRA         L_State8287
L__State8856:
0x6CC8	0x0100      	MOVLB       0
0x6CCA	0xA3E1      	BTFSS       _OpenDone, 1, 1
0x6CCC	0xD02C      	BRA         L_State8287
L__State8855:
;FirmV_0_7_0.c,1203 :: 		{OpenDone.b1=0; StopMotor(2);Logger("S8 Motor2 Stop",1);}
0x6CCE	0x93E1      	BCF         _OpenDone, 1, 1
0x6CD0	0x0E02      	MOVLW       2
0x6CD2	0x0103      	MOVLB       3
0x6CD4	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x6CD6	0xF008ECA6  	CALL        _StopMotor, 0
0x6CDA	0x0E53      	MOVLW       83
0x6CDC	0x0103      	MOVLB       3
0x6CDE	0x6F36      	MOVWF       ?lstr64_FirmV_0_7_0, 1
0x6CE0	0x0E38      	MOVLW       56
0x6CE2	0x6F37      	MOVWF       ?lstr64_FirmV_0_7_0+1, 1
0x6CE4	0x0E20      	MOVLW       32
0x6CE6	0x6F38      	MOVWF       ?lstr64_FirmV_0_7_0+2, 1
0x6CE8	0x0E4D      	MOVLW       77
0x6CEA	0x6F39      	MOVWF       ?lstr64_FirmV_0_7_0+3, 1
0x6CEC	0x0E6F      	MOVLW       111
0x6CEE	0x6F3A      	MOVWF       ?lstr64_FirmV_0_7_0+4, 1
0x6CF0	0x0E74      	MOVLW       116
0x6CF2	0x6F3B      	MOVWF       ?lstr64_FirmV_0_7_0+5, 1
0x6CF4	0x0E6F      	MOVLW       111
0x6CF6	0x6F3C      	MOVWF       ?lstr64_FirmV_0_7_0+6, 1
0x6CF8	0x0E72      	MOVLW       114
0x6CFA	0x6F3D      	MOVWF       ?lstr64_FirmV_0_7_0+7, 1
0x6CFC	0x0E32      	MOVLW       50
0x6CFE	0x6F3E      	MOVWF       ?lstr64_FirmV_0_7_0+8, 1
0x6D00	0x0E20      	MOVLW       32
0x6D02	0x6F3F      	MOVWF       ?lstr64_FirmV_0_7_0+9, 1
0x6D04	0x0E53      	MOVLW       83
0x6D06	0x6F40      	MOVWF       ?lstr64_FirmV_0_7_0+10, 1
0x6D08	0x0E74      	MOVLW       116
0x6D0A	0x6F41      	MOVWF       ?lstr64_FirmV_0_7_0+11, 1
0x6D0C	0x0E6F      	MOVLW       111
0x6D0E	0x6F42      	MOVWF       ?lstr64_FirmV_0_7_0+12, 1
0x6D10	0x0E70      	MOVLW       112
0x6D12	0x6F43      	MOVWF       ?lstr64_FirmV_0_7_0+13, 1
0x6D14	0x6B44      	CLRF        ?lstr64_FirmV_0_7_0+14, 1
0x6D16	0x0E36      	MOVLW       ?lstr64_FirmV_0_7_0
0x6D18	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x6D1A	0x0E03      	MOVLW       hi_addr(?lstr64_FirmV_0_7_0)
0x6D1C	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x6D1E	0x0E01      	MOVLW       1
0x6D20	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x6D22	0xF009EC69  	CALL        _Logger, 0
L_State8287:
;FirmV_0_7_0.c,1205 :: 		if(CheckTask(12))
0x6D26	0x0E0C      	MOVLW       12
0x6D28	0x0103      	MOVLB       3
0x6D2A	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x6D2C	0xF009EC28  	CALL        _CheckTask, 0
0x6D30	0x5200      	MOVF        R0, 1 
0x6D32	0xE001      	BZ          L_State8288
;FirmV_0_7_0.c,1206 :: 		{Lock=1;}
0x6D34	0x8C83      	BSF         PORTD, 6 
L_State8288:
;FirmV_0_7_0.c,1208 :: 		if((Door2OpenTime==0)||(ActiveDoors==1))
0x6D36	0x0102      	MOVLB       2
0x6D38	0x5198      	MOVF        _Door2OpenTime, 0, 1
0x6D3A	0x0A00      	XORLW       0
0x6D3C	0xE005      	BZ          L__State8854
0x6D3E	0x0101      	MOVLB       1
0x6D40	0x5132      	MOVF        _ActiveDoors, 0, 1
0x6D42	0x0A01      	XORLW       1
0x6D44	0xE001      	BZ          L__State8854
0x6D46	0xD002      	BRA         L_State8291
L__State8854:
;FirmV_0_7_0.c,1209 :: 		OpenDone.b1=0;
0x6D48	0x0100      	MOVLB       0
0x6D4A	0x93E1      	BCF         _OpenDone, 1, 1
L_State8291:
;FirmV_0_7_0.c,1211 :: 		if((Events.Photocell.b0==1)&&(OpenPhEnable))
0x6D4C	0x0102      	MOVLB       2
0x6D4E	0xA1A0      	BTFSS       _Events+6, 0, 1
0x6D50	0xD055      	BRA         L_State8294
0x6D52	0x5399      	MOVF        _OpenPhEnable, 1, 1
0x6D54	0xE053      	BZ          L_State8294
L__State8853:
;FirmV_0_7_0.c,1212 :: 		{StopMotor(1); StopMotor(2);OverloadCheckFlag1=0;OverloadCheckFlag2=0; State=5;Logger("S8 Photocell Int",1);ClearTasks(9);
0x6D56	0x0E01      	MOVLW       1
0x6D58	0x0103      	MOVLB       3
0x6D5A	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x6D5C	0xF008ECA6  	CALL        _StopMotor, 0
0x6D60	0x0E02      	MOVLW       2
0x6D62	0x0103      	MOVLB       3
0x6D64	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x6D66	0xF008ECA6  	CALL        _StopMotor, 0
0x6D6A	0x0100      	MOVLB       0
0x6D6C	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
0x6D6E	0x6BB6      	CLRF        _OverloadCheckFlag2, 1
0x6D70	0x0E05      	MOVLW       5
0x6D72	0x0101      	MOVLB       1
0x6D74	0x6F44      	MOVWF       _State, 1
0x6D76	0x0ECE      	MOVLW       ?ICS?lstr65_FirmV_0_7_0
0x6D78	0x6EF6      	MOVWF       4086 
0x6D7A	0x0E8B      	MOVLW       hi_addr(?ICS?lstr65_FirmV_0_7_0)
0x6D7C	0x6EF7      	MOVWF       TBLPTRH 
0x6D7E	0x0E00      	MOVLW       higher_addr(?ICS?lstr65_FirmV_0_7_0)
0x6D80	0x6EF8      	MOVWF       TBLPTRU 
0x6D82	0x0E45      	MOVLW       ?lstr65_FirmV_0_7_0
0x6D84	0x6EE1      	MOVWF       FSR1L 
0x6D86	0x0E03      	MOVLW       hi_addr(?lstr65_FirmV_0_7_0)
0x6D88	0x6EE2      	MOVWF       FSR1H 
0x6D8A	0x0E11      	MOVLW       17
0x6D8C	0x6E00      	MOVWF       R0 
0x6D8E	0x0E01      	MOVLW       1
0x6D90	0x6E01      	MOVWF       R1 
0x6D92	0xF005EC2B  	CALL        ___CC2DW, 0
0x6D96	0x0E45      	MOVLW       ?lstr65_FirmV_0_7_0
0x6D98	0x0103      	MOVLB       3
0x6D9A	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x6D9C	0x0E03      	MOVLW       hi_addr(?lstr65_FirmV_0_7_0)
0x6D9E	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x6DA0	0x0E01      	MOVLW       1
0x6DA2	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x6DA4	0xF009EC69  	CALL        _Logger, 0
0x6DA8	0x0E09      	MOVLW       9
0x6DAA	0x0103      	MOVLB       3
0x6DAC	0x6FD9      	MOVWF       FARG_ClearTasks_except, 1
0x6DAE	0xF00AEC5C  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,1213 :: 		memcpy(LCDLine1,_stop,16);memcpy(LCDLine2,_ErrPhoto,16);LCDUpdateFlag=1;LCDLines=2;}
0x6DB2	0x0EBD      	MOVLW       _LCDLine1
0x6DB4	0x0105      	MOVLB       5
0x6DB6	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x6DB8	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x6DBA	0x0106      	MOVLB       6
0x6DBC	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x6DBE	0x0E56      	MOVLW       __stop
0x6DC0	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x6DC2	0x0E01      	MOVLW       hi_addr(__stop)
0x6DC4	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x6DC6	0x0E10      	MOVLW       16
0x6DC8	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x6DCA	0x0E00      	MOVLW       0
0x6DCC	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x6DCE	0xF001EC0D  	CALL        _memcpy, 0
0x6DD2	0x0EA3      	MOVLW       _LCDLine2
0x6DD4	0x0105      	MOVLB       5
0x6DD6	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x6DD8	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x6DDA	0x0106      	MOVLB       6
0x6DDC	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x6DDE	0x0E33      	MOVLW       __errPhoto
0x6DE0	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x6DE2	0x0E01      	MOVLW       hi_addr(__errPhoto)
0x6DE4	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x6DE6	0x0E10      	MOVLW       16
0x6DE8	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x6DEA	0x0E00      	MOVLW       0
0x6DEC	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x6DEE	0xF001EC0D  	CALL        _memcpy, 0
0x6DF2	0x0E01      	MOVLW       1
0x6DF4	0x0100      	MOVLB       0
0x6DF6	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
0x6DF8	0x0E02      	MOVLW       2
0x6DFA	0x6FB4      	MOVWF       _LCDLines, 1
L_State8294:
;FirmV_0_7_0.c,1215 :: 		if((Events.Remote!=0))
0x6DFC	0x0102      	MOVLB       2
0x6DFE	0x519E      	MOVF        _Events+4, 0, 1
0x6E00	0x0A00      	XORLW       0
0x6E02	0xE053      	BZ          L_State8295
;FirmV_0_7_0.c,1216 :: 		{StopMotor(1); StopMotor(2); State=5;OverloadCheckFlag1=0;OverloadCheckFlag2=0; Logger("S8 Motors Stoped (Remote)",1);ClearTasks(9);
0x6E04	0x0E01      	MOVLW       1
0x6E06	0x0103      	MOVLB       3
0x6E08	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x6E0A	0xF008ECA6  	CALL        _StopMotor, 0
0x6E0E	0x0E02      	MOVLW       2
0x6E10	0x0103      	MOVLB       3
0x6E12	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x6E14	0xF008ECA6  	CALL        _StopMotor, 0
0x6E18	0x0E05      	MOVLW       5
0x6E1A	0x0101      	MOVLB       1
0x6E1C	0x6F44      	MOVWF       _State, 1
0x6E1E	0x0100      	MOVLB       0
0x6E20	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
0x6E22	0x6BB6      	CLRF        _OverloadCheckFlag2, 1
0x6E24	0x0EDF      	MOVLW       ?ICS?lstr66_FirmV_0_7_0
0x6E26	0x6EF6      	MOVWF       4086 
0x6E28	0x0E8B      	MOVLW       hi_addr(?ICS?lstr66_FirmV_0_7_0)
0x6E2A	0x6EF7      	MOVWF       TBLPTRH 
0x6E2C	0x0E00      	MOVLW       higher_addr(?ICS?lstr66_FirmV_0_7_0)
0x6E2E	0x6EF8      	MOVWF       TBLPTRU 
0x6E30	0x0E56      	MOVLW       ?lstr66_FirmV_0_7_0
0x6E32	0x6EE1      	MOVWF       FSR1L 
0x6E34	0x0E03      	MOVLW       hi_addr(?lstr66_FirmV_0_7_0)
0x6E36	0x6EE2      	MOVWF       FSR1H 
0x6E38	0x0E1A      	MOVLW       26
0x6E3A	0x6E00      	MOVWF       R0 
0x6E3C	0x0E01      	MOVLW       1
0x6E3E	0x6E01      	MOVWF       R1 
0x6E40	0xF005EC2B  	CALL        ___CC2DW, 0
0x6E44	0x0E56      	MOVLW       ?lstr66_FirmV_0_7_0
0x6E46	0x0103      	MOVLB       3
0x6E48	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x6E4A	0x0E03      	MOVLW       hi_addr(?lstr66_FirmV_0_7_0)
0x6E4C	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x6E4E	0x0E01      	MOVLW       1
0x6E50	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x6E52	0xF009EC69  	CALL        _Logger, 0
0x6E56	0x0E09      	MOVLW       9
0x6E58	0x0103      	MOVLB       3
0x6E5A	0x6FD9      	MOVWF       FARG_ClearTasks_except, 1
0x6E5C	0xF00AEC5C  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,1217 :: 		memcpy(LCDLine1,_stop,16);memcpy(LCDLine2,_ErrRemote,16);LCDUpdateFlag=1;LCDLines=2;}
0x6E60	0x0EBD      	MOVLW       _LCDLine1
0x6E62	0x0105      	MOVLB       5
0x6E64	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x6E66	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x6E68	0x0106      	MOVLB       6
0x6E6A	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x6E6C	0x0E56      	MOVLW       __stop
0x6E6E	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x6E70	0x0E01      	MOVLW       hi_addr(__stop)
0x6E72	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x6E74	0x0E10      	MOVLW       16
0x6E76	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x6E78	0x0E00      	MOVLW       0
0x6E7A	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x6E7C	0xF001EC0D  	CALL        _memcpy, 0
0x6E80	0x0EA3      	MOVLW       _LCDLine2
0x6E82	0x0105      	MOVLB       5
0x6E84	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x6E86	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x6E88	0x0106      	MOVLB       6
0x6E8A	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x6E8C	0x0E67      	MOVLW       __errRemote
0x6E8E	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x6E90	0x0E01      	MOVLW       hi_addr(__errRemote)
0x6E92	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x6E94	0x0E10      	MOVLW       16
0x6E96	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x6E98	0x0E00      	MOVLW       0
0x6E9A	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x6E9C	0xF001EC0D  	CALL        _memcpy, 0
0x6EA0	0x0E01      	MOVLW       1
0x6EA2	0x0100      	MOVLB       0
0x6EA4	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
0x6EA6	0x0E02      	MOVLW       2
0x6EA8	0x6FB4      	MOVWF       _LCDLines, 1
L_State8295:
;FirmV_0_7_0.c,1219 :: 		if((Events.Limiter==1)&&(LimiterEnable))
0x6EAA	0x0102      	MOVLB       2
0x6EAC	0x51A1      	MOVF        _Events+7, 0, 1
0x6EAE	0x0A01      	XORLW       1
0x6EB0	0xE155      	BNZ         L_State8298
0x6EB2	0x53A4      	MOVF        _LimiterEnable, 1, 1
0x6EB4	0xE053      	BZ          L_State8298
L__State8852:
;FirmV_0_7_0.c,1220 :: 		{StopMotor(1); StopMotor(2); State=5;OverloadCheckFlag1=0;OverloadCheckFlag2=0; Logger("S8 Limit Switch Stop",1);ClearTasks(9);
0x6EB6	0x0E01      	MOVLW       1
0x6EB8	0x0103      	MOVLB       3
0x6EBA	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x6EBC	0xF008ECA6  	CALL        _StopMotor, 0
0x6EC0	0x0E02      	MOVLW       2
0x6EC2	0x0103      	MOVLB       3
0x6EC4	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x6EC6	0xF008ECA6  	CALL        _StopMotor, 0
0x6ECA	0x0E05      	MOVLW       5
0x6ECC	0x0101      	MOVLB       1
0x6ECE	0x6F44      	MOVWF       _State, 1
0x6ED0	0x0100      	MOVLB       0
0x6ED2	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
0x6ED4	0x6BB6      	CLRF        _OverloadCheckFlag2, 1
0x6ED6	0x0EF9      	MOVLW       ?ICS?lstr67_FirmV_0_7_0
0x6ED8	0x6EF6      	MOVWF       4086 
0x6EDA	0x0E8B      	MOVLW       hi_addr(?ICS?lstr67_FirmV_0_7_0)
0x6EDC	0x6EF7      	MOVWF       TBLPTRH 
0x6EDE	0x0E00      	MOVLW       higher_addr(?ICS?lstr67_FirmV_0_7_0)
0x6EE0	0x6EF8      	MOVWF       TBLPTRU 
0x6EE2	0x0E70      	MOVLW       ?lstr67_FirmV_0_7_0
0x6EE4	0x6EE1      	MOVWF       FSR1L 
0x6EE6	0x0E03      	MOVLW       hi_addr(?lstr67_FirmV_0_7_0)
0x6EE8	0x6EE2      	MOVWF       FSR1H 
0x6EEA	0x0E15      	MOVLW       21
0x6EEC	0x6E00      	MOVWF       R0 
0x6EEE	0x0E01      	MOVLW       1
0x6EF0	0x6E01      	MOVWF       R1 
0x6EF2	0xF005EC2B  	CALL        ___CC2DW, 0
0x6EF6	0x0E70      	MOVLW       ?lstr67_FirmV_0_7_0
0x6EF8	0x0103      	MOVLB       3
0x6EFA	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x6EFC	0x0E03      	MOVLW       hi_addr(?lstr67_FirmV_0_7_0)
0x6EFE	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x6F00	0x0E01      	MOVLW       1
0x6F02	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x6F04	0xF009EC69  	CALL        _Logger, 0
0x6F08	0x0E09      	MOVLW       9
0x6F0A	0x0103      	MOVLB       3
0x6F0C	0x6FD9      	MOVWF       FARG_ClearTasks_except, 1
0x6F0E	0xF00AEC5C  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,1221 :: 		memcpy(LCDLine1,_stop,16);memcpy(LCDLine2,_ErrLimit,16);LCDUpdateFlag=1;LCDLines=2;}
0x6F12	0x0EBD      	MOVLW       _LCDLine1
0x6F14	0x0105      	MOVLB       5
0x6F16	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x6F18	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x6F1A	0x0106      	MOVLB       6
0x6F1C	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x6F1E	0x0E56      	MOVLW       __stop
0x6F20	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x6F22	0x0E01      	MOVLW       hi_addr(__stop)
0x6F24	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x6F26	0x0E10      	MOVLW       16
0x6F28	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x6F2A	0x0E00      	MOVLW       0
0x6F2C	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x6F2E	0xF001EC0D  	CALL        _memcpy, 0
0x6F32	0x0EA3      	MOVLW       _LCDLine2
0x6F34	0x0105      	MOVLB       5
0x6F36	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x6F38	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x6F3A	0x0106      	MOVLB       6
0x6F3C	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x6F3E	0x0E78      	MOVLW       __errLimit
0x6F40	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x6F42	0x0E01      	MOVLW       hi_addr(__errLimit)
0x6F44	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x6F46	0x0E10      	MOVLW       16
0x6F48	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x6F4A	0x0E00      	MOVLW       0
0x6F4C	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x6F4E	0xF001EC0D  	CALL        _memcpy, 0
0x6F52	0x0E01      	MOVLW       1
0x6F54	0x0100      	MOVLB       0
0x6F56	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
0x6F58	0x0E02      	MOVLW       2
0x6F5A	0x6FB4      	MOVWF       _LCDLines, 1
L_State8298:
0x6F5C	0x0100      	MOVLB       0
;FirmV_0_7_0.c,1223 :: 		if(OpenDone==0)
0x6F5E	0x51E1      	MOVF        _OpenDone, 0, 1
0x6F60	0x0A00      	XORLW       0
0x6F62	0xA4D8      	BTFSS       STATUS, 2 
0x6F64	0xD08E      	BRA         L_State8299
;FirmV_0_7_0.c,1224 :: 		if(LockEnable)
0x6F66	0x0102      	MOVLB       2
0x6F68	0x53A3      	MOVF        _LockEnable, 1, 1
0x6F6A	0xE071      	BZ          L_State8300
;FirmV_0_7_0.c,1225 :: 		{StartMotor(1,_Close);StartMotor(2,_Close);SetMotorSpeed(1,Motor2FullSpeed);OverloadCheckFlag1=0; M1isSlow=0;SetMotorSpeed(Motor1FullSpeed,1);OverloadCheckFlag2=0; M2isSlow=0;
0x6F6C	0x0E01      	MOVLW       1
0x6F6E	0x0103      	MOVLB       3
0x6F70	0x6FD9      	MOVWF       FARG_StartMotor_Mx, 1
0x6F72	0x6BDA      	CLRF        FARG_StartMotor_Dir, 1
0x6F74	0xF011ECCA  	CALL        _StartMotor, 0
0x6F78	0x0E02      	MOVLW       2
0x6F7A	0x0103      	MOVLB       3
0x6F7C	0x6FD9      	MOVWF       FARG_StartMotor_Mx, 1
0x6F7E	0x6BDA      	CLRF        FARG_StartMotor_Dir, 1
0x6F80	0xF011ECCA  	CALL        _StartMotor, 0
0x6F84	0x0E01      	MOVLW       1
0x6F86	0x0103      	MOVLB       3
0x6F88	0x6FD9      	MOVWF       FARG_SetMotorSpeed_M1FullSpeed, 1
0x6F8A	0xF3DAC0B8  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x6F8E	0xF011ECBA  	CALL        _SetMotorSpeed, 0
0x6F92	0x0100      	MOVLB       0
0x6F94	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
0x6F96	0x6BBA      	CLRF        _M1isSlow, 1
0x6F98	0xF3D9C0B5  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x6F9C	0x0E01      	MOVLW       1
0x6F9E	0x0103      	MOVLB       3
0x6FA0	0x6FDA      	MOVWF       FARG_SetMotorSpeed_M2FullSpeed, 1
0x6FA2	0xF011ECBA  	CALL        _SetMotorSpeed, 0
0x6FA6	0x0100      	MOVLB       0
0x6FA8	0x6BB6      	CLRF        _OverloadCheckFlag2, 1
0x6FAA	0x6BB7      	CLRF        _M2isSlow, 1
;FirmV_0_7_0.c,1226 :: 		AddTask(ms500+RelaseTime,3);AddTask(ms500+RelaseTime,4);AddTask(ms500+1+RelaseTime,13);OpenDone.b2=1;}
0x6FAC	0x0E01      	MOVLW       1
0x6FAE	0x0101      	MOVLB       1
0x6FB0	0x2504      	ADDWF       _ms500, 0, 1
0x6FB2	0x0103      	MOVLB       3
0x6FB4	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x6FB6	0x0E00      	MOVLW       0
0x6FB8	0x0101      	MOVLB       1
0x6FBA	0x2105      	ADDWFC      _ms500+1, 0, 1
0x6FBC	0x0103      	MOVLB       3
0x6FBE	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x6FC0	0x0E00      	MOVLW       0
0x6FC2	0x0101      	MOVLB       1
0x6FC4	0x2106      	ADDWFC      _ms500+2, 0, 1
0x6FC6	0x0103      	MOVLB       3
0x6FC8	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x6FCA	0x0E00      	MOVLW       0
0x6FCC	0x0101      	MOVLB       1
0x6FCE	0x2107      	ADDWFC      _ms500+3, 0, 1
0x6FD0	0x0103      	MOVLB       3
0x6FD2	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x6FD4	0x0E03      	MOVLW       3
0x6FD6	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x6FD8	0xF008ECB5  	CALL        _AddTask, 0
0x6FDC	0x0E01      	MOVLW       1
0x6FDE	0x0101      	MOVLB       1
0x6FE0	0x2504      	ADDWF       _ms500, 0, 1
0x6FE2	0x0103      	MOVLB       3
0x6FE4	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x6FE6	0x0E00      	MOVLW       0
0x6FE8	0x0101      	MOVLB       1
0x6FEA	0x2105      	ADDWFC      _ms500+1, 0, 1
0x6FEC	0x0103      	MOVLB       3
0x6FEE	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x6FF0	0x0E00      	MOVLW       0
0x6FF2	0x0101      	MOVLB       1
0x6FF4	0x2106      	ADDWFC      _ms500+2, 0, 1
0x6FF6	0x0103      	MOVLB       3
0x6FF8	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x6FFA	0x0E00      	MOVLW       0
0x6FFC	0x0101      	MOVLB       1
0x6FFE	0x2107      	ADDWFC      _ms500+3, 0, 1
0x7000	0x0103      	MOVLB       3
0x7002	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x7004	0x0E04      	MOVLW       4
0x7006	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x7008	0xF008ECB5  	CALL        _AddTask, 0
0x700C	0x0E01      	MOVLW       1
0x700E	0x0101      	MOVLB       1
0x7010	0x2504      	ADDWF       _ms500, 0, 1
0x7012	0x0103      	MOVLB       3
0x7014	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x7016	0x0E00      	MOVLW       0
0x7018	0x0101      	MOVLB       1
0x701A	0x2105      	ADDWFC      _ms500+1, 0, 1
0x701C	0x0103      	MOVLB       3
0x701E	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x7020	0x0E00      	MOVLW       0
0x7022	0x0101      	MOVLB       1
0x7024	0x2106      	ADDWFC      _ms500+2, 0, 1
0x7026	0x0103      	MOVLB       3
0x7028	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x702A	0x0E00      	MOVLW       0
0x702C	0x0101      	MOVLB       1
0x702E	0x2107      	ADDWFC      _ms500+3, 0, 1
0x7030	0x0103      	MOVLB       3
0x7032	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x7034	0x0E01      	MOVLW       1
0x7036	0x27D9      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x7038	0x0E00      	MOVLW       0
0x703A	0x23DA      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x703C	0x23DB      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x703E	0x23DC      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x7040	0x0E0D      	MOVLW       13
0x7042	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x7044	0xF008ECB5  	CALL        _AddTask, 0
0x7048	0x0100      	MOVLB       0
0x704A	0x85E1      	BSF         _OpenDone, 2, 1
0x704C	0xD01A      	BRA         L_State8301
L_State8300:
;FirmV_0_7_0.c,1228 :: 		{AddTask(ms500+1,13);OpenDone.b2=1;}
0x704E	0x0E01      	MOVLW       1
0x7050	0x0101      	MOVLB       1
0x7052	0x2504      	ADDWF       _ms500, 0, 1
0x7054	0x0103      	MOVLB       3
0x7056	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x7058	0x0E00      	MOVLW       0
0x705A	0x0101      	MOVLB       1
0x705C	0x2105      	ADDWFC      _ms500+1, 0, 1
0x705E	0x0103      	MOVLB       3
0x7060	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x7062	0x0E00      	MOVLW       0
0x7064	0x0101      	MOVLB       1
0x7066	0x2106      	ADDWFC      _ms500+2, 0, 1
0x7068	0x0103      	MOVLB       3
0x706A	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x706C	0x0E00      	MOVLW       0
0x706E	0x0101      	MOVLB       1
0x7070	0x2107      	ADDWFC      _ms500+3, 0, 1
0x7072	0x0103      	MOVLB       3
0x7074	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x7076	0x0E0D      	MOVLW       13
0x7078	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x707A	0xF008ECB5  	CALL        _AddTask, 0
0x707E	0x0100      	MOVLB       0
0x7080	0x85E1      	BSF         _OpenDone, 2, 1
L_State8301:
L_State8299:
;FirmV_0_7_0.c,1231 :: 		if(CheckTask(13))
0x7082	0x0E0D      	MOVLW       13
0x7084	0x0103      	MOVLB       3
0x7086	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x7088	0xF009EC28  	CALL        _CheckTask, 0
0x708C	0x5200      	MOVF        R0, 1 
0x708E	0xE02E      	BZ          L_State8302
;FirmV_0_7_0.c,1232 :: 		{State=2; PassFlag=0;ClearTasks(9);memcpy(LCDLine1,_open,16);memcpy(LCDLine2,_Blank,16);LCDUpdateFlag=1;LCDLines=1;}
0x7090	0x0E02      	MOVLW       2
0x7092	0x0101      	MOVLB       1
0x7094	0x6F44      	MOVWF       _State, 1
0x7096	0x6B08      	CLRF        _PassFlag, 1
0x7098	0x0E09      	MOVLW       9
0x709A	0x0103      	MOVLB       3
0x709C	0x6FD9      	MOVWF       FARG_ClearTasks_except, 1
0x709E	0xF00AEC5C  	CALL        _ClearTasks, 0
0x70A2	0x0EBD      	MOVLW       _LCDLine1
0x70A4	0x0105      	MOVLB       5
0x70A6	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x70A8	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x70AA	0x0106      	MOVLB       6
0x70AC	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x70AE	0x0E09      	MOVLW       __open
0x70B0	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x70B2	0x0E01      	MOVLW       hi_addr(__open)
0x70B4	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x70B6	0x0E10      	MOVLW       16
0x70B8	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x70BA	0x0E00      	MOVLW       0
0x70BC	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x70BE	0xF001EC0D  	CALL        _memcpy, 0
0x70C2	0x0EA3      	MOVLW       _LCDLine2
0x70C4	0x0105      	MOVLB       5
0x70C6	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x70C8	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x70CA	0x0106      	MOVLB       6
0x70CC	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x70CE	0x0E91      	MOVLW       __Blank
0x70D0	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x70D2	0x0E00      	MOVLW       hi_addr(__Blank)
0x70D4	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x70D6	0x0E10      	MOVLW       16
0x70D8	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x70DA	0x0E00      	MOVLW       0
0x70DC	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x70DE	0xF001EC0D  	CALL        _memcpy, 0
0x70E2	0x0E01      	MOVLW       1
0x70E4	0x0100      	MOVLB       0
0x70E6	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
0x70E8	0x0E01      	MOVLW       1
0x70EA	0x6FB4      	MOVWF       _LCDLines, 1
L_State8302:
;FirmV_0_7_0.c,1234 :: 		if((State==5)||(State==6))
0x70EC	0x0101      	MOVLB       1
0x70EE	0x5144      	MOVF        _State, 0, 1
0x70F0	0x0A05      	XORLW       5
0x70F2	0xE004      	BZ          L__State8851
0x70F4	0x5144      	MOVF        _State, 0, 1
0x70F6	0x0A06      	XORLW       6
0x70F8	0xE001      	BZ          L__State8851
0x70FA	0xD051      	BRA         L_State8305
L__State8851:
;FirmV_0_7_0.c,1235 :: 		{ClearTasks(0);if(AutoCloseTime!=0){AddTask(ms500+AutoCloseTime,9);Logger("S8 Autoclose Renewed",1);memcpy(LCDLine2,_autoclose,16);LCDUpdateFlag=1;LCDLines=2;}}
0x70FC	0x0103      	MOVLB       3
0x70FE	0x6BD9      	CLRF        FARG_ClearTasks_except, 1
0x7100	0xF00AEC5C  	CALL        _ClearTasks, 0
0x7104	0x0E00      	MOVLW       0
0x7106	0x0102      	MOVLB       2
0x7108	0x1996      	XORWF       _AutoCloseTime+1, 0, 1
0x710A	0xE102      	BNZ         L__State8938
0x710C	0x0E00      	MOVLW       0
0x710E	0x1995      	XORWF       _AutoCloseTime, 0, 1
L__State8938:
0x7110	0xE046      	BZ          L_State8306
0x7112	0x5195      	MOVF        _AutoCloseTime, 0, 1
0x7114	0x0101      	MOVLB       1
0x7116	0x2504      	ADDWF       _ms500, 0, 1
0x7118	0x0103      	MOVLB       3
0x711A	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x711C	0x0102      	MOVLB       2
0x711E	0x5196      	MOVF        _AutoCloseTime+1, 0, 1
0x7120	0x0101      	MOVLB       1
0x7122	0x2105      	ADDWFC      _ms500+1, 0, 1
0x7124	0x0103      	MOVLB       3
0x7126	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x7128	0x0E00      	MOVLW       0
0x712A	0x0101      	MOVLB       1
0x712C	0x2106      	ADDWFC      _ms500+2, 0, 1
0x712E	0x0103      	MOVLB       3
0x7130	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x7132	0x0E00      	MOVLW       0
0x7134	0x0101      	MOVLB       1
0x7136	0x2107      	ADDWFC      _ms500+3, 0, 1
0x7138	0x0103      	MOVLB       3
0x713A	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x713C	0x0E09      	MOVLW       9
0x713E	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x7140	0xF008ECB5  	CALL        _AddTask, 0
0x7144	0x0E0E      	MOVLW       ?ICS?lstr68_FirmV_0_7_0
0x7146	0x6EF6      	MOVWF       4086 
0x7148	0x0E8C      	MOVLW       hi_addr(?ICS?lstr68_FirmV_0_7_0)
0x714A	0x6EF7      	MOVWF       TBLPTRH 
0x714C	0x0E00      	MOVLW       higher_addr(?ICS?lstr68_FirmV_0_7_0)
0x714E	0x6EF8      	MOVWF       TBLPTRU 
0x7150	0x0E85      	MOVLW       ?lstr68_FirmV_0_7_0
0x7152	0x6EE1      	MOVWF       FSR1L 
0x7154	0x0E03      	MOVLW       hi_addr(?lstr68_FirmV_0_7_0)
0x7156	0x6EE2      	MOVWF       FSR1H 
0x7158	0x0E15      	MOVLW       21
0x715A	0x6E00      	MOVWF       R0 
0x715C	0x0E01      	MOVLW       1
0x715E	0x6E01      	MOVWF       R1 
0x7160	0xF005EC2B  	CALL        ___CC2DW, 0
0x7164	0x0E85      	MOVLW       ?lstr68_FirmV_0_7_0
0x7166	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x7168	0x0E03      	MOVLW       hi_addr(?lstr68_FirmV_0_7_0)
0x716A	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x716C	0x0E01      	MOVLW       1
0x716E	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x7170	0xF009EC69  	CALL        _Logger, 0
0x7174	0x0EA3      	MOVLW       _LCDLine2
0x7176	0x0105      	MOVLB       5
0x7178	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x717A	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x717C	0x0106      	MOVLB       6
0x717E	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x7180	0x0EE2      	MOVLW       __autoclose
0x7182	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x7184	0x0E00      	MOVLW       hi_addr(__autoclose)
0x7186	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x7188	0x0E10      	MOVLW       16
0x718A	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x718C	0x0E00      	MOVLW       0
0x718E	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x7190	0xF001EC0D  	CALL        _memcpy, 0
0x7194	0x0E01      	MOVLW       1
0x7196	0x0100      	MOVLB       0
0x7198	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
0x719A	0x0E02      	MOVLW       2
0x719C	0x6FB4      	MOVWF       _LCDLines, 1
L_State8306:
L_State8305:
;FirmV_0_7_0.c,1238 :: 		}
0x719E	0x0012      	RETURN      0
; end of _State8
_State3:
;FirmV_0_7_0.c,741 :: 		void State3()
;FirmV_0_7_0.c,743 :: 		Flasher=1;
0x71A0	0x8E83      	BSF         PORTD, 7 
;FirmV_0_7_0.c,744 :: 		FlashFlag=1;
0x71A2	0x0E01      	MOVLW       1
0x71A4	0x0100      	MOVLB       0
0x71A6	0x6FBC      	MOVWF       _FlashFlag, 1
;FirmV_0_7_0.c,746 :: 		if(CheckTask(1))
0x71A8	0x0E01      	MOVLW       1
0x71AA	0x0103      	MOVLB       3
0x71AC	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x71AE	0xF009EC28  	CALL        _CheckTask, 0
0x71B2	0x5200      	MOVF        R0, 1 
0x71B4	0xE054      	BZ          L_State3127
;FirmV_0_7_0.c,747 :: 		{StartMotor(1,_Open);Logger("S3 Motor1Start",1); Lock=0;memcpy(LCDLine1,_opening,16);memcpy(LCDLine2,_Blank,16);LCDUpdateFlag=1;LCDLines=1;}
0x71B6	0x0E01      	MOVLW       1
0x71B8	0x0103      	MOVLB       3
0x71BA	0x6FD9      	MOVWF       FARG_StartMotor_Mx, 1
0x71BC	0x0E01      	MOVLW       1
0x71BE	0x6FDA      	MOVWF       FARG_StartMotor_Dir, 1
0x71C0	0xF011ECCA  	CALL        _StartMotor, 0
0x71C4	0x0E53      	MOVLW       83
0x71C6	0x0102      	MOVLB       2
0x71C8	0x6FBF      	MOVWF       ?lstr7_FirmV_0_7_0, 1
0x71CA	0x0E33      	MOVLW       51
0x71CC	0x6FC0      	MOVWF       ?lstr7_FirmV_0_7_0+1, 1
0x71CE	0x0E20      	MOVLW       32
0x71D0	0x6FC1      	MOVWF       ?lstr7_FirmV_0_7_0+2, 1
0x71D2	0x0E4D      	MOVLW       77
0x71D4	0x6FC2      	MOVWF       ?lstr7_FirmV_0_7_0+3, 1
0x71D6	0x0E6F      	MOVLW       111
0x71D8	0x6FC3      	MOVWF       ?lstr7_FirmV_0_7_0+4, 1
0x71DA	0x0E74      	MOVLW       116
0x71DC	0x6FC4      	MOVWF       ?lstr7_FirmV_0_7_0+5, 1
0x71DE	0x0E6F      	MOVLW       111
0x71E0	0x6FC5      	MOVWF       ?lstr7_FirmV_0_7_0+6, 1
0x71E2	0x0E72      	MOVLW       114
0x71E4	0x6FC6      	MOVWF       ?lstr7_FirmV_0_7_0+7, 1
0x71E6	0x0E31      	MOVLW       49
0x71E8	0x6FC7      	MOVWF       ?lstr7_FirmV_0_7_0+8, 1
0x71EA	0x0E53      	MOVLW       83
0x71EC	0x6FC8      	MOVWF       ?lstr7_FirmV_0_7_0+9, 1
0x71EE	0x0E74      	MOVLW       116
0x71F0	0x6FC9      	MOVWF       ?lstr7_FirmV_0_7_0+10, 1
0x71F2	0x0E61      	MOVLW       97
0x71F4	0x6FCA      	MOVWF       ?lstr7_FirmV_0_7_0+11, 1
0x71F6	0x0E72      	MOVLW       114
0x71F8	0x6FCB      	MOVWF       ?lstr7_FirmV_0_7_0+12, 1
0x71FA	0x0E74      	MOVLW       116
0x71FC	0x6FCC      	MOVWF       ?lstr7_FirmV_0_7_0+13, 1
0x71FE	0x6BCD      	CLRF        ?lstr7_FirmV_0_7_0+14, 1
0x7200	0x0EBF      	MOVLW       ?lstr7_FirmV_0_7_0
0x7202	0x0103      	MOVLB       3
0x7204	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x7206	0x0E02      	MOVLW       hi_addr(?lstr7_FirmV_0_7_0)
0x7208	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x720A	0x0E01      	MOVLW       1
0x720C	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x720E	0xF009EC69  	CALL        _Logger, 0
0x7212	0x9C83      	BCF         PORTD, 6 
0x7214	0x0EBD      	MOVLW       _LCDLine1
0x7216	0x0105      	MOVLB       5
0x7218	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x721A	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x721C	0x0106      	MOVLB       6
0x721E	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x7220	0x0ECE      	MOVLW       __opening
0x7222	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x7224	0x0E00      	MOVLW       hi_addr(__opening)
0x7226	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x7228	0x0E10      	MOVLW       16
0x722A	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x722C	0x0E00      	MOVLW       0
0x722E	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x7230	0xF001EC0D  	CALL        _memcpy, 0
0x7234	0x0EA3      	MOVLW       _LCDLine2
0x7236	0x0105      	MOVLB       5
0x7238	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x723A	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x723C	0x0106      	MOVLB       6
0x723E	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x7240	0x0E91      	MOVLW       __Blank
0x7242	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x7244	0x0E00      	MOVLW       hi_addr(__Blank)
0x7246	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x7248	0x0E10      	MOVLW       16
0x724A	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x724C	0x0E00      	MOVLW       0
0x724E	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x7250	0xF001EC0D  	CALL        _memcpy, 0
0x7254	0x0E01      	MOVLW       1
0x7256	0x0100      	MOVLB       0
0x7258	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
0x725A	0x0E01      	MOVLW       1
0x725C	0x6FB4      	MOVWF       _LCDLines, 1
L_State3127:
;FirmV_0_7_0.c,749 :: 		if(CheckTask(2))
0x725E	0x0E02      	MOVLW       2
0x7260	0x0103      	MOVLB       3
0x7262	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x7264	0xF009EC28  	CALL        _CheckTask, 0
0x7268	0x5200      	MOVF        R0, 1 
0x726A	0xE02F      	BZ          L_State3128
;FirmV_0_7_0.c,750 :: 		{StartMotor(2,_Open);Logger("S3 Motor2Start",1); Lock=0;}
0x726C	0x0E02      	MOVLW       2
0x726E	0x0103      	MOVLB       3
0x7270	0x6FD9      	MOVWF       FARG_StartMotor_Mx, 1
0x7272	0x0E01      	MOVLW       1
0x7274	0x6FDA      	MOVWF       FARG_StartMotor_Dir, 1
0x7276	0xF011ECCA  	CALL        _StartMotor, 0
0x727A	0x0E53      	MOVLW       83
0x727C	0x0102      	MOVLB       2
0x727E	0x6FCE      	MOVWF       ?lstr8_FirmV_0_7_0, 1
0x7280	0x0E33      	MOVLW       51
0x7282	0x6FCF      	MOVWF       ?lstr8_FirmV_0_7_0+1, 1
0x7284	0x0E20      	MOVLW       32
0x7286	0x6FD0      	MOVWF       ?lstr8_FirmV_0_7_0+2, 1
0x7288	0x0E4D      	MOVLW       77
0x728A	0x6FD1      	MOVWF       ?lstr8_FirmV_0_7_0+3, 1
0x728C	0x0E6F      	MOVLW       111
0x728E	0x6FD2      	MOVWF       ?lstr8_FirmV_0_7_0+4, 1
0x7290	0x0E74      	MOVLW       116
0x7292	0x6FD3      	MOVWF       ?lstr8_FirmV_0_7_0+5, 1
0x7294	0x0E6F      	MOVLW       111
0x7296	0x6FD4      	MOVWF       ?lstr8_FirmV_0_7_0+6, 1
0x7298	0x0E72      	MOVLW       114
0x729A	0x6FD5      	MOVWF       ?lstr8_FirmV_0_7_0+7, 1
0x729C	0x0E32      	MOVLW       50
0x729E	0x6FD6      	MOVWF       ?lstr8_FirmV_0_7_0+8, 1
0x72A0	0x0E53      	MOVLW       83
0x72A2	0x6FD7      	MOVWF       ?lstr8_FirmV_0_7_0+9, 1
0x72A4	0x0E74      	MOVLW       116
0x72A6	0x6FD8      	MOVWF       ?lstr8_FirmV_0_7_0+10, 1
0x72A8	0x0E61      	MOVLW       97
0x72AA	0x6FD9      	MOVWF       ?lstr8_FirmV_0_7_0+11, 1
0x72AC	0x0E72      	MOVLW       114
0x72AE	0x6FDA      	MOVWF       ?lstr8_FirmV_0_7_0+12, 1
0x72B0	0x0E74      	MOVLW       116
0x72B2	0x6FDB      	MOVWF       ?lstr8_FirmV_0_7_0+13, 1
0x72B4	0x6BDC      	CLRF        ?lstr8_FirmV_0_7_0+14, 1
0x72B6	0x0ECE      	MOVLW       ?lstr8_FirmV_0_7_0
0x72B8	0x0103      	MOVLB       3
0x72BA	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x72BC	0x0E02      	MOVLW       hi_addr(?lstr8_FirmV_0_7_0)
0x72BE	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x72C0	0x0E01      	MOVLW       1
0x72C2	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x72C4	0xF009EC69  	CALL        _Logger, 0
0x72C8	0x9C83      	BCF         PORTD, 6 
L_State3128:
;FirmV_0_7_0.c,752 :: 		if(CheckTask(5))
0x72CA	0x0E05      	MOVLW       5
0x72CC	0x0103      	MOVLB       3
0x72CE	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x72D0	0xF009EC28  	CALL        _CheckTask, 0
0x72D4	0x5200      	MOVF        R0, 1 
0x72D6	0xE031      	BZ          L_State3129
;FirmV_0_7_0.c,753 :: 		{SetMotorSpeed(1,Motor2FullSpeed);OverloadCheckFlag1=0; M1isSlow=0;Logger("S3 Motor1 Fast",1);}
0x72D8	0x0E01      	MOVLW       1
0x72DA	0x0103      	MOVLB       3
0x72DC	0x6FD9      	MOVWF       FARG_SetMotorSpeed_M1FullSpeed, 1
0x72DE	0xF3DAC0B8  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x72E2	0xF011ECBA  	CALL        _SetMotorSpeed, 0
0x72E6	0x0100      	MOVLB       0
0x72E8	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
0x72EA	0x6BBA      	CLRF        _M1isSlow, 1
0x72EC	0x0E53      	MOVLW       83
0x72EE	0x0102      	MOVLB       2
0x72F0	0x6FDD      	MOVWF       ?lstr9_FirmV_0_7_0, 1
0x72F2	0x0E33      	MOVLW       51
0x72F4	0x6FDE      	MOVWF       ?lstr9_FirmV_0_7_0+1, 1
0x72F6	0x0E20      	MOVLW       32
0x72F8	0x6FDF      	MOVWF       ?lstr9_FirmV_0_7_0+2, 1
0x72FA	0x0E4D      	MOVLW       77
0x72FC	0x6FE0      	MOVWF       ?lstr9_FirmV_0_7_0+3, 1
0x72FE	0x0E6F      	MOVLW       111
0x7300	0x6FE1      	MOVWF       ?lstr9_FirmV_0_7_0+4, 1
0x7302	0x0E74      	MOVLW       116
0x7304	0x6FE2      	MOVWF       ?lstr9_FirmV_0_7_0+5, 1
0x7306	0x0E6F      	MOVLW       111
0x7308	0x6FE3      	MOVWF       ?lstr9_FirmV_0_7_0+6, 1
0x730A	0x0E72      	MOVLW       114
0x730C	0x6FE4      	MOVWF       ?lstr9_FirmV_0_7_0+7, 1
0x730E	0x0E31      	MOVLW       49
0x7310	0x6FE5      	MOVWF       ?lstr9_FirmV_0_7_0+8, 1
0x7312	0x0E20      	MOVLW       32
0x7314	0x6FE6      	MOVWF       ?lstr9_FirmV_0_7_0+9, 1
0x7316	0x0E46      	MOVLW       70
0x7318	0x6FE7      	MOVWF       ?lstr9_FirmV_0_7_0+10, 1
0x731A	0x0E61      	MOVLW       97
0x731C	0x6FE8      	MOVWF       ?lstr9_FirmV_0_7_0+11, 1
0x731E	0x0E73      	MOVLW       115
0x7320	0x6FE9      	MOVWF       ?lstr9_FirmV_0_7_0+12, 1
0x7322	0x0E74      	MOVLW       116
0x7324	0x6FEA      	MOVWF       ?lstr9_FirmV_0_7_0+13, 1
0x7326	0x6BEB      	CLRF        ?lstr9_FirmV_0_7_0+14, 1
0x7328	0x0EDD      	MOVLW       ?lstr9_FirmV_0_7_0
0x732A	0x0103      	MOVLB       3
0x732C	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x732E	0x0E02      	MOVLW       hi_addr(?lstr9_FirmV_0_7_0)
0x7330	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x7332	0x0E01      	MOVLW       1
0x7334	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x7336	0xF009EC69  	CALL        _Logger, 0
L_State3129:
;FirmV_0_7_0.c,755 :: 		if(CheckTask(7))
0x733A	0x0E07      	MOVLW       7
0x733C	0x0103      	MOVLB       3
0x733E	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x7340	0xF009EC28  	CALL        _CheckTask, 0
0x7344	0x5200      	MOVF        R0, 1 
0x7346	0xE030      	BZ          L_State3130
;FirmV_0_7_0.c,756 :: 		{SetMotorSpeed(0,Motor2FullSpeed); M1isSlow=1;Logger("S3 Motor1 Slow",1);}
0x7348	0x0103      	MOVLB       3
0x734A	0x6BD9      	CLRF        FARG_SetMotorSpeed_M1FullSpeed, 1
0x734C	0xF3DAC0B8  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x7350	0xF011ECBA  	CALL        _SetMotorSpeed, 0
0x7354	0x0E01      	MOVLW       1
0x7356	0x0100      	MOVLB       0
0x7358	0x6FBA      	MOVWF       _M1isSlow, 1
0x735A	0x0E53      	MOVLW       83
0x735C	0x0102      	MOVLB       2
0x735E	0x6FEC      	MOVWF       ?lstr10_FirmV_0_7_0, 1
0x7360	0x0E33      	MOVLW       51
0x7362	0x6FED      	MOVWF       ?lstr10_FirmV_0_7_0+1, 1
0x7364	0x0E20      	MOVLW       32
0x7366	0x6FEE      	MOVWF       ?lstr10_FirmV_0_7_0+2, 1
0x7368	0x0E4D      	MOVLW       77
0x736A	0x6FEF      	MOVWF       ?lstr10_FirmV_0_7_0+3, 1
0x736C	0x0E6F      	MOVLW       111
0x736E	0x6FF0      	MOVWF       ?lstr10_FirmV_0_7_0+4, 1
0x7370	0x0E74      	MOVLW       116
0x7372	0x6FF1      	MOVWF       ?lstr10_FirmV_0_7_0+5, 1
0x7374	0x0E6F      	MOVLW       111
0x7376	0x6FF2      	MOVWF       ?lstr10_FirmV_0_7_0+6, 1
0x7378	0x0E72      	MOVLW       114
0x737A	0x6FF3      	MOVWF       ?lstr10_FirmV_0_7_0+7, 1
0x737C	0x0E31      	MOVLW       49
0x737E	0x6FF4      	MOVWF       ?lstr10_FirmV_0_7_0+8, 1
0x7380	0x0E20      	MOVLW       32
0x7382	0x6FF5      	MOVWF       ?lstr10_FirmV_0_7_0+9, 1
0x7384	0x0E53      	MOVLW       83
0x7386	0x6FF6      	MOVWF       ?lstr10_FirmV_0_7_0+10, 1
0x7388	0x0E6C      	MOVLW       108
0x738A	0x6FF7      	MOVWF       ?lstr10_FirmV_0_7_0+11, 1
0x738C	0x0E6F      	MOVLW       111
0x738E	0x6FF8      	MOVWF       ?lstr10_FirmV_0_7_0+12, 1
0x7390	0x0E77      	MOVLW       119
0x7392	0x6FF9      	MOVWF       ?lstr10_FirmV_0_7_0+13, 1
0x7394	0x6BFA      	CLRF        ?lstr10_FirmV_0_7_0+14, 1
0x7396	0x0EEC      	MOVLW       ?lstr10_FirmV_0_7_0
0x7398	0x0103      	MOVLB       3
0x739A	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x739C	0x0E02      	MOVLW       hi_addr(?lstr10_FirmV_0_7_0)
0x739E	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x73A0	0x0E01      	MOVLW       1
0x73A2	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x73A4	0xF009EC69  	CALL        _Logger, 0
L_State3130:
;FirmV_0_7_0.c,758 :: 		if(CheckTask(6))
0x73A8	0x0E06      	MOVLW       6
0x73AA	0x0103      	MOVLB       3
0x73AC	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x73AE	0xF009EC28  	CALL        _CheckTask, 0
0x73B2	0x5200      	MOVF        R0, 1 
0x73B4	0xE031      	BZ          L_State3131
;FirmV_0_7_0.c,759 :: 		{SetMotorSpeed(Motor1FullSpeed,1);OverloadCheckFlag2=0; M2isSlow=0;Logger("S3 Motor2 Fast",1);}
0x73B6	0xF3D9C0B5  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x73BA	0x0E01      	MOVLW       1
0x73BC	0x0103      	MOVLB       3
0x73BE	0x6FDA      	MOVWF       FARG_SetMotorSpeed_M2FullSpeed, 1
0x73C0	0xF011ECBA  	CALL        _SetMotorSpeed, 0
0x73C4	0x0100      	MOVLB       0
0x73C6	0x6BB6      	CLRF        _OverloadCheckFlag2, 1
0x73C8	0x6BB7      	CLRF        _M2isSlow, 1
0x73CA	0x0E53      	MOVLW       83
0x73CC	0x0102      	MOVLB       2
0x73CE	0x6FFB      	MOVWF       ?lstr11_FirmV_0_7_0, 1
0x73D0	0x0E33      	MOVLW       51
0x73D2	0x6FFC      	MOVWF       ?lstr11_FirmV_0_7_0+1, 1
0x73D4	0x0E20      	MOVLW       32
0x73D6	0x6FFD      	MOVWF       ?lstr11_FirmV_0_7_0+2, 1
0x73D8	0x0E4D      	MOVLW       77
0x73DA	0x6FFE      	MOVWF       ?lstr11_FirmV_0_7_0+3, 1
0x73DC	0x0E6F      	MOVLW       111
0x73DE	0x6FFF      	MOVWF       ?lstr11_FirmV_0_7_0+4, 1
0x73E0	0x0E74      	MOVLW       116
0x73E2	0x0103      	MOVLB       3
0x73E4	0x6F00      	MOVWF       ?lstr11_FirmV_0_7_0+5, 1
0x73E6	0x0E6F      	MOVLW       111
0x73E8	0x6F01      	MOVWF       ?lstr11_FirmV_0_7_0+6, 1
0x73EA	0x0E72      	MOVLW       114
0x73EC	0x6F02      	MOVWF       ?lstr11_FirmV_0_7_0+7, 1
0x73EE	0x0E32      	MOVLW       50
0x73F0	0x6F03      	MOVWF       ?lstr11_FirmV_0_7_0+8, 1
0x73F2	0x0E20      	MOVLW       32
0x73F4	0x6F04      	MOVWF       ?lstr11_FirmV_0_7_0+9, 1
0x73F6	0x0E46      	MOVLW       70
0x73F8	0x6F05      	MOVWF       ?lstr11_FirmV_0_7_0+10, 1
0x73FA	0x0E61      	MOVLW       97
0x73FC	0x6F06      	MOVWF       ?lstr11_FirmV_0_7_0+11, 1
0x73FE	0x0E73      	MOVLW       115
0x7400	0x6F07      	MOVWF       ?lstr11_FirmV_0_7_0+12, 1
0x7402	0x0E74      	MOVLW       116
0x7404	0x6F08      	MOVWF       ?lstr11_FirmV_0_7_0+13, 1
0x7406	0x6B09      	CLRF        ?lstr11_FirmV_0_7_0+14, 1
0x7408	0x0EFB      	MOVLW       ?lstr11_FirmV_0_7_0
0x740A	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x740C	0x0E02      	MOVLW       hi_addr(?lstr11_FirmV_0_7_0)
0x740E	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x7410	0x0E01      	MOVLW       1
0x7412	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x7414	0xF009EC69  	CALL        _Logger, 0
L_State3131:
;FirmV_0_7_0.c,761 :: 		if(CheckTask(8))
0x7418	0x0E08      	MOVLW       8
0x741A	0x0103      	MOVLB       3
0x741C	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x741E	0xF009EC28  	CALL        _CheckTask, 0
0x7422	0x5200      	MOVF        R0, 1 
0x7424	0xE02F      	BZ          L_State3132
;FirmV_0_7_0.c,762 :: 		{SetMotorSpeed(Motor1FullSpeed,0); M2isSlow=1;Logger("S3 Motor2 Slow",1);}
0x7426	0xF3D9C0B5  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x742A	0x0103      	MOVLB       3
0x742C	0x6BDA      	CLRF        FARG_SetMotorSpeed_M2FullSpeed, 1
0x742E	0xF011ECBA  	CALL        _SetMotorSpeed, 0
0x7432	0x0E01      	MOVLW       1
0x7434	0x0100      	MOVLB       0
0x7436	0x6FB7      	MOVWF       _M2isSlow, 1
0x7438	0x0E53      	MOVLW       83
0x743A	0x0103      	MOVLB       3
0x743C	0x6F0A      	MOVWF       ?lstr12_FirmV_0_7_0, 1
0x743E	0x0E33      	MOVLW       51
0x7440	0x6F0B      	MOVWF       ?lstr12_FirmV_0_7_0+1, 1
0x7442	0x0E20      	MOVLW       32
0x7444	0x6F0C      	MOVWF       ?lstr12_FirmV_0_7_0+2, 1
0x7446	0x0E4D      	MOVLW       77
0x7448	0x6F0D      	MOVWF       ?lstr12_FirmV_0_7_0+3, 1
0x744A	0x0E6F      	MOVLW       111
0x744C	0x6F0E      	MOVWF       ?lstr12_FirmV_0_7_0+4, 1
0x744E	0x0E74      	MOVLW       116
0x7450	0x6F0F      	MOVWF       ?lstr12_FirmV_0_7_0+5, 1
0x7452	0x0E6F      	MOVLW       111
0x7454	0x6F10      	MOVWF       ?lstr12_FirmV_0_7_0+6, 1
0x7456	0x0E72      	MOVLW       114
0x7458	0x6F11      	MOVWF       ?lstr12_FirmV_0_7_0+7, 1
0x745A	0x0E32      	MOVLW       50
0x745C	0x6F12      	MOVWF       ?lstr12_FirmV_0_7_0+8, 1
0x745E	0x0E20      	MOVLW       32
0x7460	0x6F13      	MOVWF       ?lstr12_FirmV_0_7_0+9, 1
0x7462	0x0E53      	MOVLW       83
0x7464	0x6F14      	MOVWF       ?lstr12_FirmV_0_7_0+10, 1
0x7466	0x0E6C      	MOVLW       108
0x7468	0x6F15      	MOVWF       ?lstr12_FirmV_0_7_0+11, 1
0x746A	0x0E6F      	MOVLW       111
0x746C	0x6F16      	MOVWF       ?lstr12_FirmV_0_7_0+12, 1
0x746E	0x0E77      	MOVLW       119
0x7470	0x6F17      	MOVWF       ?lstr12_FirmV_0_7_0+13, 1
0x7472	0x6B18      	CLRF        ?lstr12_FirmV_0_7_0+14, 1
0x7474	0x0E0A      	MOVLW       ?lstr12_FirmV_0_7_0
0x7476	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x7478	0x0E03      	MOVLW       hi_addr(?lstr12_FirmV_0_7_0)
0x747A	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x747C	0x0E01      	MOVLW       1
0x747E	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x7480	0xF009EC69  	CALL        _Logger, 0
L_State3132:
;FirmV_0_7_0.c,764 :: 		if(CheckTask(10))
0x7484	0x0E0A      	MOVLW       10
0x7486	0x0103      	MOVLB       3
0x7488	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x748A	0xF009EC28  	CALL        _CheckTask, 0
0x748E	0x5200      	MOVF        R0, 1 
0x7490	0xE021      	BZ          L_State3133
;FirmV_0_7_0.c,765 :: 		{OverloadCheckFlag1=1; OverloadInit(1);Logger("S3 Overflow Flag1 Set",1);}
0x7492	0x0E01      	MOVLW       1
0x7494	0x0100      	MOVLB       0
0x7496	0x6FB9      	MOVWF       _OverloadCheckFlag1, 1
0x7498	0x0E01      	MOVLW       1
0x749A	0x0103      	MOVLB       3
0x749C	0x6FD9      	MOVWF       FARG_OverloadInit_ch, 1
0x749E	0xF00BEC66  	CALL        _OverloadInit, 0
0x74A2	0x0E77      	MOVLW       ?ICS?lstr13_FirmV_0_7_0
0x74A4	0x6EF6      	MOVWF       4086 
0x74A6	0x0E89      	MOVLW       hi_addr(?ICS?lstr13_FirmV_0_7_0)
0x74A8	0x6EF7      	MOVWF       TBLPTRH 
0x74AA	0x0E00      	MOVLW       higher_addr(?ICS?lstr13_FirmV_0_7_0)
0x74AC	0x6EF8      	MOVWF       TBLPTRU 
0x74AE	0x0E19      	MOVLW       ?lstr13_FirmV_0_7_0
0x74B0	0x6EE1      	MOVWF       FSR1L 
0x74B2	0x0E03      	MOVLW       hi_addr(?lstr13_FirmV_0_7_0)
0x74B4	0x6EE2      	MOVWF       FSR1H 
0x74B6	0x0E16      	MOVLW       22
0x74B8	0x6E00      	MOVWF       R0 
0x74BA	0x0E01      	MOVLW       1
0x74BC	0x6E01      	MOVWF       R1 
0x74BE	0xF005EC2B  	CALL        ___CC2DW, 0
0x74C2	0x0E19      	MOVLW       ?lstr13_FirmV_0_7_0
0x74C4	0x0103      	MOVLB       3
0x74C6	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x74C8	0x0E03      	MOVLW       hi_addr(?lstr13_FirmV_0_7_0)
0x74CA	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x74CC	0x0E01      	MOVLW       1
0x74CE	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x74D0	0xF009EC69  	CALL        _Logger, 0
L_State3133:
;FirmV_0_7_0.c,767 :: 		if(CheckTask(11))
0x74D4	0x0E0B      	MOVLW       11
0x74D6	0x0103      	MOVLB       3
0x74D8	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x74DA	0xF009EC28  	CALL        _CheckTask, 0
0x74DE	0x5200      	MOVF        R0, 1 
0x74E0	0xE021      	BZ          L_State3134
;FirmV_0_7_0.c,768 :: 		{OverloadCheckFlag2=1; OverloadInit(2);Logger("S3 Overflow Flag2 Set",1);}
0x74E2	0x0E01      	MOVLW       1
0x74E4	0x0100      	MOVLB       0
0x74E6	0x6FB6      	MOVWF       _OverloadCheckFlag2, 1
0x74E8	0x0E02      	MOVLW       2
0x74EA	0x0103      	MOVLB       3
0x74EC	0x6FD9      	MOVWF       FARG_OverloadInit_ch, 1
0x74EE	0xF00BEC66  	CALL        _OverloadInit, 0
0x74F2	0x0E8D      	MOVLW       ?ICS?lstr14_FirmV_0_7_0
0x74F4	0x6EF6      	MOVWF       4086 
0x74F6	0x0E89      	MOVLW       hi_addr(?ICS?lstr14_FirmV_0_7_0)
0x74F8	0x6EF7      	MOVWF       TBLPTRH 
0x74FA	0x0E00      	MOVLW       higher_addr(?ICS?lstr14_FirmV_0_7_0)
0x74FC	0x6EF8      	MOVWF       TBLPTRU 
0x74FE	0x0E2F      	MOVLW       ?lstr14_FirmV_0_7_0
0x7500	0x6EE1      	MOVWF       FSR1L 
0x7502	0x0E03      	MOVLW       hi_addr(?lstr14_FirmV_0_7_0)
0x7504	0x6EE2      	MOVWF       FSR1H 
0x7506	0x0E16      	MOVLW       22
0x7508	0x6E00      	MOVWF       R0 
0x750A	0x0E01      	MOVLW       1
0x750C	0x6E01      	MOVWF       R1 
0x750E	0xF005EC2B  	CALL        ___CC2DW, 0
0x7512	0x0E2F      	MOVLW       ?lstr14_FirmV_0_7_0
0x7514	0x0103      	MOVLB       3
0x7516	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x7518	0x0E03      	MOVLW       hi_addr(?lstr14_FirmV_0_7_0)
0x751A	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x751C	0x0E01      	MOVLW       1
0x751E	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x7520	0xF009EC69  	CALL        _Logger, 0
L_State3134:
;FirmV_0_7_0.c,770 :: 		if(CheckTask(3))
0x7524	0x0E03      	MOVLW       3
0x7526	0x0103      	MOVLB       3
0x7528	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x752A	0xF009EC28  	CALL        _CheckTask, 0
0x752E	0x5200      	MOVF        R0, 1 
0x7530	0xE02D      	BZ          L_State3135
;FirmV_0_7_0.c,771 :: 		{OpenDone.b0=0; StopMotor(1);Logger("S3 Motor1 Stop",1);}
0x7532	0x0100      	MOVLB       0
0x7534	0x91E1      	BCF         _OpenDone, 0, 1
0x7536	0x0E01      	MOVLW       1
0x7538	0x0103      	MOVLB       3
0x753A	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x753C	0xF008ECA6  	CALL        _StopMotor, 0
0x7540	0x0E53      	MOVLW       83
0x7542	0x0103      	MOVLB       3
0x7544	0x6F45      	MOVWF       ?lstr15_FirmV_0_7_0, 1
0x7546	0x0E33      	MOVLW       51
0x7548	0x6F46      	MOVWF       ?lstr15_FirmV_0_7_0+1, 1
0x754A	0x0E20      	MOVLW       32
0x754C	0x6F47      	MOVWF       ?lstr15_FirmV_0_7_0+2, 1
0x754E	0x0E4D      	MOVLW       77
0x7550	0x6F48      	MOVWF       ?lstr15_FirmV_0_7_0+3, 1
0x7552	0x0E6F      	MOVLW       111
0x7554	0x6F49      	MOVWF       ?lstr15_FirmV_0_7_0+4, 1
0x7556	0x0E74      	MOVLW       116
0x7558	0x6F4A      	MOVWF       ?lstr15_FirmV_0_7_0+5, 1
0x755A	0x0E6F      	MOVLW       111
0x755C	0x6F4B      	MOVWF       ?lstr15_FirmV_0_7_0+6, 1
0x755E	0x0E72      	MOVLW       114
0x7560	0x6F4C      	MOVWF       ?lstr15_FirmV_0_7_0+7, 1
0x7562	0x0E31      	MOVLW       49
0x7564	0x6F4D      	MOVWF       ?lstr15_FirmV_0_7_0+8, 1
0x7566	0x0E20      	MOVLW       32
0x7568	0x6F4E      	MOVWF       ?lstr15_FirmV_0_7_0+9, 1
0x756A	0x0E53      	MOVLW       83
0x756C	0x6F4F      	MOVWF       ?lstr15_FirmV_0_7_0+10, 1
0x756E	0x0E74      	MOVLW       116
0x7570	0x6F50      	MOVWF       ?lstr15_FirmV_0_7_0+11, 1
0x7572	0x0E6F      	MOVLW       111
0x7574	0x6F51      	MOVWF       ?lstr15_FirmV_0_7_0+12, 1
0x7576	0x0E70      	MOVLW       112
0x7578	0x6F52      	MOVWF       ?lstr15_FirmV_0_7_0+13, 1
0x757A	0x6B53      	CLRF        ?lstr15_FirmV_0_7_0+14, 1
0x757C	0x0E45      	MOVLW       ?lstr15_FirmV_0_7_0
0x757E	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x7580	0x0E03      	MOVLW       hi_addr(?lstr15_FirmV_0_7_0)
0x7582	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x7584	0x0E01      	MOVLW       1
0x7586	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x7588	0xF009EC69  	CALL        _Logger, 0
L_State3135:
;FirmV_0_7_0.c,773 :: 		if(CheckTask(4))
0x758C	0x0E04      	MOVLW       4
0x758E	0x0103      	MOVLB       3
0x7590	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x7592	0xF009EC28  	CALL        _CheckTask, 0
0x7596	0x5200      	MOVF        R0, 1 
0x7598	0xE02D      	BZ          L_State3136
;FirmV_0_7_0.c,774 :: 		{OpenDone.b1=0; StopMotor(2);Logger("S3 Motor2 Stop",1);}
0x759A	0x0100      	MOVLB       0
0x759C	0x93E1      	BCF         _OpenDone, 1, 1
0x759E	0x0E02      	MOVLW       2
0x75A0	0x0103      	MOVLB       3
0x75A2	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x75A4	0xF008ECA6  	CALL        _StopMotor, 0
0x75A8	0x0E53      	MOVLW       83
0x75AA	0x0103      	MOVLB       3
0x75AC	0x6F54      	MOVWF       ?lstr16_FirmV_0_7_0, 1
0x75AE	0x0E33      	MOVLW       51
0x75B0	0x6F55      	MOVWF       ?lstr16_FirmV_0_7_0+1, 1
0x75B2	0x0E20      	MOVLW       32
0x75B4	0x6F56      	MOVWF       ?lstr16_FirmV_0_7_0+2, 1
0x75B6	0x0E4D      	MOVLW       77
0x75B8	0x6F57      	MOVWF       ?lstr16_FirmV_0_7_0+3, 1
0x75BA	0x0E6F      	MOVLW       111
0x75BC	0x6F58      	MOVWF       ?lstr16_FirmV_0_7_0+4, 1
0x75BE	0x0E74      	MOVLW       116
0x75C0	0x6F59      	MOVWF       ?lstr16_FirmV_0_7_0+5, 1
0x75C2	0x0E6F      	MOVLW       111
0x75C4	0x6F5A      	MOVWF       ?lstr16_FirmV_0_7_0+6, 1
0x75C6	0x0E72      	MOVLW       114
0x75C8	0x6F5B      	MOVWF       ?lstr16_FirmV_0_7_0+7, 1
0x75CA	0x0E32      	MOVLW       50
0x75CC	0x6F5C      	MOVWF       ?lstr16_FirmV_0_7_0+8, 1
0x75CE	0x0E20      	MOVLW       32
0x75D0	0x6F5D      	MOVWF       ?lstr16_FirmV_0_7_0+9, 1
0x75D2	0x0E53      	MOVLW       83
0x75D4	0x6F5E      	MOVWF       ?lstr16_FirmV_0_7_0+10, 1
0x75D6	0x0E74      	MOVLW       116
0x75D8	0x6F5F      	MOVWF       ?lstr16_FirmV_0_7_0+11, 1
0x75DA	0x0E6F      	MOVLW       111
0x75DC	0x6F60      	MOVWF       ?lstr16_FirmV_0_7_0+12, 1
0x75DE	0x0E70      	MOVLW       112
0x75E0	0x6F61      	MOVWF       ?lstr16_FirmV_0_7_0+13, 1
0x75E2	0x6B62      	CLRF        ?lstr16_FirmV_0_7_0+14, 1
0x75E4	0x0E54      	MOVLW       ?lstr16_FirmV_0_7_0
0x75E6	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x75E8	0x0E03      	MOVLW       hi_addr(?lstr16_FirmV_0_7_0)
0x75EA	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x75EC	0x0E01      	MOVLW       1
0x75EE	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x75F0	0xF009EC69  	CALL        _Logger, 0
L_State3136:
;FirmV_0_7_0.c,776 :: 		if(CheckTask(12))
0x75F4	0x0E0C      	MOVLW       12
0x75F6	0x0103      	MOVLB       3
0x75F8	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x75FA	0xF009EC28  	CALL        _CheckTask, 0
0x75FE	0x5200      	MOVF        R0, 1 
0x7600	0xE001      	BZ          L_State3137
;FirmV_0_7_0.c,777 :: 		{Lock=1;}
0x7602	0x8C83      	BSF         PORTD, 6 
L_State3137:
;FirmV_0_7_0.c,779 :: 		if((OverloadCheckFlag1==1)&&(Events.Overload.b0==1)&&(M1isSlow==0))
0x7604	0x0100      	MOVLB       0
0x7606	0x51B9      	MOVF        _OverloadCheckFlag1, 0, 1
0x7608	0x0A01      	XORLW       1
0x760A	0xE15A      	BNZ         L_State3140
0x760C	0x0102      	MOVLB       2
0x760E	0xA19F      	BTFSS       _Events+5, 0, 1
0x7610	0xD057      	BRA         L_State3140
0x7612	0x0100      	MOVLB       0
0x7614	0x51BA      	MOVF        _M1isSlow, 0, 1
0x7616	0x0A00      	XORLW       0
0x7618	0xE153      	BNZ         L_State3140
L__State3826:
;FirmV_0_7_0.c,780 :: 		{StopMotor(1); StopMotor(2); State=5;OverloadCheckFlag1=0;OverloadCheckFlag2=0;Logger("S3 Motor1 Collision",1);ClearTasks(9);
0x761A	0x0E01      	MOVLW       1
0x761C	0x0103      	MOVLB       3
0x761E	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x7620	0xF008ECA6  	CALL        _StopMotor, 0
0x7624	0x0E02      	MOVLW       2
0x7626	0x0103      	MOVLB       3
0x7628	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x762A	0xF008ECA6  	CALL        _StopMotor, 0
0x762E	0x0E05      	MOVLW       5
0x7630	0x0101      	MOVLB       1
0x7632	0x6F44      	MOVWF       _State, 1
0x7634	0x0100      	MOVLB       0
0x7636	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
0x7638	0x6BB6      	CLRF        _OverloadCheckFlag2, 1
0x763A	0x0EC1      	MOVLW       ?ICS?lstr17_FirmV_0_7_0
0x763C	0x6EF6      	MOVWF       4086 
0x763E	0x0E89      	MOVLW       hi_addr(?ICS?lstr17_FirmV_0_7_0)
0x7640	0x6EF7      	MOVWF       TBLPTRH 
0x7642	0x0E00      	MOVLW       higher_addr(?ICS?lstr17_FirmV_0_7_0)
0x7644	0x6EF8      	MOVWF       TBLPTRU 
0x7646	0x0E63      	MOVLW       ?lstr17_FirmV_0_7_0
0x7648	0x6EE1      	MOVWF       FSR1L 
0x764A	0x0E03      	MOVLW       hi_addr(?lstr17_FirmV_0_7_0)
0x764C	0x6EE2      	MOVWF       FSR1H 
0x764E	0x0E14      	MOVLW       20
0x7650	0x6E00      	MOVWF       R0 
0x7652	0x0E01      	MOVLW       1
0x7654	0x6E01      	MOVWF       R1 
0x7656	0xF005EC2B  	CALL        ___CC2DW, 0
0x765A	0x0E63      	MOVLW       ?lstr17_FirmV_0_7_0
0x765C	0x0103      	MOVLB       3
0x765E	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x7660	0x0E03      	MOVLW       hi_addr(?lstr17_FirmV_0_7_0)
0x7662	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x7664	0x0E01      	MOVLW       1
0x7666	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x7668	0xF009EC69  	CALL        _Logger, 0
0x766C	0x0E09      	MOVLW       9
0x766E	0x0103      	MOVLB       3
0x7670	0x6FD9      	MOVWF       FARG_ClearTasks_except, 1
0x7672	0xF00AEC5C  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,781 :: 		memcpy(LCDLine1,_stop,16);memcpy(LCDLine2,_ErrOverload,16);LCDUpdateFlag=1;LCDLines=2;}
0x7676	0x0EBD      	MOVLW       _LCDLine1
0x7678	0x0105      	MOVLB       5
0x767A	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x767C	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x767E	0x0106      	MOVLB       6
0x7680	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x7682	0x0E56      	MOVLW       __stop
0x7684	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x7686	0x0E01      	MOVLW       hi_addr(__stop)
0x7688	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x768A	0x0E10      	MOVLW       16
0x768C	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x768E	0x0E00      	MOVLW       0
0x7690	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x7692	0xF001EC0D  	CALL        _memcpy, 0
0x7696	0x0EA3      	MOVLW       _LCDLine2
0x7698	0x0105      	MOVLB       5
0x769A	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x769C	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x769E	0x0106      	MOVLB       6
0x76A0	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x76A2	0x0E45      	MOVLW       __errOverload
0x76A4	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x76A6	0x0E01      	MOVLW       hi_addr(__errOverload)
0x76A8	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x76AA	0x0E10      	MOVLW       16
0x76AC	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x76AE	0x0E00      	MOVLW       0
0x76B0	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x76B2	0xF001EC0D  	CALL        _memcpy, 0
0x76B6	0x0E01      	MOVLW       1
0x76B8	0x0100      	MOVLB       0
0x76BA	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
0x76BC	0x0E02      	MOVLW       2
0x76BE	0x6FB4      	MOVWF       _LCDLines, 1
L_State3140:
0x76C0	0x0100      	MOVLB       0
;FirmV_0_7_0.c,783 :: 		if((OverloadCheckFlag2==1)&&(Events.Overload.b1==1)&&(M2isSlow==0))
0x76C2	0x51B6      	MOVF        _OverloadCheckFlag2, 0, 1
0x76C4	0x0A01      	XORLW       1
0x76C6	0xE15A      	BNZ         L_State3143
0x76C8	0x0102      	MOVLB       2
0x76CA	0xA39F      	BTFSS       _Events+5, 1, 1
0x76CC	0xD057      	BRA         L_State3143
0x76CE	0x0100      	MOVLB       0
0x76D0	0x51B7      	MOVF        _M2isSlow, 0, 1
0x76D2	0x0A00      	XORLW       0
0x76D4	0xE153      	BNZ         L_State3143
L__State3825:
;FirmV_0_7_0.c,784 :: 		{StopMotor(1); StopMotor(2); State=5;OverloadCheckFlag1=0;OverloadCheckFlag2=0;Logger("S3 Motor2 Collision",1);ClearTasks(9);
0x76D6	0x0E01      	MOVLW       1
0x76D8	0x0103      	MOVLB       3
0x76DA	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x76DC	0xF008ECA6  	CALL        _StopMotor, 0
0x76E0	0x0E02      	MOVLW       2
0x76E2	0x0103      	MOVLB       3
0x76E4	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x76E6	0xF008ECA6  	CALL        _StopMotor, 0
0x76EA	0x0E05      	MOVLW       5
0x76EC	0x0101      	MOVLB       1
0x76EE	0x6F44      	MOVWF       _State, 1
0x76F0	0x0100      	MOVLB       0
0x76F2	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
0x76F4	0x6BB6      	CLRF        _OverloadCheckFlag2, 1
0x76F6	0x0ED5      	MOVLW       ?ICS?lstr18_FirmV_0_7_0
0x76F8	0x6EF6      	MOVWF       4086 
0x76FA	0x0E89      	MOVLW       hi_addr(?ICS?lstr18_FirmV_0_7_0)
0x76FC	0x6EF7      	MOVWF       TBLPTRH 
0x76FE	0x0E00      	MOVLW       higher_addr(?ICS?lstr18_FirmV_0_7_0)
0x7700	0x6EF8      	MOVWF       TBLPTRU 
0x7702	0x0E77      	MOVLW       ?lstr18_FirmV_0_7_0
0x7704	0x6EE1      	MOVWF       FSR1L 
0x7706	0x0E03      	MOVLW       hi_addr(?lstr18_FirmV_0_7_0)
0x7708	0x6EE2      	MOVWF       FSR1H 
0x770A	0x0E14      	MOVLW       20
0x770C	0x6E00      	MOVWF       R0 
0x770E	0x0E01      	MOVLW       1
0x7710	0x6E01      	MOVWF       R1 
0x7712	0xF005EC2B  	CALL        ___CC2DW, 0
0x7716	0x0E77      	MOVLW       ?lstr18_FirmV_0_7_0
0x7718	0x0103      	MOVLB       3
0x771A	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x771C	0x0E03      	MOVLW       hi_addr(?lstr18_FirmV_0_7_0)
0x771E	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x7720	0x0E01      	MOVLW       1
0x7722	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x7724	0xF009EC69  	CALL        _Logger, 0
0x7728	0x0E09      	MOVLW       9
0x772A	0x0103      	MOVLB       3
0x772C	0x6FD9      	MOVWF       FARG_ClearTasks_except, 1
0x772E	0xF00AEC5C  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,785 :: 		memcpy(LCDLine1,_stop,16);memcpy(LCDLine2,_ErrOverload,16);LCDUpdateFlag=1;LCDLines=2;}
0x7732	0x0EBD      	MOVLW       _LCDLine1
0x7734	0x0105      	MOVLB       5
0x7736	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x7738	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x773A	0x0106      	MOVLB       6
0x773C	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x773E	0x0E56      	MOVLW       __stop
0x7740	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x7742	0x0E01      	MOVLW       hi_addr(__stop)
0x7744	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x7746	0x0E10      	MOVLW       16
0x7748	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x774A	0x0E00      	MOVLW       0
0x774C	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x774E	0xF001EC0D  	CALL        _memcpy, 0
0x7752	0x0EA3      	MOVLW       _LCDLine2
0x7754	0x0105      	MOVLB       5
0x7756	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x7758	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x775A	0x0106      	MOVLB       6
0x775C	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x775E	0x0E45      	MOVLW       __errOverload
0x7760	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x7762	0x0E01      	MOVLW       hi_addr(__errOverload)
0x7764	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x7766	0x0E10      	MOVLW       16
0x7768	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x776A	0x0E00      	MOVLW       0
0x776C	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x776E	0xF001EC0D  	CALL        _memcpy, 0
0x7772	0x0E01      	MOVLW       1
0x7774	0x0100      	MOVLB       0
0x7776	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
0x7778	0x0E02      	MOVLW       2
0x777A	0x6FB4      	MOVWF       _LCDLines, 1
L_State3143:
;FirmV_0_7_0.c,787 :: 		if((Door2OpenTime==0)||(ActiveDoors==1))
0x777C	0x0102      	MOVLB       2
0x777E	0x5198      	MOVF        _Door2OpenTime, 0, 1
0x7780	0x0A00      	XORLW       0
0x7782	0xE005      	BZ          L__State3824
0x7784	0x0101      	MOVLB       1
0x7786	0x5132      	MOVF        _ActiveDoors, 0, 1
0x7788	0x0A01      	XORLW       1
0x778A	0xE001      	BZ          L__State3824
0x778C	0xD002      	BRA         L_State3146
L__State3824:
;FirmV_0_7_0.c,788 :: 		OpenDone.b1=0;
0x778E	0x0100      	MOVLB       0
0x7790	0x93E1      	BCF         _OpenDone, 1, 1
L_State3146:
;FirmV_0_7_0.c,790 :: 		if((Events.Photocell.b0==1)&&(OpenPhEnable))
0x7792	0x0102      	MOVLB       2
0x7794	0xA1A0      	BTFSS       _Events+6, 0, 1
0x7796	0xD055      	BRA         L_State3149
0x7798	0x5399      	MOVF        _OpenPhEnable, 1, 1
0x779A	0xE053      	BZ          L_State3149
L__State3823:
;FirmV_0_7_0.c,791 :: 		{StopMotor(1); StopMotor(2);OverloadCheckFlag1=0;OverloadCheckFlag2=0; State=5;Logger("S3 Photocell Int",1);ClearTasks(9);
0x779C	0x0E01      	MOVLW       1
0x779E	0x0103      	MOVLB       3
0x77A0	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x77A2	0xF008ECA6  	CALL        _StopMotor, 0
0x77A6	0x0E02      	MOVLW       2
0x77A8	0x0103      	MOVLB       3
0x77AA	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x77AC	0xF008ECA6  	CALL        _StopMotor, 0
0x77B0	0x0100      	MOVLB       0
0x77B2	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
0x77B4	0x6BB6      	CLRF        _OverloadCheckFlag2, 1
0x77B6	0x0E05      	MOVLW       5
0x77B8	0x0101      	MOVLB       1
0x77BA	0x6F44      	MOVWF       _State, 1
0x77BC	0x0EE9      	MOVLW       ?ICS?lstr19_FirmV_0_7_0
0x77BE	0x6EF6      	MOVWF       4086 
0x77C0	0x0E89      	MOVLW       hi_addr(?ICS?lstr19_FirmV_0_7_0)
0x77C2	0x6EF7      	MOVWF       TBLPTRH 
0x77C4	0x0E00      	MOVLW       higher_addr(?ICS?lstr19_FirmV_0_7_0)
0x77C6	0x6EF8      	MOVWF       TBLPTRU 
0x77C8	0x0E8B      	MOVLW       ?lstr19_FirmV_0_7_0
0x77CA	0x6EE1      	MOVWF       FSR1L 
0x77CC	0x0E03      	MOVLW       hi_addr(?lstr19_FirmV_0_7_0)
0x77CE	0x6EE2      	MOVWF       FSR1H 
0x77D0	0x0E11      	MOVLW       17
0x77D2	0x6E00      	MOVWF       R0 
0x77D4	0x0E01      	MOVLW       1
0x77D6	0x6E01      	MOVWF       R1 
0x77D8	0xF005EC2B  	CALL        ___CC2DW, 0
0x77DC	0x0E8B      	MOVLW       ?lstr19_FirmV_0_7_0
0x77DE	0x0103      	MOVLB       3
0x77E0	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x77E2	0x0E03      	MOVLW       hi_addr(?lstr19_FirmV_0_7_0)
0x77E4	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x77E6	0x0E01      	MOVLW       1
0x77E8	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x77EA	0xF009EC69  	CALL        _Logger, 0
0x77EE	0x0E09      	MOVLW       9
0x77F0	0x0103      	MOVLB       3
0x77F2	0x6FD9      	MOVWF       FARG_ClearTasks_except, 1
0x77F4	0xF00AEC5C  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,792 :: 		memcpy(LCDLine1,_stop,16);memcpy(LCDLine2,_ErrPhoto,16);LCDUpdateFlag=1;LCDLines=2;}
0x77F8	0x0EBD      	MOVLW       _LCDLine1
0x77FA	0x0105      	MOVLB       5
0x77FC	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x77FE	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x7800	0x0106      	MOVLB       6
0x7802	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x7804	0x0E56      	MOVLW       __stop
0x7806	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x7808	0x0E01      	MOVLW       hi_addr(__stop)
0x780A	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x780C	0x0E10      	MOVLW       16
0x780E	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x7810	0x0E00      	MOVLW       0
0x7812	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x7814	0xF001EC0D  	CALL        _memcpy, 0
0x7818	0x0EA3      	MOVLW       _LCDLine2
0x781A	0x0105      	MOVLB       5
0x781C	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x781E	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x7820	0x0106      	MOVLB       6
0x7822	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x7824	0x0E33      	MOVLW       __errPhoto
0x7826	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x7828	0x0E01      	MOVLW       hi_addr(__errPhoto)
0x782A	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x782C	0x0E10      	MOVLW       16
0x782E	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x7830	0x0E00      	MOVLW       0
0x7832	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x7834	0xF001EC0D  	CALL        _memcpy, 0
0x7838	0x0E01      	MOVLW       1
0x783A	0x0100      	MOVLB       0
0x783C	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
0x783E	0x0E02      	MOVLW       2
0x7840	0x6FB4      	MOVWF       _LCDLines, 1
L_State3149:
;FirmV_0_7_0.c,794 :: 		if(Events.Remote!=0)
0x7842	0x0102      	MOVLB       2
0x7844	0x519E      	MOVF        _Events+4, 0, 1
0x7846	0x0A00      	XORLW       0
0x7848	0xE053      	BZ          L_State3150
;FirmV_0_7_0.c,795 :: 		{StopMotor(1); StopMotor(2);OverloadCheckFlag1=0;OverloadCheckFlag2=0; State=5;Logger("S3 Remote Stoped",1);ClearTasks(9);
0x784A	0x0E01      	MOVLW       1
0x784C	0x0103      	MOVLB       3
0x784E	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x7850	0xF008ECA6  	CALL        _StopMotor, 0
0x7854	0x0E02      	MOVLW       2
0x7856	0x0103      	MOVLB       3
0x7858	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x785A	0xF008ECA6  	CALL        _StopMotor, 0
0x785E	0x0100      	MOVLB       0
0x7860	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
0x7862	0x6BB6      	CLRF        _OverloadCheckFlag2, 1
0x7864	0x0E05      	MOVLW       5
0x7866	0x0101      	MOVLB       1
0x7868	0x6F44      	MOVWF       _State, 1
0x786A	0x0EFA      	MOVLW       ?ICS?lstr20_FirmV_0_7_0
0x786C	0x6EF6      	MOVWF       4086 
0x786E	0x0E89      	MOVLW       hi_addr(?ICS?lstr20_FirmV_0_7_0)
0x7870	0x6EF7      	MOVWF       TBLPTRH 
0x7872	0x0E00      	MOVLW       higher_addr(?ICS?lstr20_FirmV_0_7_0)
0x7874	0x6EF8      	MOVWF       TBLPTRU 
0x7876	0x0E9C      	MOVLW       ?lstr20_FirmV_0_7_0
0x7878	0x6EE1      	MOVWF       FSR1L 
0x787A	0x0E03      	MOVLW       hi_addr(?lstr20_FirmV_0_7_0)
0x787C	0x6EE2      	MOVWF       FSR1H 
0x787E	0x0E11      	MOVLW       17
0x7880	0x6E00      	MOVWF       R0 
0x7882	0x0E01      	MOVLW       1
0x7884	0x6E01      	MOVWF       R1 
0x7886	0xF005EC2B  	CALL        ___CC2DW, 0
0x788A	0x0E9C      	MOVLW       ?lstr20_FirmV_0_7_0
0x788C	0x0103      	MOVLB       3
0x788E	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x7890	0x0E03      	MOVLW       hi_addr(?lstr20_FirmV_0_7_0)
0x7892	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x7894	0x0E01      	MOVLW       1
0x7896	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x7898	0xF009EC69  	CALL        _Logger, 0
0x789C	0x0E09      	MOVLW       9
0x789E	0x0103      	MOVLB       3
0x78A0	0x6FD9      	MOVWF       FARG_ClearTasks_except, 1
0x78A2	0xF00AEC5C  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,796 :: 		memcpy(LCDLine1,_stop,16);memcpy(LCDLine2,_ErrRemote,16);LCDUpdateFlag=1;LCDLines=2;}
0x78A6	0x0EBD      	MOVLW       _LCDLine1
0x78A8	0x0105      	MOVLB       5
0x78AA	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x78AC	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x78AE	0x0106      	MOVLB       6
0x78B0	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x78B2	0x0E56      	MOVLW       __stop
0x78B4	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x78B6	0x0E01      	MOVLW       hi_addr(__stop)
0x78B8	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x78BA	0x0E10      	MOVLW       16
0x78BC	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x78BE	0x0E00      	MOVLW       0
0x78C0	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x78C2	0xF001EC0D  	CALL        _memcpy, 0
0x78C6	0x0EA3      	MOVLW       _LCDLine2
0x78C8	0x0105      	MOVLB       5
0x78CA	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x78CC	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x78CE	0x0106      	MOVLB       6
0x78D0	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x78D2	0x0E67      	MOVLW       __errRemote
0x78D4	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x78D6	0x0E01      	MOVLW       hi_addr(__errRemote)
0x78D8	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x78DA	0x0E10      	MOVLW       16
0x78DC	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x78DE	0x0E00      	MOVLW       0
0x78E0	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x78E2	0xF001EC0D  	CALL        _memcpy, 0
0x78E6	0x0E01      	MOVLW       1
0x78E8	0x0100      	MOVLB       0
0x78EA	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
0x78EC	0x0E02      	MOVLW       2
0x78EE	0x6FB4      	MOVWF       _LCDLines, 1
L_State3150:
;FirmV_0_7_0.c,798 :: 		if((Events.Limiter==1)&&(LimiterEnable))
0x78F0	0x0102      	MOVLB       2
0x78F2	0x51A1      	MOVF        _Events+7, 0, 1
0x78F4	0x0A01      	XORLW       1
0x78F6	0xE155      	BNZ         L_State3153
0x78F8	0x53A4      	MOVF        _LimiterEnable, 1, 1
0x78FA	0xE053      	BZ          L_State3153
L__State3822:
;FirmV_0_7_0.c,799 :: 		{StopMotor(1); StopMotor(2);OverloadCheckFlag1=0;OverloadCheckFlag2=0; State=5;Logger("S3 Limit Switch Stoped",1);ClearTasks(9);
0x78FC	0x0E01      	MOVLW       1
0x78FE	0x0103      	MOVLB       3
0x7900	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x7902	0xF008ECA6  	CALL        _StopMotor, 0
0x7906	0x0E02      	MOVLW       2
0x7908	0x0103      	MOVLB       3
0x790A	0x6FD9      	MOVWF       FARG_StopMotor_Mx, 1
0x790C	0xF008ECA6  	CALL        _StopMotor, 0
0x7910	0x0100      	MOVLB       0
0x7912	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
0x7914	0x6BB6      	CLRF        _OverloadCheckFlag2, 1
0x7916	0x0E05      	MOVLW       5
0x7918	0x0101      	MOVLB       1
0x791A	0x6F44      	MOVWF       _State, 1
0x791C	0x0E0B      	MOVLW       ?ICS?lstr21_FirmV_0_7_0
0x791E	0x6EF6      	MOVWF       4086 
0x7920	0x0E8A      	MOVLW       hi_addr(?ICS?lstr21_FirmV_0_7_0)
0x7922	0x6EF7      	MOVWF       TBLPTRH 
0x7924	0x0E00      	MOVLW       higher_addr(?ICS?lstr21_FirmV_0_7_0)
0x7926	0x6EF8      	MOVWF       TBLPTRU 
0x7928	0x0EAD      	MOVLW       ?lstr21_FirmV_0_7_0
0x792A	0x6EE1      	MOVWF       FSR1L 
0x792C	0x0E03      	MOVLW       hi_addr(?lstr21_FirmV_0_7_0)
0x792E	0x6EE2      	MOVWF       FSR1H 
0x7930	0x0E17      	MOVLW       23
0x7932	0x6E00      	MOVWF       R0 
0x7934	0x0E01      	MOVLW       1
0x7936	0x6E01      	MOVWF       R1 
0x7938	0xF005EC2B  	CALL        ___CC2DW, 0
0x793C	0x0EAD      	MOVLW       ?lstr21_FirmV_0_7_0
0x793E	0x0103      	MOVLB       3
0x7940	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x7942	0x0E03      	MOVLW       hi_addr(?lstr21_FirmV_0_7_0)
0x7944	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x7946	0x0E01      	MOVLW       1
0x7948	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x794A	0xF009EC69  	CALL        _Logger, 0
0x794E	0x0E09      	MOVLW       9
0x7950	0x0103      	MOVLB       3
0x7952	0x6FD9      	MOVWF       FARG_ClearTasks_except, 1
0x7954	0xF00AEC5C  	CALL        _ClearTasks, 0
;FirmV_0_7_0.c,800 :: 		memcpy(LCDLine1,_stop,16);memcpy(LCDLine2,_ErrLimit,16);LCDUpdateFlag=1;LCDLines=2;}
0x7958	0x0EBD      	MOVLW       _LCDLine1
0x795A	0x0105      	MOVLB       5
0x795C	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x795E	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x7960	0x0106      	MOVLB       6
0x7962	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x7964	0x0E56      	MOVLW       __stop
0x7966	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x7968	0x0E01      	MOVLW       hi_addr(__stop)
0x796A	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x796C	0x0E10      	MOVLW       16
0x796E	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x7970	0x0E00      	MOVLW       0
0x7972	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x7974	0xF001EC0D  	CALL        _memcpy, 0
0x7978	0x0EA3      	MOVLW       _LCDLine2
0x797A	0x0105      	MOVLB       5
0x797C	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x797E	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x7980	0x0106      	MOVLB       6
0x7982	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x7984	0x0E78      	MOVLW       __errLimit
0x7986	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x7988	0x0E01      	MOVLW       hi_addr(__errLimit)
0x798A	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x798C	0x0E10      	MOVLW       16
0x798E	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x7990	0x0E00      	MOVLW       0
0x7992	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x7994	0xF001EC0D  	CALL        _memcpy, 0
0x7998	0x0E01      	MOVLW       1
0x799A	0x0100      	MOVLB       0
0x799C	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
0x799E	0x0E02      	MOVLW       2
0x79A0	0x6FB4      	MOVWF       _LCDLines, 1
L_State3153:
0x79A2	0x0100      	MOVLB       0
;FirmV_0_7_0.c,802 :: 		if(OpenDone==0)
0x79A4	0x51E1      	MOVF        _OpenDone, 0, 1
0x79A6	0x0A00      	XORLW       0
0x79A8	0xA4D8      	BTFSS       STATUS, 2 
0x79AA	0xD08E      	BRA         L_State3154
;FirmV_0_7_0.c,803 :: 		if(LockEnable)
0x79AC	0x0102      	MOVLB       2
0x79AE	0x53A3      	MOVF        _LockEnable, 1, 1
0x79B0	0xE071      	BZ          L_State3155
;FirmV_0_7_0.c,804 :: 		{StartMotor(1,_Close);StartMotor(2,_Close);SetMotorSpeed(1,Motor2FullSpeed);OverloadCheckFlag1=0; M1isSlow=0;SetMotorSpeed(Motor1FullSpeed,1);OverloadCheckFlag2=0; M2isSlow=0;
0x79B2	0x0E01      	MOVLW       1
0x79B4	0x0103      	MOVLB       3
0x79B6	0x6FD9      	MOVWF       FARG_StartMotor_Mx, 1
0x79B8	0x6BDA      	CLRF        FARG_StartMotor_Dir, 1
0x79BA	0xF011ECCA  	CALL        _StartMotor, 0
0x79BE	0x0E02      	MOVLW       2
0x79C0	0x0103      	MOVLB       3
0x79C2	0x6FD9      	MOVWF       FARG_StartMotor_Mx, 1
0x79C4	0x6BDA      	CLRF        FARG_StartMotor_Dir, 1
0x79C6	0xF011ECCA  	CALL        _StartMotor, 0
0x79CA	0x0E01      	MOVLW       1
0x79CC	0x0103      	MOVLB       3
0x79CE	0x6FD9      	MOVWF       FARG_SetMotorSpeed_M1FullSpeed, 1
0x79D0	0xF3DAC0B8  	MOVFF       _Motor2FullSpeed, FARG_SetMotorSpeed_M2FullSpeed
0x79D4	0xF011ECBA  	CALL        _SetMotorSpeed, 0
0x79D8	0x0100      	MOVLB       0
0x79DA	0x6BB9      	CLRF        _OverloadCheckFlag1, 1
0x79DC	0x6BBA      	CLRF        _M1isSlow, 1
0x79DE	0xF3D9C0B5  	MOVFF       _Motor1FullSpeed, FARG_SetMotorSpeed_M1FullSpeed
0x79E2	0x0E01      	MOVLW       1
0x79E4	0x0103      	MOVLB       3
0x79E6	0x6FDA      	MOVWF       FARG_SetMotorSpeed_M2FullSpeed, 1
0x79E8	0xF011ECBA  	CALL        _SetMotorSpeed, 0
0x79EC	0x0100      	MOVLB       0
0x79EE	0x6BB6      	CLRF        _OverloadCheckFlag2, 1
0x79F0	0x6BB7      	CLRF        _M2isSlow, 1
;FirmV_0_7_0.c,805 :: 		AddTask(ms500+RelaseTime,3);AddTask(ms500+RelaseTime,4);AddTask(ms500+1+RelaseTime,13);OpenDone.b2=1;}
0x79F2	0x0E01      	MOVLW       1
0x79F4	0x0101      	MOVLB       1
0x79F6	0x2504      	ADDWF       _ms500, 0, 1
0x79F8	0x0103      	MOVLB       3
0x79FA	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x79FC	0x0E00      	MOVLW       0
0x79FE	0x0101      	MOVLB       1
0x7A00	0x2105      	ADDWFC      _ms500+1, 0, 1
0x7A02	0x0103      	MOVLB       3
0x7A04	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x7A06	0x0E00      	MOVLW       0
0x7A08	0x0101      	MOVLB       1
0x7A0A	0x2106      	ADDWFC      _ms500+2, 0, 1
0x7A0C	0x0103      	MOVLB       3
0x7A0E	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x7A10	0x0E00      	MOVLW       0
0x7A12	0x0101      	MOVLB       1
0x7A14	0x2107      	ADDWFC      _ms500+3, 0, 1
0x7A16	0x0103      	MOVLB       3
0x7A18	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x7A1A	0x0E03      	MOVLW       3
0x7A1C	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x7A1E	0xF008ECB5  	CALL        _AddTask, 0
0x7A22	0x0E01      	MOVLW       1
0x7A24	0x0101      	MOVLB       1
0x7A26	0x2504      	ADDWF       _ms500, 0, 1
0x7A28	0x0103      	MOVLB       3
0x7A2A	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x7A2C	0x0E00      	MOVLW       0
0x7A2E	0x0101      	MOVLB       1
0x7A30	0x2105      	ADDWFC      _ms500+1, 0, 1
0x7A32	0x0103      	MOVLB       3
0x7A34	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x7A36	0x0E00      	MOVLW       0
0x7A38	0x0101      	MOVLB       1
0x7A3A	0x2106      	ADDWFC      _ms500+2, 0, 1
0x7A3C	0x0103      	MOVLB       3
0x7A3E	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x7A40	0x0E00      	MOVLW       0
0x7A42	0x0101      	MOVLB       1
0x7A44	0x2107      	ADDWFC      _ms500+3, 0, 1
0x7A46	0x0103      	MOVLB       3
0x7A48	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x7A4A	0x0E04      	MOVLW       4
0x7A4C	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x7A4E	0xF008ECB5  	CALL        _AddTask, 0
0x7A52	0x0E01      	MOVLW       1
0x7A54	0x0101      	MOVLB       1
0x7A56	0x2504      	ADDWF       _ms500, 0, 1
0x7A58	0x0103      	MOVLB       3
0x7A5A	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x7A5C	0x0E00      	MOVLW       0
0x7A5E	0x0101      	MOVLB       1
0x7A60	0x2105      	ADDWFC      _ms500+1, 0, 1
0x7A62	0x0103      	MOVLB       3
0x7A64	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x7A66	0x0E00      	MOVLW       0
0x7A68	0x0101      	MOVLB       1
0x7A6A	0x2106      	ADDWFC      _ms500+2, 0, 1
0x7A6C	0x0103      	MOVLB       3
0x7A6E	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x7A70	0x0E00      	MOVLW       0
0x7A72	0x0101      	MOVLB       1
0x7A74	0x2107      	ADDWFC      _ms500+3, 0, 1
0x7A76	0x0103      	MOVLB       3
0x7A78	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x7A7A	0x0E01      	MOVLW       1
0x7A7C	0x27D9      	ADDWF       FARG_AddTask_OccTime, 1, 1
0x7A7E	0x0E00      	MOVLW       0
0x7A80	0x23DA      	ADDWFC      FARG_AddTask_OccTime+1, 1, 1
0x7A82	0x23DB      	ADDWFC      FARG_AddTask_OccTime+2, 1, 1
0x7A84	0x23DC      	ADDWFC      FARG_AddTask_OccTime+3, 1, 1
0x7A86	0x0E0D      	MOVLW       13
0x7A88	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x7A8A	0xF008ECB5  	CALL        _AddTask, 0
0x7A8E	0x0100      	MOVLB       0
0x7A90	0x85E1      	BSF         _OpenDone, 2, 1
0x7A92	0xD01A      	BRA         L_State3156
L_State3155:
;FirmV_0_7_0.c,807 :: 		{AddTask(ms500+1,13);OpenDone.b2=1;}
0x7A94	0x0E01      	MOVLW       1
0x7A96	0x0101      	MOVLB       1
0x7A98	0x2504      	ADDWF       _ms500, 0, 1
0x7A9A	0x0103      	MOVLB       3
0x7A9C	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x7A9E	0x0E00      	MOVLW       0
0x7AA0	0x0101      	MOVLB       1
0x7AA2	0x2105      	ADDWFC      _ms500+1, 0, 1
0x7AA4	0x0103      	MOVLB       3
0x7AA6	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x7AA8	0x0E00      	MOVLW       0
0x7AAA	0x0101      	MOVLB       1
0x7AAC	0x2106      	ADDWFC      _ms500+2, 0, 1
0x7AAE	0x0103      	MOVLB       3
0x7AB0	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x7AB2	0x0E00      	MOVLW       0
0x7AB4	0x0101      	MOVLB       1
0x7AB6	0x2107      	ADDWFC      _ms500+3, 0, 1
0x7AB8	0x0103      	MOVLB       3
0x7ABA	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x7ABC	0x0E0D      	MOVLW       13
0x7ABE	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x7AC0	0xF008ECB5  	CALL        _AddTask, 0
0x7AC4	0x0100      	MOVLB       0
0x7AC6	0x85E1      	BSF         _OpenDone, 2, 1
L_State3156:
L_State3154:
;FirmV_0_7_0.c,809 :: 		if(CheckTask(13))
0x7AC8	0x0E0D      	MOVLW       13
0x7ACA	0x0103      	MOVLB       3
0x7ACC	0x6FD9      	MOVWF       FARG_CheckTask_TaskCode, 1
0x7ACE	0xF009EC28  	CALL        _CheckTask, 0
0x7AD2	0x5200      	MOVF        R0, 1 
0x7AD4	0xE02E      	BZ          L_State3157
;FirmV_0_7_0.c,810 :: 		{State=2; PassFlag=0;ClearTasks(9);memcpy(LCDLine1,_open,16);memcpy(LCDLine2,_blank,16);LCDUpdateFlag=1;LCDLines=2;}
0x7AD6	0x0E02      	MOVLW       2
0x7AD8	0x0101      	MOVLB       1
0x7ADA	0x6F44      	MOVWF       _State, 1
0x7ADC	0x6B08      	CLRF        _PassFlag, 1
0x7ADE	0x0E09      	MOVLW       9
0x7AE0	0x0103      	MOVLB       3
0x7AE2	0x6FD9      	MOVWF       FARG_ClearTasks_except, 1
0x7AE4	0xF00AEC5C  	CALL        _ClearTasks, 0
0x7AE8	0x0EBD      	MOVLW       _LCDLine1
0x7AEA	0x0105      	MOVLB       5
0x7AEC	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x7AEE	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x7AF0	0x0106      	MOVLB       6
0x7AF2	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x7AF4	0x0E09      	MOVLW       __open
0x7AF6	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x7AF8	0x0E01      	MOVLW       hi_addr(__open)
0x7AFA	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x7AFC	0x0E10      	MOVLW       16
0x7AFE	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x7B00	0x0E00      	MOVLW       0
0x7B02	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x7B04	0xF001EC0D  	CALL        _memcpy, 0
0x7B08	0x0EA3      	MOVLW       _LCDLine2
0x7B0A	0x0105      	MOVLB       5
0x7B0C	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x7B0E	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x7B10	0x0106      	MOVLB       6
0x7B12	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x7B14	0x0E91      	MOVLW       __Blank
0x7B16	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x7B18	0x0E00      	MOVLW       hi_addr(__Blank)
0x7B1A	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x7B1C	0x0E10      	MOVLW       16
0x7B1E	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x7B20	0x0E00      	MOVLW       0
0x7B22	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x7B24	0xF001EC0D  	CALL        _memcpy, 0
0x7B28	0x0E01      	MOVLW       1
0x7B2A	0x0100      	MOVLB       0
0x7B2C	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
0x7B2E	0x0E02      	MOVLW       2
0x7B30	0x6FB4      	MOVWF       _LCDLines, 1
L_State3157:
;FirmV_0_7_0.c,812 :: 		if((State==5)||(State==6))
0x7B32	0x0101      	MOVLB       1
0x7B34	0x5144      	MOVF        _State, 0, 1
0x7B36	0x0A05      	XORLW       5
0x7B38	0xE004      	BZ          L__State3821
0x7B3A	0x5144      	MOVF        _State, 0, 1
0x7B3C	0x0A06      	XORLW       6
0x7B3E	0xE001      	BZ          L__State3821
0x7B40	0xD051      	BRA         L_State3160
L__State3821:
;FirmV_0_7_0.c,813 :: 		{ClearTasks(0);if(AutoCloseTime!=0){AddTask(ms500+AutoCloseTime,9);Logger("S3 Autoclose Renewed",1);memcpy(LCDLine2,_autoclose,16);LCDUpdateFlag=1;LCDLines=2;}}
0x7B42	0x0103      	MOVLB       3
0x7B44	0x6BD9      	CLRF        FARG_ClearTasks_except, 1
0x7B46	0xF00AEC5C  	CALL        _ClearTasks, 0
0x7B4A	0x0E00      	MOVLW       0
0x7B4C	0x0102      	MOVLB       2
0x7B4E	0x1996      	XORWF       _AutoCloseTime+1, 0, 1
0x7B50	0xE102      	BNZ         L__State3931
0x7B52	0x0E00      	MOVLW       0
0x7B54	0x1995      	XORWF       _AutoCloseTime, 0, 1
L__State3931:
0x7B56	0xE046      	BZ          L_State3161
0x7B58	0x5195      	MOVF        _AutoCloseTime, 0, 1
0x7B5A	0x0101      	MOVLB       1
0x7B5C	0x2504      	ADDWF       _ms500, 0, 1
0x7B5E	0x0103      	MOVLB       3
0x7B60	0x6FD9      	MOVWF       FARG_AddTask_OccTime, 1
0x7B62	0x0102      	MOVLB       2
0x7B64	0x5196      	MOVF        _AutoCloseTime+1, 0, 1
0x7B66	0x0101      	MOVLB       1
0x7B68	0x2105      	ADDWFC      _ms500+1, 0, 1
0x7B6A	0x0103      	MOVLB       3
0x7B6C	0x6FDA      	MOVWF       FARG_AddTask_OccTime+1, 1
0x7B6E	0x0E00      	MOVLW       0
0x7B70	0x0101      	MOVLB       1
0x7B72	0x2106      	ADDWFC      _ms500+2, 0, 1
0x7B74	0x0103      	MOVLB       3
0x7B76	0x6FDB      	MOVWF       FARG_AddTask_OccTime+2, 1
0x7B78	0x0E00      	MOVLW       0
0x7B7A	0x0101      	MOVLB       1
0x7B7C	0x2107      	ADDWFC      _ms500+3, 0, 1
0x7B7E	0x0103      	MOVLB       3
0x7B80	0x6FDC      	MOVWF       FARG_AddTask_OccTime+3, 1
0x7B82	0x0E09      	MOVLW       9
0x7B84	0x6FDD      	MOVWF       FARG_AddTask_tcode, 1
0x7B86	0xF008ECB5  	CALL        _AddTask, 0
0x7B8A	0x0E22      	MOVLW       ?ICS?lstr22_FirmV_0_7_0
0x7B8C	0x6EF6      	MOVWF       4086 
0x7B8E	0x0E8A      	MOVLW       hi_addr(?ICS?lstr22_FirmV_0_7_0)
0x7B90	0x6EF7      	MOVWF       TBLPTRH 
0x7B92	0x0E00      	MOVLW       higher_addr(?ICS?lstr22_FirmV_0_7_0)
0x7B94	0x6EF8      	MOVWF       TBLPTRU 
0x7B96	0x0EC4      	MOVLW       ?lstr22_FirmV_0_7_0
0x7B98	0x6EE1      	MOVWF       FSR1L 
0x7B9A	0x0E03      	MOVLW       hi_addr(?lstr22_FirmV_0_7_0)
0x7B9C	0x6EE2      	MOVWF       FSR1H 
0x7B9E	0x0E15      	MOVLW       21
0x7BA0	0x6E00      	MOVWF       R0 
0x7BA2	0x0E01      	MOVLW       1
0x7BA4	0x6E01      	MOVWF       R1 
0x7BA6	0xF005EC2B  	CALL        ___CC2DW, 0
0x7BAA	0x0EC4      	MOVLW       ?lstr22_FirmV_0_7_0
0x7BAC	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x7BAE	0x0E03      	MOVLW       hi_addr(?lstr22_FirmV_0_7_0)
0x7BB0	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x7BB2	0x0E01      	MOVLW       1
0x7BB4	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x7BB6	0xF009EC69  	CALL        _Logger, 0
0x7BBA	0x0EA3      	MOVLW       _LCDLine2
0x7BBC	0x0105      	MOVLB       5
0x7BBE	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x7BC0	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x7BC2	0x0106      	MOVLB       6
0x7BC4	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x7BC6	0x0EE2      	MOVLW       __autoclose
0x7BC8	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x7BCA	0x0E00      	MOVLW       hi_addr(__autoclose)
0x7BCC	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x7BCE	0x0E10      	MOVLW       16
0x7BD0	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x7BD2	0x0E00      	MOVLW       0
0x7BD4	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x7BD6	0xF001EC0D  	CALL        _memcpy, 0
0x7BDA	0x0E01      	MOVLW       1
0x7BDC	0x0100      	MOVLB       0
0x7BDE	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
0x7BE0	0x0E02      	MOVLW       2
0x7BE2	0x6FB4      	MOVWF       _LCDLines, 1
L_State3161:
L_State3160:
;FirmV_0_7_0.c,815 :: 		}
0x7BE4	0x0012      	RETURN      0
; end of _State3
_Init:
;FirmV_0_7_0.c,1297 :: 		void Init()
;FirmV_0_7_0.c,1299 :: 		char i=0;
0x7BE6	0x0102      	MOVLB       2
0x7BE8	0x6BAF      	CLRF        Init_i_L0, 1
;FirmV_0_7_0.c,1301 :: 		porta=0;
0x7BEA	0x6A80      	CLRF        PORTA 
;FirmV_0_7_0.c,1302 :: 		portb=0;
0x7BEC	0x6A81      	CLRF        PORTB 
;FirmV_0_7_0.c,1303 :: 		portc=0;
0x7BEE	0x6A82      	CLRF        PORTC 
;FirmV_0_7_0.c,1304 :: 		portd=0;
0x7BF0	0x6A83      	CLRF        PORTD 
;FirmV_0_7_0.c,1305 :: 		porte=0;
0x7BF2	0x6A84      	CLRF        PORTE 
;FirmV_0_7_0.c,1306 :: 		trisa=0b101111;
0x7BF4	0x0E2F      	MOVLW       47
0x7BF6	0x6E92      	MOVWF       TRISA 
;FirmV_0_7_0.c,1307 :: 		trisb=0b00000111;
0x7BF8	0x0E07      	MOVLW       7
0x7BFA	0x6E93      	MOVWF       TRISB 
;FirmV_0_7_0.c,1308 :: 		trisc=0b10000100;
0x7BFC	0x0E84      	MOVLW       132
0x7BFE	0x6E94      	MOVWF       TRISC 
;FirmV_0_7_0.c,1309 :: 		trisd=0b00111111;
0x7C00	0x0E3F      	MOVLW       63
0x7C02	0x6E95      	MOVWF       TRISD 
;FirmV_0_7_0.c,1310 :: 		trise=0b001;
0x7C04	0x0E01      	MOVLW       1
0x7C06	0x6E96      	MOVWF       TRISE 
;FirmV_0_7_0.c,1311 :: 		adcon1=0b1100;  // an6, an5 and an7 is digital
0x7C08	0x0E0C      	MOVLW       12
0x7C0A	0x6EC1      	MOVWF       ADCON1 
;FirmV_0_7_0.c,1317 :: 		LCDBackLight=1;
0x7C0C	0x8880      	BSF         PORTA, 4 
;FirmV_0_7_0.c,1318 :: 		I2C1_init(100000);
0x7C0E	0x0E64      	MOVLW       100
0x7C10	0x6EC8      	MOVWF       SSPADD 
0x7C12	0xF014ECC5  	CALL        _I2C1_Init, 0
;FirmV_0_7_0.c,1320 :: 		delay_ms(100);
0x7C16	0x0E06      	MOVLW       6
0x7C18	0x6E0B      	MOVWF       R11, 0
0x7C1A	0x0E13      	MOVLW       19
0x7C1C	0x6E0C      	MOVWF       R12, 0
0x7C1E	0x0EAD      	MOVLW       173
0x7C20	0x6E0D      	MOVWF       R13, 0
L_Init327:
0x7C22	0x2E0D      	DECFSZ      R13, 1, 0
0x7C24	0xD7FE      	BRA         L_Init327
0x7C26	0x2E0C      	DECFSZ      R12, 1, 0
0x7C28	0xD7FC      	BRA         L_Init327
0x7C2A	0x2E0B      	DECFSZ      R11, 1, 0
0x7C2C	0xD7FA      	BRA         L_Init327
0x7C2E	0x0000      	NOP
0x7C30	0x0000      	NOP
;FirmV_0_7_0.c,1322 :: 		LCD_init(1);
0x7C32	0x0E01      	MOVLW       1
0x7C34	0x6FBF      	MOVWF       FARG_LCD_Init_lines, 1
0x7C36	0xF014EC55  	CALL        _LCD_Init, 0
;FirmV_0_7_0.c,1323 :: 		LCDLines=1;
0x7C3A	0x0E01      	MOVLW       1
0x7C3C	0x0100      	MOVLB       0
0x7C3E	0x6FB4      	MOVWF       _LCDLines, 1
;FirmV_0_7_0.c,1324 :: 		delay_ms(300);
0x7C40	0x0E10      	MOVLW       16
0x7C42	0x6E0B      	MOVWF       R11, 0
0x7C44	0x0E39      	MOVLW       57
0x7C46	0x6E0C      	MOVWF       R12, 0
0x7C48	0x0E0D      	MOVLW       13
0x7C4A	0x6E0D      	MOVWF       R13, 0
L_Init328:
0x7C4C	0x2E0D      	DECFSZ      R13, 1, 0
0x7C4E	0xD7FE      	BRA         L_Init328
0x7C50	0x2E0C      	DECFSZ      R12, 1, 0
0x7C52	0xD7FC      	BRA         L_Init328
0x7C54	0x2E0B      	DECFSZ      R11, 1, 0
0x7C56	0xD7FA      	BRA         L_Init328
0x7C58	0x0000      	NOP
0x7C5A	0x0000      	NOP
;FirmV_0_7_0.c,1325 :: 		SetContrast(20);
0x7C5C	0x0E14      	MOVLW       20
0x7C5E	0x0102      	MOVLB       2
0x7C60	0x6FBF      	MOVWF       FARG_SetContrast_val, 1
0x7C62	0xF013ECBD  	CALL        _SetContrast, 0
;FirmV_0_7_0.c,1328 :: 		ms500=0;
0x7C66	0x0101      	MOVLB       1
0x7C68	0x6B04      	CLRF        _ms500, 1
0x7C6A	0x6B05      	CLRF        _ms500+1, 1
0x7C6C	0x6B06      	CLRF        _ms500+2, 1
0x7C6E	0x6B07      	CLRF        _ms500+3, 1
;FirmV_0_7_0.c,1329 :: 		t0con=0b10000101; //enable tmr0 and prescalar
0x7C70	0x0E85      	MOVLW       133
0x7C72	0x6ED5      	MOVWF       T0CON 
;FirmV_0_7_0.c,1330 :: 		intcon.b7=1;   //global int enable
0x7C74	0x8EF2      	BSF         INTCON, 7 
;FirmV_0_7_0.c,1331 :: 		intcon.b5=1;  //tmr0 int enable
0x7C76	0x8AF2      	BSF         INTCON, 5 
;FirmV_0_7_0.c,1332 :: 		intcon.b2=0; //tmr0 flag
0x7C78	0x94F2      	BCF         INTCON, 2 
;FirmV_0_7_0.c,1333 :: 		tmr0h=0xF3;
0x7C7A	0x0EF3      	MOVLW       243
0x7C7C	0x6ED7      	MOVWF       TMR0H 
;FirmV_0_7_0.c,1334 :: 		tmr0l=0xCA;
0x7C7E	0x0ECA      	MOVLW       202
0x7C80	0x6ED6      	MOVWF       TMR0L 
;FirmV_0_7_0.c,1337 :: 		INT1IP_bit=1;
0x7C82	0x8CF0      	BSF         INT1IP_bit, 6 
;FirmV_0_7_0.c,1338 :: 		INT1E_bit=1;
0x7C84	0x86F0      	BSF         INT1E_bit, 3 
;FirmV_0_7_0.c,1339 :: 		INT1F_bit=0;
0x7C86	0x90F0      	BCF         INT1F_bit, 0 
;FirmV_0_7_0.c,1340 :: 		INT2IP_bit=1;
0x7C88	0x8EF0      	BSF         INT2IP_bit, 7 
;FirmV_0_7_0.c,1341 :: 		INT2E_bit=1;
0x7C8A	0x88F0      	BSF         INT2E_bit, 4 
;FirmV_0_7_0.c,1342 :: 		INT2F_bit=0;
0x7C8C	0x92F0      	BCF         INT2F_bit, 1 
;FirmV_0_7_0.c,1343 :: 		INTEDG1_bit=1;
0x7C8E	0x8AF1      	BSF         INTEDG1_bit, 5 
;FirmV_0_7_0.c,1344 :: 		INTEDG2_bit=1;
0x7C90	0x88F1      	BSF         INTEDG2_bit, 4 
;FirmV_0_7_0.c,1347 :: 		INT0F_bit=0;
0x7C92	0x92F2      	BCF         INT0F_bit, 1 
;FirmV_0_7_0.c,1348 :: 		INT0E_bit=0;
0x7C94	0x98F2      	BCF         INT0E_bit, 4 
;FirmV_0_7_0.c,1351 :: 		for(i=0;i<20;i++)
0x7C96	0x0102      	MOVLB       2
0x7C98	0x6BAF      	CLRF        Init_i_L0, 1
L_Init329:
0x7C9A	0x0E14      	MOVLW       20
0x7C9C	0x5DAF      	SUBWF       Init_i_L0, 0, 1
0x7C9E	0xE218      	BC          L_Init330
;FirmV_0_7_0.c,1352 :: 		Tasks[i].Expired=1;
0x7CA0	0xF000C2AF  	MOVFF       Init_i_L0, R0
0x7CA4	0x0E00      	MOVLW       0
0x7CA6	0x6E01      	MOVWF       R1 
0x7CA8	0x0E07      	MOVLW       7
0x7CAA	0x6E04      	MOVWF       R4 
0x7CAC	0x0E00      	MOVLW       0
0x7CAE	0x6E05      	MOVWF       R5 
0x7CB0	0xF005ECD8  	CALL        _Mul_16x16_U, 0
0x7CB4	0x0EA8      	MOVLW       _Tasks
0x7CB6	0x2600      	ADDWF       R0, 1 
0x7CB8	0x0E01      	MOVLW       hi_addr(_Tasks)
0x7CBA	0x2201      	ADDWFC      R1, 1 
0x7CBC	0x0E05      	MOVLW       5
0x7CBE	0x2400      	ADDWF       R0, 0 
0x7CC0	0x6EE1      	MOVWF       FSR1L 
0x7CC2	0x0E00      	MOVLW       0
0x7CC4	0x2001      	ADDWFC      R1, 0 
0x7CC6	0x6EE2      	MOVWF       FSR1H 
0x7CC8	0x0E01      	MOVLW       1
0x7CCA	0x6EE6      	MOVWF       POSTINC1 
;FirmV_0_7_0.c,1351 :: 		for(i=0;i<20;i++)
0x7CCC	0x2BAF      	INCF        Init_i_L0, 1, 1
;FirmV_0_7_0.c,1352 :: 		Tasks[i].Expired=1;
0x7CCE	0xD7E5      	BRA         L_Init329
L_Init330:
;FirmV_0_7_0.c,1355 :: 		Events.Keys=0;
0x7CD0	0x6B9A      	CLRF        _Events, 1
;FirmV_0_7_0.c,1356 :: 		Events.Task1=0;
0x7CD2	0x6B9B      	CLRF        _Events+1, 1
;FirmV_0_7_0.c,1357 :: 		Events.Task2=0;
0x7CD4	0x6B9C      	CLRF        _Events+2, 1
;FirmV_0_7_0.c,1358 :: 		Events.Task3=0;
0x7CD6	0x6B9D      	CLRF        _Events+3, 1
;FirmV_0_7_0.c,1359 :: 		Events.Remote=0;
0x7CD8	0x6B9E      	CLRF        _Events+4, 1
;FirmV_0_7_0.c,1360 :: 		Events.Overload=0;
0x7CDA	0x6B9F      	CLRF        _Events+5, 1
;FirmV_0_7_0.c,1361 :: 		Events.Photocell=0;
0x7CDC	0x6BA0      	CLRF        _Events+6, 1
;FirmV_0_7_0.c,1364 :: 		State=0;
0x7CDE	0x0101      	MOVLB       1
0x7CE0	0x6B44      	CLRF        _State, 1
;FirmV_0_7_0.c,1367 :: 		UART1_init(115200);
0x7CE2	0x0E15      	MOVLW       21
0x7CE4	0x6EAF      	MOVWF       SPBRG 
0x7CE6	0x84AC      	BSF         TXSTA, 2, 0
0x7CE8	0xF017ECB6  	CALL        _UART1_Init, 0
;FirmV_0_7_0.c,1370 :: 		LoadConfigs();
0x7CEC	0xF007EC7B  	CALL        _LoadConfigs, 0
;FirmV_0_7_0.c,1374 :: 		}
0x7CF0	0x0012      	RETURN      0
; end of _Init
_TorqueLogger:
;FirmV_0_7_0.c,2897 :: 		void TorqueLogger()
;FirmV_0_7_0.c,2900 :: 		switch(State)
0x7CF2	0xD11D      	BRA         L_TorqueLogger800
;FirmV_0_7_0.c,2902 :: 		case 3:
L_TorqueLogger802:
;FirmV_0_7_0.c,2903 :: 		txt[0]='D';txt[1]='3';txt[2]='1';txt[3]='-';
0x7CF4	0x0E44      	MOVLW       68
0x7CF6	0x0102      	MOVLB       2
0x7CF8	0x6FAF      	MOVWF       TorqueLogger_txt_L0, 1
0x7CFA	0x0E33      	MOVLW       51
0x7CFC	0x6FB0      	MOVWF       TorqueLogger_txt_L0+1, 1
0x7CFE	0x0E31      	MOVLW       49
0x7D00	0x6FB1      	MOVWF       TorqueLogger_txt_L0+2, 1
0x7D02	0x0E2D      	MOVLW       45
0x7D04	0x6FB2      	MOVWF       TorqueLogger_txt_L0+3, 1
;FirmV_0_7_0.c,2904 :: 		wordtostrwithzeros(VCapM1,txt+4);
0x7D06	0xF2BFC25B  	MOVFF       _VCapM1, FARG_WordToStrWithZeros_input
0x7D0A	0xF2C0C25C  	MOVFF       _VCapM1+1, FARG_WordToStrWithZeros_input+1
0x7D0E	0x0EB3      	MOVLW       TorqueLogger_txt_L0+4
0x7D10	0x6FC1      	MOVWF       FARG_WordToStrWithZeros_output, 1
0x7D12	0x0E02      	MOVLW       hi_addr(TorqueLogger_txt_L0+4)
0x7D14	0x6FC2      	MOVWF       FARG_WordToStrWithZeros_output+1, 1
0x7D16	0xF012EC6E  	CALL        _WordToStrWithZeros, 0
;FirmV_0_7_0.c,2905 :: 		txt[9]=0;
0x7D1A	0x6BB8      	CLRF        TorqueLogger_txt_L0+9, 1
;FirmV_0_7_0.c,2906 :: 		Logger(txt,0);
0x7D1C	0x0EAF      	MOVLW       TorqueLogger_txt_L0
0x7D1E	0x0103      	MOVLB       3
0x7D20	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x7D22	0x0E02      	MOVLW       hi_addr(TorqueLogger_txt_L0)
0x7D24	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x7D26	0x6BDB      	CLRF        FARG_Logger_TimeStampFlag, 1
0x7D28	0xF009EC69  	CALL        _Logger, 0
;FirmV_0_7_0.c,2908 :: 		txt[0]='D';txt[1]='3';txt[2]='2';txt[3]='-';
0x7D2C	0x0E44      	MOVLW       68
0x7D2E	0x0102      	MOVLB       2
0x7D30	0x6FAF      	MOVWF       TorqueLogger_txt_L0, 1
0x7D32	0x0E33      	MOVLW       51
0x7D34	0x6FB0      	MOVWF       TorqueLogger_txt_L0+1, 1
0x7D36	0x0E32      	MOVLW       50
0x7D38	0x6FB1      	MOVWF       TorqueLogger_txt_L0+2, 1
0x7D3A	0x0E2D      	MOVLW       45
0x7D3C	0x6FB2      	MOVWF       TorqueLogger_txt_L0+3, 1
;FirmV_0_7_0.c,2909 :: 		wordtostrwithzeros(VCapM2,txt+4);
0x7D3E	0xF2BFC259  	MOVFF       _VCapM2, FARG_WordToStrWithZeros_input
0x7D42	0xF2C0C25A  	MOVFF       _VCapM2+1, FARG_WordToStrWithZeros_input+1
0x7D46	0x0EB3      	MOVLW       TorqueLogger_txt_L0+4
0x7D48	0x6FC1      	MOVWF       FARG_WordToStrWithZeros_output, 1
0x7D4A	0x0E02      	MOVLW       hi_addr(TorqueLogger_txt_L0+4)
0x7D4C	0x6FC2      	MOVWF       FARG_WordToStrWithZeros_output+1, 1
0x7D4E	0xF012EC6E  	CALL        _WordToStrWithZeros, 0
;FirmV_0_7_0.c,2910 :: 		txt[9]=0;
0x7D52	0x6BB8      	CLRF        TorqueLogger_txt_L0+9, 1
;FirmV_0_7_0.c,2911 :: 		Logger(txt,0);
0x7D54	0x0EAF      	MOVLW       TorqueLogger_txt_L0
0x7D56	0x0103      	MOVLB       3
0x7D58	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x7D5A	0x0E02      	MOVLW       hi_addr(TorqueLogger_txt_L0)
0x7D5C	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x7D5E	0x6BDB      	CLRF        FARG_Logger_TimeStampFlag, 1
0x7D60	0xF009EC69  	CALL        _Logger, 0
;FirmV_0_7_0.c,2913 :: 		break;
0x7D64	0xD0F8      	BRA         L_TorqueLogger801
;FirmV_0_7_0.c,2915 :: 		case 4:
L_TorqueLogger803:
;FirmV_0_7_0.c,2916 :: 		txt[0]='D';txt[1]='4';txt[2]='1';txt[3]='-';
0x7D66	0x0E44      	MOVLW       68
0x7D68	0x0102      	MOVLB       2
0x7D6A	0x6FAF      	MOVWF       TorqueLogger_txt_L0, 1
0x7D6C	0x0E34      	MOVLW       52
0x7D6E	0x6FB0      	MOVWF       TorqueLogger_txt_L0+1, 1
0x7D70	0x0E31      	MOVLW       49
0x7D72	0x6FB1      	MOVWF       TorqueLogger_txt_L0+2, 1
0x7D74	0x0E2D      	MOVLW       45
0x7D76	0x6FB2      	MOVWF       TorqueLogger_txt_L0+3, 1
;FirmV_0_7_0.c,2917 :: 		wordtostrwithzeros(VCapM1,txt+4);
0x7D78	0xF2BFC25B  	MOVFF       _VCapM1, FARG_WordToStrWithZeros_input
0x7D7C	0xF2C0C25C  	MOVFF       _VCapM1+1, FARG_WordToStrWithZeros_input+1
0x7D80	0x0EB3      	MOVLW       TorqueLogger_txt_L0+4
0x7D82	0x6FC1      	MOVWF       FARG_WordToStrWithZeros_output, 1
0x7D84	0x0E02      	MOVLW       hi_addr(TorqueLogger_txt_L0+4)
0x7D86	0x6FC2      	MOVWF       FARG_WordToStrWithZeros_output+1, 1
0x7D88	0xF012EC6E  	CALL        _WordToStrWithZeros, 0
;FirmV_0_7_0.c,2918 :: 		txt[9]=0;
0x7D8C	0x6BB8      	CLRF        TorqueLogger_txt_L0+9, 1
;FirmV_0_7_0.c,2919 :: 		Logger(txt,0);
0x7D8E	0x0EAF      	MOVLW       TorqueLogger_txt_L0
0x7D90	0x0103      	MOVLB       3
0x7D92	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x7D94	0x0E02      	MOVLW       hi_addr(TorqueLogger_txt_L0)
0x7D96	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x7D98	0x6BDB      	CLRF        FARG_Logger_TimeStampFlag, 1
0x7D9A	0xF009EC69  	CALL        _Logger, 0
;FirmV_0_7_0.c,2921 :: 		txt[0]='D';txt[1]='4';txt[2]='2';txt[3]='-';
0x7D9E	0x0E44      	MOVLW       68
0x7DA0	0x0102      	MOVLB       2
0x7DA2	0x6FAF      	MOVWF       TorqueLogger_txt_L0, 1
0x7DA4	0x0E34      	MOVLW       52
0x7DA6	0x6FB0      	MOVWF       TorqueLogger_txt_L0+1, 1
0x7DA8	0x0E32      	MOVLW       50
0x7DAA	0x6FB1      	MOVWF       TorqueLogger_txt_L0+2, 1
0x7DAC	0x0E2D      	MOVLW       45
0x7DAE	0x6FB2      	MOVWF       TorqueLogger_txt_L0+3, 1
;FirmV_0_7_0.c,2922 :: 		wordtostrwithzeros(VCapM2,txt+4);
0x7DB0	0xF2BFC259  	MOVFF       _VCapM2, FARG_WordToStrWithZeros_input
0x7DB4	0xF2C0C25A  	MOVFF       _VCapM2+1, FARG_WordToStrWithZeros_input+1
0x7DB8	0x0EB3      	MOVLW       TorqueLogger_txt_L0+4
0x7DBA	0x6FC1      	MOVWF       FARG_WordToStrWithZeros_output, 1
0x7DBC	0x0E02      	MOVLW       hi_addr(TorqueLogger_txt_L0+4)
0x7DBE	0x6FC2      	MOVWF       FARG_WordToStrWithZeros_output+1, 1
0x7DC0	0xF012EC6E  	CALL        _WordToStrWithZeros, 0
;FirmV_0_7_0.c,2923 :: 		txt[9]=0;
0x7DC4	0x6BB8      	CLRF        TorqueLogger_txt_L0+9, 1
;FirmV_0_7_0.c,2924 :: 		Logger(txt,0);
0x7DC6	0x0EAF      	MOVLW       TorqueLogger_txt_L0
0x7DC8	0x0103      	MOVLB       3
0x7DCA	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x7DCC	0x0E02      	MOVLW       hi_addr(TorqueLogger_txt_L0)
0x7DCE	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x7DD0	0x6BDB      	CLRF        FARG_Logger_TimeStampFlag, 1
0x7DD2	0xF009EC69  	CALL        _Logger, 0
;FirmV_0_7_0.c,2926 :: 		break;
0x7DD6	0xD0BF      	BRA         L_TorqueLogger801
;FirmV_0_7_0.c,2928 :: 		case 7:
L_TorqueLogger804:
;FirmV_0_7_0.c,2929 :: 		txt[0]='D';txt[1]='7';txt[2]='1';txt[3]='-';
0x7DD8	0x0E44      	MOVLW       68
0x7DDA	0x0102      	MOVLB       2
0x7DDC	0x6FAF      	MOVWF       TorqueLogger_txt_L0, 1
0x7DDE	0x0E37      	MOVLW       55
0x7DE0	0x6FB0      	MOVWF       TorqueLogger_txt_L0+1, 1
0x7DE2	0x0E31      	MOVLW       49
0x7DE4	0x6FB1      	MOVWF       TorqueLogger_txt_L0+2, 1
0x7DE6	0x0E2D      	MOVLW       45
0x7DE8	0x6FB2      	MOVWF       TorqueLogger_txt_L0+3, 1
;FirmV_0_7_0.c,2930 :: 		wordtostrwithzeros(VCapM1,txt+4);
0x7DEA	0xF2BFC25B  	MOVFF       _VCapM1, FARG_WordToStrWithZeros_input
0x7DEE	0xF2C0C25C  	MOVFF       _VCapM1+1, FARG_WordToStrWithZeros_input+1
0x7DF2	0x0EB3      	MOVLW       TorqueLogger_txt_L0+4
0x7DF4	0x6FC1      	MOVWF       FARG_WordToStrWithZeros_output, 1
0x7DF6	0x0E02      	MOVLW       hi_addr(TorqueLogger_txt_L0+4)
0x7DF8	0x6FC2      	MOVWF       FARG_WordToStrWithZeros_output+1, 1
0x7DFA	0xF012EC6E  	CALL        _WordToStrWithZeros, 0
;FirmV_0_7_0.c,2931 :: 		txt[9]=0;
0x7DFE	0x6BB8      	CLRF        TorqueLogger_txt_L0+9, 1
;FirmV_0_7_0.c,2932 :: 		Logger(txt,0);
0x7E00	0x0EAF      	MOVLW       TorqueLogger_txt_L0
0x7E02	0x0103      	MOVLB       3
0x7E04	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x7E06	0x0E02      	MOVLW       hi_addr(TorqueLogger_txt_L0)
0x7E08	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x7E0A	0x6BDB      	CLRF        FARG_Logger_TimeStampFlag, 1
0x7E0C	0xF009EC69  	CALL        _Logger, 0
;FirmV_0_7_0.c,2934 :: 		txt[0]='D';txt[1]='7';txt[2]='2';txt[3]='-';
0x7E10	0x0E44      	MOVLW       68
0x7E12	0x0102      	MOVLB       2
0x7E14	0x6FAF      	MOVWF       TorqueLogger_txt_L0, 1
0x7E16	0x0E37      	MOVLW       55
0x7E18	0x6FB0      	MOVWF       TorqueLogger_txt_L0+1, 1
0x7E1A	0x0E32      	MOVLW       50
0x7E1C	0x6FB1      	MOVWF       TorqueLogger_txt_L0+2, 1
0x7E1E	0x0E2D      	MOVLW       45
0x7E20	0x6FB2      	MOVWF       TorqueLogger_txt_L0+3, 1
;FirmV_0_7_0.c,2935 :: 		wordtostrwithzeros(VCapM2,txt+4);
0x7E22	0xF2BFC259  	MOVFF       _VCapM2, FARG_WordToStrWithZeros_input
0x7E26	0xF2C0C25A  	MOVFF       _VCapM2+1, FARG_WordToStrWithZeros_input+1
0x7E2A	0x0EB3      	MOVLW       TorqueLogger_txt_L0+4
0x7E2C	0x6FC1      	MOVWF       FARG_WordToStrWithZeros_output, 1
0x7E2E	0x0E02      	MOVLW       hi_addr(TorqueLogger_txt_L0+4)
0x7E30	0x6FC2      	MOVWF       FARG_WordToStrWithZeros_output+1, 1
0x7E32	0xF012EC6E  	CALL        _WordToStrWithZeros, 0
;FirmV_0_7_0.c,2936 :: 		txt[9]=0;
0x7E36	0x6BB8      	CLRF        TorqueLogger_txt_L0+9, 1
;FirmV_0_7_0.c,2937 :: 		Logger(txt,0);
0x7E38	0x0EAF      	MOVLW       TorqueLogger_txt_L0
0x7E3A	0x0103      	MOVLB       3
0x7E3C	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x7E3E	0x0E02      	MOVLW       hi_addr(TorqueLogger_txt_L0)
0x7E40	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x7E42	0x6BDB      	CLRF        FARG_Logger_TimeStampFlag, 1
0x7E44	0xF009EC69  	CALL        _Logger, 0
;FirmV_0_7_0.c,2939 :: 		break;
0x7E48	0xD086      	BRA         L_TorqueLogger801
;FirmV_0_7_0.c,2941 :: 		case 8:
L_TorqueLogger805:
;FirmV_0_7_0.c,2942 :: 		txt[0]='D';txt[1]='8';txt[2]='1';txt[3]='-';
0x7E4A	0x0E44      	MOVLW       68
0x7E4C	0x0102      	MOVLB       2
0x7E4E	0x6FAF      	MOVWF       TorqueLogger_txt_L0, 1
0x7E50	0x0E38      	MOVLW       56
0x7E52	0x6FB0      	MOVWF       TorqueLogger_txt_L0+1, 1
0x7E54	0x0E31      	MOVLW       49
0x7E56	0x6FB1      	MOVWF       TorqueLogger_txt_L0+2, 1
0x7E58	0x0E2D      	MOVLW       45
0x7E5A	0x6FB2      	MOVWF       TorqueLogger_txt_L0+3, 1
;FirmV_0_7_0.c,2943 :: 		wordtostrwithzeros(VCapM1,txt+4);
0x7E5C	0xF2BFC25B  	MOVFF       _VCapM1, FARG_WordToStrWithZeros_input
0x7E60	0xF2C0C25C  	MOVFF       _VCapM1+1, FARG_WordToStrWithZeros_input+1
0x7E64	0x0EB3      	MOVLW       TorqueLogger_txt_L0+4
0x7E66	0x6FC1      	MOVWF       FARG_WordToStrWithZeros_output, 1
0x7E68	0x0E02      	MOVLW       hi_addr(TorqueLogger_txt_L0+4)
0x7E6A	0x6FC2      	MOVWF       FARG_WordToStrWithZeros_output+1, 1
0x7E6C	0xF012EC6E  	CALL        _WordToStrWithZeros, 0
;FirmV_0_7_0.c,2944 :: 		txt[9]=0;
0x7E70	0x6BB8      	CLRF        TorqueLogger_txt_L0+9, 1
;FirmV_0_7_0.c,2945 :: 		Logger(txt,0);
0x7E72	0x0EAF      	MOVLW       TorqueLogger_txt_L0
0x7E74	0x0103      	MOVLB       3
0x7E76	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x7E78	0x0E02      	MOVLW       hi_addr(TorqueLogger_txt_L0)
0x7E7A	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x7E7C	0x6BDB      	CLRF        FARG_Logger_TimeStampFlag, 1
0x7E7E	0xF009EC69  	CALL        _Logger, 0
;FirmV_0_7_0.c,2947 :: 		txt[0]='D';txt[1]='8';txt[2]='2';txt[3]='-';
0x7E82	0x0E44      	MOVLW       68
0x7E84	0x0102      	MOVLB       2
0x7E86	0x6FAF      	MOVWF       TorqueLogger_txt_L0, 1
0x7E88	0x0E38      	MOVLW       56
0x7E8A	0x6FB0      	MOVWF       TorqueLogger_txt_L0+1, 1
0x7E8C	0x0E32      	MOVLW       50
0x7E8E	0x6FB1      	MOVWF       TorqueLogger_txt_L0+2, 1
0x7E90	0x0E2D      	MOVLW       45
0x7E92	0x6FB2      	MOVWF       TorqueLogger_txt_L0+3, 1
;FirmV_0_7_0.c,2948 :: 		wordtostrwithzeros(VCapM2,txt+4);
0x7E94	0xF2BFC259  	MOVFF       _VCapM2, FARG_WordToStrWithZeros_input
0x7E98	0xF2C0C25A  	MOVFF       _VCapM2+1, FARG_WordToStrWithZeros_input+1
0x7E9C	0x0EB3      	MOVLW       TorqueLogger_txt_L0+4
0x7E9E	0x6FC1      	MOVWF       FARG_WordToStrWithZeros_output, 1
0x7EA0	0x0E02      	MOVLW       hi_addr(TorqueLogger_txt_L0+4)
0x7EA2	0x6FC2      	MOVWF       FARG_WordToStrWithZeros_output+1, 1
0x7EA4	0xF012EC6E  	CALL        _WordToStrWithZeros, 0
;FirmV_0_7_0.c,2949 :: 		txt[9]=0;
0x7EA8	0x6BB8      	CLRF        TorqueLogger_txt_L0+9, 1
;FirmV_0_7_0.c,2950 :: 		Logger(txt,0);
0x7EAA	0x0EAF      	MOVLW       TorqueLogger_txt_L0
0x7EAC	0x0103      	MOVLB       3
0x7EAE	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x7EB0	0x0E02      	MOVLW       hi_addr(TorqueLogger_txt_L0)
0x7EB2	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x7EB4	0x6BDB      	CLRF        FARG_Logger_TimeStampFlag, 1
0x7EB6	0xF009EC69  	CALL        _Logger, 0
;FirmV_0_7_0.c,2952 :: 		break;
0x7EBA	0xD04D      	BRA         L_TorqueLogger801
;FirmV_0_7_0.c,2954 :: 		case 200:
L_TorqueLogger806:
;FirmV_0_7_0.c,2955 :: 		txt[0]='D';txt[1]='L';txt[2]='1';txt[3]='-';
0x7EBC	0x0E44      	MOVLW       68
0x7EBE	0x0102      	MOVLB       2
0x7EC0	0x6FAF      	MOVWF       TorqueLogger_txt_L0, 1
0x7EC2	0x0E4C      	MOVLW       76
0x7EC4	0x6FB0      	MOVWF       TorqueLogger_txt_L0+1, 1
0x7EC6	0x0E31      	MOVLW       49
0x7EC8	0x6FB1      	MOVWF       TorqueLogger_txt_L0+2, 1
0x7ECA	0x0E2D      	MOVLW       45
0x7ECC	0x6FB2      	MOVWF       TorqueLogger_txt_L0+3, 1
;FirmV_0_7_0.c,2956 :: 		wordtostrwithzeros(VCapM1,txt+4);
0x7ECE	0xF2BFC25B  	MOVFF       _VCapM1, FARG_WordToStrWithZeros_input
0x7ED2	0xF2C0C25C  	MOVFF       _VCapM1+1, FARG_WordToStrWithZeros_input+1
0x7ED6	0x0EB3      	MOVLW       TorqueLogger_txt_L0+4
0x7ED8	0x6FC1      	MOVWF       FARG_WordToStrWithZeros_output, 1
0x7EDA	0x0E02      	MOVLW       hi_addr(TorqueLogger_txt_L0+4)
0x7EDC	0x6FC2      	MOVWF       FARG_WordToStrWithZeros_output+1, 1
0x7EDE	0xF012EC6E  	CALL        _WordToStrWithZeros, 0
;FirmV_0_7_0.c,2957 :: 		txt[9]=0;
0x7EE2	0x6BB8      	CLRF        TorqueLogger_txt_L0+9, 1
;FirmV_0_7_0.c,2958 :: 		Logger(txt,0);
0x7EE4	0x0EAF      	MOVLW       TorqueLogger_txt_L0
0x7EE6	0x0103      	MOVLB       3
0x7EE8	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x7EEA	0x0E02      	MOVLW       hi_addr(TorqueLogger_txt_L0)
0x7EEC	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x7EEE	0x6BDB      	CLRF        FARG_Logger_TimeStampFlag, 1
0x7EF0	0xF009EC69  	CALL        _Logger, 0
;FirmV_0_7_0.c,2960 :: 		txt[0]='D';txt[1]='L';txt[2]='2';txt[3]='-';
0x7EF4	0x0E44      	MOVLW       68
0x7EF6	0x0102      	MOVLB       2
0x7EF8	0x6FAF      	MOVWF       TorqueLogger_txt_L0, 1
0x7EFA	0x0E4C      	MOVLW       76
0x7EFC	0x6FB0      	MOVWF       TorqueLogger_txt_L0+1, 1
0x7EFE	0x0E32      	MOVLW       50
0x7F00	0x6FB1      	MOVWF       TorqueLogger_txt_L0+2, 1
0x7F02	0x0E2D      	MOVLW       45
0x7F04	0x6FB2      	MOVWF       TorqueLogger_txt_L0+3, 1
;FirmV_0_7_0.c,2961 :: 		wordtostrwithzeros(VCapM2,txt+4);
0x7F06	0xF2BFC259  	MOVFF       _VCapM2, FARG_WordToStrWithZeros_input
0x7F0A	0xF2C0C25A  	MOVFF       _VCapM2+1, FARG_WordToStrWithZeros_input+1
0x7F0E	0x0EB3      	MOVLW       TorqueLogger_txt_L0+4
0x7F10	0x6FC1      	MOVWF       FARG_WordToStrWithZeros_output, 1
0x7F12	0x0E02      	MOVLW       hi_addr(TorqueLogger_txt_L0+4)
0x7F14	0x6FC2      	MOVWF       FARG_WordToStrWithZeros_output+1, 1
0x7F16	0xF012EC6E  	CALL        _WordToStrWithZeros, 0
;FirmV_0_7_0.c,2962 :: 		txt[9]=0;
0x7F1A	0x6BB8      	CLRF        TorqueLogger_txt_L0+9, 1
;FirmV_0_7_0.c,2963 :: 		Logger(txt,0);
0x7F1C	0x0EAF      	MOVLW       TorqueLogger_txt_L0
0x7F1E	0x0103      	MOVLB       3
0x7F20	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x7F22	0x0E02      	MOVLW       hi_addr(TorqueLogger_txt_L0)
0x7F24	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x7F26	0x6BDB      	CLRF        FARG_Logger_TimeStampFlag, 1
0x7F28	0xF009EC69  	CALL        _Logger, 0
;FirmV_0_7_0.c,2965 :: 		break;
0x7F2C	0xD014      	BRA         L_TorqueLogger801
;FirmV_0_7_0.c,2967 :: 		}
L_TorqueLogger800:
0x7F2E	0x0101      	MOVLB       1
0x7F30	0x5144      	MOVF        _State, 0, 1
0x7F32	0x0A03      	XORLW       3
0x7F34	0xB4D8      	BTFSC       STATUS, 2 
0x7F36	0xD6DE      	BRA         L_TorqueLogger802
0x7F38	0x5144      	MOVF        _State, 0, 1
0x7F3A	0x0A04      	XORLW       4
0x7F3C	0xB4D8      	BTFSC       STATUS, 2 
0x7F3E	0xD713      	BRA         L_TorqueLogger803
0x7F40	0x5144      	MOVF        _State, 0, 1
0x7F42	0x0A07      	XORLW       7
0x7F44	0xB4D8      	BTFSC       STATUS, 2 
0x7F46	0xD748      	BRA         L_TorqueLogger804
0x7F48	0x5144      	MOVF        _State, 0, 1
0x7F4A	0x0A08      	XORLW       8
0x7F4C	0xB4D8      	BTFSC       STATUS, 2 
0x7F4E	0xD77D      	BRA         L_TorqueLogger805
0x7F50	0x5144      	MOVF        _State, 0, 1
0x7F52	0x0AC8      	XORLW       200
0x7F54	0xE0B3      	BZ          L_TorqueLogger806
L_TorqueLogger801:
;FirmV_0_7_0.c,2968 :: 		}
0x7F56	0x0012      	RETURN      0
; end of _TorqueLogger
_EventHandler:
;FirmV_0_7_0.c,1428 :: 		void EventHandler()
;FirmV_0_7_0.c,1431 :: 		Events.ExternalKeys=GetExternalKeysState();
0x7F58	0xF012EC63  	CALL        _GetExternalKeysState, 0
0x7F5C	0xF2A2C000  	MOVFF       R0, _Events+8
;FirmV_0_7_0.c,1432 :: 		Events.Limiter=GetLimitSwitchState();
0x7F60	0xF012EC59  	CALL        _GetLimitSwitchState, 0
0x7F64	0xF2A1C000  	MOVFF       R0, _Events+7
;FirmV_0_7_0.c,1433 :: 		Events.Keys=GetKeysState();
0x7F68	0xF012ECB8  	CALL        _GetKeysState, 0
0x7F6C	0xF29AC000  	MOVFF       R0, _Events
;FirmV_0_7_0.c,1434 :: 		Events.Remote=GetRemoteState();
0x7F70	0xF013EC99  	CALL        _GetRemoteState, 0
0x7F74	0xF29EC000  	MOVFF       R0, _Events+4
;FirmV_0_7_0.c,1435 :: 		Events.Overload=GetOverloadState();
0x7F78	0xF017ECE2  	CALL        _GetOverloadState, 0
0x7F7C	0xF29FC000  	MOVFF       R0, _Events+5
;FirmV_0_7_0.c,1436 :: 		Events.Photocell=GetPhotocellState();
0x7F80	0xF031EC98  	CALL        _GetPhotocellState, 0
0x7F84	0xF2A0C000  	MOVFF       R0, _Events+6
;FirmV_0_7_0.c,1438 :: 		for(i=0;i<20;i++)
0x7F88	0x0102      	MOVLB       2
0x7F8A	0x6BAF      	CLRF        EventHandler_i_L0, 1
L_EventHandler342:
0x7F8C	0x0E14      	MOVLW       20
0x7F8E	0x5DAF      	SUBWF       EventHandler_i_L0, 0, 1
0x7F90	0xB0D8      	BTFSC       STATUS, 0 
0x7F92	0xD0DC      	BRA         L_EventHandler343
;FirmV_0_7_0.c,1439 :: 		if((Tasks[i].Expired==0)&&(Tasks[i].Fired==1))
0x7F94	0xF000C2AF  	MOVFF       EventHandler_i_L0, R0
0x7F98	0x0E00      	MOVLW       0
0x7F9A	0x6E01      	MOVWF       R1 
0x7F9C	0x0E07      	MOVLW       7
0x7F9E	0x6E04      	MOVWF       R4 
0x7FA0	0x0E00      	MOVLW       0
0x7FA2	0x6E05      	MOVWF       R5 
0x7FA4	0xF005ECD8  	CALL        _Mul_16x16_U, 0
0x7FA8	0x0EA8      	MOVLW       _Tasks
0x7FAA	0x2600      	ADDWF       R0, 1 
0x7FAC	0x0E01      	MOVLW       hi_addr(_Tasks)
0x7FAE	0x2201      	ADDWFC      R1, 1 
0x7FB0	0x0E05      	MOVLW       5
0x7FB2	0x2400      	ADDWF       R0, 0 
0x7FB4	0x6EE9      	MOVWF       FSR0L 
0x7FB6	0x0E00      	MOVLW       0
0x7FB8	0x2001      	ADDWFC      R1, 0 
0x7FBA	0x6EEA      	MOVWF       FSR0H 
0x7FBC	0x50EE      	MOVF        POSTINC0, 0 
0x7FBE	0x0A00      	XORLW       0
0x7FC0	0xA4D8      	BTFSS       STATUS, 2 
0x7FC2	0xD0C2      	BRA         L_EventHandler347
0x7FC4	0xF000C2AF  	MOVFF       EventHandler_i_L0, R0
0x7FC8	0x0E00      	MOVLW       0
0x7FCA	0x6E01      	MOVWF       R1 
0x7FCC	0x0E07      	MOVLW       7
0x7FCE	0x6E04      	MOVWF       R4 
0x7FD0	0x0E00      	MOVLW       0
0x7FD2	0x6E05      	MOVWF       R5 
0x7FD4	0xF005ECD8  	CALL        _Mul_16x16_U, 0
0x7FD8	0x0EA8      	MOVLW       _Tasks
0x7FDA	0x2600      	ADDWF       R0, 1 
0x7FDC	0x0E01      	MOVLW       hi_addr(_Tasks)
0x7FDE	0x2201      	ADDWFC      R1, 1 
0x7FE0	0x0E06      	MOVLW       6
0x7FE2	0x2400      	ADDWF       R0, 0 
0x7FE4	0x6EE9      	MOVWF       FSR0L 
0x7FE6	0x0E00      	MOVLW       0
0x7FE8	0x2001      	ADDWFC      R1, 0 
0x7FEA	0x6EEA      	MOVWF       FSR0H 
0x7FEC	0x50EE      	MOVF        POSTINC0, 0 
0x7FEE	0x0A01      	XORLW       1
0x7FF0	0xA4D8      	BTFSS       STATUS, 2 
0x7FF2	0xD0AA      	BRA         L_EventHandler347
L__EventHandler868:
;FirmV_0_7_0.c,1441 :: 		if(Events.Task1==0)
0x7FF4	0x519B      	MOVF        _Events+1, 0, 1
0x7FF6	0x0A00      	XORLW       0
0x7FF8	0xE136      	BNZ         L_EventHandler348
;FirmV_0_7_0.c,1442 :: 		{Events.Task1=Tasks[i].TaskCode; Tasks[i].Expired=1;Tasks[i].Fired=0;}
0x7FFA	0xF000C2AF  	MOVFF       EventHandler_i_L0, R0
0x7FFE	0x0E00      	MOVLW       0
0x8000	0x6E01      	MOVWF       R1 
0x8002	0x0E07      	MOVLW       7
0x8004	0x6E04      	MOVWF       R4 
0x8006	0x0E00      	MOVLW       0
0x8008	0x6E05      	MOVWF       R5 
0x800A	0xF005ECD8  	CALL        _Mul_16x16_U, 0
0x800E	0x0EA8      	MOVLW       _Tasks
0x8010	0x2400      	ADDWF       R0, 0 
0x8012	0x6E02      	MOVWF       R2 
0x8014	0x0E01      	MOVLW       hi_addr(_Tasks)
0x8016	0x2001      	ADDWFC      R1, 0 
0x8018	0x6E03      	MOVWF       R3 
0x801A	0xFFE9C002  	MOVFF       R2, FSR0L
0x801E	0xFFEAC003  	MOVFF       R3, FSR0H
0x8022	0xF000CFEE  	MOVFF       POSTINC0, R0
0x8026	0xF29BC000  	MOVFF       R0, _Events+1
0x802A	0x0E05      	MOVLW       5
0x802C	0x2402      	ADDWF       R2, 0 
0x802E	0x6EE1      	MOVWF       FSR1L 
0x8030	0x0E00      	MOVLW       0
0x8032	0x2003      	ADDWFC      R3, 0 
0x8034	0x6EE2      	MOVWF       FSR1H 
0x8036	0x0E01      	MOVLW       1
0x8038	0x6EE6      	MOVWF       POSTINC1 
0x803A	0xF000C2AF  	MOVFF       EventHandler_i_L0, R0
0x803E	0x0E00      	MOVLW       0
0x8040	0x6E01      	MOVWF       R1 
0x8042	0x0E07      	MOVLW       7
0x8044	0x6E04      	MOVWF       R4 
0x8046	0x0E00      	MOVLW       0
0x8048	0x6E05      	MOVWF       R5 
0x804A	0xF005ECD8  	CALL        _Mul_16x16_U, 0
0x804E	0x0EA8      	MOVLW       _Tasks
0x8050	0x2600      	ADDWF       R0, 1 
0x8052	0x0E01      	MOVLW       hi_addr(_Tasks)
0x8054	0x2201      	ADDWFC      R1, 1 
0x8056	0x0E06      	MOVLW       6
0x8058	0x2400      	ADDWF       R0, 0 
0x805A	0x6EE1      	MOVWF       FSR1L 
0x805C	0x0E00      	MOVLW       0
0x805E	0x2001      	ADDWFC      R1, 0 
0x8060	0x6EE2      	MOVWF       FSR1H 
0x8062	0x6AE6      	CLRF        POSTINC1 
0x8064	0xD071      	BRA         L_EventHandler349
L_EventHandler348:
;FirmV_0_7_0.c,1443 :: 		else if(Events.Task2==0)
0x8066	0x519C      	MOVF        _Events+2, 0, 1
0x8068	0x0A00      	XORLW       0
0x806A	0xE136      	BNZ         L_EventHandler350
;FirmV_0_7_0.c,1444 :: 		{Events.Task2=Tasks[i].TaskCode;Tasks[i].Expired=1;Tasks[i].Fired=0;}
0x806C	0xF000C2AF  	MOVFF       EventHandler_i_L0, R0
0x8070	0x0E00      	MOVLW       0
0x8072	0x6E01      	MOVWF       R1 
0x8074	0x0E07      	MOVLW       7
0x8076	0x6E04      	MOVWF       R4 
0x8078	0x0E00      	MOVLW       0
0x807A	0x6E05      	MOVWF       R5 
0x807C	0xF005ECD8  	CALL        _Mul_16x16_U, 0
0x8080	0x0EA8      	MOVLW       _Tasks
0x8082	0x2400      	ADDWF       R0, 0 
0x8084	0x6E02      	MOVWF       R2 
0x8086	0x0E01      	MOVLW       hi_addr(_Tasks)
0x8088	0x2001      	ADDWFC      R1, 0 
0x808A	0x6E03      	MOVWF       R3 
0x808C	0xFFE9C002  	MOVFF       R2, FSR0L
0x8090	0xFFEAC003  	MOVFF       R3, FSR0H
0x8094	0xF000CFEE  	MOVFF       POSTINC0, R0
0x8098	0xF29CC000  	MOVFF       R0, _Events+2
0x809C	0x0E05      	MOVLW       5
0x809E	0x2402      	ADDWF       R2, 0 
0x80A0	0x6EE1      	MOVWF       FSR1L 
0x80A2	0x0E00      	MOVLW       0
0x80A4	0x2003      	ADDWFC      R3, 0 
0x80A6	0x6EE2      	MOVWF       FSR1H 
0x80A8	0x0E01      	MOVLW       1
0x80AA	0x6EE6      	MOVWF       POSTINC1 
0x80AC	0xF000C2AF  	MOVFF       EventHandler_i_L0, R0
0x80B0	0x0E00      	MOVLW       0
0x80B2	0x6E01      	MOVWF       R1 
0x80B4	0x0E07      	MOVLW       7
0x80B6	0x6E04      	MOVWF       R4 
0x80B8	0x0E00      	MOVLW       0
0x80BA	0x6E05      	MOVWF       R5 
0x80BC	0xF005ECD8  	CALL        _Mul_16x16_U, 0
0x80C0	0x0EA8      	MOVLW       _Tasks
0x80C2	0x2600      	ADDWF       R0, 1 
0x80C4	0x0E01      	MOVLW       hi_addr(_Tasks)
0x80C6	0x2201      	ADDWFC      R1, 1 
0x80C8	0x0E06      	MOVLW       6
0x80CA	0x2400      	ADDWF       R0, 0 
0x80CC	0x6EE1      	MOVWF       FSR1L 
0x80CE	0x0E00      	MOVLW       0
0x80D0	0x2001      	ADDWFC      R1, 0 
0x80D2	0x6EE2      	MOVWF       FSR1H 
0x80D4	0x6AE6      	CLRF        POSTINC1 
0x80D6	0xD038      	BRA         L_EventHandler351
L_EventHandler350:
;FirmV_0_7_0.c,1445 :: 		else if(Events.Task3==0)
0x80D8	0x519D      	MOVF        _Events+3, 0, 1
0x80DA	0x0A00      	XORLW       0
0x80DC	0xE135      	BNZ         L_EventHandler352
;FirmV_0_7_0.c,1446 :: 		{Events.Task3=Tasks[i].TaskCode;Tasks[i].Expired=1;Tasks[i].Fired=0;}
0x80DE	0xF000C2AF  	MOVFF       EventHandler_i_L0, R0
0x80E2	0x0E00      	MOVLW       0
0x80E4	0x6E01      	MOVWF       R1 
0x80E6	0x0E07      	MOVLW       7
0x80E8	0x6E04      	MOVWF       R4 
0x80EA	0x0E00      	MOVLW       0
0x80EC	0x6E05      	MOVWF       R5 
0x80EE	0xF005ECD8  	CALL        _Mul_16x16_U, 0
0x80F2	0x0EA8      	MOVLW       _Tasks
0x80F4	0x2400      	ADDWF       R0, 0 
0x80F6	0x6E02      	MOVWF       R2 
0x80F8	0x0E01      	MOVLW       hi_addr(_Tasks)
0x80FA	0x2001      	ADDWFC      R1, 0 
0x80FC	0x6E03      	MOVWF       R3 
0x80FE	0xFFE9C002  	MOVFF       R2, FSR0L
0x8102	0xFFEAC003  	MOVFF       R3, FSR0H
0x8106	0xF000CFEE  	MOVFF       POSTINC0, R0
0x810A	0xF29DC000  	MOVFF       R0, _Events+3
0x810E	0x0E05      	MOVLW       5
0x8110	0x2402      	ADDWF       R2, 0 
0x8112	0x6EE1      	MOVWF       FSR1L 
0x8114	0x0E00      	MOVLW       0
0x8116	0x2003      	ADDWFC      R3, 0 
0x8118	0x6EE2      	MOVWF       FSR1H 
0x811A	0x0E01      	MOVLW       1
0x811C	0x6EE6      	MOVWF       POSTINC1 
0x811E	0xF000C2AF  	MOVFF       EventHandler_i_L0, R0
0x8122	0x0E00      	MOVLW       0
0x8124	0x6E01      	MOVWF       R1 
0x8126	0x0E07      	MOVLW       7
0x8128	0x6E04      	MOVWF       R4 
0x812A	0x0E00      	MOVLW       0
0x812C	0x6E05      	MOVWF       R5 
0x812E	0xF005ECD8  	CALL        _Mul_16x16_U, 0
0x8132	0x0EA8      	MOVLW       _Tasks
0x8134	0x2600      	ADDWF       R0, 1 
0x8136	0x0E01      	MOVLW       hi_addr(_Tasks)
0x8138	0x2201      	ADDWFC      R1, 1 
0x813A	0x0E06      	MOVLW       6
0x813C	0x2400      	ADDWF       R0, 0 
0x813E	0x6EE1      	MOVWF       FSR1L 
0x8140	0x0E00      	MOVLW       0
0x8142	0x2001      	ADDWFC      R1, 0 
0x8144	0x6EE2      	MOVWF       FSR1H 
0x8146	0x6AE6      	CLRF        POSTINC1 
L_EventHandler352:
L_EventHandler351:
L_EventHandler349:
;FirmV_0_7_0.c,1447 :: 		}
L_EventHandler347:
;FirmV_0_7_0.c,1438 :: 		for(i=0;i<20;i++)
0x8148	0x2BAF      	INCF        EventHandler_i_L0, 1, 1
;FirmV_0_7_0.c,1447 :: 		}
0x814A	0xD720      	BRA         L_EventHandler342
L_EventHandler343:
;FirmV_0_7_0.c,1448 :: 		}
0x814C	0x0012      	RETURN      0
; end of _EventHandler
_StateManager:
;FirmV_0_7_0.c,468 :: 		void StateManager()
;FirmV_0_7_0.c,471 :: 		switch(State)
0x814E	0xD033      	BRA         L_StateManager61
;FirmV_0_7_0.c,474 :: 		case 0: State1(); break;
L_StateManager63:
0x8150	0xF02EEC8A  	CALL        _State1, 0
0x8154	0xD064      	BRA         L_StateManager62
;FirmV_0_7_0.c,476 :: 		case 1: State1(); break;
L_StateManager64:
0x8156	0xF02EEC8A  	CALL        _State1, 0
0x815A	0xD061      	BRA         L_StateManager62
;FirmV_0_7_0.c,478 :: 		case 2: State2(); break;
L_StateManager65:
0x815C	0xF027EC11  	CALL        _State2, 0
0x8160	0xD05E      	BRA         L_StateManager62
;FirmV_0_7_0.c,480 :: 		case 3: State3(); break;
L_StateManager66:
0x8162	0xF038ECD0  	CALL        _State3, 0
0x8166	0xD05B      	BRA         L_StateManager62
;FirmV_0_7_0.c,482 :: 		case 4: State4(); break;
L_StateManager67:
0x8168	0xF01EECD2  	CALL        _State4, 0
0x816C	0xD058      	BRA         L_StateManager62
;FirmV_0_7_0.c,484 :: 		case 5: State5(); break;
L_StateManager68:
0x816E	0xF02CEC08  	CALL        _State5, 0
0x8172	0xD055      	BRA         L_StateManager62
;FirmV_0_7_0.c,486 :: 		case 6: State6(); break;
L_StateManager69:
0x8174	0xF023ECEB  	CALL        _State6, 0
0x8178	0xD052      	BRA         L_StateManager62
;FirmV_0_7_0.c,488 :: 		case 7: State7(); break;
L_StateManager70:
0x817A	0xF018EC68  	CALL        _State7, 0
0x817E	0xD04F      	BRA         L_StateManager62
;FirmV_0_7_0.c,490 :: 		case 8: State8(); break;
L_StateManager71:
0x8180	0xF034ECC4  	CALL        _State8, 0
0x8184	0xD04C      	BRA         L_StateManager62
;FirmV_0_7_0.c,492 :: 		case 10:State00(); break;
L_StateManager72:
0x8186	0xF034ECA0  	CALL        _State00, 0
0x818A	0xD049      	BRA         L_StateManager62
;FirmV_0_7_0.c,494 :: 		case 100:Menu0(); break;
L_StateManager73:
0x818C	0xF00BECB2  	CALL        _Menu0, 0
0x8190	0xD046      	BRA         L_StateManager62
;FirmV_0_7_0.c,496 :: 		case 101:Menu1(); break;
L_StateManager74:
0x8192	0xF017EC68  	CALL        _Menu1, 0
0x8196	0xD043      	BRA         L_StateManager62
;FirmV_0_7_0.c,498 :: 		case 102:Menu2(); break;
L_StateManager75:
0x8198	0xF014ECD0  	CALL        _Menu2, 0
0x819C	0xD040      	BRA         L_StateManager62
;FirmV_0_7_0.c,500 :: 		case 103:Menu3(); break;
L_StateManager76:
0x819E	0xF01EECCD  	CALL        _Menu3, 0
0x81A2	0xD03D      	BRA         L_StateManager62
;FirmV_0_7_0.c,502 :: 		case 200:LearnAuto(); break;
L_StateManager77:
0x81A4	0xF01CEC87  	CALL        _LearnAuto, 0
0x81A8	0xD03A      	BRA         L_StateManager62
;FirmV_0_7_0.c,504 :: 		case 201:LearnManual(); break;
L_StateManager78:
0x81AA	0xF031ECA8  	CALL        _LearnManual, 0
0x81AE	0xD037      	BRA         L_StateManager62
;FirmV_0_7_0.c,506 :: 		case 250:About(); break;
L_StateManager79:
0x81B0	0xF013ECFC  	CALL        _About, 0
0x81B4	0xD034      	BRA         L_StateManager62
;FirmV_0_7_0.c,508 :: 		}
L_StateManager61:
0x81B6	0x0101      	MOVLB       1
0x81B8	0x5144      	MOVF        _State, 0, 1
0x81BA	0x0A00      	XORLW       0
0x81BC	0xE0C9      	BZ          L_StateManager63
0x81BE	0x5144      	MOVF        _State, 0, 1
0x81C0	0x0A01      	XORLW       1
0x81C2	0xE0C9      	BZ          L_StateManager64
0x81C4	0x5144      	MOVF        _State, 0, 1
0x81C6	0x0A02      	XORLW       2
0x81C8	0xE0C9      	BZ          L_StateManager65
0x81CA	0x5144      	MOVF        _State, 0, 1
0x81CC	0x0A03      	XORLW       3
0x81CE	0xE0C9      	BZ          L_StateManager66
0x81D0	0x5144      	MOVF        _State, 0, 1
0x81D2	0x0A04      	XORLW       4
0x81D4	0xE0C9      	BZ          L_StateManager67
0x81D6	0x5144      	MOVF        _State, 0, 1
0x81D8	0x0A05      	XORLW       5
0x81DA	0xE0C9      	BZ          L_StateManager68
0x81DC	0x5144      	MOVF        _State, 0, 1
0x81DE	0x0A06      	XORLW       6
0x81E0	0xE0C9      	BZ          L_StateManager69
0x81E2	0x5144      	MOVF        _State, 0, 1
0x81E4	0x0A07      	XORLW       7
0x81E6	0xE0C9      	BZ          L_StateManager70
0x81E8	0x5144      	MOVF        _State, 0, 1
0x81EA	0x0A08      	XORLW       8
0x81EC	0xE0C9      	BZ          L_StateManager71
0x81EE	0x5144      	MOVF        _State, 0, 1
0x81F0	0x0A0A      	XORLW       10
0x81F2	0xE0C9      	BZ          L_StateManager72
0x81F4	0x5144      	MOVF        _State, 0, 1
0x81F6	0x0A64      	XORLW       100
0x81F8	0xE0C9      	BZ          L_StateManager73
0x81FA	0x5144      	MOVF        _State, 0, 1
0x81FC	0x0A65      	XORLW       101
0x81FE	0xE0C9      	BZ          L_StateManager74
0x8200	0x5144      	MOVF        _State, 0, 1
0x8202	0x0A66      	XORLW       102
0x8204	0xE0C9      	BZ          L_StateManager75
0x8206	0x5144      	MOVF        _State, 0, 1
0x8208	0x0A67      	XORLW       103
0x820A	0xE0C9      	BZ          L_StateManager76
0x820C	0x5144      	MOVF        _State, 0, 1
0x820E	0x0AC8      	XORLW       200
0x8210	0xE0C9      	BZ          L_StateManager77
0x8212	0x5144      	MOVF        _State, 0, 1
0x8214	0x0AC9      	XORLW       201
0x8216	0xE0C9      	BZ          L_StateManager78
0x8218	0x5144      	MOVF        _State, 0, 1
0x821A	0x0AFA      	XORLW       250
0x821C	0xE0C9      	BZ          L_StateManager79
L_StateManager62:
;FirmV_0_7_0.c,509 :: 		}
0x821E	0x0012      	RETURN      0
; end of _StateManager
_TaskManager:
;FirmV_0_7_0.c,1388 :: 		void TaskManager()
;FirmV_0_7_0.c,1390 :: 		char i=0;
0x8220	0x0102      	MOVLB       2
0x8222	0x6BAF      	CLRF        TaskManager_i_L0, 1
;FirmV_0_7_0.c,1391 :: 		for(i=0;i<20;i++)
0x8224	0x6BAF      	CLRF        TaskManager_i_L0, 1
L_TaskManager332:
0x8226	0x0E14      	MOVLW       20
0x8228	0x5DAF      	SUBWF       TaskManager_i_L0, 0, 1
0x822A	0xE270      	BC          L_TaskManager333
;FirmV_0_7_0.c,1392 :: 		if((Tasks[i].Expired==0)&&(Tasks[i].Time==ms500)&&(Tasks[i].Fired==0))
0x822C	0xF000C2AF  	MOVFF       TaskManager_i_L0, R0
0x8230	0x0E00      	MOVLW       0
0x8232	0x6E01      	MOVWF       R1 
0x8234	0x0E07      	MOVLW       7
0x8236	0x6E04      	MOVWF       R4 
0x8238	0x0E00      	MOVLW       0
0x823A	0x6E05      	MOVWF       R5 
0x823C	0xF005ECD8  	CALL        _Mul_16x16_U, 0
0x8240	0x0EA8      	MOVLW       _Tasks
0x8242	0x2600      	ADDWF       R0, 1 
0x8244	0x0E01      	MOVLW       hi_addr(_Tasks)
0x8246	0x2201      	ADDWFC      R1, 1 
0x8248	0x0E05      	MOVLW       5
0x824A	0x2400      	ADDWF       R0, 0 
0x824C	0x6EE9      	MOVWF       FSR0L 
0x824E	0x0E00      	MOVLW       0
0x8250	0x2001      	ADDWFC      R1, 0 
0x8252	0x6EEA      	MOVWF       FSR0H 
0x8254	0x50EE      	MOVF        POSTINC0, 0 
0x8256	0x0A00      	XORLW       0
0x8258	0xE156      	BNZ         L_TaskManager337
0x825A	0xF000C2AF  	MOVFF       TaskManager_i_L0, R0
0x825E	0x0E00      	MOVLW       0
0x8260	0x6E01      	MOVWF       R1 
0x8262	0x0E07      	MOVLW       7
0x8264	0x6E04      	MOVWF       R4 
0x8266	0x0E00      	MOVLW       0
0x8268	0x6E05      	MOVWF       R5 
0x826A	0xF005ECD8  	CALL        _Mul_16x16_U, 0
0x826E	0x0EA8      	MOVLW       _Tasks
0x8270	0x2600      	ADDWF       R0, 1 
0x8272	0x0E01      	MOVLW       hi_addr(_Tasks)
0x8274	0x2201      	ADDWFC      R1, 1 
0x8276	0x0E01      	MOVLW       1
0x8278	0x2400      	ADDWF       R0, 0 
0x827A	0x6EE9      	MOVWF       FSR0L 
0x827C	0x0E00      	MOVLW       0
0x827E	0x2001      	ADDWFC      R1, 0 
0x8280	0x6EEA      	MOVWF       FSR0H 
0x8282	0xF001CFEE  	MOVFF       POSTINC0, R1
0x8286	0xF002CFEE  	MOVFF       POSTINC0, R2
0x828A	0xF003CFEE  	MOVFF       POSTINC0, R3
0x828E	0xF004CFEE  	MOVFF       POSTINC0, R4
0x8292	0x5004      	MOVF        R4, 0 
0x8294	0x0101      	MOVLB       1
0x8296	0x1907      	XORWF       _ms500+3, 0, 1
0x8298	0xE108      	BNZ         L__TaskManager939
0x829A	0x5003      	MOVF        R3, 0 
0x829C	0x1906      	XORWF       _ms500+2, 0, 1
0x829E	0xE105      	BNZ         L__TaskManager939
0x82A0	0x5002      	MOVF        R2, 0 
0x82A2	0x1905      	XORWF       _ms500+1, 0, 1
0x82A4	0xE102      	BNZ         L__TaskManager939
0x82A6	0x5001      	MOVF        R1, 0 
0x82A8	0x1904      	XORWF       _ms500, 0, 1
L__TaskManager939:
0x82AA	0xE12D      	BNZ         L_TaskManager337
0x82AC	0xF000C2AF  	MOVFF       TaskManager_i_L0, R0
0x82B0	0x0E00      	MOVLW       0
0x82B2	0x6E01      	MOVWF       R1 
0x82B4	0x0E07      	MOVLW       7
0x82B6	0x6E04      	MOVWF       R4 
0x82B8	0x0E00      	MOVLW       0
0x82BA	0x6E05      	MOVWF       R5 
0x82BC	0xF005ECD8  	CALL        _Mul_16x16_U, 0
0x82C0	0x0EA8      	MOVLW       _Tasks
0x82C2	0x2600      	ADDWF       R0, 1 
0x82C4	0x0E01      	MOVLW       hi_addr(_Tasks)
0x82C6	0x2201      	ADDWFC      R1, 1 
0x82C8	0x0E06      	MOVLW       6
0x82CA	0x2400      	ADDWF       R0, 0 
0x82CC	0x6EE9      	MOVWF       FSR0L 
0x82CE	0x0E00      	MOVLW       0
0x82D0	0x2001      	ADDWFC      R1, 0 
0x82D2	0x6EEA      	MOVWF       FSR0H 
0x82D4	0x50EE      	MOVF        POSTINC0, 0 
0x82D6	0x0A00      	XORLW       0
0x82D8	0xE116      	BNZ         L_TaskManager337
L__TaskManager867:
;FirmV_0_7_0.c,1393 :: 		Tasks[i].Fired=1;
0x82DA	0xF000C2AF  	MOVFF       TaskManager_i_L0, R0
0x82DE	0x0E00      	MOVLW       0
0x82E0	0x6E01      	MOVWF       R1 
0x82E2	0x0E07      	MOVLW       7
0x82E4	0x6E04      	MOVWF       R4 
0x82E6	0x0E00      	MOVLW       0
0x82E8	0x6E05      	MOVWF       R5 
0x82EA	0xF005ECD8  	CALL        _Mul_16x16_U, 0
0x82EE	0x0EA8      	MOVLW       _Tasks
0x82F0	0x2600      	ADDWF       R0, 1 
0x82F2	0x0E01      	MOVLW       hi_addr(_Tasks)
0x82F4	0x2201      	ADDWFC      R1, 1 
0x82F6	0x0E06      	MOVLW       6
0x82F8	0x2400      	ADDWF       R0, 0 
0x82FA	0x6EE1      	MOVWF       FSR1L 
0x82FC	0x0E00      	MOVLW       0
0x82FE	0x2001      	ADDWFC      R1, 0 
0x8300	0x6EE2      	MOVWF       FSR1H 
0x8302	0x0E01      	MOVLW       1
0x8304	0x6EE6      	MOVWF       POSTINC1 
L_TaskManager337:
;FirmV_0_7_0.c,1391 :: 		for(i=0;i<20;i++)
0x8306	0x0102      	MOVLB       2
0x8308	0x2BAF      	INCF        TaskManager_i_L0, 1, 1
;FirmV_0_7_0.c,1393 :: 		Tasks[i].Fired=1;
0x830A	0xD78D      	BRA         L_TaskManager332
L_TaskManager333:
;FirmV_0_7_0.c,1394 :: 		}
0x830C	0x0012      	RETURN      0
; end of _TaskManager
_Decrypt:
;FirmV_0_7_0.c,326 :: 		void Decrypt()
;FirmV_0_7_0.c,328 :: 		Sipher[0]=Crypto[1][0]+0x0D;
0x830E	0x0E0D      	MOVLW       13
0x8310	0x243E      	ADDWF       _crypto+16, 0 
0x8312	0x0101      	MOVLB       1
0x8314	0x6F92      	MOVWF       _Sipher, 1
;FirmV_0_7_0.c,329 :: 		Sipher[1]=Crypto[1][1]+0x0D;
0x8316	0x0E0D      	MOVLW       13
0x8318	0x243F      	ADDWF       _crypto+17, 0 
0x831A	0x6F93      	MOVWF       _Sipher+1, 1
;FirmV_0_7_0.c,330 :: 		Sipher[2]=Crypto[1][2]+0x0D;
0x831C	0x0E0D      	MOVLW       13
0x831E	0x2440      	ADDWF       _crypto+18, 0 
0x8320	0x6F94      	MOVWF       _Sipher+2, 1
;FirmV_0_7_0.c,331 :: 		Sipher[3]=Crypto[1][3]-0x26;
0x8322	0x0E26      	MOVLW       38
0x8324	0x5C41      	SUBWF       _crypto+19, 0 
0x8326	0x6F95      	MOVWF       _Sipher+3, 1
;FirmV_0_7_0.c,332 :: 		Sipher[4]=Crypto[1][4]-0x3C;
0x8328	0x0E3C      	MOVLW       60
0x832A	0x5C42      	SUBWF       _crypto+20, 0 
0x832C	0x6F96      	MOVWF       _Sipher+4, 1
;FirmV_0_7_0.c,333 :: 		Sipher[5]=Crypto[1][5]-0x41;
0x832E	0x0E41      	MOVLW       65
0x8330	0x5C43      	SUBWF       _crypto+21, 0 
0x8332	0x6F97      	MOVWF       _Sipher+5, 1
;FirmV_0_7_0.c,334 :: 		Sipher[6]=Crypto[1][6]-0x0C;
0x8334	0x0E0C      	MOVLW       12
0x8336	0x5C44      	SUBWF       _crypto+22, 0 
0x8338	0x6F98      	MOVWF       _Sipher+6, 1
;FirmV_0_7_0.c,335 :: 		Sipher[7]=Crypto[1][7]+0x34;
0x833A	0x0E34      	MOVLW       52
0x833C	0x2445      	ADDWF       _crypto+23, 0 
0x833E	0x6F99      	MOVWF       _Sipher+7, 1
;FirmV_0_7_0.c,336 :: 		Sipher[8]=Crypto[1][8]-0x01;
0x8340	0x0446      	DECF        _crypto+24, 0 
0x8342	0x6F9A      	MOVWF       _Sipher+8, 1
;FirmV_0_7_0.c,337 :: 		Sipher[9]=Crypto[1][9]-0x1F;
0x8344	0x0E1F      	MOVLW       31
0x8346	0x5C47      	SUBWF       _crypto+25, 0 
0x8348	0x6F9B      	MOVWF       _Sipher+9, 1
;FirmV_0_7_0.c,338 :: 		Sipher[10]=Crypto[1][10]-0x3A;
0x834A	0x0E3A      	MOVLW       58
0x834C	0x5C48      	SUBWF       _crypto+26, 0 
0x834E	0x6F9C      	MOVWF       _Sipher+10, 1
;FirmV_0_7_0.c,339 :: 		Sipher[11]=Crypto[1][11]-0x3B;
0x8350	0x0E3B      	MOVLW       59
0x8352	0x5C49      	SUBWF       _crypto+27, 0 
0x8354	0x6F9D      	MOVWF       _Sipher+11, 1
;FirmV_0_7_0.c,340 :: 		Sipher[12]=Crypto[1][12]-0x3C;
0x8356	0x0E3C      	MOVLW       60
0x8358	0x5C4A      	SUBWF       _crypto+28, 0 
0x835A	0x6F9E      	MOVWF       _Sipher+12, 1
;FirmV_0_7_0.c,341 :: 		Sipher[13]=Crypto[1][13]+0x0D;
0x835C	0x0E0D      	MOVLW       13
0x835E	0x244B      	ADDWF       _crypto+29, 0 
0x8360	0x6F9F      	MOVWF       _Sipher+13, 1
;FirmV_0_7_0.c,342 :: 		Sipher[14]=Crypto[1][14]+0x0D;
0x8362	0x0E0D      	MOVLW       13
0x8364	0x244C      	ADDWF       _crypto+30, 0 
0x8366	0x6FA0      	MOVWF       _Sipher+14, 1
;FirmV_0_7_0.c,343 :: 		Sipher[15]=Crypto[1][15]+0x0D;
0x8368	0x0E0D      	MOVLW       13
0x836A	0x244D      	ADDWF       _crypto+31, 0 
0x836C	0x6FA1      	MOVWF       _Sipher+15, 1
;FirmV_0_7_0.c,344 :: 		}
0x836E	0x0012      	RETURN      0
; end of _Decrypt
_LCDUpdater:
;FirmV_0_7_0.c,1247 :: 		void LCDUpdater()
;FirmV_0_7_0.c,1252 :: 		if(LCDUpdateFlag==1)
0x8370	0x0100      	MOVLB       0
0x8372	0x51A2      	MOVF        _LCDUpdateFlag, 0, 1
0x8374	0x0A01      	XORLW       1
0x8376	0xE132      	BNZ         L_LCDUpdater307
;FirmV_0_7_0.c,1254 :: 		if(LCDLines!=line)
0x8378	0x51B4      	MOVF        _LCDLines, 0, 1
0x837A	0x0102      	MOVLB       2
0x837C	0x195F      	XORWF       LCDUpdater_line_L0, 0, 1
0x837E	0xE014      	BZ          L_LCDUpdater308
;FirmV_0_7_0.c,1256 :: 		line=LCDLines;
0x8380	0xF25FC0B4  	MOVFF       _LCDLines, LCDUpdater_line_L0
;FirmV_0_7_0.c,1257 :: 		LCD_init(LCDLines);
0x8384	0xF2BFC0B4  	MOVFF       _LCDLines, FARG_LCD_Init_lines
0x8388	0xF014EC55  	CALL        _LCD_Init, 0
;FirmV_0_7_0.c,1258 :: 		delay_ms(50);
0x838C	0x0E03      	MOVLW       3
0x838E	0x6E0B      	MOVWF       R11, 0
0x8390	0x0E8A      	MOVLW       138
0x8392	0x6E0C      	MOVWF       R12, 0
0x8394	0x0E55      	MOVLW       85
0x8396	0x6E0D      	MOVWF       R13, 0
L_LCDUpdater309:
0x8398	0x2E0D      	DECFSZ      R13, 1, 0
0x839A	0xD7FE      	BRA         L_LCDUpdater309
0x839C	0x2E0C      	DECFSZ      R12, 1, 0
0x839E	0xD7FC      	BRA         L_LCDUpdater309
0x83A0	0x2E0B      	DECFSZ      R11, 1, 0
0x83A2	0xD7FA      	BRA         L_LCDUpdater309
0x83A4	0x0000      	NOP
0x83A6	0x0000      	NOP
;FirmV_0_7_0.c,1259 :: 		}
L_LCDUpdater308:
;FirmV_0_7_0.c,1260 :: 		lcd_out(1,0,LCDLine1);
0x83A8	0x0E01      	MOVLW       1
0x83AA	0x0102      	MOVLB       2
0x83AC	0x6FBF      	MOVWF       FARG_LCD_out_line, 1
0x83AE	0x6BC0      	CLRF        FARG_LCD_out_offset, 1
0x83B0	0x0EBD      	MOVLW       _LCDLine1
0x83B2	0x6FC1      	MOVWF       FARG_LCD_out_dat, 1
0x83B4	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x83B6	0x6FC2      	MOVWF       FARG_LCD_out_dat+1, 1
0x83B8	0xF013EC54  	CALL        _LCD_out, 0
;FirmV_0_7_0.c,1261 :: 		if(!LCDFlash)
0x83BC	0x521D      	MOVF        _LCDFlash, 1 
0x83BE	0xE10A      	BNZ         L_LCDUpdater310
;FirmV_0_7_0.c,1262 :: 		lcd_out(2,0,LCDLine2);
0x83C0	0x0E02      	MOVLW       2
0x83C2	0x6FBF      	MOVWF       FARG_LCD_out_line, 1
0x83C4	0x6BC0      	CLRF        FARG_LCD_out_offset, 1
0x83C6	0x0EA3      	MOVLW       _LCDLine2
0x83C8	0x6FC1      	MOVWF       FARG_LCD_out_dat, 1
0x83CA	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x83CC	0x6FC2      	MOVWF       FARG_LCD_out_dat+1, 1
0x83CE	0xF013EC54  	CALL        _LCD_out, 0
0x83D2	0xD002      	BRA         L_LCDUpdater311
L_LCDUpdater310:
;FirmV_0_7_0.c,1264 :: 		UpdateWhenFlashing=1;
0x83D4	0x0E01      	MOVLW       1
0x83D6	0x6F5D      	MOVWF       LCDUpdater_UpdateWhenFlashing_L0, 1
L_LCDUpdater311:
;FirmV_0_7_0.c,1265 :: 		LCDUpdateFlag=0;
0x83D8	0x0100      	MOVLB       0
0x83DA	0x6BA2      	CLRF        _LCDUpdateFlag, 1
;FirmV_0_7_0.c,1266 :: 		}
L_LCDUpdater307:
;FirmV_0_7_0.c,1268 :: 		if(LCDFlash)
0x83DC	0x521D      	MOVF        _LCDFlash, 1 
0x83DE	0xE04E      	BZ          L_LCDUpdater312
;FirmV_0_7_0.c,1270 :: 		if(((LCDFlashFlag)&&(LastLCDFlashState==0))||((LastLCDFlashState)&&(UpdatewhenFlashing)))
0x83E0	0x521B      	MOVF        _LCDFlashFlag, 1 
0x83E2	0xE005      	BZ          L__LCDUpdater866
0x83E4	0x0102      	MOVLB       2
0x83E6	0x515E      	MOVF        LCDUpdater_LastLCDFlashState_L0, 0, 1
0x83E8	0x0A00      	XORLW       0
0x83EA	0xE101      	BNZ         L__LCDUpdater866
0x83EC	0xD007      	BRA         L__LCDUpdater864
L__LCDUpdater866:
0x83EE	0x0102      	MOVLB       2
0x83F0	0x535E      	MOVF        LCDUpdater_LastLCDFlashState_L0, 1, 1
0x83F2	0xE003      	BZ          L__LCDUpdater865
0x83F4	0x535D      	MOVF        LCDUpdater_UpdateWhenFlashing_L0, 1, 1
0x83F6	0xE001      	BZ          L__LCDUpdater865
0x83F8	0xD001      	BRA         L__LCDUpdater864
L__LCDUpdater865:
0x83FA	0xD029      	BRA         L_LCDUpdater319
L__LCDUpdater864:
;FirmV_0_7_0.c,1271 :: 		{memcpy(LCDLineTemp,LCDLine2,16);LCDLineTemp[0]='>';LCDLineTemp[1]='>';LCDLineTemp[2]='>';LCDLineTemp[13]='<';LCDLineTemp[14]='<';LCDLineTemp[15]='<';lcd_out(2,0,LCDLineTemp);LastLCDFlashState=1;UpdatewhenFlashing=0;}
0x83FC	0x0EAF      	MOVLW       LCDUpdater_LCDLineTemp_L0
0x83FE	0x0105      	MOVLB       5
0x8400	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x8402	0x0E02      	MOVLW       hi_addr(LCDUpdater_LCDLineTemp_L0)
0x8404	0x0106      	MOVLB       6
0x8406	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x8408	0x0EA3      	MOVLW       _LCDLine2
0x840A	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x840C	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x840E	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x8410	0x0E10      	MOVLW       16
0x8412	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x8414	0x0E00      	MOVLW       0
0x8416	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x8418	0xF001EC0D  	CALL        _memcpy, 0
0x841C	0x0E3E      	MOVLW       62
0x841E	0x0102      	MOVLB       2
0x8420	0x6FAF      	MOVWF       LCDUpdater_LCDLineTemp_L0, 1
0x8422	0x0E3E      	MOVLW       62
0x8424	0x6FB0      	MOVWF       LCDUpdater_LCDLineTemp_L0+1, 1
0x8426	0x0E3E      	MOVLW       62
0x8428	0x6FB1      	MOVWF       LCDUpdater_LCDLineTemp_L0+2, 1
0x842A	0x0E3C      	MOVLW       60
0x842C	0x6FBC      	MOVWF       LCDUpdater_LCDLineTemp_L0+13, 1
0x842E	0x0E3C      	MOVLW       60
0x8430	0x6FBD      	MOVWF       LCDUpdater_LCDLineTemp_L0+14, 1
0x8432	0x0E3C      	MOVLW       60
0x8434	0x6FBE      	MOVWF       LCDUpdater_LCDLineTemp_L0+15, 1
0x8436	0x0E02      	MOVLW       2
0x8438	0x6FBF      	MOVWF       FARG_LCD_out_line, 1
0x843A	0x6BC0      	CLRF        FARG_LCD_out_offset, 1
0x843C	0x0EAF      	MOVLW       LCDUpdater_LCDLineTemp_L0
0x843E	0x6FC1      	MOVWF       FARG_LCD_out_dat, 1
0x8440	0x0E02      	MOVLW       hi_addr(LCDUpdater_LCDLineTemp_L0)
0x8442	0x6FC2      	MOVWF       FARG_LCD_out_dat+1, 1
0x8444	0xF013EC54  	CALL        _LCD_out, 0
0x8448	0x0E01      	MOVLW       1
0x844A	0x6F5E      	MOVWF       LCDUpdater_LastLCDFlashState_L0, 1
0x844C	0x6B5D      	CLRF        LCDUpdater_UpdateWhenFlashing_L0, 1
L_LCDUpdater319:
;FirmV_0_7_0.c,1272 :: 		if(((!LCDFlashFlag)&&(LastLCDFlashState!=0))||((!LastLCDFlashState)&&(UpdatewhenFlashing)))
0x844E	0x521B      	MOVF        _LCDFlashFlag, 1 
0x8450	0xE104      	BNZ         L__LCDUpdater863
0x8452	0x515E      	MOVF        LCDUpdater_LastLCDFlashState_L0, 0, 1
0x8454	0x0A00      	XORLW       0
0x8456	0xE001      	BZ          L__LCDUpdater863
0x8458	0xD006      	BRA         L__LCDUpdater861
L__LCDUpdater863:
0x845A	0x535E      	MOVF        LCDUpdater_LastLCDFlashState_L0, 1, 1
0x845C	0xE103      	BNZ         L__LCDUpdater862
0x845E	0x535D      	MOVF        LCDUpdater_UpdateWhenFlashing_L0, 1, 1
0x8460	0xE001      	BZ          L__LCDUpdater862
0x8462	0xD001      	BRA         L__LCDUpdater861
L__LCDUpdater862:
0x8464	0xD00B      	BRA         L_LCDUpdater326
L__LCDUpdater861:
;FirmV_0_7_0.c,1273 :: 		{lcd_out(2,0,LCDLine2);LastLCDFlashState=0;UpdatewhenFlashing=0;}
0x8466	0x0E02      	MOVLW       2
0x8468	0x6FBF      	MOVWF       FARG_LCD_out_line, 1
0x846A	0x6BC0      	CLRF        FARG_LCD_out_offset, 1
0x846C	0x0EA3      	MOVLW       _LCDLine2
0x846E	0x6FC1      	MOVWF       FARG_LCD_out_dat, 1
0x8470	0x0E00      	MOVLW       hi_addr(_LCDLine2)
0x8472	0x6FC2      	MOVWF       FARG_LCD_out_dat+1, 1
0x8474	0xF013EC54  	CALL        _LCD_out, 0
0x8478	0x6B5E      	CLRF        LCDUpdater_LastLCDFlashState_L0, 1
0x847A	0x6B5D      	CLRF        LCDUpdater_UpdateWhenFlashing_L0, 1
L_LCDUpdater326:
;FirmV_0_7_0.c,1274 :: 		}
L_LCDUpdater312:
;FirmV_0_7_0.c,1277 :: 		}
0x847C	0x0012      	RETURN      0
; end of _LCDUpdater
_ResetTaskEvents:
;FirmV_0_7_0.c,312 :: 		void ResetTaskEvents()
;FirmV_0_7_0.c,314 :: 		Events.Task1=0;
0x847E	0x0102      	MOVLB       2
0x8480	0x6B9B      	CLRF        _Events+1, 1
;FirmV_0_7_0.c,315 :: 		Events.Task2=0;
0x8482	0x6B9C      	CLRF        _Events+2, 1
;FirmV_0_7_0.c,316 :: 		Events.Task3=0;
0x8484	0x6B9D      	CLRF        _Events+3, 1
;FirmV_0_7_0.c,317 :: 		}
0x8486	0x0012      	RETURN      0
; end of _ResetTaskEvents
_main:
0x8488	0xF046ECF3  	CALL        36326, 0
;FirmV_0_7_0.c,385 :: 		void main() {
;FirmV_0_7_0.c,388 :: 		PhotocellRel=1;
0x848C	0x8A82      	BSF         PORTC, 5 
;FirmV_0_7_0.c,390 :: 		Init();
0x848E	0xF03DECF3  	CALL        _Init, 0
;FirmV_0_7_0.c,392 :: 		Decrypt();
0x8492	0xDF3D      	RCALL       _Decrypt
;FirmV_0_7_0.c,394 :: 		Buzzer=1;
0x8494	0x8E81      	BSF         PORTB, 7 
;FirmV_0_7_0.c,395 :: 		Logger("Start ...",1);
0x8496	0x0E53      	MOVLW       83
0x8498	0x0102      	MOVLB       2
0x849A	0x6FA5      	MOVWF       ?lstr2_FirmV_0_7_0, 1
0x849C	0x0E74      	MOVLW       116
0x849E	0x6FA6      	MOVWF       ?lstr2_FirmV_0_7_0+1, 1
0x84A0	0x0E61      	MOVLW       97
0x84A2	0x6FA7      	MOVWF       ?lstr2_FirmV_0_7_0+2, 1
0x84A4	0x0E72      	MOVLW       114
0x84A6	0x6FA8      	MOVWF       ?lstr2_FirmV_0_7_0+3, 1
0x84A8	0x0E74      	MOVLW       116
0x84AA	0x6FA9      	MOVWF       ?lstr2_FirmV_0_7_0+4, 1
0x84AC	0x0E20      	MOVLW       32
0x84AE	0x6FAA      	MOVWF       ?lstr2_FirmV_0_7_0+5, 1
0x84B0	0x0E2E      	MOVLW       46
0x84B2	0x6FAB      	MOVWF       ?lstr2_FirmV_0_7_0+6, 1
0x84B4	0x0E2E      	MOVLW       46
0x84B6	0x6FAC      	MOVWF       ?lstr2_FirmV_0_7_0+7, 1
0x84B8	0x0E2E      	MOVLW       46
0x84BA	0x6FAD      	MOVWF       ?lstr2_FirmV_0_7_0+8, 1
0x84BC	0x6BAE      	CLRF        ?lstr2_FirmV_0_7_0+9, 1
0x84BE	0x0EA5      	MOVLW       ?lstr2_FirmV_0_7_0
0x84C0	0x0103      	MOVLB       3
0x84C2	0x6FD9      	MOVWF       FARG_Logger_text, 1
0x84C4	0x0E02      	MOVLW       hi_addr(?lstr2_FirmV_0_7_0)
0x84C6	0x6FDA      	MOVWF       FARG_Logger_text+1, 1
0x84C8	0x0E01      	MOVLW       1
0x84CA	0x6FDB      	MOVWF       FARG_Logger_TimeStampFlag, 1
0x84CC	0xF009EC69  	CALL        _Logger, 0
;FirmV_0_7_0.c,396 :: 		memcpy(LCDLine1,Sipher,16);
0x84D0	0x0EBD      	MOVLW       _LCDLine1
0x84D2	0x0105      	MOVLB       5
0x84D4	0x6FFF      	MOVWF       FARG_memcpy_d1, 1
0x84D6	0x0E00      	MOVLW       hi_addr(_LCDLine1)
0x84D8	0x0106      	MOVLB       6
0x84DA	0x6F00      	MOVWF       FARG_memcpy_d1+1, 1
0x84DC	0x0E92      	MOVLW       _Sipher
0x84DE	0x6F01      	MOVWF       FARG_memcpy_s1, 1
0x84E0	0x0E01      	MOVLW       hi_addr(_Sipher)
0x84E2	0x6F02      	MOVWF       FARG_memcpy_s1+1, 1
0x84E4	0x0E10      	MOVLW       16
0x84E6	0x6F03      	MOVWF       FARG_memcpy_n, 1
0x84E8	0x0E00      	MOVLW       0
0x84EA	0x6F04      	MOVWF       FARG_memcpy_n+1, 1
0x84EC	0xF001EC0D  	CALL        _memcpy, 0
;FirmV_0_7_0.c,397 :: 		LCDLines=1;
0x84F0	0x0E01      	MOVLW       1
0x84F2	0x0100      	MOVLB       0
0x84F4	0x6FB4      	MOVWF       _LCDLines, 1
;FirmV_0_7_0.c,398 :: 		LCDUpdateFlag=1;
0x84F6	0x0E01      	MOVLW       1
0x84F8	0x6FA2      	MOVWF       _LCDUpdateFlag, 1
;FirmV_0_7_0.c,399 :: 		Buzzer=0;
0x84FA	0x9E81      	BCF         PORTB, 7 
;FirmV_0_7_0.c,401 :: 		while(1)
L_main35:
;FirmV_0_7_0.c,403 :: 		asm CLRWDT;
0x84FC	0x0004      	CLRWDT
;FirmV_0_7_0.c,405 :: 		if(Flag20ms==1)
0x84FE	0x5024      	MOVF        _Flag20ms, 0 
0x8500	0x0A01      	XORLW       1
0x8502	0xE131      	BNZ         L_main37
;FirmV_0_7_0.c,407 :: 		if((Buzzer==1)&&(BuzzCounter<100))
0x8504	0xAE81      	BTFSS       PORTB, 7 
0x8506	0xD004      	BRA         L_main40
0x8508	0x0E64      	MOVLW       100
0x850A	0x5C28      	SUBWF       _BuzzCounter, 0 
0x850C	0xE201      	BC          L_main40
L__main814:
;FirmV_0_7_0.c,408 :: 		{BuzzCounter=BuzzCounter+1;}
0x850E	0x2A28      	INCF        _BuzzCounter, 1 
L_main40:
;FirmV_0_7_0.c,410 :: 		if((Buzzer==1)&&(LongBuzzFlag))
0x8510	0xAE81      	BTFSS       PORTB, 7 
0x8512	0xD009      	BRA         L_main43
0x8514	0x521C      	MOVF        _LongBuzzFlag, 1 
0x8516	0xE007      	BZ          L_main43
L__main813:
;FirmV_0_7_0.c,411 :: 		if(BuzzCounter>=25){BuzzFlag=0;LongBuzzFlag=0;Buzzer=0;}
0x8518	0x0E19      	MOVLW       25
0x851A	0x5C28      	SUBWF       _BuzzCounter, 0 
0x851C	0xE304      	BNC         L_main44
0x851E	0x0101      	MOVLB       1
0x8520	0x6B1C      	CLRF        _BuzzFlag, 1
0x8522	0x6A1C      	CLRF        _LongBuzzFlag 
0x8524	0x9E81      	BCF         PORTB, 7 
L_main44:
L_main43:
;FirmV_0_7_0.c,413 :: 		if((Buzzer==1)&&(BuzzFlag)&&(!LongBuzzFlag))
0x8526	0xAE81      	BTFSS       PORTB, 7 
0x8528	0xD008      	BRA         L_main47
0x852A	0x0101      	MOVLB       1
0x852C	0x531C      	MOVF        _BuzzFlag, 1, 1
0x852E	0xE005      	BZ          L_main47
0x8530	0x521C      	MOVF        _LongBuzzFlag, 1 
0x8532	0xE103      	BNZ         L_main47
L__main812:
;FirmV_0_7_0.c,414 :: 		{BuzzFlag=0;LongBuzzFlag=0;Buzzer=0;}
0x8534	0x6B1C      	CLRF        _BuzzFlag, 1
0x8536	0x6A1C      	CLRF        _LongBuzzFlag 
0x8538	0x9E81      	BCF         PORTB, 7 
L_main47:
0x853A	0x0101      	MOVLB       1
;FirmV_0_7_0.c,416 :: 		if(((BuzzFlag)||(LongBuzzFlag))&&(!Buzzer))
0x853C	0x531C      	MOVF        _BuzzFlag, 1, 1
0x853E	0xE103      	BNZ         L__main811
0x8540	0x521C      	MOVF        _LongBuzzFlag, 1 
0x8542	0xE101      	BNZ         L__main811
0x8544	0xD004      	BRA         L_main52
L__main811:
0x8546	0xBE81      	BTFSC       PORTB, 7 
0x8548	0xD002      	BRA         L_main52
L__main810:
;FirmV_0_7_0.c,417 :: 		{Buzzer=1;BuzzCounter=0;}
0x854A	0x8E81      	BSF         PORTB, 7 
0x854C	0x6A28      	CLRF        _BuzzCounter 
L_main52:
;FirmV_0_7_0.c,420 :: 		if(DebouncingDelay<DebouncingFix)
0x854E	0x0E05      	MOVLW       5
0x8550	0x0100      	MOVLB       0
0x8552	0x5D8F      	SUBWF       _DebouncingDelay, 0, 1
0x8554	0xE201      	BC          L_main53
;FirmV_0_7_0.c,421 :: 		DebouncingDelay=DebouncingDelay+1;
0x8556	0x2B8F      	INCF        _DebouncingDelay, 1, 1
L_main53:
;FirmV_0_7_0.c,422 :: 		LCDUpdater();
0x8558	0xDF0B      	RCALL       _LCDUpdater
;FirmV_0_7_0.c,423 :: 		if(KeyFlag<200)
0x855A	0x0EC8      	MOVLW       200
0x855C	0x0100      	MOVLB       0
0x855E	0x5D90      	SUBWF       _KeyFlag, 0, 1
0x8560	0xE201      	BC          L_main54
;FirmV_0_7_0.c,424 :: 		KeyFlag=KeyFlag+1;
0x8562	0x2B90      	INCF        _KeyFlag, 1, 1
L_main54:
;FirmV_0_7_0.c,425 :: 		Flag20ms=0;
0x8564	0x6A24      	CLRF        _Flag20ms 
;FirmV_0_7_0.c,426 :: 		}
L_main37:
;FirmV_0_7_0.c,428 :: 		if(Flag500ms==1)
0x8566	0x5029      	MOVF        _Flag500ms, 0 
0x8568	0x0A01      	XORLW       1
0x856A	0xE110      	BNZ         L_main55
;FirmV_0_7_0.c,430 :: 		if(FlashFlag)
0x856C	0x0100      	MOVLB       0
0x856E	0x53BC      	MOVF        _FlashFlag, 1, 1
0x8570	0xE002      	BZ          L_main56
;FirmV_0_7_0.c,431 :: 		FlasherLamp=!FlasherLamp;// Buzzer=!Buzzer;
0x8572	0x7A81      	BTG         PORTB, 5 
0x8574	0xD006      	BRA         L_main57
L_main56:
;FirmV_0_7_0.c,433 :: 		if((!BuzzFlag)&&(!LongBuzzFlag))FlasherLamp=0; // Buzzer=0;
0x8576	0x0101      	MOVLB       1
0x8578	0x531C      	MOVF        _BuzzFlag, 1, 1
0x857A	0xE103      	BNZ         L_main60
0x857C	0x521C      	MOVF        _LongBuzzFlag, 1 
0x857E	0xE101      	BNZ         L_main60
L__main809:
0x8580	0x9A81      	BCF         PORTB, 5 
L_main60:
L_main57:
;FirmV_0_7_0.c,434 :: 		ResetTaskEvents();
0x8582	0xDF7D      	RCALL       _ResetTaskEvents
;FirmV_0_7_0.c,435 :: 		TaskManager();
0x8584	0xDE4D      	RCALL       _TaskManager
;FirmV_0_7_0.c,436 :: 		TorqueLogger();
0x8586	0xF03EEC79  	CALL        _TorqueLogger, 0
;FirmV_0_7_0.c,437 :: 		Flag500ms=0;
0x858A	0x6A29      	CLRF        _Flag500ms 
;FirmV_0_7_0.c,438 :: 		}
L_main55:
;FirmV_0_7_0.c,439 :: 		EventHandler();
0x858C	0xDCE5      	RCALL       _EventHandler
;FirmV_0_7_0.c,440 :: 		StateManager();
0x858E	0xDDDF      	RCALL       _StateManager
;FirmV_0_7_0.c,441 :: 		}
0x8590	0xD7B5      	BRA         L_main35
;FirmV_0_7_0.c,443 :: 		}
0x8592	0xD7FF      	BRA         $+0
; end of _main
0x8DE6	0xF01AEE10  	LFSR        1, 26
0x8DEA	0x0E6F      	MOVLW       111
0x8DEC	0x6E00      	MOVWF       R0 
0x8DEE	0x0E02      	MOVLW       2
0x8DF0	0x6E01      	MOVWF       R1 
0x8DF2	0x0EAE      	MOVLW       174
0x8DF4	0x6EF6      	MOVWF       4086 
0x8DF6	0x0E87      	MOVLW       135
0x8DF8	0x6EF7      	MOVWF       TBLPTRH 
0x8DFA	0x0E00      	MOVLW       0
0x8DFC	0x6EF8      	MOVWF       TBLPTRU 
0x8DFE	0xF005EC2B  	CALL        2646, 0
0x8E02	0x0012      	RETURN      0
;FirmV_0_7_0.c,0 :: ?ICS?lstr69_FirmV_0_7_0
0x8594	0x2020 ;?ICS?lstr69_FirmV_0_7_0+0
0x8596	0x2020 ;?ICS?lstr69_FirmV_0_7_0+2
0x8598	0x2020 ;?ICS?lstr69_FirmV_0_7_0+4
0x859A	0x2020 ;?ICS?lstr69_FirmV_0_7_0+6
0x859C	0x2020 ;?ICS?lstr69_FirmV_0_7_0+8
0x859E	0x2020 ;?ICS?lstr69_FirmV_0_7_0+10
0x85A0	0x2020 ;?ICS?lstr69_FirmV_0_7_0+12
0x85A2	0x2020 ;?ICS?lstr69_FirmV_0_7_0+14
0x85A4	0x00 ;?ICS?lstr69_FirmV_0_7_0+16
; end of ?ICS?lstr69_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr70_FirmV_0_7_0
0x85A5	0x3030 ;?ICS?lstr70_FirmV_0_7_0+0
0x85A7	0x4C20 ;?ICS?lstr70_FirmV_0_7_0+2
0x85A9	0x6165 ;?ICS?lstr70_FirmV_0_7_0+4
0x85AB	0x6E72 ;?ICS?lstr70_FirmV_0_7_0+6
0x85AD	0x6E69 ;?ICS?lstr70_FirmV_0_7_0+8
0x85AF	0x2067 ;?ICS?lstr70_FirmV_0_7_0+10
0x85B1	0x6F4D ;?ICS?lstr70_FirmV_0_7_0+12
0x85B3	0x6564 ;?ICS?lstr70_FirmV_0_7_0+14
0x85B5	0x00 ;?ICS?lstr70_FirmV_0_7_0+16
; end of ?ICS?lstr70_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr71_FirmV_0_7_0
0x85B6	0x2020 ;?ICS?lstr71_FirmV_0_7_0+0
0x85B8	0x2020 ;?ICS?lstr71_FirmV_0_7_0+2
0x85BA	0x2020 ;?ICS?lstr71_FirmV_0_7_0+4
0x85BC	0x7541 ;?ICS?lstr71_FirmV_0_7_0+6
0x85BE	0x6F74 ;?ICS?lstr71_FirmV_0_7_0+8
0x85C0	0x2020 ;?ICS?lstr71_FirmV_0_7_0+10
0x85C2	0x2020 ;?ICS?lstr71_FirmV_0_7_0+12
0x85C4	0x2020 ;?ICS?lstr71_FirmV_0_7_0+14
0x85C6	0x00 ;?ICS?lstr71_FirmV_0_7_0+16
; end of ?ICS?lstr71_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr72_FirmV_0_7_0
0x85C7	0x2020 ;?ICS?lstr72_FirmV_0_7_0+0
0x85C9	0x2020 ;?ICS?lstr72_FirmV_0_7_0+2
0x85CB	0x4D20 ;?ICS?lstr72_FirmV_0_7_0+4
0x85CD	0x6E61 ;?ICS?lstr72_FirmV_0_7_0+6
0x85CF	0x6175 ;?ICS?lstr72_FirmV_0_7_0+8
0x85D1	0x206C ;?ICS?lstr72_FirmV_0_7_0+10
0x85D3	0x2020 ;?ICS?lstr72_FirmV_0_7_0+12
0x85D5	0x2020 ;?ICS?lstr72_FirmV_0_7_0+14
0x85D7	0x00 ;?ICS?lstr72_FirmV_0_7_0+16
; end of ?ICS?lstr72_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr73_FirmV_0_7_0
0x85D8	0x3130 ;?ICS?lstr73_FirmV_0_7_0+0
0x85DA	0x4420 ;?ICS?lstr73_FirmV_0_7_0+2
0x85DC	0x2031 ;?ICS?lstr73_FirmV_0_7_0+4
0x85DE	0x704F ;?ICS?lstr73_FirmV_0_7_0+6
0x85E0	0x6E65 ;?ICS?lstr73_FirmV_0_7_0+8
0x85E2	0x5420 ;?ICS?lstr73_FirmV_0_7_0+10
0x85E4	0x6D69 ;?ICS?lstr73_FirmV_0_7_0+12
0x85E6	0x2065 ;?ICS?lstr73_FirmV_0_7_0+14
0x85E8	0x00 ;?ICS?lstr73_FirmV_0_7_0+16
; end of ?ICS?lstr73_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr74_FirmV_0_7_0
0x85E9	0x3230 ;?ICS?lstr74_FirmV_0_7_0+0
0x85EB	0x4420 ;?ICS?lstr74_FirmV_0_7_0+2
0x85ED	0x2032 ;?ICS?lstr74_FirmV_0_7_0+4
0x85EF	0x704F ;?ICS?lstr74_FirmV_0_7_0+6
0x85F1	0x6E65 ;?ICS?lstr74_FirmV_0_7_0+8
0x85F3	0x5420 ;?ICS?lstr74_FirmV_0_7_0+10
0x85F5	0x6D69 ;?ICS?lstr74_FirmV_0_7_0+12
0x85F7	0x2065 ;?ICS?lstr74_FirmV_0_7_0+14
0x85F9	0x00 ;?ICS?lstr74_FirmV_0_7_0+16
; end of ?ICS?lstr74_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr75_FirmV_0_7_0
0x85FA	0x3330 ;?ICS?lstr75_FirmV_0_7_0+0
0x85FC	0x4420 ;?ICS?lstr75_FirmV_0_7_0+2
0x85FE	0x2031 ;?ICS?lstr75_FirmV_0_7_0+4
0x8600	0x6C43 ;?ICS?lstr75_FirmV_0_7_0+6
0x8602	0x736F ;?ICS?lstr75_FirmV_0_7_0+8
0x8604	0x2065 ;?ICS?lstr75_FirmV_0_7_0+10
0x8606	0x6954 ;?ICS?lstr75_FirmV_0_7_0+12
0x8608	0x656D ;?ICS?lstr75_FirmV_0_7_0+14
0x860A	0x00 ;?ICS?lstr75_FirmV_0_7_0+16
; end of ?ICS?lstr75_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr76_FirmV_0_7_0
0x860B	0x3430 ;?ICS?lstr76_FirmV_0_7_0+0
0x860D	0x4420 ;?ICS?lstr76_FirmV_0_7_0+2
0x860F	0x2032 ;?ICS?lstr76_FirmV_0_7_0+4
0x8611	0x6C43 ;?ICS?lstr76_FirmV_0_7_0+6
0x8613	0x736F ;?ICS?lstr76_FirmV_0_7_0+8
0x8615	0x2065 ;?ICS?lstr76_FirmV_0_7_0+10
0x8617	0x6954 ;?ICS?lstr76_FirmV_0_7_0+12
0x8619	0x656D ;?ICS?lstr76_FirmV_0_7_0+14
0x861B	0x00 ;?ICS?lstr76_FirmV_0_7_0+16
; end of ?ICS?lstr76_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr77_FirmV_0_7_0
0x861C	0x3530 ;?ICS?lstr77_FirmV_0_7_0+0
0x861E	0x4F20 ;?ICS?lstr77_FirmV_0_7_0+2
0x8620	0x2070 ;?ICS?lstr77_FirmV_0_7_0+4
0x8622	0x6F53 ;?ICS?lstr77_FirmV_0_7_0+6
0x8624	0x7466 ;?ICS?lstr77_FirmV_0_7_0+8
0x8626	0x5320 ;?ICS?lstr77_FirmV_0_7_0+10
0x8628	0x6174 ;?ICS?lstr77_FirmV_0_7_0+12
0x862A	0x7472 ;?ICS?lstr77_FirmV_0_7_0+14
0x862C	0x00 ;?ICS?lstr77_FirmV_0_7_0+16
; end of ?ICS?lstr77_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr78_FirmV_0_7_0
0x862D	0x3630 ;?ICS?lstr78_FirmV_0_7_0+0
0x862F	0x4F20 ;?ICS?lstr78_FirmV_0_7_0+2
0x8631	0x2070 ;?ICS?lstr78_FirmV_0_7_0+4
0x8633	0x6F53 ;?ICS?lstr78_FirmV_0_7_0+6
0x8635	0x7466 ;?ICS?lstr78_FirmV_0_7_0+8
0x8637	0x5320 ;?ICS?lstr78_FirmV_0_7_0+10
0x8639	0x6F74 ;?ICS?lstr78_FirmV_0_7_0+12
0x863B	0x2070 ;?ICS?lstr78_FirmV_0_7_0+14
0x863D	0x00 ;?ICS?lstr78_FirmV_0_7_0+16
; end of ?ICS?lstr78_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr79_FirmV_0_7_0
0x863E	0x3730 ;?ICS?lstr79_FirmV_0_7_0+0
0x8640	0x4320 ;?ICS?lstr79_FirmV_0_7_0+2
0x8642	0x206C ;?ICS?lstr79_FirmV_0_7_0+4
0x8644	0x6F53 ;?ICS?lstr79_FirmV_0_7_0+6
0x8646	0x7466 ;?ICS?lstr79_FirmV_0_7_0+8
0x8648	0x5320 ;?ICS?lstr79_FirmV_0_7_0+10
0x864A	0x6174 ;?ICS?lstr79_FirmV_0_7_0+12
0x864C	0x7472 ;?ICS?lstr79_FirmV_0_7_0+14
0x864E	0x00 ;?ICS?lstr79_FirmV_0_7_0+16
; end of ?ICS?lstr79_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr80_FirmV_0_7_0
0x864F	0x3830 ;?ICS?lstr80_FirmV_0_7_0+0
0x8651	0x4320 ;?ICS?lstr80_FirmV_0_7_0+2
0x8653	0x206C ;?ICS?lstr80_FirmV_0_7_0+4
0x8655	0x6F53 ;?ICS?lstr80_FirmV_0_7_0+6
0x8657	0x7466 ;?ICS?lstr80_FirmV_0_7_0+8
0x8659	0x5320 ;?ICS?lstr80_FirmV_0_7_0+10
0x865B	0x6F74 ;?ICS?lstr80_FirmV_0_7_0+12
0x865D	0x2070 ;?ICS?lstr80_FirmV_0_7_0+14
0x865F	0x00 ;?ICS?lstr80_FirmV_0_7_0+16
; end of ?ICS?lstr80_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr81_FirmV_0_7_0
0x8660	0x3930 ;?ICS?lstr81_FirmV_0_7_0+0
0x8662	0x4D20 ;?ICS?lstr81_FirmV_0_7_0+2
0x8664	0x2031 ;?ICS?lstr81_FirmV_0_7_0+4
0x8666	0x764F ;?ICS?lstr81_FirmV_0_7_0+6
0x8668	0x7265 ;?ICS?lstr81_FirmV_0_7_0+8
0x866A	0x206C ;?ICS?lstr81_FirmV_0_7_0+10
0x866C	0x6553 ;?ICS?lstr81_FirmV_0_7_0+12
0x866E	0x736E ;?ICS?lstr81_FirmV_0_7_0+14
0x8670	0x00 ;?ICS?lstr81_FirmV_0_7_0+16
; end of ?ICS?lstr81_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr82_FirmV_0_7_0
0x8671	0x3532 ;?ICS?lstr82_FirmV_0_7_0+0
0x8673	0x4B30 ;?ICS?lstr82_FirmV_0_7_0+2
0x8675	0x2D67 ;?ICS?lstr82_FirmV_0_7_0+4
0x8677	0x00 ;?ICS?lstr82_FirmV_0_7_0+6
; end of ?ICS?lstr82_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr83_FirmV_0_7_0
0x8678	0x3532 ;?ICS?lstr83_FirmV_0_7_0+0
0x867A	0x4B30 ;?ICS?lstr83_FirmV_0_7_0+2
0x867C	0x2B67 ;?ICS?lstr83_FirmV_0_7_0+4
0x867E	0x00 ;?ICS?lstr83_FirmV_0_7_0+6
; end of ?ICS?lstr83_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr84_FirmV_0_7_0
0x867F	0x3031 ;?ICS?lstr84_FirmV_0_7_0+0
0x8681	0x4D20 ;?ICS?lstr84_FirmV_0_7_0+2
0x8683	0x2032 ;?ICS?lstr84_FirmV_0_7_0+4
0x8685	0x764F ;?ICS?lstr84_FirmV_0_7_0+6
0x8687	0x7265 ;?ICS?lstr84_FirmV_0_7_0+8
0x8689	0x206C ;?ICS?lstr84_FirmV_0_7_0+10
0x868B	0x6553 ;?ICS?lstr84_FirmV_0_7_0+12
0x868D	0x736E ;?ICS?lstr84_FirmV_0_7_0+14
0x868F	0x00 ;?ICS?lstr84_FirmV_0_7_0+16
; end of ?ICS?lstr84_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr85_FirmV_0_7_0
0x8690	0x3532 ;?ICS?lstr85_FirmV_0_7_0+0
0x8692	0x4B30 ;?ICS?lstr85_FirmV_0_7_0+2
0x8694	0x2D67 ;?ICS?lstr85_FirmV_0_7_0+4
0x8696	0x00 ;?ICS?lstr85_FirmV_0_7_0+6
; end of ?ICS?lstr85_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr86_FirmV_0_7_0
0x8697	0x3532 ;?ICS?lstr86_FirmV_0_7_0+0
0x8699	0x4B30 ;?ICS?lstr86_FirmV_0_7_0+2
0x869B	0x2B67 ;?ICS?lstr86_FirmV_0_7_0+4
0x869D	0x00 ;?ICS?lstr86_FirmV_0_7_0+6
; end of ?ICS?lstr86_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr87_FirmV_0_7_0
0x869E	0x3131 ;?ICS?lstr87_FirmV_0_7_0+0
0x86A0	0x4D20 ;?ICS?lstr87_FirmV_0_7_0+2
0x86A2	0x2031 ;?ICS?lstr87_FirmV_0_7_0+4
0x86A4	0x764F ;?ICS?lstr87_FirmV_0_7_0+6
0x86A6	0x7265 ;?ICS?lstr87_FirmV_0_7_0+8
0x86A8	0x206C ;?ICS?lstr87_FirmV_0_7_0+10
0x86AA	0x6954 ;?ICS?lstr87_FirmV_0_7_0+12
0x86AC	0x656D ;?ICS?lstr87_FirmV_0_7_0+14
0x86AE	0x00 ;?ICS?lstr87_FirmV_0_7_0+16
; end of ?ICS?lstr87_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr88_FirmV_0_7_0
0x86AF	0x3231 ;?ICS?lstr88_FirmV_0_7_0+0
0x86B1	0x4D20 ;?ICS?lstr88_FirmV_0_7_0+2
0x86B3	0x2032 ;?ICS?lstr88_FirmV_0_7_0+4
0x86B5	0x764F ;?ICS?lstr88_FirmV_0_7_0+6
0x86B7	0x7265 ;?ICS?lstr88_FirmV_0_7_0+8
0x86B9	0x206C ;?ICS?lstr88_FirmV_0_7_0+10
0x86BB	0x6954 ;?ICS?lstr88_FirmV_0_7_0+12
0x86BD	0x656D ;?ICS?lstr88_FirmV_0_7_0+14
0x86BF	0x00 ;?ICS?lstr88_FirmV_0_7_0+16
; end of ?ICS?lstr88_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr89_FirmV_0_7_0
0x86C0	0x3331 ;?ICS?lstr89_FirmV_0_7_0+0
0x86C2	0x4920 ;?ICS?lstr89_FirmV_0_7_0+2
0x86C4	0x746E ;?ICS?lstr89_FirmV_0_7_0+4
0x86C6	0x7265 ;?ICS?lstr89_FirmV_0_7_0+6
0x86C8	0x6176 ;?ICS?lstr89_FirmV_0_7_0+8
0x86CA	0x206C ;?ICS?lstr89_FirmV_0_7_0+10
0x86CC	0x6954 ;?ICS?lstr89_FirmV_0_7_0+12
0x86CE	0x656D ;?ICS?lstr89_FirmV_0_7_0+14
0x86D0	0x00 ;?ICS?lstr89_FirmV_0_7_0+16
; end of ?ICS?lstr89_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr90_FirmV_0_7_0
0x86D1	0x3431 ;?ICS?lstr90_FirmV_0_7_0+0
0x86D3	0x4120 ;?ICS?lstr90_FirmV_0_7_0+2
0x86D5	0x7475 ;?ICS?lstr90_FirmV_0_7_0+4
0x86D7	0x2D6F ;?ICS?lstr90_FirmV_0_7_0+6
0x86D9	0x6C63 ;?ICS?lstr90_FirmV_0_7_0+8
0x86DB	0x736F ;?ICS?lstr90_FirmV_0_7_0+10
0x86DD	0x2065 ;?ICS?lstr90_FirmV_0_7_0+12
0x86DF	0x2054 ;?ICS?lstr90_FirmV_0_7_0+14
0x86E1	0x00 ;?ICS?lstr90_FirmV_0_7_0+16
; end of ?ICS?lstr90_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr91_FirmV_0_7_0
0x86E2	0x3531 ;?ICS?lstr91_FirmV_0_7_0+0
0x86E4	0x4620 ;?ICS?lstr91_FirmV_0_7_0+2
0x86E6	0x6361 ;?ICS?lstr91_FirmV_0_7_0+4
0x86E8	0x6F74 ;?ICS?lstr91_FirmV_0_7_0+6
0x86EA	0x7972 ;?ICS?lstr91_FirmV_0_7_0+8
0x86EC	0x5220 ;?ICS?lstr91_FirmV_0_7_0+10
0x86EE	0x7365 ;?ICS?lstr91_FirmV_0_7_0+12
0x86F0	0x7465 ;?ICS?lstr91_FirmV_0_7_0+14
0x86F2	0x00 ;?ICS?lstr91_FirmV_0_7_0+16
; end of ?ICS?lstr91_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr92_FirmV_0_7_0
0x86F3	0x3631 ;?ICS?lstr92_FirmV_0_7_0+0
0x86F5	0x4F20 ;?ICS?lstr92_FirmV_0_7_0+2
0x86F7	0x6570 ;?ICS?lstr92_FirmV_0_7_0+4
0x86F9	0x206E ;?ICS?lstr92_FirmV_0_7_0+6
0x86FB	0x6850 ;?ICS?lstr92_FirmV_0_7_0+8
0x86FD	0x746F ;?ICS?lstr92_FirmV_0_7_0+10
0x86FF	0x206F ;?ICS?lstr92_FirmV_0_7_0+12
0x8701	0x6E45 ;?ICS?lstr92_FirmV_0_7_0+14
0x8703	0x00 ;?ICS?lstr92_FirmV_0_7_0+16
; end of ?ICS?lstr92_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr93_FirmV_0_7_0
0x8704	0x6F4E ;?ICS?lstr93_FirmV_0_7_0+0
0x8706	0x2020 ;?ICS?lstr93_FirmV_0_7_0+2
0x8708	0x2020 ;?ICS?lstr93_FirmV_0_7_0+4
0x870A	0x0020 ;?ICS?lstr93_FirmV_0_7_0+6
; end of ?ICS?lstr93_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr94_FirmV_0_7_0
0x870C	0x6559 ;?ICS?lstr94_FirmV_0_7_0+0
0x870E	0x2073 ;?ICS?lstr94_FirmV_0_7_0+2
0x8710	0x2020 ;?ICS?lstr94_FirmV_0_7_0+4
0x8712	0x2020 ;?ICS?lstr94_FirmV_0_7_0+6
0x8714	0x00 ;?ICS?lstr94_FirmV_0_7_0+8
; end of ?ICS?lstr94_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr95_FirmV_0_7_0
0x8715	0x3731 ;?ICS?lstr95_FirmV_0_7_0+0
0x8717	0x4C20 ;?ICS?lstr95_FirmV_0_7_0+2
0x8719	0x6D69 ;?ICS?lstr95_FirmV_0_7_0+4
0x871B	0x7469 ;?ICS?lstr95_FirmV_0_7_0+6
0x871D	0x4520 ;?ICS?lstr95_FirmV_0_7_0+8
0x871F	0x616E ;?ICS?lstr95_FirmV_0_7_0+10
0x8721	0x6C62 ;?ICS?lstr95_FirmV_0_7_0+12
0x8723	0x2065 ;?ICS?lstr95_FirmV_0_7_0+14
0x8725	0x00 ;?ICS?lstr95_FirmV_0_7_0+16
; end of ?ICS?lstr95_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr96_FirmV_0_7_0
0x8726	0x6F4E ;?ICS?lstr96_FirmV_0_7_0+0
0x8728	0x2020 ;?ICS?lstr96_FirmV_0_7_0+2
0x872A	0x2020 ;?ICS?lstr96_FirmV_0_7_0+4
0x872C	0x0020 ;?ICS?lstr96_FirmV_0_7_0+6
; end of ?ICS?lstr96_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr97_FirmV_0_7_0
0x872E	0x6559 ;?ICS?lstr97_FirmV_0_7_0+0
0x8730	0x2073 ;?ICS?lstr97_FirmV_0_7_0+2
0x8732	0x2020 ;?ICS?lstr97_FirmV_0_7_0+4
0x8734	0x2020 ;?ICS?lstr97_FirmV_0_7_0+6
0x8736	0x00 ;?ICS?lstr97_FirmV_0_7_0+8
; end of ?ICS?lstr97_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr98_FirmV_0_7_0
0x8737	0x3831 ;?ICS?lstr98_FirmV_0_7_0+0
0x8739	0x4C20 ;?ICS?lstr98_FirmV_0_7_0+2
0x873B	0x636F ;?ICS?lstr98_FirmV_0_7_0+4
0x873D	0x206B ;?ICS?lstr98_FirmV_0_7_0+6
0x873F	0x6E45 ;?ICS?lstr98_FirmV_0_7_0+8
0x8741	0x6261 ;?ICS?lstr98_FirmV_0_7_0+10
0x8743	0x656C ;?ICS?lstr98_FirmV_0_7_0+12
0x8745	0x2020 ;?ICS?lstr98_FirmV_0_7_0+14
0x8747	0x00 ;?ICS?lstr98_FirmV_0_7_0+16
; end of ?ICS?lstr98_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr99_FirmV_0_7_0
0x8748	0x6F4E ;?ICS?lstr99_FirmV_0_7_0+0
0x874A	0x2020 ;?ICS?lstr99_FirmV_0_7_0+2
0x874C	0x2020 ;?ICS?lstr99_FirmV_0_7_0+4
0x874E	0x0020 ;?ICS?lstr99_FirmV_0_7_0+6
; end of ?ICS?lstr99_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr100_FirmV_0_7_0
0x8750	0x6559 ;?ICS?lstr100_FirmV_0_7_0+0
0x8752	0x2073 ;?ICS?lstr100_FirmV_0_7_0+2
0x8754	0x2020 ;?ICS?lstr100_FirmV_0_7_0+4
0x8756	0x2020 ;?ICS?lstr100_FirmV_0_7_0+6
0x8758	0x00 ;?ICS?lstr100_FirmV_0_7_0+8
; end of ?ICS?lstr100_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr101_FirmV_0_7_0
0x8759	0x3931 ;?ICS?lstr101_FirmV_0_7_0+0
0x875B	0x4C20 ;?ICS?lstr101_FirmV_0_7_0+2
0x875D	0x636F ;?ICS?lstr101_FirmV_0_7_0+4
0x875F	0x206B ;?ICS?lstr101_FirmV_0_7_0+6
0x8761	0x6F46 ;?ICS?lstr101_FirmV_0_7_0+8
0x8763	0x6372 ;?ICS?lstr101_FirmV_0_7_0+10
0x8765	0x2065 ;?ICS?lstr101_FirmV_0_7_0+12
0x8767	0x2020 ;?ICS?lstr101_FirmV_0_7_0+14
0x8769	0x00 ;?ICS?lstr101_FirmV_0_7_0+16
; end of ?ICS?lstr101_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr102_FirmV_0_7_0
0x876A	0x6F4E ;?ICS?lstr102_FirmV_0_7_0+0
0x876C	0x2020 ;?ICS?lstr102_FirmV_0_7_0+2
0x876E	0x2020 ;?ICS?lstr102_FirmV_0_7_0+4
0x8770	0x0020 ;?ICS?lstr102_FirmV_0_7_0+6
; end of ?ICS?lstr102_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr103_FirmV_0_7_0
0x8772	0x6559 ;?ICS?lstr103_FirmV_0_7_0+0
0x8774	0x2073 ;?ICS?lstr103_FirmV_0_7_0+2
0x8776	0x2020 ;?ICS?lstr103_FirmV_0_7_0+4
0x8778	0x2020 ;?ICS?lstr103_FirmV_0_7_0+6
0x877A	0x00 ;?ICS?lstr103_FirmV_0_7_0+8
; end of ?ICS?lstr103_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr104_FirmV_0_7_0
0x877B	0x3032 ;?ICS?lstr104_FirmV_0_7_0+0
0x877D	0x4120 ;?ICS?lstr104_FirmV_0_7_0+2
0x877F	0x2D75 ;?ICS?lstr104_FirmV_0_7_0+4
0x8781	0x6C43 ;?ICS?lstr104_FirmV_0_7_0+6
0x8783	0x5020 ;?ICS?lstr104_FirmV_0_7_0+8
0x8785	0x7361 ;?ICS?lstr104_FirmV_0_7_0+10
0x8787	0x2073 ;?ICS?lstr104_FirmV_0_7_0+12
0x8789	0x2020 ;?ICS?lstr104_FirmV_0_7_0+14
0x878B	0x00 ;?ICS?lstr104_FirmV_0_7_0+16
; end of ?ICS?lstr104_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr105_FirmV_0_7_0
0x878C	0x3132 ;?ICS?lstr105_FirmV_0_7_0+0
0x878E	0x5320 ;?ICS?lstr105_FirmV_0_7_0+2
0x8790	0x7661 ;?ICS?lstr105_FirmV_0_7_0+4
0x8792	0x2065 ;?ICS?lstr105_FirmV_0_7_0+6
0x8794	0x6843 ;?ICS?lstr105_FirmV_0_7_0+8
0x8796	0x6E61 ;?ICS?lstr105_FirmV_0_7_0+10
0x8798	0x6567 ;?ICS?lstr105_FirmV_0_7_0+12
0x879A	0x2073 ;?ICS?lstr105_FirmV_0_7_0+14
0x879C	0x00 ;?ICS?lstr105_FirmV_0_7_0+16
; end of ?ICS?lstr105_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr106_FirmV_0_7_0
0x879D	0x3232 ;?ICS?lstr106_FirmV_0_7_0+0
0x879F	0x4420 ;?ICS?lstr106_FirmV_0_7_0+2
0x87A1	0x7369 ;?ICS?lstr106_FirmV_0_7_0+4
0x87A3	0x6163 ;?ICS?lstr106_FirmV_0_7_0+6
0x87A5	0x6472 ;?ICS?lstr106_FirmV_0_7_0+8
0x87A7	0x4520 ;?ICS?lstr106_FirmV_0_7_0+10
0x87A9	0x6978 ;?ICS?lstr106_FirmV_0_7_0+12
0x87AB	0x2074 ;?ICS?lstr106_FirmV_0_7_0+14
0x87AD	0x00 ;?ICS?lstr106_FirmV_0_7_0+16
; end of ?ICS?lstr106_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS_OverloadSens2
0x87AE	0x07 ;?ICS_OverloadSens2+0
; end of ?ICS_OverloadSens2
;FirmV_0_7_0.c,0 :: ?ICS_LCDFlashFlag
0x87AF	0x00 ;?ICS_LCDFlashFlag+0
; end of ?ICS_LCDFlashFlag
;FirmV_0_7_0.c,0 :: ?ICS_LongBuzzFlag
0x87B0	0x00 ;?ICS_LongBuzzFlag+0
; end of ?ICS_LongBuzzFlag
;FirmV_0_7_0.c,0 :: ?ICS_LCDFlash
0x87B1	0x00 ;?ICS_LCDFlash+0
; end of ?ICS_LCDFlash
;FirmV_0_7_0.c,0 :: ?ICS_MenuPointer
0x87B2	0x00 ;?ICS_MenuPointer+0
; end of ?ICS_MenuPointer
;FirmV_0_7_0.c,0 :: ?ICS_LearningMode
0x87B3	0x00 ;?ICS_LearningMode+0
; end of ?ICS_LearningMode
;FirmV_0_7_0.c,0 :: ?ICS_OverloadSens1
0x87B4	0x07 ;?ICS_OverloadSens1+0
; end of ?ICS_OverloadSens1
;FirmV_0_7_0.c,0 :: ?ICS__AC
0x87B5	0x00 ;?ICS__AC+0
; end of ?ICS__AC
;FirmV_0_7_0.c,0 :: ?ICS_ms20A
0x87B6	0x00 ;?ICS_ms20A+0
; end of ?ICS_ms20A
;FirmV_0_7_0.c,0 :: ?ICS_msCounter
0x87B7	0x00 ;?ICS_msCounter+0
; end of ?ICS_msCounter
;FirmV_0_7_0.c,0 :: ?ICS_Flag20ms
0x87B8	0x01 ;?ICS_Flag20ms+0
; end of ?ICS_Flag20ms
;FirmV_0_7_0.c,0 :: ?ICS_RemotePulse1
0x87B9	0x00 ;?ICS_RemotePulse1+0
; end of ?ICS_RemotePulse1
;FirmV_0_7_0.c,0 :: ?ICS_ZCCounter
0x87BA	0x00 ;?ICS_ZCCounter+0
; end of ?ICS_ZCCounter
;FirmV_0_7_0.c,0 :: ?ICS_RemotePulse2
0x87BB	0x00 ;?ICS_RemotePulse2+0
; end of ?ICS_RemotePulse2
;FirmV_0_7_0.c,0 :: ?ICS_BuzzCounter
0x87BC	0x00 ;?ICS_BuzzCounter+0
; end of ?ICS_BuzzCounter
;FirmV_0_7_0.c,0 :: ?ICS_Flag500ms
0x87BD	0x01 ;?ICS_Flag500ms+0
; end of ?ICS_Flag500ms
;FirmV_0_7_0.c,0 :: ?ICS_PhotocellCount
0x87BE	0x00 ;?ICS_PhotocellCount+0
; end of ?ICS_PhotocellCount
;FirmV_0_7_0.c,0 :: ?ICS_RemoteAFlag
0x87BF	0x00 ;?ICS_RemoteAFlag+0
; end of ?ICS_RemoteAFlag
;FirmV_0_7_0.c,0 :: ?ICS_RemoteBFlag
0x87C0	0x00 ;?ICS_RemoteBFlag+0
; end of ?ICS_RemoteBFlag
;FirmV_0_7_0.c,0 :: ?ICS_Pressed
0x87C1	0x00 ;?ICS_Pressed+0
; end of ?ICS_Pressed
;FirmV_0_7_0.c,0 :: ?ICS_crypto
0x87C2	0x2020 ;?ICS_crypto+0
0x87C4	0x6946 ;?ICS_crypto+2
0x87C6	0x6D72 ;?ICS_crypto+4
0x87C8	0x6177 ;?ICS_crypto+6
0x87CA	0x6572 ;?ICS_crypto+8
0x87CC	0x2020 ;?ICS_crypto+10
0x87CE	0x7962 ;?ICS_crypto+12
0x87D0	0x2020 ;?ICS_crypto+14
0x87D2	0x2020 ;?ICS_crypto+16
0x87D4	0x5320 ;?ICS_crypto+18
0x87D6	0x6E69 ;?ICS_crypto+20
0x87D8	0x2061 ;?ICS_crypto+22
0x87DA	0x6142 ;?ICS_crypto+24
0x87DC	0x6867 ;?ICS_crypto+26
0x87DE	0x2069 ;?ICS_crypto+28
0x87E0	0x2020 ;?ICS_crypto+30
0x87E2	0x2020 ;?ICS_crypto+32
0x87E4	0x654D ;?ICS_crypto+34
0x87E6	0x6863 ;?ICS_crypto+36
0x87E8	0x2020 ;?ICS_crypto+38
0x87EA	0x6544 ;?ICS_crypto+40
0x87EC	0x6973 ;?ICS_crypto+42
0x87EE	0x6E67 ;?ICS_crypto+44
0x87F0	0x2020 ;?ICS_crypto+46
0x87F2	0x6159 ;?ICS_crypto+48
0x87F4	0x4853 ;?ICS_crypto+50
0x87F6	0x5261 ;?ICS_crypto+52
0x87F8	0x2020 ;?ICS_crypto+54
0x87FA	0x7241 ;?ICS_crypto+56
0x87FC	0x6164 ;?ICS_crypto+58
0x87FE	0x6168 ;?ICS_crypto+60
0x8800	0x696E ;?ICS_crypto+62
0x8802	0x2020 ;?ICS_crypto+64
0x8804	0x6C45 ;?ICS_crypto+66
0x8806	0x6365 ;?ICS_crypto+68
0x8808	0x2020 ;?ICS_crypto+70
0x880A	0x6544 ;?ICS_crypto+72
0x880C	0x6973 ;?ICS_crypto+74
0x880E	0x6E67 ;?ICS_crypto+76
0x8810	0x2020 ;?ICS_crypto+78
0x8812	0x2020 ;?ICS_crypto+80
0x8814	0x6148 ;?ICS_crypto+82
0x8816	0x696D ;?ICS_crypto+84
0x8818	0x2064 ;?ICS_crypto+86
0x881A	0x6E41 ;?ICS_crypto+88
0x881C	0x6173 ;?ICS_crypto+90
0x881E	0x6972 ;?ICS_crypto+92
0x8820	0x2020 ;?ICS_crypto+94
; end of ?ICS_crypto
;FirmV_0_7_0.c,0 :: ?ICS_AboutCounter
0x8822	0x00 ;?ICS_AboutCounter+0
; end of ?ICS_AboutCounter
;FirmV_0_7_0.c,0 :: ?ICS_DebouncingDelay
0x8823	0x00 ;?ICS_DebouncingDelay+0
; end of ?ICS_DebouncingDelay
;FirmV_0_7_0.c,0 :: ?ICS_KeyFlag
0x8824	0x00 ;?ICS_KeyFlag+0
; end of ?ICS_KeyFlag
;FirmV_0_7_0.c,0 :: ?ICS__Blank
0x8825	0x2020 ;?ICS__Blank+0
0x8827	0x2020 ;?ICS__Blank+2
0x8829	0x2020 ;?ICS__Blank+4
0x882B	0x2020 ;?ICS__Blank+6
0x882D	0x2020 ;?ICS__Blank+8
0x882F	0x2020 ;?ICS__Blank+10
0x8831	0x2020 ;?ICS__Blank+12
0x8833	0x2020 ;?ICS__Blank+14
0x8835	0x00 ;?ICS__Blank+16
; end of ?ICS__Blank
;FirmV_0_7_0.c,0 :: ?ICS_LCDUpdateFlag
0x8836	0x00 ;?ICS_LCDUpdateFlag+0
; end of ?ICS_LCDUpdateFlag
;FirmV_0_7_0.c,0 :: ?ICS_LCDLine2
0x8837	0x2020 ;?ICS_LCDLine2+0
0x8839	0x2020 ;?ICS_LCDLine2+2
0x883B	0x2020 ;?ICS_LCDLine2+4
0x883D	0x2020 ;?ICS_LCDLine2+6
0x883F	0x2020 ;?ICS_LCDLine2+8
0x8841	0x2020 ;?ICS_LCDLine2+10
0x8843	0x2020 ;?ICS_LCDLine2+12
0x8845	0x2020 ;?ICS_LCDLine2+14
0x8847	0x00 ;?ICS_LCDLine2+16
; end of ?ICS_LCDLine2
;FirmV_0_7_0.c,0 :: ?ICS_LCDLines
0x8848	0x01 ;?ICS_LCDLines+0
; end of ?ICS_LCDLines
;FirmV_0_7_0.c,0 :: ?ICS_Motor1FullSpeed
0x8849	0x01 ;?ICS_Motor1FullSpeed+0
; end of ?ICS_Motor1FullSpeed
;FirmV_0_7_0.c,0 :: ?ICS_OverloadCheckFlag2
0x884A	0x00 ;?ICS_OverloadCheckFlag2+0
; end of ?ICS_OverloadCheckFlag2
;FirmV_0_7_0.c,0 :: ?ICS_M2isSlow
0x884B	0x00 ;?ICS_M2isSlow+0
; end of ?ICS_M2isSlow
;FirmV_0_7_0.c,0 :: ?ICS_Motor2FullSpeed
0x884C	0x01 ;?ICS_Motor2FullSpeed+0
; end of ?ICS_Motor2FullSpeed
;FirmV_0_7_0.c,0 :: ?ICS_OverloadCheckFlag1
0x884D	0x00 ;?ICS_OverloadCheckFlag1+0
; end of ?ICS_OverloadCheckFlag1
;FirmV_0_7_0.c,0 :: ?ICS_M1isSlow
0x884E	0x00 ;?ICS_M1isSlow+0
; end of ?ICS_M1isSlow
;FirmV_0_7_0.c,0 :: ?ICSGetKeysState_RepeatSpeed_L0
0x884F	0x04 ;?ICSGetKeysState_RepeatSpeed_L0+0
; end of ?ICSGetKeysState_RepeatSpeed_L0
;FirmV_0_7_0.c,0 :: ?ICS_FlashFlag
0x8850	0x00 ;?ICS_FlashFlag+0
; end of ?ICS_FlashFlag
;FirmV_0_7_0.c,0 :: ?ICS_LCDLine1
0x8851	0x2020 ;?ICS_LCDLine1+0
0x8853	0x2020 ;?ICS_LCDLine1+2
0x8855	0x2020 ;?ICS_LCDLine1+4
0x8857	0x2020 ;?ICS_LCDLine1+6
0x8859	0x2020 ;?ICS_LCDLine1+8
0x885B	0x2020 ;?ICS_LCDLine1+10
0x885D	0x2020 ;?ICS_LCDLine1+12
0x885F	0x2020 ;?ICS_LCDLine1+14
0x8861	0x00 ;?ICS_LCDLine1+16
; end of ?ICS_LCDLine1
;FirmV_0_7_0.c,0 :: ?ICS__opening
0x8862	0x2020 ;?ICS__opening+0
0x8864	0x2020 ;?ICS__opening+2
0x8866	0x4F20 ;?ICS__opening+4
0x8868	0x6570 ;?ICS__opening+6
0x886A	0x696E ;?ICS__opening+8
0x886C	0x676E ;?ICS__opening+10
0x886E	0x2020 ;?ICS__opening+12
0x8870	0x2020 ;?ICS__opening+14
0x8872	0x00 ;?ICS__opening+16
; end of ?ICS__opening
;FirmV_0_7_0.c,0 :: ?ICS_Motor1Start
0x8873	0x00 ;?ICS_Motor1Start+0
; end of ?ICS_Motor1Start
;FirmV_0_7_0.c,0 :: ?ICS_Motor2Start
0x8874	0x00 ;?ICS_Motor2Start+0
; end of ?ICS_Motor2Start
;FirmV_0_7_0.c,0 :: ?ICS_OpenDone
0x8875	0x03 ;?ICS_OpenDone+0
; end of ?ICS_OpenDone
;FirmV_0_7_0.c,0 :: ?ICS__autoclose
0x8876	0x7541 ;?ICS__autoclose+0
0x8878	0x6F74 ;?ICS__autoclose+2
0x887A	0x6C63 ;?ICS__autoclose+4
0x887C	0x736F ;?ICS__autoclose+6
0x887E	0x2065 ;?ICS__autoclose+8
0x8880	0x6E45 ;?ICS__autoclose+10
0x8882	0x6261 ;?ICS__autoclose+12
0x8884	0x656C ;?ICS__autoclose+14
0x8886	0x00 ;?ICS__autoclose+16
; end of ?ICS__autoclose
;FirmV_0_7_0.c,0 :: ?ICS__closing
0x8887	0x2020 ;?ICS__closing+0
0x8889	0x2020 ;?ICS__closing+2
0x888B	0x4320 ;?ICS__closing+4
0x888D	0x6F6C ;?ICS__closing+6
0x888F	0x6973 ;?ICS__closing+8
0x8891	0x676E ;?ICS__closing+10
0x8893	0x2020 ;?ICS__closing+12
0x8895	0x2020 ;?ICS__closing+14
0x8897	0x00 ;?ICS__closing+16
; end of ?ICS__closing
;FirmV_0_7_0.c,0 :: ?ICS_ms500
0x8898	0x0000 ;?ICS_ms500+0
0x889A	0x0000 ;?ICS_ms500+2
; end of ?ICS_ms500
;FirmV_0_7_0.c,0 :: ?ICS_PassFlag
0x889C	0x00 ;?ICS_PassFlag+0
; end of ?ICS_PassFlag
;FirmV_0_7_0.c,0 :: ?ICS__open
0x889D	0x4420 ;?ICS__open+0
0x889F	0x6F6F ;?ICS__open+2
0x88A1	0x2072 ;?ICS__open+4
0x88A3	0x7369 ;?ICS__open+6
0x88A5	0x4F20 ;?ICS__open+8
0x88A7	0x6570 ;?ICS__open+10
0x88A9	0x656E ;?ICS__open+12
0x88AB	0x2064 ;?ICS__open+14
0x88AD	0x00 ;?ICS__open+16
; end of ?ICS__open
;FirmV_0_7_0.c,0 :: ?ICS_OverloadCounter2
0x88AE	0x0000 ;?ICS_OverloadCounter2+0
; end of ?ICS_OverloadCounter2
;FirmV_0_7_0.c,0 :: ?ICS_BuzzFlag
0x88B0	0x00 ;?ICS_BuzzFlag+0
; end of ?ICS_BuzzFlag
;FirmV_0_7_0.c,0 :: ?ICS_OverloadCounter1
0x88B1	0x0000 ;?ICS_OverloadCounter1+0
; end of ?ICS_OverloadCounter1
;FirmV_0_7_0.c,0 :: ?ICS_CloseDone
0x88B3	0x03 ;?ICS_CloseDone+0
; end of ?ICS_CloseDone
;FirmV_0_7_0.c,0 :: ?ICS_PhotocellOpenFlag
0x88B4	0x00 ;?ICS_PhotocellOpenFlag+0
; end of ?ICS_PhotocellOpenFlag
;FirmV_0_7_0.c,0 :: ?ICS__close
0x88B5	0x4420 ;?ICS__close+0
0x88B7	0x6F6F ;?ICS__close+2
0x88B9	0x2072 ;?ICS__close+4
0x88BB	0x7369 ;?ICS__close+6
0x88BD	0x4320 ;?ICS__close+8
0x88BF	0x6F6C ;?ICS__close+10
0x88C1	0x6573 ;?ICS__close+12
0x88C3	0x2064 ;?ICS__close+14
0x88C5	0x00 ;?ICS__close+16
; end of ?ICS__close
;FirmV_0_7_0.c,0 :: ?ICS_ActiveDoors
0x88C6	0x00 ;?ICS_ActiveDoors+0
; end of ?ICS_ActiveDoors
;FirmV_0_7_0.c,0 :: ?ICS__errPhoto
0x88C7	0x4520 ;?ICS__errPhoto+0
0x88C9	0x7272 ;?ICS__errPhoto+2
0x88CB	0x5020 ;?ICS__errPhoto+4
0x88CD	0x6F68 ;?ICS__errPhoto+6
0x88CF	0x6F74 ;?ICS__errPhoto+8
0x88D1	0x6563 ;?ICS__errPhoto+10
0x88D3	0x6C6C ;?ICS__errPhoto+12
0x88D5	0x2020 ;?ICS__errPhoto+14
0x88D7	0x00 ;?ICS__errPhoto+16
; end of ?ICS__errPhoto
;FirmV_0_7_0.c,0 :: ?ICS_State
0x88D8	0x00 ;?ICS_State+0
; end of ?ICS_State
;FirmV_0_7_0.c,0 :: ?ICS__errOverload
0x88D9	0x2020 ;?ICS__errOverload+0
0x88DB	0x7245 ;?ICS__errOverload+2
0x88DD	0x2072 ;?ICS__errOverload+4
0x88DF	0x764F ;?ICS__errOverload+6
0x88E1	0x7265 ;?ICS__errOverload+8
0x88E3	0x6F6C ;?ICS__errOverload+10
0x88E5	0x6461 ;?ICS__errOverload+12
0x88E7	0x2020 ;?ICS__errOverload+14
0x88E9	0x00 ;?ICS__errOverload+16
; end of ?ICS__errOverload
;FirmV_0_7_0.c,0 :: ?ICS__stop
0x88EA	0x2020 ;?ICS__stop+0
0x88EC	0x6F44 ;?ICS__stop+2
0x88EE	0x726F ;?ICS__stop+4
0x88F0	0x5320 ;?ICS__stop+6
0x88F2	0x6F74 ;?ICS__stop+8
0x88F4	0x6570 ;?ICS__stop+10
0x88F6	0x2064 ;?ICS__stop+12
0x88F8	0x2020 ;?ICS__stop+14
0x88FA	0x00 ;?ICS__stop+16
; end of ?ICS__stop
;FirmV_0_7_0.c,0 :: ?ICS__errRemote
0x88FB	0x2020 ;?ICS__errRemote+0
0x88FD	0x4520 ;?ICS__errRemote+2
0x88FF	0x7272 ;?ICS__errRemote+4
0x8901	0x5220 ;?ICS__errRemote+6
0x8903	0x6D65 ;?ICS__errRemote+8
0x8905	0x746F ;?ICS__errRemote+10
0x8907	0x2065 ;?ICS__errRemote+12
0x8909	0x2020 ;?ICS__errRemote+14
0x890B	0x00 ;?ICS__errRemote+16
; end of ?ICS__errRemote
;FirmV_0_7_0.c,0 :: ?ICS__errLimit
0x890C	0x7245 ;?ICS__errLimit+0
0x890E	0x2072 ;?ICS__errLimit+2
0x8910	0x694C ;?ICS__errLimit+4
0x8912	0x696D ;?ICS__errLimit+6
0x8914	0x2074 ;?ICS__errLimit+8
0x8916	0x7753 ;?ICS__errLimit+10
0x8918	0x7469 ;?ICS__errLimit+12
0x891A	0x6863 ;?ICS__errLimit+14
0x891C	0x00 ;?ICS__errLimit+16
; end of ?ICS__errLimit
;FirmV_0_7_0.c,0 :: ?ICS?lstr7_FirmV_0_7_0
0x891D	0x3353 ;?ICS?lstr7_FirmV_0_7_0+0
0x891F	0x4D20 ;?ICS?lstr7_FirmV_0_7_0+2
0x8921	0x746F ;?ICS?lstr7_FirmV_0_7_0+4
0x8923	0x726F ;?ICS?lstr7_FirmV_0_7_0+6
0x8925	0x5331 ;?ICS?lstr7_FirmV_0_7_0+8
0x8927	0x6174 ;?ICS?lstr7_FirmV_0_7_0+10
0x8929	0x7472 ;?ICS?lstr7_FirmV_0_7_0+12
0x892B	0x00 ;?ICS?lstr7_FirmV_0_7_0+14
; end of ?ICS?lstr7_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr8_FirmV_0_7_0
0x892C	0x3353 ;?ICS?lstr8_FirmV_0_7_0+0
0x892E	0x4D20 ;?ICS?lstr8_FirmV_0_7_0+2
0x8930	0x746F ;?ICS?lstr8_FirmV_0_7_0+4
0x8932	0x726F ;?ICS?lstr8_FirmV_0_7_0+6
0x8934	0x5332 ;?ICS?lstr8_FirmV_0_7_0+8
0x8936	0x6174 ;?ICS?lstr8_FirmV_0_7_0+10
0x8938	0x7472 ;?ICS?lstr8_FirmV_0_7_0+12
0x893A	0x00 ;?ICS?lstr8_FirmV_0_7_0+14
; end of ?ICS?lstr8_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr9_FirmV_0_7_0
0x893B	0x3353 ;?ICS?lstr9_FirmV_0_7_0+0
0x893D	0x4D20 ;?ICS?lstr9_FirmV_0_7_0+2
0x893F	0x746F ;?ICS?lstr9_FirmV_0_7_0+4
0x8941	0x726F ;?ICS?lstr9_FirmV_0_7_0+6
0x8943	0x2031 ;?ICS?lstr9_FirmV_0_7_0+8
0x8945	0x6146 ;?ICS?lstr9_FirmV_0_7_0+10
0x8947	0x7473 ;?ICS?lstr9_FirmV_0_7_0+12
0x8949	0x00 ;?ICS?lstr9_FirmV_0_7_0+14
; end of ?ICS?lstr9_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr10_FirmV_0_7_0
0x894A	0x3353 ;?ICS?lstr10_FirmV_0_7_0+0
0x894C	0x4D20 ;?ICS?lstr10_FirmV_0_7_0+2
0x894E	0x746F ;?ICS?lstr10_FirmV_0_7_0+4
0x8950	0x726F ;?ICS?lstr10_FirmV_0_7_0+6
0x8952	0x2031 ;?ICS?lstr10_FirmV_0_7_0+8
0x8954	0x6C53 ;?ICS?lstr10_FirmV_0_7_0+10
0x8956	0x776F ;?ICS?lstr10_FirmV_0_7_0+12
0x8958	0x00 ;?ICS?lstr10_FirmV_0_7_0+14
; end of ?ICS?lstr10_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr11_FirmV_0_7_0
0x8959	0x3353 ;?ICS?lstr11_FirmV_0_7_0+0
0x895B	0x4D20 ;?ICS?lstr11_FirmV_0_7_0+2
0x895D	0x746F ;?ICS?lstr11_FirmV_0_7_0+4
0x895F	0x726F ;?ICS?lstr11_FirmV_0_7_0+6
0x8961	0x2032 ;?ICS?lstr11_FirmV_0_7_0+8
0x8963	0x6146 ;?ICS?lstr11_FirmV_0_7_0+10
0x8965	0x7473 ;?ICS?lstr11_FirmV_0_7_0+12
0x8967	0x00 ;?ICS?lstr11_FirmV_0_7_0+14
; end of ?ICS?lstr11_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr12_FirmV_0_7_0
0x8968	0x3353 ;?ICS?lstr12_FirmV_0_7_0+0
0x896A	0x4D20 ;?ICS?lstr12_FirmV_0_7_0+2
0x896C	0x746F ;?ICS?lstr12_FirmV_0_7_0+4
0x896E	0x726F ;?ICS?lstr12_FirmV_0_7_0+6
0x8970	0x2032 ;?ICS?lstr12_FirmV_0_7_0+8
0x8972	0x6C53 ;?ICS?lstr12_FirmV_0_7_0+10
0x8974	0x776F ;?ICS?lstr12_FirmV_0_7_0+12
0x8976	0x00 ;?ICS?lstr12_FirmV_0_7_0+14
; end of ?ICS?lstr12_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr13_FirmV_0_7_0
0x8977	0x3353 ;?ICS?lstr13_FirmV_0_7_0+0
0x8979	0x4F20 ;?ICS?lstr13_FirmV_0_7_0+2
0x897B	0x6576 ;?ICS?lstr13_FirmV_0_7_0+4
0x897D	0x6672 ;?ICS?lstr13_FirmV_0_7_0+6
0x897F	0x6F6C ;?ICS?lstr13_FirmV_0_7_0+8
0x8981	0x2077 ;?ICS?lstr13_FirmV_0_7_0+10
0x8983	0x6C46 ;?ICS?lstr13_FirmV_0_7_0+12
0x8985	0x6761 ;?ICS?lstr13_FirmV_0_7_0+14
0x8987	0x2031 ;?ICS?lstr13_FirmV_0_7_0+16
0x8989	0x6553 ;?ICS?lstr13_FirmV_0_7_0+18
0x898B	0x0074 ;?ICS?lstr13_FirmV_0_7_0+20
; end of ?ICS?lstr13_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr14_FirmV_0_7_0
0x898D	0x3353 ;?ICS?lstr14_FirmV_0_7_0+0
0x898F	0x4F20 ;?ICS?lstr14_FirmV_0_7_0+2
0x8991	0x6576 ;?ICS?lstr14_FirmV_0_7_0+4
0x8993	0x6672 ;?ICS?lstr14_FirmV_0_7_0+6
0x8995	0x6F6C ;?ICS?lstr14_FirmV_0_7_0+8
0x8997	0x2077 ;?ICS?lstr14_FirmV_0_7_0+10
0x8999	0x6C46 ;?ICS?lstr14_FirmV_0_7_0+12
0x899B	0x6761 ;?ICS?lstr14_FirmV_0_7_0+14
0x899D	0x2032 ;?ICS?lstr14_FirmV_0_7_0+16
0x899F	0x6553 ;?ICS?lstr14_FirmV_0_7_0+18
0x89A1	0x0074 ;?ICS?lstr14_FirmV_0_7_0+20
; end of ?ICS?lstr14_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr15_FirmV_0_7_0
0x89A3	0x3353 ;?ICS?lstr15_FirmV_0_7_0+0
0x89A5	0x4D20 ;?ICS?lstr15_FirmV_0_7_0+2
0x89A7	0x746F ;?ICS?lstr15_FirmV_0_7_0+4
0x89A9	0x726F ;?ICS?lstr15_FirmV_0_7_0+6
0x89AB	0x2031 ;?ICS?lstr15_FirmV_0_7_0+8
0x89AD	0x7453 ;?ICS?lstr15_FirmV_0_7_0+10
0x89AF	0x706F ;?ICS?lstr15_FirmV_0_7_0+12
0x89B1	0x00 ;?ICS?lstr15_FirmV_0_7_0+14
; end of ?ICS?lstr15_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr16_FirmV_0_7_0
0x89B2	0x3353 ;?ICS?lstr16_FirmV_0_7_0+0
0x89B4	0x4D20 ;?ICS?lstr16_FirmV_0_7_0+2
0x89B6	0x746F ;?ICS?lstr16_FirmV_0_7_0+4
0x89B8	0x726F ;?ICS?lstr16_FirmV_0_7_0+6
0x89BA	0x2032 ;?ICS?lstr16_FirmV_0_7_0+8
0x89BC	0x7453 ;?ICS?lstr16_FirmV_0_7_0+10
0x89BE	0x706F ;?ICS?lstr16_FirmV_0_7_0+12
0x89C0	0x00 ;?ICS?lstr16_FirmV_0_7_0+14
; end of ?ICS?lstr16_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr17_FirmV_0_7_0
0x89C1	0x3353 ;?ICS?lstr17_FirmV_0_7_0+0
0x89C3	0x4D20 ;?ICS?lstr17_FirmV_0_7_0+2
0x89C5	0x746F ;?ICS?lstr17_FirmV_0_7_0+4
0x89C7	0x726F ;?ICS?lstr17_FirmV_0_7_0+6
0x89C9	0x2031 ;?ICS?lstr17_FirmV_0_7_0+8
0x89CB	0x6F43 ;?ICS?lstr17_FirmV_0_7_0+10
0x89CD	0x6C6C ;?ICS?lstr17_FirmV_0_7_0+12
0x89CF	0x7369 ;?ICS?lstr17_FirmV_0_7_0+14
0x89D1	0x6F69 ;?ICS?lstr17_FirmV_0_7_0+16
0x89D3	0x006E ;?ICS?lstr17_FirmV_0_7_0+18
; end of ?ICS?lstr17_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr18_FirmV_0_7_0
0x89D5	0x3353 ;?ICS?lstr18_FirmV_0_7_0+0
0x89D7	0x4D20 ;?ICS?lstr18_FirmV_0_7_0+2
0x89D9	0x746F ;?ICS?lstr18_FirmV_0_7_0+4
0x89DB	0x726F ;?ICS?lstr18_FirmV_0_7_0+6
0x89DD	0x2032 ;?ICS?lstr18_FirmV_0_7_0+8
0x89DF	0x6F43 ;?ICS?lstr18_FirmV_0_7_0+10
0x89E1	0x6C6C ;?ICS?lstr18_FirmV_0_7_0+12
0x89E3	0x7369 ;?ICS?lstr18_FirmV_0_7_0+14
0x89E5	0x6F69 ;?ICS?lstr18_FirmV_0_7_0+16
0x89E7	0x006E ;?ICS?lstr18_FirmV_0_7_0+18
; end of ?ICS?lstr18_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr19_FirmV_0_7_0
0x89E9	0x3353 ;?ICS?lstr19_FirmV_0_7_0+0
0x89EB	0x5020 ;?ICS?lstr19_FirmV_0_7_0+2
0x89ED	0x6F68 ;?ICS?lstr19_FirmV_0_7_0+4
0x89EF	0x6F74 ;?ICS?lstr19_FirmV_0_7_0+6
0x89F1	0x6563 ;?ICS?lstr19_FirmV_0_7_0+8
0x89F3	0x6C6C ;?ICS?lstr19_FirmV_0_7_0+10
0x89F5	0x4920 ;?ICS?lstr19_FirmV_0_7_0+12
0x89F7	0x746E ;?ICS?lstr19_FirmV_0_7_0+14
0x89F9	0x00 ;?ICS?lstr19_FirmV_0_7_0+16
; end of ?ICS?lstr19_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr20_FirmV_0_7_0
0x89FA	0x3353 ;?ICS?lstr20_FirmV_0_7_0+0
0x89FC	0x5220 ;?ICS?lstr20_FirmV_0_7_0+2
0x89FE	0x6D65 ;?ICS?lstr20_FirmV_0_7_0+4
0x8A00	0x746F ;?ICS?lstr20_FirmV_0_7_0+6
0x8A02	0x2065 ;?ICS?lstr20_FirmV_0_7_0+8
0x8A04	0x7453 ;?ICS?lstr20_FirmV_0_7_0+10
0x8A06	0x706F ;?ICS?lstr20_FirmV_0_7_0+12
0x8A08	0x6465 ;?ICS?lstr20_FirmV_0_7_0+14
0x8A0A	0x00 ;?ICS?lstr20_FirmV_0_7_0+16
; end of ?ICS?lstr20_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr21_FirmV_0_7_0
0x8A0B	0x3353 ;?ICS?lstr21_FirmV_0_7_0+0
0x8A0D	0x4C20 ;?ICS?lstr21_FirmV_0_7_0+2
0x8A0F	0x6D69 ;?ICS?lstr21_FirmV_0_7_0+4
0x8A11	0x7469 ;?ICS?lstr21_FirmV_0_7_0+6
0x8A13	0x5320 ;?ICS?lstr21_FirmV_0_7_0+8
0x8A15	0x6977 ;?ICS?lstr21_FirmV_0_7_0+10
0x8A17	0x6374 ;?ICS?lstr21_FirmV_0_7_0+12
0x8A19	0x2068 ;?ICS?lstr21_FirmV_0_7_0+14
0x8A1B	0x7453 ;?ICS?lstr21_FirmV_0_7_0+16
0x8A1D	0x706F ;?ICS?lstr21_FirmV_0_7_0+18
0x8A1F	0x6465 ;?ICS?lstr21_FirmV_0_7_0+20
0x8A21	0x00 ;?ICS?lstr21_FirmV_0_7_0+22
; end of ?ICS?lstr21_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr22_FirmV_0_7_0
0x8A22	0x3353 ;?ICS?lstr22_FirmV_0_7_0+0
0x8A24	0x4120 ;?ICS?lstr22_FirmV_0_7_0+2
0x8A26	0x7475 ;?ICS?lstr22_FirmV_0_7_0+4
0x8A28	0x636F ;?ICS?lstr22_FirmV_0_7_0+6
0x8A2A	0x6F6C ;?ICS?lstr22_FirmV_0_7_0+8
0x8A2C	0x6573 ;?ICS?lstr22_FirmV_0_7_0+10
0x8A2E	0x5220 ;?ICS?lstr22_FirmV_0_7_0+12
0x8A30	0x6E65 ;?ICS?lstr22_FirmV_0_7_0+14
0x8A32	0x7765 ;?ICS?lstr22_FirmV_0_7_0+16
0x8A34	0x6465 ;?ICS?lstr22_FirmV_0_7_0+18
0x8A36	0x00 ;?ICS?lstr22_FirmV_0_7_0+20
; end of ?ICS?lstr22_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr23_FirmV_0_7_0
0x8A37	0x3453 ;?ICS?lstr23_FirmV_0_7_0+0
0x8A39	0x4D20 ;?ICS?lstr23_FirmV_0_7_0+2
0x8A3B	0x746F ;?ICS?lstr23_FirmV_0_7_0+4
0x8A3D	0x726F ;?ICS?lstr23_FirmV_0_7_0+6
0x8A3F	0x5331 ;?ICS?lstr23_FirmV_0_7_0+8
0x8A41	0x6174 ;?ICS?lstr23_FirmV_0_7_0+10
0x8A43	0x7472 ;?ICS?lstr23_FirmV_0_7_0+12
0x8A45	0x00 ;?ICS?lstr23_FirmV_0_7_0+14
; end of ?ICS?lstr23_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr24_FirmV_0_7_0
0x8A46	0x3453 ;?ICS?lstr24_FirmV_0_7_0+0
0x8A48	0x4D20 ;?ICS?lstr24_FirmV_0_7_0+2
0x8A4A	0x746F ;?ICS?lstr24_FirmV_0_7_0+4
0x8A4C	0x726F ;?ICS?lstr24_FirmV_0_7_0+6
0x8A4E	0x5332 ;?ICS?lstr24_FirmV_0_7_0+8
0x8A50	0x6174 ;?ICS?lstr24_FirmV_0_7_0+10
0x8A52	0x7472 ;?ICS?lstr24_FirmV_0_7_0+12
0x8A54	0x00 ;?ICS?lstr24_FirmV_0_7_0+14
; end of ?ICS?lstr24_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr25_FirmV_0_7_0
0x8A55	0x3453 ;?ICS?lstr25_FirmV_0_7_0+0
0x8A57	0x4D20 ;?ICS?lstr25_FirmV_0_7_0+2
0x8A59	0x2031 ;?ICS?lstr25_FirmV_0_7_0+4
0x8A5B	0x764F ;?ICS?lstr25_FirmV_0_7_0+6
0x8A5D	0x7265 ;?ICS?lstr25_FirmV_0_7_0+8
0x8A5F	0x6F6C ;?ICS?lstr25_FirmV_0_7_0+10
0x8A61	0x6461 ;?ICS?lstr25_FirmV_0_7_0+12
0x8A63	0x4320 ;?ICS?lstr25_FirmV_0_7_0+14
0x8A65	0x6568 ;?ICS?lstr25_FirmV_0_7_0+16
0x8A67	0x6B63 ;?ICS?lstr25_FirmV_0_7_0+18
0x8A69	0x00 ;?ICS?lstr25_FirmV_0_7_0+20
; end of ?ICS?lstr25_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr26_FirmV_0_7_0
0x8A6A	0x3453 ;?ICS?lstr26_FirmV_0_7_0+0
0x8A6C	0x4D20 ;?ICS?lstr26_FirmV_0_7_0+2
0x8A6E	0x2032 ;?ICS?lstr26_FirmV_0_7_0+4
0x8A70	0x764F ;?ICS?lstr26_FirmV_0_7_0+6
0x8A72	0x7265 ;?ICS?lstr26_FirmV_0_7_0+8
0x8A74	0x6F6C ;?ICS?lstr26_FirmV_0_7_0+10
0x8A76	0x6461 ;?ICS?lstr26_FirmV_0_7_0+12
0x8A78	0x4320 ;?ICS?lstr26_FirmV_0_7_0+14
0x8A7A	0x6568 ;?ICS?lstr26_FirmV_0_7_0+16
0x8A7C	0x6B63 ;?ICS?lstr26_FirmV_0_7_0+18
0x8A7E	0x00 ;?ICS?lstr26_FirmV_0_7_0+20
; end of ?ICS?lstr26_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr27_FirmV_0_7_0
0x8A7F	0x3453 ;?ICS?lstr27_FirmV_0_7_0+0
0x8A81	0x4D20 ;?ICS?lstr27_FirmV_0_7_0+2
0x8A83	0x2031 ;?ICS?lstr27_FirmV_0_7_0+4
0x8A85	0x7053 ;?ICS?lstr27_FirmV_0_7_0+6
0x8A87	0x6565 ;?ICS?lstr27_FirmV_0_7_0+8
0x8A89	0x2064 ;?ICS?lstr27_FirmV_0_7_0+10
0x8A8B	0x5055 ;?ICS?lstr27_FirmV_0_7_0+12
0x8A8D	0x00 ;?ICS?lstr27_FirmV_0_7_0+14
; end of ?ICS?lstr27_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr28_FirmV_0_7_0
0x8A8E	0x3453 ;?ICS?lstr28_FirmV_0_7_0+0
0x8A90	0x4D20 ;?ICS?lstr28_FirmV_0_7_0+2
0x8A92	0x2031 ;?ICS?lstr28_FirmV_0_7_0+4
0x8A94	0x7053 ;?ICS?lstr28_FirmV_0_7_0+6
0x8A96	0x6565 ;?ICS?lstr28_FirmV_0_7_0+8
0x8A98	0x2064 ;?ICS?lstr28_FirmV_0_7_0+10
0x8A9A	0x6F44 ;?ICS?lstr28_FirmV_0_7_0+12
0x8A9C	0x6E77 ;?ICS?lstr28_FirmV_0_7_0+14
0x8A9E	0x00 ;?ICS?lstr28_FirmV_0_7_0+16
; end of ?ICS?lstr28_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr29_FirmV_0_7_0
0x8A9F	0x3453 ;?ICS?lstr29_FirmV_0_7_0+0
0x8AA1	0x4D20 ;?ICS?lstr29_FirmV_0_7_0+2
0x8AA3	0x2032 ;?ICS?lstr29_FirmV_0_7_0+4
0x8AA5	0x7053 ;?ICS?lstr29_FirmV_0_7_0+6
0x8AA7	0x6565 ;?ICS?lstr29_FirmV_0_7_0+8
0x8AA9	0x2064 ;?ICS?lstr29_FirmV_0_7_0+10
0x8AAB	0x5055 ;?ICS?lstr29_FirmV_0_7_0+12
0x8AAD	0x00 ;?ICS?lstr29_FirmV_0_7_0+14
; end of ?ICS?lstr29_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr30_FirmV_0_7_0
0x8AAE	0x3453 ;?ICS?lstr30_FirmV_0_7_0+0
0x8AB0	0x4D20 ;?ICS?lstr30_FirmV_0_7_0+2
0x8AB2	0x2032 ;?ICS?lstr30_FirmV_0_7_0+4
0x8AB4	0x7053 ;?ICS?lstr30_FirmV_0_7_0+6
0x8AB6	0x6565 ;?ICS?lstr30_FirmV_0_7_0+8
0x8AB8	0x2064 ;?ICS?lstr30_FirmV_0_7_0+10
0x8ABA	0x6F44 ;?ICS?lstr30_FirmV_0_7_0+12
0x8ABC	0x6E77 ;?ICS?lstr30_FirmV_0_7_0+14
0x8ABE	0x00 ;?ICS?lstr30_FirmV_0_7_0+16
; end of ?ICS?lstr30_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr31_FirmV_0_7_0
0x8ABF	0x3453 ;?ICS?lstr31_FirmV_0_7_0+0
0x8AC1	0x4D20 ;?ICS?lstr31_FirmV_0_7_0+2
0x8AC3	0x2031 ;?ICS?lstr31_FirmV_0_7_0+4
0x8AC5	0x7453 ;?ICS?lstr31_FirmV_0_7_0+6
0x8AC7	0x706F ;?ICS?lstr31_FirmV_0_7_0+8
0x8AC9	0x6465 ;?ICS?lstr31_FirmV_0_7_0+10
0x8ACB	0x00 ;?ICS?lstr31_FirmV_0_7_0+12
; end of ?ICS?lstr31_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr32_FirmV_0_7_0
0x8ACC	0x3453 ;?ICS?lstr32_FirmV_0_7_0+0
0x8ACE	0x4D20 ;?ICS?lstr32_FirmV_0_7_0+2
0x8AD0	0x2032 ;?ICS?lstr32_FirmV_0_7_0+4
0x8AD2	0x7453 ;?ICS?lstr32_FirmV_0_7_0+6
0x8AD4	0x706F ;?ICS?lstr32_FirmV_0_7_0+8
0x8AD6	0x6465 ;?ICS?lstr32_FirmV_0_7_0+10
0x8AD8	0x00 ;?ICS?lstr32_FirmV_0_7_0+12
; end of ?ICS?lstr32_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr33_FirmV_0_7_0
0x8AD9	0x3453 ;?ICS?lstr33_FirmV_0_7_0+0
0x8ADB	0x4D20 ;?ICS?lstr33_FirmV_0_7_0+2
0x8ADD	0x2031 ;?ICS?lstr33_FirmV_0_7_0+4
0x8ADF	0x764F ;?ICS?lstr33_FirmV_0_7_0+6
0x8AE1	0x7265 ;?ICS?lstr33_FirmV_0_7_0+8
0x8AE3	0x6F6C ;?ICS?lstr33_FirmV_0_7_0+10
0x8AE5	0x6461 ;?ICS?lstr33_FirmV_0_7_0+12
0x8AE7	0x6465 ;?ICS?lstr33_FirmV_0_7_0+14
0x8AE9	0x00 ;?ICS?lstr33_FirmV_0_7_0+16
; end of ?ICS?lstr33_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr34_FirmV_0_7_0
0x8AEA	0x3453 ;?ICS?lstr34_FirmV_0_7_0+0
0x8AEC	0x4D20 ;?ICS?lstr34_FirmV_0_7_0+2
0x8AEE	0x2032 ;?ICS?lstr34_FirmV_0_7_0+4
0x8AF0	0x764F ;?ICS?lstr34_FirmV_0_7_0+6
0x8AF2	0x7265 ;?ICS?lstr34_FirmV_0_7_0+8
0x8AF4	0x6F6C ;?ICS?lstr34_FirmV_0_7_0+10
0x8AF6	0x6461 ;?ICS?lstr34_FirmV_0_7_0+12
0x8AF8	0x6465 ;?ICS?lstr34_FirmV_0_7_0+14
0x8AFA	0x00 ;?ICS?lstr34_FirmV_0_7_0+16
; end of ?ICS?lstr34_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr35_FirmV_0_7_0
0x8AFB	0x3453 ;?ICS?lstr35_FirmV_0_7_0+0
0x8AFD	0x5020 ;?ICS?lstr35_FirmV_0_7_0+2
0x8AFF	0x6F68 ;?ICS?lstr35_FirmV_0_7_0+4
0x8B01	0x6F74 ;?ICS?lstr35_FirmV_0_7_0+6
0x8B03	0x6563 ;?ICS?lstr35_FirmV_0_7_0+8
0x8B05	0x6C6C ;?ICS?lstr35_FirmV_0_7_0+10
0x8B07	0x4920 ;?ICS?lstr35_FirmV_0_7_0+12
0x8B09	0x746E ;?ICS?lstr35_FirmV_0_7_0+14
0x8B0B	0x00 ;?ICS?lstr35_FirmV_0_7_0+16
; end of ?ICS?lstr35_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr36_FirmV_0_7_0
0x8B0C	0x3453 ;?ICS?lstr36_FirmV_0_7_0+0
0x8B0E	0x4C20 ;?ICS?lstr36_FirmV_0_7_0+2
0x8B10	0x6D69 ;?ICS?lstr36_FirmV_0_7_0+4
0x8B12	0x7469 ;?ICS?lstr36_FirmV_0_7_0+6
0x8B14	0x5320 ;?ICS?lstr36_FirmV_0_7_0+8
0x8B16	0x6977 ;?ICS?lstr36_FirmV_0_7_0+10
0x8B18	0x6374 ;?ICS?lstr36_FirmV_0_7_0+12
0x8B1A	0x2068 ;?ICS?lstr36_FirmV_0_7_0+14
0x8B1C	0x7453 ;?ICS?lstr36_FirmV_0_7_0+16
0x8B1E	0x706F ;?ICS?lstr36_FirmV_0_7_0+18
0x8B20	0x00 ;?ICS?lstr36_FirmV_0_7_0+20
; end of ?ICS?lstr36_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr37_FirmV_0_7_0
0x8B21	0x3453 ;?ICS?lstr37_FirmV_0_7_0+0
0x8B23	0x5220 ;?ICS?lstr37_FirmV_0_7_0+2
0x8B25	0x6D65 ;?ICS?lstr37_FirmV_0_7_0+4
0x8B27	0x746F ;?ICS?lstr37_FirmV_0_7_0+6
0x8B29	0x2065 ;?ICS?lstr37_FirmV_0_7_0+8
0x8B2B	0x7250 ;?ICS?lstr37_FirmV_0_7_0+10
0x8B2D	0x7365 ;?ICS?lstr37_FirmV_0_7_0+12
0x8B2F	0x6573 ;?ICS?lstr37_FirmV_0_7_0+14
0x8B31	0x0064 ;?ICS?lstr37_FirmV_0_7_0+16
; end of ?ICS?lstr37_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr38_FirmV_0_7_0
0x8B33	0x3453 ;?ICS?lstr38_FirmV_0_7_0+0
0x8B35	0x4120 ;?ICS?lstr38_FirmV_0_7_0+2
0x8B37	0x7475 ;?ICS?lstr38_FirmV_0_7_0+4
0x8B39	0x636F ;?ICS?lstr38_FirmV_0_7_0+6
0x8B3B	0x6F6C ;?ICS?lstr38_FirmV_0_7_0+8
0x8B3D	0x6573 ;?ICS?lstr38_FirmV_0_7_0+10
0x8B3F	0x5220 ;?ICS?lstr38_FirmV_0_7_0+12
0x8B41	0x6E65 ;?ICS?lstr38_FirmV_0_7_0+14
0x8B43	0x7765 ;?ICS?lstr38_FirmV_0_7_0+16
0x8B45	0x6465 ;?ICS?lstr38_FirmV_0_7_0+18
0x8B47	0x00 ;?ICS?lstr38_FirmV_0_7_0+20
; end of ?ICS?lstr38_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr57_FirmV_0_7_0
0x8B48	0x3853 ;?ICS?lstr57_FirmV_0_7_0+0
0x8B4A	0x4D20 ;?ICS?lstr57_FirmV_0_7_0+2
0x8B4C	0x746F ;?ICS?lstr57_FirmV_0_7_0+4
0x8B4E	0x726F ;?ICS?lstr57_FirmV_0_7_0+6
0x8B50	0x5331 ;?ICS?lstr57_FirmV_0_7_0+8
0x8B52	0x6174 ;?ICS?lstr57_FirmV_0_7_0+10
0x8B54	0x7472 ;?ICS?lstr57_FirmV_0_7_0+12
0x8B56	0x00 ;?ICS?lstr57_FirmV_0_7_0+14
; end of ?ICS?lstr57_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr58_FirmV_0_7_0
0x8B57	0x3853 ;?ICS?lstr58_FirmV_0_7_0+0
0x8B59	0x4D20 ;?ICS?lstr58_FirmV_0_7_0+2
0x8B5B	0x746F ;?ICS?lstr58_FirmV_0_7_0+4
0x8B5D	0x726F ;?ICS?lstr58_FirmV_0_7_0+6
0x8B5F	0x5332 ;?ICS?lstr58_FirmV_0_7_0+8
0x8B61	0x6174 ;?ICS?lstr58_FirmV_0_7_0+10
0x8B63	0x7472 ;?ICS?lstr58_FirmV_0_7_0+12
0x8B65	0x00 ;?ICS?lstr58_FirmV_0_7_0+14
; end of ?ICS?lstr58_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr59_FirmV_0_7_0
0x8B66	0x3853 ;?ICS?lstr59_FirmV_0_7_0+0
0x8B68	0x4F20 ;?ICS?lstr59_FirmV_0_7_0+2
0x8B6A	0x6576 ;?ICS?lstr59_FirmV_0_7_0+4
0x8B6C	0x6672 ;?ICS?lstr59_FirmV_0_7_0+6
0x8B6E	0x6F6C ;?ICS?lstr59_FirmV_0_7_0+8
0x8B70	0x2077 ;?ICS?lstr59_FirmV_0_7_0+10
0x8B72	0x6C46 ;?ICS?lstr59_FirmV_0_7_0+12
0x8B74	0x6761 ;?ICS?lstr59_FirmV_0_7_0+14
0x8B76	0x2031 ;?ICS?lstr59_FirmV_0_7_0+16
0x8B78	0x6553 ;?ICS?lstr59_FirmV_0_7_0+18
0x8B7A	0x0074 ;?ICS?lstr59_FirmV_0_7_0+20
; end of ?ICS?lstr59_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr60_FirmV_0_7_0
0x8B7C	0x3853 ;?ICS?lstr60_FirmV_0_7_0+0
0x8B7E	0x4F20 ;?ICS?lstr60_FirmV_0_7_0+2
0x8B80	0x6576 ;?ICS?lstr60_FirmV_0_7_0+4
0x8B82	0x6672 ;?ICS?lstr60_FirmV_0_7_0+6
0x8B84	0x6F6C ;?ICS?lstr60_FirmV_0_7_0+8
0x8B86	0x2077 ;?ICS?lstr60_FirmV_0_7_0+10
0x8B88	0x6C46 ;?ICS?lstr60_FirmV_0_7_0+12
0x8B8A	0x6761 ;?ICS?lstr60_FirmV_0_7_0+14
0x8B8C	0x2032 ;?ICS?lstr60_FirmV_0_7_0+16
0x8B8E	0x6553 ;?ICS?lstr60_FirmV_0_7_0+18
0x8B90	0x0074 ;?ICS?lstr60_FirmV_0_7_0+20
; end of ?ICS?lstr60_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr61_FirmV_0_7_0
0x8B92	0x3853 ;?ICS?lstr61_FirmV_0_7_0+0
0x8B94	0x4D20 ;?ICS?lstr61_FirmV_0_7_0+2
0x8B96	0x746F ;?ICS?lstr61_FirmV_0_7_0+4
0x8B98	0x726F ;?ICS?lstr61_FirmV_0_7_0+6
0x8B9A	0x2031 ;?ICS?lstr61_FirmV_0_7_0+8
0x8B9C	0x6146 ;?ICS?lstr61_FirmV_0_7_0+10
0x8B9E	0x7473 ;?ICS?lstr61_FirmV_0_7_0+12
0x8BA0	0x00 ;?ICS?lstr61_FirmV_0_7_0+14
; end of ?ICS?lstr61_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr62_FirmV_0_7_0
0x8BA1	0x3853 ;?ICS?lstr62_FirmV_0_7_0+0
0x8BA3	0x4D20 ;?ICS?lstr62_FirmV_0_7_0+2
0x8BA5	0x746F ;?ICS?lstr62_FirmV_0_7_0+4
0x8BA7	0x726F ;?ICS?lstr62_FirmV_0_7_0+6
0x8BA9	0x2032 ;?ICS?lstr62_FirmV_0_7_0+8
0x8BAB	0x6146 ;?ICS?lstr62_FirmV_0_7_0+10
0x8BAD	0x7473 ;?ICS?lstr62_FirmV_0_7_0+12
0x8BAF	0x00 ;?ICS?lstr62_FirmV_0_7_0+14
; end of ?ICS?lstr62_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr63_FirmV_0_7_0
0x8BB0	0x3853 ;?ICS?lstr63_FirmV_0_7_0+0
0x8BB2	0x4D20 ;?ICS?lstr63_FirmV_0_7_0+2
0x8BB4	0x746F ;?ICS?lstr63_FirmV_0_7_0+4
0x8BB6	0x726F ;?ICS?lstr63_FirmV_0_7_0+6
0x8BB8	0x2031 ;?ICS?lstr63_FirmV_0_7_0+8
0x8BBA	0x7453 ;?ICS?lstr63_FirmV_0_7_0+10
0x8BBC	0x706F ;?ICS?lstr63_FirmV_0_7_0+12
0x8BBE	0x00 ;?ICS?lstr63_FirmV_0_7_0+14
; end of ?ICS?lstr63_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr64_FirmV_0_7_0
0x8BBF	0x3853 ;?ICS?lstr64_FirmV_0_7_0+0
0x8BC1	0x4D20 ;?ICS?lstr64_FirmV_0_7_0+2
0x8BC3	0x746F ;?ICS?lstr64_FirmV_0_7_0+4
0x8BC5	0x726F ;?ICS?lstr64_FirmV_0_7_0+6
0x8BC7	0x2032 ;?ICS?lstr64_FirmV_0_7_0+8
0x8BC9	0x7453 ;?ICS?lstr64_FirmV_0_7_0+10
0x8BCB	0x706F ;?ICS?lstr64_FirmV_0_7_0+12
0x8BCD	0x00 ;?ICS?lstr64_FirmV_0_7_0+14
; end of ?ICS?lstr64_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr65_FirmV_0_7_0
0x8BCE	0x3853 ;?ICS?lstr65_FirmV_0_7_0+0
0x8BD0	0x5020 ;?ICS?lstr65_FirmV_0_7_0+2
0x8BD2	0x6F68 ;?ICS?lstr65_FirmV_0_7_0+4
0x8BD4	0x6F74 ;?ICS?lstr65_FirmV_0_7_0+6
0x8BD6	0x6563 ;?ICS?lstr65_FirmV_0_7_0+8
0x8BD8	0x6C6C ;?ICS?lstr65_FirmV_0_7_0+10
0x8BDA	0x4920 ;?ICS?lstr65_FirmV_0_7_0+12
0x8BDC	0x746E ;?ICS?lstr65_FirmV_0_7_0+14
0x8BDE	0x00 ;?ICS?lstr65_FirmV_0_7_0+16
; end of ?ICS?lstr65_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr66_FirmV_0_7_0
0x8BDF	0x3853 ;?ICS?lstr66_FirmV_0_7_0+0
0x8BE1	0x4D20 ;?ICS?lstr66_FirmV_0_7_0+2
0x8BE3	0x746F ;?ICS?lstr66_FirmV_0_7_0+4
0x8BE5	0x726F ;?ICS?lstr66_FirmV_0_7_0+6
0x8BE7	0x2073 ;?ICS?lstr66_FirmV_0_7_0+8
0x8BE9	0x7453 ;?ICS?lstr66_FirmV_0_7_0+10
0x8BEB	0x706F ;?ICS?lstr66_FirmV_0_7_0+12
0x8BED	0x6465 ;?ICS?lstr66_FirmV_0_7_0+14
0x8BEF	0x2820 ;?ICS?lstr66_FirmV_0_7_0+16
0x8BF1	0x6552 ;?ICS?lstr66_FirmV_0_7_0+18
0x8BF3	0x6F6D ;?ICS?lstr66_FirmV_0_7_0+20
0x8BF5	0x6574 ;?ICS?lstr66_FirmV_0_7_0+22
0x8BF7	0x0029 ;?ICS?lstr66_FirmV_0_7_0+24
; end of ?ICS?lstr66_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr67_FirmV_0_7_0
0x8BF9	0x3853 ;?ICS?lstr67_FirmV_0_7_0+0
0x8BFB	0x4C20 ;?ICS?lstr67_FirmV_0_7_0+2
0x8BFD	0x6D69 ;?ICS?lstr67_FirmV_0_7_0+4
0x8BFF	0x7469 ;?ICS?lstr67_FirmV_0_7_0+6
0x8C01	0x5320 ;?ICS?lstr67_FirmV_0_7_0+8
0x8C03	0x6977 ;?ICS?lstr67_FirmV_0_7_0+10
0x8C05	0x6374 ;?ICS?lstr67_FirmV_0_7_0+12
0x8C07	0x2068 ;?ICS?lstr67_FirmV_0_7_0+14
0x8C09	0x7453 ;?ICS?lstr67_FirmV_0_7_0+16
0x8C0B	0x706F ;?ICS?lstr67_FirmV_0_7_0+18
0x8C0D	0x00 ;?ICS?lstr67_FirmV_0_7_0+20
; end of ?ICS?lstr67_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr68_FirmV_0_7_0
0x8C0E	0x3853 ;?ICS?lstr68_FirmV_0_7_0+0
0x8C10	0x4120 ;?ICS?lstr68_FirmV_0_7_0+2
0x8C12	0x7475 ;?ICS?lstr68_FirmV_0_7_0+4
0x8C14	0x636F ;?ICS?lstr68_FirmV_0_7_0+6
0x8C16	0x6F6C ;?ICS?lstr68_FirmV_0_7_0+8
0x8C18	0x6573 ;?ICS?lstr68_FirmV_0_7_0+10
0x8C1A	0x5220 ;?ICS?lstr68_FirmV_0_7_0+12
0x8C1C	0x6E65 ;?ICS?lstr68_FirmV_0_7_0+14
0x8C1E	0x7765 ;?ICS?lstr68_FirmV_0_7_0+16
0x8C20	0x6465 ;?ICS?lstr68_FirmV_0_7_0+18
0x8C22	0x00 ;?ICS?lstr68_FirmV_0_7_0+20
; end of ?ICS?lstr68_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr45_FirmV_0_7_0
0x8C23	0x3753 ;?ICS?lstr45_FirmV_0_7_0+0
0x8C25	0x4D20 ;?ICS?lstr45_FirmV_0_7_0+2
0x8C27	0x746F ;?ICS?lstr45_FirmV_0_7_0+4
0x8C29	0x726F ;?ICS?lstr45_FirmV_0_7_0+6
0x8C2B	0x5331 ;?ICS?lstr45_FirmV_0_7_0+8
0x8C2D	0x6174 ;?ICS?lstr45_FirmV_0_7_0+10
0x8C2F	0x7472 ;?ICS?lstr45_FirmV_0_7_0+12
0x8C31	0x00 ;?ICS?lstr45_FirmV_0_7_0+14
; end of ?ICS?lstr45_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr46_FirmV_0_7_0
0x8C32	0x3753 ;?ICS?lstr46_FirmV_0_7_0+0
0x8C34	0x4D20 ;?ICS?lstr46_FirmV_0_7_0+2
0x8C36	0x746F ;?ICS?lstr46_FirmV_0_7_0+4
0x8C38	0x726F ;?ICS?lstr46_FirmV_0_7_0+6
0x8C3A	0x5332 ;?ICS?lstr46_FirmV_0_7_0+8
0x8C3C	0x6174 ;?ICS?lstr46_FirmV_0_7_0+10
0x8C3E	0x7472 ;?ICS?lstr46_FirmV_0_7_0+12
0x8C40	0x00 ;?ICS?lstr46_FirmV_0_7_0+14
; end of ?ICS?lstr46_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr47_FirmV_0_7_0
0x8C41	0x3753 ;?ICS?lstr47_FirmV_0_7_0+0
0x8C43	0x4D20 ;?ICS?lstr47_FirmV_0_7_0+2
0x8C45	0x2031 ;?ICS?lstr47_FirmV_0_7_0+4
0x8C47	0x764F ;?ICS?lstr47_FirmV_0_7_0+6
0x8C49	0x7265 ;?ICS?lstr47_FirmV_0_7_0+8
0x8C4B	0x6F6C ;?ICS?lstr47_FirmV_0_7_0+10
0x8C4D	0x6461 ;?ICS?lstr47_FirmV_0_7_0+12
0x8C4F	0x4320 ;?ICS?lstr47_FirmV_0_7_0+14
0x8C51	0x6568 ;?ICS?lstr47_FirmV_0_7_0+16
0x8C53	0x6B63 ;?ICS?lstr47_FirmV_0_7_0+18
0x8C55	0x00 ;?ICS?lstr47_FirmV_0_7_0+20
; end of ?ICS?lstr47_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr48_FirmV_0_7_0
0x8C56	0x3753 ;?ICS?lstr48_FirmV_0_7_0+0
0x8C58	0x4D20 ;?ICS?lstr48_FirmV_0_7_0+2
0x8C5A	0x2032 ;?ICS?lstr48_FirmV_0_7_0+4
0x8C5C	0x764F ;?ICS?lstr48_FirmV_0_7_0+6
0x8C5E	0x7265 ;?ICS?lstr48_FirmV_0_7_0+8
0x8C60	0x6F6C ;?ICS?lstr48_FirmV_0_7_0+10
0x8C62	0x6461 ;?ICS?lstr48_FirmV_0_7_0+12
0x8C64	0x4320 ;?ICS?lstr48_FirmV_0_7_0+14
0x8C66	0x6568 ;?ICS?lstr48_FirmV_0_7_0+16
0x8C68	0x6B63 ;?ICS?lstr48_FirmV_0_7_0+18
0x8C6A	0x00 ;?ICS?lstr48_FirmV_0_7_0+20
; end of ?ICS?lstr48_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr49_FirmV_0_7_0
0x8C6B	0x3753 ;?ICS?lstr49_FirmV_0_7_0+0
0x8C6D	0x4D20 ;?ICS?lstr49_FirmV_0_7_0+2
0x8C6F	0x2031 ;?ICS?lstr49_FirmV_0_7_0+4
0x8C71	0x7053 ;?ICS?lstr49_FirmV_0_7_0+6
0x8C73	0x6565 ;?ICS?lstr49_FirmV_0_7_0+8
0x8C75	0x2064 ;?ICS?lstr49_FirmV_0_7_0+10
0x8C77	0x5055 ;?ICS?lstr49_FirmV_0_7_0+12
0x8C79	0x00 ;?ICS?lstr49_FirmV_0_7_0+14
; end of ?ICS?lstr49_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr50_FirmV_0_7_0
0x8C7A	0x3753 ;?ICS?lstr50_FirmV_0_7_0+0
0x8C7C	0x4D20 ;?ICS?lstr50_FirmV_0_7_0+2
0x8C7E	0x2032 ;?ICS?lstr50_FirmV_0_7_0+4
0x8C80	0x7053 ;?ICS?lstr50_FirmV_0_7_0+6
0x8C82	0x6565 ;?ICS?lstr50_FirmV_0_7_0+8
0x8C84	0x2064 ;?ICS?lstr50_FirmV_0_7_0+10
0x8C86	0x5055 ;?ICS?lstr50_FirmV_0_7_0+12
0x8C88	0x00 ;?ICS?lstr50_FirmV_0_7_0+14
; end of ?ICS?lstr50_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr51_FirmV_0_7_0
0x8C89	0x3753 ;?ICS?lstr51_FirmV_0_7_0+0
0x8C8B	0x4D20 ;?ICS?lstr51_FirmV_0_7_0+2
0x8C8D	0x2031 ;?ICS?lstr51_FirmV_0_7_0+4
0x8C8F	0x7453 ;?ICS?lstr51_FirmV_0_7_0+6
0x8C91	0x706F ;?ICS?lstr51_FirmV_0_7_0+8
0x8C93	0x6465 ;?ICS?lstr51_FirmV_0_7_0+10
0x8C95	0x00 ;?ICS?lstr51_FirmV_0_7_0+12
; end of ?ICS?lstr51_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr52_FirmV_0_7_0
0x8C96	0x3753 ;?ICS?lstr52_FirmV_0_7_0+0
0x8C98	0x4D20 ;?ICS?lstr52_FirmV_0_7_0+2
0x8C9A	0x2032 ;?ICS?lstr52_FirmV_0_7_0+4
0x8C9C	0x7453 ;?ICS?lstr52_FirmV_0_7_0+6
0x8C9E	0x706F ;?ICS?lstr52_FirmV_0_7_0+8
0x8CA0	0x6465 ;?ICS?lstr52_FirmV_0_7_0+10
0x8CA2	0x00 ;?ICS?lstr52_FirmV_0_7_0+12
; end of ?ICS?lstr52_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr53_FirmV_0_7_0
0x8CA3	0x3753 ;?ICS?lstr53_FirmV_0_7_0+0
0x8CA5	0x5020 ;?ICS?lstr53_FirmV_0_7_0+2
0x8CA7	0x6F68 ;?ICS?lstr53_FirmV_0_7_0+4
0x8CA9	0x6F74 ;?ICS?lstr53_FirmV_0_7_0+6
0x8CAB	0x6563 ;?ICS?lstr53_FirmV_0_7_0+8
0x8CAD	0x6C6C ;?ICS?lstr53_FirmV_0_7_0+10
0x8CAF	0x4920 ;?ICS?lstr53_FirmV_0_7_0+12
0x8CB1	0x746E ;?ICS?lstr53_FirmV_0_7_0+14
0x8CB3	0x00 ;?ICS?lstr53_FirmV_0_7_0+16
; end of ?ICS?lstr53_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr54_FirmV_0_7_0
0x8CB4	0x3753 ;?ICS?lstr54_FirmV_0_7_0+0
0x8CB6	0x5220 ;?ICS?lstr54_FirmV_0_7_0+2
0x8CB8	0x6D65 ;?ICS?lstr54_FirmV_0_7_0+4
0x8CBA	0x746F ;?ICS?lstr54_FirmV_0_7_0+6
0x8CBC	0x2065 ;?ICS?lstr54_FirmV_0_7_0+8
0x8CBE	0x7250 ;?ICS?lstr54_FirmV_0_7_0+10
0x8CC0	0x7365 ;?ICS?lstr54_FirmV_0_7_0+12
0x8CC2	0x6573 ;?ICS?lstr54_FirmV_0_7_0+14
0x8CC4	0x0064 ;?ICS?lstr54_FirmV_0_7_0+16
; end of ?ICS?lstr54_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr55_FirmV_0_7_0
0x8CC6	0x3753 ;?ICS?lstr55_FirmV_0_7_0+0
0x8CC8	0x4C20 ;?ICS?lstr55_FirmV_0_7_0+2
0x8CCA	0x6D69 ;?ICS?lstr55_FirmV_0_7_0+4
0x8CCC	0x7469 ;?ICS?lstr55_FirmV_0_7_0+6
0x8CCE	0x5320 ;?ICS?lstr55_FirmV_0_7_0+8
0x8CD0	0x6977 ;?ICS?lstr55_FirmV_0_7_0+10
0x8CD2	0x6374 ;?ICS?lstr55_FirmV_0_7_0+12
0x8CD4	0x2068 ;?ICS?lstr55_FirmV_0_7_0+14
0x8CD6	0x7453 ;?ICS?lstr55_FirmV_0_7_0+16
0x8CD8	0x706F ;?ICS?lstr55_FirmV_0_7_0+18
0x8CDA	0x00 ;?ICS?lstr55_FirmV_0_7_0+20
; end of ?ICS?lstr55_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr56_FirmV_0_7_0
0x8CDB	0x3753 ;?ICS?lstr56_FirmV_0_7_0+0
0x8CDD	0x4120 ;?ICS?lstr56_FirmV_0_7_0+2
0x8CDF	0x7475 ;?ICS?lstr56_FirmV_0_7_0+4
0x8CE1	0x636F ;?ICS?lstr56_FirmV_0_7_0+6
0x8CE3	0x6F6C ;?ICS?lstr56_FirmV_0_7_0+8
0x8CE5	0x6573 ;?ICS?lstr56_FirmV_0_7_0+10
0x8CE7	0x5220 ;?ICS?lstr56_FirmV_0_7_0+12
0x8CE9	0x6E65 ;?ICS?lstr56_FirmV_0_7_0+14
0x8CEB	0x7765 ;?ICS?lstr56_FirmV_0_7_0+16
0x8CED	0x6465 ;?ICS?lstr56_FirmV_0_7_0+18
0x8CEF	0x00 ;?ICS?lstr56_FirmV_0_7_0+20
; end of ?ICS?lstr56_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr3_FirmV_0_7_0
0x8CF0	0x6C43 ;?ICS?lstr3_FirmV_0_7_0+0
0x8CF2	0x736F ;?ICS?lstr3_FirmV_0_7_0+2
0x8CF4	0x2065 ;?ICS?lstr3_FirmV_0_7_0+4
0x8CF6	0x6661 ;?ICS?lstr3_FirmV_0_7_0+6
0x8CF8	0x6574 ;?ICS?lstr3_FirmV_0_7_0+8
0x8CFA	0x0072 ;?ICS?lstr3_FirmV_0_7_0+10
; end of ?ICS?lstr3_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr4_FirmV_0_7_0
0x8CFC	0x3253 ;?ICS?lstr4_FirmV_0_7_0+0
0x8CFE	0x4120 ;?ICS?lstr4_FirmV_0_7_0+2
0x8D00	0x7475 ;?ICS?lstr4_FirmV_0_7_0+4
0x8D02	0x206F ;?ICS?lstr4_FirmV_0_7_0+6
0x8D04	0x6C43 ;?ICS?lstr4_FirmV_0_7_0+8
0x8D06	0x736F ;?ICS?lstr4_FirmV_0_7_0+10
0x8D08	0x2065 ;?ICS?lstr4_FirmV_0_7_0+12
0x8D0A	0x6544 ;?ICS?lstr4_FirmV_0_7_0+14
0x8D0C	0x656C ;?ICS?lstr4_FirmV_0_7_0+16
0x8D0E	0x6574 ;?ICS?lstr4_FirmV_0_7_0+18
0x8D10	0x0064 ;?ICS?lstr4_FirmV_0_7_0+20
; end of ?ICS?lstr4_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr5_FirmV_0_7_0
0x8D12	0x3253 ;?ICS?lstr5_FirmV_0_7_0+0
0x8D14	0x4920 ;?ICS?lstr5_FirmV_0_7_0+2
0x8D16	0x736E ;?ICS?lstr5_FirmV_0_7_0+4
0x8D18	0x7265 ;?ICS?lstr5_FirmV_0_7_0+6
0x8D1A	0x2074 ;?ICS?lstr5_FirmV_0_7_0+8
0x8D1C	0x2039 ;?ICS?lstr5_FirmV_0_7_0+10
0x8D1E	0x7461 ;?ICS?lstr5_FirmV_0_7_0+12
0x8D20	0x003A ;?ICS?lstr5_FirmV_0_7_0+14
; end of ?ICS?lstr5_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr6_FirmV_0_7_0
0x8D22	0x3253 ;?ICS?lstr6_FirmV_0_7_0+0
0x8D24	0x4920 ;?ICS?lstr6_FirmV_0_7_0+2
0x8D26	0x736E ;?ICS?lstr6_FirmV_0_7_0+4
0x8D28	0x7265 ;?ICS?lstr6_FirmV_0_7_0+6
0x8D2A	0x2074 ;?ICS?lstr6_FirmV_0_7_0+8
0x8D2C	0x2039 ;?ICS?lstr6_FirmV_0_7_0+10
0x8D2E	0x7461 ;?ICS?lstr6_FirmV_0_7_0+12
0x8D30	0x003A ;?ICS?lstr6_FirmV_0_7_0+14
; end of ?ICS?lstr6_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICSState2_delay_L0
0x8D32	0x02 ;?ICSState2_delay_L0+0
; end of ?ICSState2_delay_L0
;FirmV_0_7_0.c,0 :: ?ICSState2_PrevAC_L0
0x8D33	0x00 ;?ICSState2_PrevAC_L0+0
; end of ?ICSState2_PrevAC_L0
;FirmV_0_7_0.c,0 :: ?ICS?lstr42_FirmV_0_7_0
0x8D34	0x3653 ;?ICS?lstr42_FirmV_0_7_0+0
0x8D36	0x4120 ;?ICS?lstr42_FirmV_0_7_0+2
0x8D38	0x7475 ;?ICS?lstr42_FirmV_0_7_0+4
0x8D3A	0x206F ;?ICS?lstr42_FirmV_0_7_0+6
0x8D3C	0x6C43 ;?ICS?lstr42_FirmV_0_7_0+8
0x8D3E	0x736F ;?ICS?lstr42_FirmV_0_7_0+10
0x8D40	0x2065 ;?ICS?lstr42_FirmV_0_7_0+12
0x8D42	0x6544 ;?ICS?lstr42_FirmV_0_7_0+14
0x8D44	0x656C ;?ICS?lstr42_FirmV_0_7_0+16
0x8D46	0x6574 ;?ICS?lstr42_FirmV_0_7_0+18
0x8D48	0x0064 ;?ICS?lstr42_FirmV_0_7_0+20
; end of ?ICS?lstr42_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr43_FirmV_0_7_0
0x8D4A	0x3653 ;?ICS?lstr43_FirmV_0_7_0+0
0x8D4C	0x4920 ;?ICS?lstr43_FirmV_0_7_0+2
0x8D4E	0x736E ;?ICS?lstr43_FirmV_0_7_0+4
0x8D50	0x7265 ;?ICS?lstr43_FirmV_0_7_0+6
0x8D52	0x2074 ;?ICS?lstr43_FirmV_0_7_0+8
0x8D54	0x2039 ;?ICS?lstr43_FirmV_0_7_0+10
0x8D56	0x7461 ;?ICS?lstr43_FirmV_0_7_0+12
0x8D58	0x003A ;?ICS?lstr43_FirmV_0_7_0+14
; end of ?ICS?lstr43_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr44_FirmV_0_7_0
0x8D5A	0x3653 ;?ICS?lstr44_FirmV_0_7_0+0
0x8D5C	0x4920 ;?ICS?lstr44_FirmV_0_7_0+2
0x8D5E	0x736E ;?ICS?lstr44_FirmV_0_7_0+4
0x8D60	0x7265 ;?ICS?lstr44_FirmV_0_7_0+6
0x8D62	0x2074 ;?ICS?lstr44_FirmV_0_7_0+8
0x8D64	0x2039 ;?ICS?lstr44_FirmV_0_7_0+10
0x8D66	0x7461 ;?ICS?lstr44_FirmV_0_7_0+12
0x8D68	0x003A ;?ICS?lstr44_FirmV_0_7_0+14
; end of ?ICS?lstr44_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICSState6_delay_L0
0x8D6A	0x03 ;?ICSState6_delay_L0+0
; end of ?ICSState6_delay_L0
;FirmV_0_7_0.c,0 :: ?ICS?lstr39_FirmV_0_7_0
0x8D6B	0x3553 ;?ICS?lstr39_FirmV_0_7_0+0
0x8D6D	0x4120 ;?ICS?lstr39_FirmV_0_7_0+2
0x8D6F	0x7475 ;?ICS?lstr39_FirmV_0_7_0+4
0x8D71	0x206F ;?ICS?lstr39_FirmV_0_7_0+6
0x8D73	0x6C43 ;?ICS?lstr39_FirmV_0_7_0+8
0x8D75	0x736F ;?ICS?lstr39_FirmV_0_7_0+10
0x8D77	0x2065 ;?ICS?lstr39_FirmV_0_7_0+12
0x8D79	0x6544 ;?ICS?lstr39_FirmV_0_7_0+14
0x8D7B	0x656C ;?ICS?lstr39_FirmV_0_7_0+16
0x8D7D	0x6574 ;?ICS?lstr39_FirmV_0_7_0+18
0x8D7F	0x0064 ;?ICS?lstr39_FirmV_0_7_0+20
; end of ?ICS?lstr39_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr40_FirmV_0_7_0
0x8D81	0x3553 ;?ICS?lstr40_FirmV_0_7_0+0
0x8D83	0x4920 ;?ICS?lstr40_FirmV_0_7_0+2
0x8D85	0x736E ;?ICS?lstr40_FirmV_0_7_0+4
0x8D87	0x7265 ;?ICS?lstr40_FirmV_0_7_0+6
0x8D89	0x2074 ;?ICS?lstr40_FirmV_0_7_0+8
0x8D8B	0x2039 ;?ICS?lstr40_FirmV_0_7_0+10
0x8D8D	0x7461 ;?ICS?lstr40_FirmV_0_7_0+12
0x8D8F	0x003A ;?ICS?lstr40_FirmV_0_7_0+14
; end of ?ICS?lstr40_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr41_FirmV_0_7_0
0x8D91	0x3553 ;?ICS?lstr41_FirmV_0_7_0+0
0x8D93	0x4920 ;?ICS?lstr41_FirmV_0_7_0+2
0x8D95	0x736E ;?ICS?lstr41_FirmV_0_7_0+4
0x8D97	0x7265 ;?ICS?lstr41_FirmV_0_7_0+6
0x8D99	0x2074 ;?ICS?lstr41_FirmV_0_7_0+8
0x8D9B	0x2039 ;?ICS?lstr41_FirmV_0_7_0+10
0x8D9D	0x7461 ;?ICS?lstr41_FirmV_0_7_0+12
0x8D9F	0x003A ;?ICS?lstr41_FirmV_0_7_0+14
; end of ?ICS?lstr41_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICSState5_delay_L0
0x8DA1	0x02 ;?ICSState5_delay_L0+0
; end of ?ICSState5_delay_L0
;FirmV_0_7_0.c,0 :: ?ICS?lstr109_FirmV_0_7_0
0x8DA2	0x4C20 ;?ICS?lstr109_FirmV_0_7_0+0
0x8DA4	0x6165 ;?ICS?lstr109_FirmV_0_7_0+2
0x8DA6	0x6E72 ;?ICS?lstr109_FirmV_0_7_0+4
0x8DA8	0x4320 ;?ICS?lstr109_FirmV_0_7_0+6
0x8DAA	0x6D6F ;?ICS?lstr109_FirmV_0_7_0+8
0x8DAC	0x6C70 ;?ICS?lstr109_FirmV_0_7_0+10
0x8DAE	0x7465 ;?ICS?lstr109_FirmV_0_7_0+12
0x8DB0	0x2065 ;?ICS?lstr109_FirmV_0_7_0+14
0x8DB2	0x00 ;?ICS?lstr109_FirmV_0_7_0+16
; end of ?ICS?lstr109_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr110_FirmV_0_7_0
0x8DB3	0x2020 ;?ICS?lstr110_FirmV_0_7_0+0
0x8DB5	0x2020 ;?ICS?lstr110_FirmV_0_7_0+2
0x8DB7	0x5220 ;?ICS?lstr110_FirmV_0_7_0+4
0x8DB9	0x6165 ;?ICS?lstr110_FirmV_0_7_0+6
0x8DBB	0x7964 ;?ICS?lstr110_FirmV_0_7_0+8
0x8DBD	0x2020 ;?ICS?lstr110_FirmV_0_7_0+10
0x8DBF	0x2020 ;?ICS?lstr110_FirmV_0_7_0+12
0x8DC1	0x2020 ;?ICS?lstr110_FirmV_0_7_0+14
0x8DC3	0x00 ;?ICS?lstr110_FirmV_0_7_0+16
; end of ?ICS?lstr110_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr107_FirmV_0_7_0
0x8DC4	0x4C20 ;?ICS?lstr107_FirmV_0_7_0+0
0x8DC6	0x6165 ;?ICS?lstr107_FirmV_0_7_0+2
0x8DC8	0x6E72 ;?ICS?lstr107_FirmV_0_7_0+4
0x8DCA	0x4320 ;?ICS?lstr107_FirmV_0_7_0+6
0x8DCC	0x6D6F ;?ICS?lstr107_FirmV_0_7_0+8
0x8DCE	0x6C70 ;?ICS?lstr107_FirmV_0_7_0+10
0x8DD0	0x7465 ;?ICS?lstr107_FirmV_0_7_0+12
0x8DD2	0x2065 ;?ICS?lstr107_FirmV_0_7_0+14
0x8DD4	0x00 ;?ICS?lstr107_FirmV_0_7_0+16
; end of ?ICS?lstr107_FirmV_0_7_0
;FirmV_0_7_0.c,0 :: ?ICS?lstr108_FirmV_0_7_0
0x8DD5	0x2020 ;?ICS?lstr108_FirmV_0_7_0+0
0x8DD7	0x2020 ;?ICS?lstr108_FirmV_0_7_0+2
0x8DD9	0x5220 ;?ICS?lstr108_FirmV_0_7_0+4
0x8DDB	0x6165 ;?ICS?lstr108_FirmV_0_7_0+6
0x8DDD	0x7964 ;?ICS?lstr108_FirmV_0_7_0+8
0x8DDF	0x2020 ;?ICS?lstr108_FirmV_0_7_0+10
0x8DE1	0x2020 ;?ICS?lstr108_FirmV_0_7_0+12
0x8DE3	0x2020 ;?ICS?lstr108_FirmV_0_7_0+14
0x8DE5	0x00 ;?ICS?lstr108_FirmV_0_7_0+16
; end of ?ICS?lstr108_FirmV_0_7_0
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008     [334]    _interrupt
0x0156      [14]    _UART1_Write
0x0164      [18]    _SPI1_Write
0x0176      [24]    _____DoIFC
0x018E      [54]    _Div_16x16_U
0x01C4      [30]    _Div_8x8_U
0x01E2      [56]    _EEPROM_Write
0x021A      [80]    _memcpy
0x026A     [146]    _WordToStr
0x02FC     [116]    _ByteToStr
0x0370     [982]    _SetOverloadParams
0x0746     [748]    _Div_32x32_U
0x0A32      [26]    _UART_Write
0x0A4C      [10]    _Delay_22us
0x0A56      [16]    ___CC2DW
0x0A66     [198]    _LongWordToStrWithZeros
0x0B2C      [54]    _UART1_Write_Text
0x0B62      [52]    _UART_Write_Text
0x0B96      [26]    _I2C1_Is_Idle
0x0BB0      [80]    _Mul_16x16_U
0x0C00     [146]    _charValueToStr
0x0C92      [20]    _EEPROM_Read
0x0CA6     [170]    _intValueToStr
0x0D50     [422]    _SaveConfigs
0x0EF6     [326]    _LoadConfigs
0x103C     [272]    _AutoLearnCalculator
0x114C      [30]    _StopMotor
0x116A     [230]    _AddTask
0x1250      [64]    _CheckTask
0x1290      [66]    _I2C1_Start
0x12D2     [102]    _Logger
0x1338     [198]    _GetAutocloseTime
0x13FE     [186]    _ReturnAutoclose
0x14B8     [148]    _ClearTasks
0x154C     [384]    _SaveLearnData
0x16CC      [38]    _OverloadInit
0x16F2     [114]    _FactorySettings
0x1764    [3088]    _Menu0
0x2374      [32]    _SetMotorSpeed
0x2394     [110]    _StartMotor
0x2402      [34]    _I2C1_Wr
0x2424       [4]    _I2C1_Stop
0x2428      [82]    _charValueToStr_AC
0x247A      [56]    _ADC_Read
0x24B2      [20]    _GetLimitSwitchState
0x24C6      [22]    _GetExternalKeysState
0x24DC     [148]    _WordToStrWithZeros
0x2570     [312]    _GetKeysState
0x26A8     [138]    _LCD_out
0x2732      [72]    _GetRemoteState
0x277A     [126]    _SetContrast
0x27F8     [178]    _About
0x28AA     [224]    _LCD_Init
0x298A      [22]    _I2C1_Init
0x29A0    [1328]    _Menu2
0x2ED0     [156]    _Menu1
0x2F6C      [88]    _UART1_Init
0x2FC4     [268]    _GetOverloadState
0x30D0    [2110]    _State7
0x390E    [1164]    _LearnAuto
0x3D9A      [10]    _Menu3
0x3DA4    [2610]    _State4
0x47D6    [1612]    _State6
0x4E22    [2542]    _State2
0x5810    [1284]    _State5
0x5D14    [1564]    _State1
0x6330      [32]    _GetPhotocellState
0x6350    [1520]    _LearnManual
0x6940      [72]    _State00
0x6988    [2072]    _State8
0x71A0    [2630]    _State3
0x7BE6     [268]    _Init
0x7CF2     [614]    _TorqueLogger
0x7F58     [502]    _EventHandler
0x814E     [210]    _StateManager
0x8220     [238]    _TaskManager
0x830E      [98]    _Decrypt
0x8370     [270]    _LCDUpdater
0x847E      [10]    _ResetTaskEvents
0x8488     [268]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0000       [1]    R0
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    UART1_Init_tmp_L0
0x0001       [1]    ispunct_rslt_L0
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0001       [1]    FLASH_Write_64_i_L0
0x0001       [1]    I2C1_Rd_tmp_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [1]    R1
0x0002       [2]    strlen_cp_L0
0x0002       [1]    FLASH_Write_64_SaveINTCON_L0
0x0002       [1]    R2
0x0002       [2]    memchr_s_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    memset_pp_L0
0x0003       [2]    memmove_tt_L0
0x0003       [1]    MM_Init_i_L0
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [2]    MM_TotalFreeMemSize_Tot_L0
0x0003       [1]    R3
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    frexp_pom_L0
0x0004       [1]    R4
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    __Lib_MemManager_MM_GetMemAlign_P_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    strncpy_cp_L0
0x0005       [1]    MM_TotalFreeMemSize_i_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [1]    R5
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [2]    memmove_ff_L0
0x0005       [2]    Ltrim_p_L0
0x0006       [1]    R6
0x0006       [1]    __Lib_MemManager_MM_GetMemAlign_i_L0
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x001A       [1]    _OverloadSens2
0x001B       [1]    _LCDFlashFlag
0x001C       [1]    _LongBuzzFlag
0x001D       [1]    _LCDFlash
0x001E       [1]    _MenuPointer
0x001F       [1]    _LearningMode
0x0020       [1]    _OverloadSens1
0x0021       [1]    __AC
0x0022       [1]    _ms20A
0x0023       [1]    _msCounter
0x0024       [1]    _Flag20ms
0x0025       [1]    _RemotePulse1
0x0026       [1]    _ZCCounter
0x0027       [1]    _RemotePulse2
0x0028       [1]    _BuzzCounter
0x0029       [1]    _Flag500ms
0x002A       [1]    _PhotocellCount
0x002B       [1]    _RemoteAFlag
0x002C       [1]    _RemoteBFlag
0x002D       [1]    _Pressed
0x002E      [96]    _crypto
0x008E       [1]    _AboutCounter
0x008F       [1]    _DebouncingDelay
0x0090       [1]    _KeyFlag
0x0091      [17]    __Blank
0x00A2       [1]    _LCDUpdateFlag
0x00A3      [17]    _LCDLine2
0x00B4       [1]    _LCDLines
0x00B5       [1]    _Motor1FullSpeed
0x00B6       [1]    _OverloadCheckFlag2
0x00B7       [1]    _M2isSlow
0x00B8       [1]    _Motor2FullSpeed
0x00B9       [1]    _OverloadCheckFlag1
0x00BA       [1]    _M1isSlow
0x00BB       [1]    GetKeysState_RepeatSpeed_L0
0x00BC       [1]    _FlashFlag
0x00BD      [17]    _LCDLine1
0x00CE      [17]    __opening
0x00DF       [1]    _Motor1Start
0x00E0       [1]    _Motor2Start
0x00E1       [1]    _OpenDone
0x00E2      [17]    __autoclose
0x00F3      [17]    __closing
0x0104       [4]    _ms500
0x0108       [1]    _PassFlag
0x0109      [17]    __open
0x011A       [2]    _OverloadCounter2
0x011C       [1]    _BuzzFlag
0x011D       [2]    _OverloadCounter1
0x011F       [1]    _CloseDone
0x0120       [1]    _PhotocellOpenFlag
0x0121      [17]    __close
0x0132       [1]    _ActiveDoors
0x0133      [17]    __errPhoto
0x0144       [1]    _State
0x0145      [17]    __errOverload
0x0156      [17]    __stop
0x0167      [17]    __errRemote
0x0178      [17]    __errLimit
0x0189       [2]    _OverloadTreshold1
0x018B       [2]    _OverloadDuration1
0x018D       [2]    _OverloadTreshold2
0x018F       [1]    _LockForce
0x0190       [1]    _OverloadTime1
0x0191       [1]    _OverloadTime2
0x0192      [16]    _Sipher
0x01A2       [2]    _OverloadDuration2
0x01A4       [1]    _OpenSoftStartTime
0x01A5       [1]    _OpenSoftStopTime
0x01A6       [1]    _CloseSoftStartTime
0x01A7       [1]    _Door2CloseTime
0x01A8     [140]    _Tasks
0x0234       [1]    _Door1OpenTime
0x0235       [1]    _Door1CloseTime
0x0236      [11]    _t
0x0241       [1]    _CloseAfterPass
0x0242       [1]    _CloseSoftStopTime
0x0243       [4]    _temp
0x0247       [1]    _ActionTimeDiff
0x0248       [1]    _ms20B
0x0249       [4]    _UART_Rdy_Ptr
0x024D       [4]    _UART_Rd_Ptr
0x0251       [4]    _UART_Wr_Ptr
0x0255       [4]    _UART_Tx_Idle_Ptr
0x0259       [2]    _VCapM2
0x025B       [2]    _VCapM1
0x025D       [1]    LCDUpdater_UpdateWhenFlashing_L0
0x025E       [1]    LCDUpdater_LastLCDFlashState_L0
0x025F       [1]    LCDUpdater_line_L0
0x0260       [4]    GetKeysState_PressTime_L0
0x0264       [1]    GetKeysState_Repeat_L0
0x0265       [1]    LearnAuto_DoorNo_L0
0x0266       [4]    LearnAuto_startT_L0
0x026A      [12]    LearnAuto_RawData_L0
0x0276      [12]    LearnManual_RawData_L0
0x0282       [1]    GetKeysState_RepeatCount_L0
0x0283       [4]    LearnManual_t3_L0
0x0287       [4]    LearnManual_t2_L0
0x028B       [4]    LearnManual_t1_L0
0x028F       [4]    LearnManual_t4_L0
0x0293       [1]    LearnManual_DoorNo_L0
0x0294       [1]    GetKeysState_RepeatRate_L0
0x0295       [2]    _AutoCloseTime
0x0297       [1]    _LearnPhase
0x0298       [1]    _Door2OpenTime
0x0299       [1]    _OpenPhEnable
0x029A       [9]    _Events
0x02A3       [1]    _LockEnable
0x02A4       [1]    _LimiterEnable
0x02A5      [10]    ?lstr2_FirmV_0_7_0
0x02AF       [1]    EventHandler_i_L0
0x02AF       [1]    TaskManager_i_L0
0x02AF      [10]    TorqueLogger_txt_L0
0x02AF       [1]    Init_i_L0
0x02AF      [16]    LCDUpdater_LCDLineTemp_L0
0x02BF       [1]    GetRemoteState_res_L0
0x02BF       [1]    FARG_SetContrast_val
0x02BF      [15]    ?lstr7_FirmV_0_7_0
0x02BF       [1]    GetExternalKeysState_out_L0
0x02BF       [2]    FARG_WordToStrWithZeros_input
0x02BF      [15]    ?lstr23_FirmV_0_7_0
0x02BF      [22]    ?lstr39_FirmV_0_7_0
0x02BF       [1]    GetOverloadState_res_L0
0x02BF       [4]    FARG_I2C1_Init_clock
0x02BF      [22]    ?lstr42_FirmV_0_7_0
0x02BF      [15]    ?lstr57_FirmV_0_7_0
0x02BF      [17]    ?lstr107_FirmV_0_7_0
0x02BF       [1]    FARG_LCD_Init_lines
0x02BF      [17]    ?lstr109_FirmV_0_7_0
0x02BF       [1]    State1_delay_L0
0x02BF       [1]    FARG_LCD_out_line
0x02BF       [1]    GetKeysState_fin_L0
0x02BF      [15]    ?lstr45_FirmV_0_7_0
0x02BF      [12]    ?lstr3_FirmV_0_7_0
0x02C0       [1]    FARG_LCD_out_offset
0x02C0       [1]    SetContrast_valh_L0
0x02C0       [2]    GetKeysState_res_L0
0x02C0       [4]    State1_AutoCloseTemp_L0
0x02C1       [1]    SetContrast_vall_L0
0x02C1       [2]    FARG_LCD_out_dat
0x02C1       [2]    FARG_WordToStrWithZeros_output
0x02C2       [1]    GetKeysState_resch_L0
0x02C3       [1]    LCD_out_i_L0
0x02C3       [1]    WordToStrWithZeros_len_L0
0x02C4       [2]    FLOC__WordToStrWithZeros
0x02C4       [1]    LCD_out_add_L0
0x02CB      [22]    ?lstr4_FirmV_0_7_0
0x02CE      [15]    ?lstr24_FirmV_0_7_0
0x02CE      [15]    ?lstr58_FirmV_0_7_0
0x02CE      [15]    ?lstr8_FirmV_0_7_0
0x02CE      [15]    ?lstr46_FirmV_0_7_0
0x02D0      [17]    ?lstr108_FirmV_0_7_0
0x02D0      [17]    ?lstr110_FirmV_0_7_0
0x02D5      [16]    ?lstr40_FirmV_0_7_0
0x02D5      [16]    ?lstr43_FirmV_0_7_0
0x02DD      [22]    ?lstr59_FirmV_0_7_0
0x02DD      [21]    ?lstr25_FirmV_0_7_0
0x02DD      [21]    ?lstr47_FirmV_0_7_0
0x02DD      [15]    ?lstr9_FirmV_0_7_0
0x02E1      [16]    ?lstr5_FirmV_0_7_0
0x02E5      [16]    ?lstr41_FirmV_0_7_0
0x02E5      [16]    ?lstr44_FirmV_0_7_0
0x02EC      [15]    ?lstr10_FirmV_0_7_0
0x02F1      [16]    ?lstr6_FirmV_0_7_0
0x02F2      [21]    ?lstr48_FirmV_0_7_0
0x02F2      [21]    ?lstr26_FirmV_0_7_0
0x02F3      [22]    ?lstr60_FirmV_0_7_0
0x02F5       [1]    State6_delay_L0
0x02F5       [1]    State5_delay_L0
0x02FB      [15]    ?lstr11_FirmV_0_7_0
0x0301       [1]    State2_delay_L0
0x0302       [1]    State2_PrevAC_L0
0x0307      [15]    ?lstr49_FirmV_0_7_0
0x0307      [15]    ?lstr27_FirmV_0_7_0
0x0309      [15]    ?lstr61_FirmV_0_7_0
0x030A      [15]    ?lstr12_FirmV_0_7_0
0x0316      [17]    ?lstr28_FirmV_0_7_0
0x0316      [15]    ?lstr50_FirmV_0_7_0
0x0318      [15]    ?lstr62_FirmV_0_7_0
0x0319      [22]    ?lstr13_FirmV_0_7_0
0x0325      [13]    ?lstr51_FirmV_0_7_0
0x0327      [15]    ?lstr29_FirmV_0_7_0
0x0327      [15]    ?lstr63_FirmV_0_7_0
0x032F      [22]    ?lstr14_FirmV_0_7_0
0x0332      [13]    ?lstr52_FirmV_0_7_0
0x0336      [15]    ?lstr64_FirmV_0_7_0
0x0336      [17]    ?lstr30_FirmV_0_7_0
0x033F      [17]    ?lstr53_FirmV_0_7_0
0x0345      [15]    ?lstr15_FirmV_0_7_0
0x0345      [17]    ?lstr65_FirmV_0_7_0
0x0347      [13]    ?lstr31_FirmV_0_7_0
0x0350      [18]    ?lstr54_FirmV_0_7_0
0x0354      [13]    ?lstr32_FirmV_0_7_0
0x0354      [15]    ?lstr16_FirmV_0_7_0
0x0356      [26]    ?lstr66_FirmV_0_7_0
0x0361      [17]    ?lstr33_FirmV_0_7_0
0x0362      [21]    ?lstr55_FirmV_0_7_0
0x0363      [20]    ?lstr17_FirmV_0_7_0
0x0370      [21]    ?lstr67_FirmV_0_7_0
0x0372      [17]    ?lstr34_FirmV_0_7_0
0x0377      [20]    ?lstr18_FirmV_0_7_0
0x0377      [21]    ?lstr56_FirmV_0_7_0
0x0383      [17]    ?lstr35_FirmV_0_7_0
0x0385      [21]    ?lstr68_FirmV_0_7_0
0x038B      [17]    ?lstr19_FirmV_0_7_0
0x0394      [21]    ?lstr36_FirmV_0_7_0
0x039C      [17]    ?lstr20_FirmV_0_7_0
0x03A9      [18]    ?lstr37_FirmV_0_7_0
0x03AD      [23]    ?lstr21_FirmV_0_7_0
0x03BB      [21]    ?lstr38_FirmV_0_7_0
0x03C4      [21]    ?lstr22_FirmV_0_7_0
0x03D9       [4]    FARG_AddTask_OccTime
0x03D9       [2]    FARG_SaveLearnData_d
0x03D9       [1]    ReturnAutoclose_i_L0
0x03D9       [1]    FARG_StopMotor_Mx
0x03D9       [1]    FARG_StartMotor_Mx
0x03D9       [1]    FARG_ADC_Read_channel
0x03D9       [1]    FARG_ClearTasks_except
0x03D9       [1]    FARG_CheckTask_TaskCode
0x03D9       [2]    FARG_AutoLearnCalculator_raw
0x03D9       [1]    FARG_I2C1_Wr_data_
0x03D9       [2]    FARG_Logger_text
0x03D9       [1]    FARG_charValueToStr_AC_val
0x03D9       [2]    I2C1_Start_j_L0
0x03D9       [1]    GetAutocloseTime_i_L0
0x03D9       [1]    FARG_OverloadInit_ch
0x03D9       [1]    FARG_SetMotorSpeed_M1FullSpeed
0x03D9      [17]    ?lstr69_FirmV_0_7_0
0x03DA       [2]    FARG_charValueToStr_AC_string
0x03DA       [1]    FARG_StartMotor_Dir
0x03DA       [4]    ReturnAutoclose_t_L0
0x03DA       [4]    GetAutocloseTime_t_L0
0x03DA       [1]    ClearTasks_i_L0
0x03DA       [1]    FARG_SetMotorSpeed_M2FullSpeed
0x03DB       [1]    FARG_Logger_TimeStampFlag
0x03DB       [1]    FARG_SaveLearnData_DCount
0x03DC      [11]    Logger_time_L0
0x03DC       [4]    ?lstr113_FirmV_0_7_0
0x03DD       [1]    FARG_AddTask_tcode
0x03DE       [1]    AddTask_i_L0
0x03E7       [3]    ?lstr1_FirmV_0_7_0
0x03EA      [17]    ?lstr70_FirmV_0_7_0
0x03FB      [17]    ?lstr71_FirmV_0_7_0
0x040C      [17]    ?lstr72_FirmV_0_7_0
0x041D      [17]    ?lstr73_FirmV_0_7_0
0x042E      [17]    ?lstr74_FirmV_0_7_0
0x043F      [17]    ?lstr75_FirmV_0_7_0
0x0450      [17]    ?lstr76_FirmV_0_7_0
0x0461      [17]    ?lstr77_FirmV_0_7_0
0x0472      [17]    ?lstr78_FirmV_0_7_0
0x0483      [17]    ?lstr79_FirmV_0_7_0
0x0494      [17]    ?lstr80_FirmV_0_7_0
0x04A5      [17]    ?lstr81_FirmV_0_7_0
0x04B6       [7]    ?lstr82_FirmV_0_7_0
0x04BD       [7]    ?lstr83_FirmV_0_7_0
0x04C4      [17]    ?lstr84_FirmV_0_7_0
0x04D5       [7]    ?lstr85_FirmV_0_7_0
0x04DC       [7]    ?lstr86_FirmV_0_7_0
0x04E3      [17]    ?lstr87_FirmV_0_7_0
0x04F4      [17]    ?lstr88_FirmV_0_7_0
0x0505      [17]    ?lstr89_FirmV_0_7_0
0x0516      [17]    ?lstr90_FirmV_0_7_0
0x0527      [17]    ?lstr91_FirmV_0_7_0
0x0538      [17]    ?lstr92_FirmV_0_7_0
0x0549       [8]    ?lstr93_FirmV_0_7_0
0x0551       [9]    ?lstr94_FirmV_0_7_0
0x055A      [17]    ?lstr95_FirmV_0_7_0
0x056B       [8]    ?lstr96_FirmV_0_7_0
0x0573       [9]    ?lstr97_FirmV_0_7_0
0x057C      [17]    ?lstr98_FirmV_0_7_0
0x058D       [8]    ?lstr99_FirmV_0_7_0
0x0595       [9]    ?lstr100_FirmV_0_7_0
0x059E      [17]    ?lstr101_FirmV_0_7_0
0x05AF       [8]    ?lstr102_FirmV_0_7_0
0x05B7       [9]    ?lstr103_FirmV_0_7_0
0x05C0      [17]    ?lstr104_FirmV_0_7_0
0x05D1      [17]    ?lstr105_FirmV_0_7_0
0x05E2      [17]    ?lstr106_FirmV_0_7_0
0x05F3       [2]    FARG_UART_Write_Text_uart_text
0x05F3       [4]    FARG_LongWordToStrWithZeros_input
0x05F3       [2]    FARG_UART1_Write_Text_uart_text
0x05F3       [1]    FARG_charValueToStr_val
0x05F3       [2]    FARG_intValueToStr_val
0x05F3       [2]    FARG_EEPROM_Read_address
0x05F4       [2]    FARG_charValueToStr_string
0x05F5       [1]    UART_Write_Text_data__L0
0x05F5       [2]    FARG_intValueToStr_string
0x05F5       [1]    UART1_Write_Text_data__L0
0x05F6       [1]    UART_Write_Text_counter_L0
0x05F6       [4]    ?lstr111_FirmV_0_7_0
0x05F6       [1]    UART1_Write_Text_counter_L0
0x05F7       [4]    ?lstr114_FirmV_0_7_0
0x05F7       [2]    FARG_LongWordToStrWithZeros_output
0x05F9       [1]    LongWordToStrWithZeros_len_L0
0x05FA       [2]    FLOC__LongWordToStrWithZeros
0x05FA       [4]    ?lstr112_FirmV_0_7_0
0x05FB       [4]    ?lstr115_FirmV_0_7_0
0x05FF       [2]    FARG_memcpy_d1
0x05FF       [2]    FARG_WordToStr_input
0x05FF       [1]    FARG_ByteToStr_input
0x05FF       [1]    FARG_UART_Write__data
0x05FF       [2]    FARG_EEPROM_Write_address
0x05FF       [1]    FARG_SetOverloadParams_p1
0x0600       [1]    FARG_SetOverloadParams_d1
0x0600       [2]    FARG_ByteToStr_output
0x0601       [1]    FARG_SetOverloadParams_p2
0x0601       [1]    FARG_EEPROM_Write_data_
0x0601       [2]    FARG_memcpy_s1
0x0601       [2]    FARG_WordToStr_output
0x0602       [1]    FARG_SetOverloadParams_d2
0x0602       [1]    ByteToStr_DigitPos_L0
0x0603       [2]    FARG_memcpy_n
0x0603       [1]    WordToStr_len_L0
0x0603       [2]    FLOC__ByteToStr
0x0604       [2]    FLOC__WordToStr
0x0606       [1]    FARG_UART1_Write_data_
0x0606       [1]    FARG_SPI1_Write_data_
0x0F80       [0]    RA7_bit
0x0F80       [0]    SS_bit
0x0F80       [0]    HLVDIN_bit
0x0F80       [0]    RA1_bit
0x0F80       [0]    RA4_bit
0x0F80       [1]    PORTA
0x0F80       [0]    RA2_bit
0x0F80       [0]    RA3_bit
0x0F80       [0]    RA0_bit
0x0F80       [0]    AN4_bit
0x0F80       [0]    LVDIN_bit
0x0F80       [0]    RA5_bit
0x0F80       [0]    RA6_bit
0x0F80       [0]    T0CKI_bit
0x0F80       [0]    NOT_SS_bit
0x0F81       [0]    RB1_bit
0x0F81       [0]    AN8_bit
0x0F81       [0]    AN9_bit
0x0F81       [0]    RB4_bit
0x0F81       [0]    PGM_bit
0x0F81       [0]    PGC_bit
0x0F81       [0]    AN11_bit
0x0F81       [0]    PGD_bit
0x0F81       [0]    INT2_bit
0x0F81       [1]    PORTB
0x0F81       [0]    KBI2_bit
0x0F81       [0]    INT1_bit
0x0F81       [0]    RB6_bit
0x0F81       [0]    INT0_bit
0x0F81       [0]    RB0_bit
0x0F81       [0]    KBI1_bit
0x0F81       [0]    RB2_bit
0x0F81       [0]    AN10_bit
0x0F81       [0]    RB5_bit
0x0F81       [0]    CCP2_PORTB_bit
0x0F81       [0]    KBI0_bit
0x0F81       [0]    KBI3_bit
0x0F81       [0]    RB3_bit
0x0F81       [0]    AN12_bit
0x0F81       [0]    RB7_bit
0x0F82       [0]    RC1_bit
0x0F82       [1]    PORTC
0x0F82       [0]    RC0_bit
0x0F82       [0]    CK_bit
0x0F82       [0]    T1CKI_bit
0x0F82       [0]    RC2_bit
0x0F82       [0]    RC6_bit
0x0F82       [0]    RC7_bit
0x0F82       [0]    RC5_bit
0x0F82       [0]    RC3_bit
0x0F82       [0]    RC4_bit
0x0F82       [0]    SDA_bit
0x0F82       [0]    SCK_bit
0x0F82       [0]    SDI_bit
0x0F82       [0]    CCP1_bit
0x0F82       [0]    T1OSO_bit
0x0F82       [0]    T1OSI_bit
0x0F82       [0]    SDO_bit
0x0F82       [0]    CCP2_PORTC_bit
0x0F82       [0]    SCL_bit
0x0F82       [0]    T13CKI_bit
0x0F82       [0]    TX_bit
0x0F82       [0]    RX__bit
0x0F83       [0]    PSP4_bit
0x0F83       [0]    PSP5_bit
0x0F83       [0]    PSP3_bit
0x0F83       [0]    PSP1_bit
0x0F83       [0]    PSP2_bit
0x0F83       [0]    PSP6_bit
0x0F83       [0]    P1D_bit
0x0F83       [1]    PORTD
0x0F83       [0]    P1C_bit
0x0F83       [0]    PSP7_bit
0x0F83       [0]    P1B_bit
0x0F83       [0]    PSP0_bit
0x0F83       [0]    RD4_bit
0x0F83       [0]    RD5_bit
0x0F83       [0]    RD3_bit
0x0F83       [0]    RD1_bit
0x0F83       [0]    RD2_bit
0x0F83       [0]    RD6_bit
0x0F83       [0]    RD0_bit
0x0F83       [0]    RD7_bit
0x0F84       [0]    NOT_MCLR_bit
0x0F84       [0]    NOT_CS_bit
0x0F84       [0]    NOT_WR_bit
0x0F84       [0]    VPP_bit
0x0F84       [0]    AN6_bit
0x0F84       [0]    AN7_bit
0x0F84       [0]    AN5_bit
0x0F84       [0]    NOT_RD_bit
0x0F84       [0]    RE3_bit
0x0F84       [0]    RD_bit
0x0F84       [0]    RE1_bit
0x0F84       [0]    RE2_bit
0x0F84       [0]    CS_bit
0x0F84       [0]    MCLR_bit
0x0F84       [0]    RE0_bit
0x0F84       [0]    WR_bit
0x0F84       [1]    PORTE
0x0F89       [0]    LATA3_bit
0x0F89       [0]    LATA2_bit
0x0F89       [0]    LATA4_bit
0x0F89       [0]    LATA7_bit
0x0F89       [0]    LATA6_bit
0x0F89       [0]    LATA5_bit
0x0F89       [0]    LATA1_bit
0x0F89       [1]    LATA
0x0F89       [0]    LATA0_bit
0x0F8A       [0]    LATB5_bit
0x0F8A       [0]    LATB3_bit
0x0F8A       [0]    LATB2_bit
0x0F8A       [0]    LATB7_bit
0x0F8A       [0]    LATB6_bit
0x0F8A       [0]    LATB4_bit
0x0F8A       [1]    LATB
0x0F8A       [0]    LATB0_bit
0x0F8A       [0]    LATB1_bit
0x0F8B       [0]    LATC4_bit
0x0F8B       [0]    LATC3_bit
0x0F8B       [0]    LATC7_bit
0x0F8B       [0]    LATC6_bit
0x0F8B       [0]    LATC5_bit
0x0F8B       [0]    LATC2_bit
0x0F8B       [1]    LATC
0x0F8B       [0]    LATC0_bit
0x0F8B       [0]    LATC1_bit
0x0F8C       [0]    LATD4_bit
0x0F8C       [0]    LATD3_bit
0x0F8C       [0]    LATD5_bit
0x0F8C       [0]    LATD7_bit
0x0F8C       [0]    LATD6_bit
0x0F8C       [0]    LATD0_bit
0x0F8C       [1]    LATD
0x0F8C       [0]    LATD2_bit
0x0F8C       [0]    LATD1_bit
0x0F8D       [0]    LATE1_bit
0x0F8D       [0]    LATE2_bit
0x0F8D       [1]    LATE
0x0F8D       [0]    LATE0_bit
0x0F92       [0]    TRISA3_bit
0x0F92       [0]    TRISA5_bit
0x0F92       [0]    TRISA2_bit
0x0F92       [0]    TRISA1_bit
0x0F92       [0]    TRISA6_bit
0x0F92       [0]    TRISA7_bit
0x0F92       [1]    TRISA
0x0F92       [0]    TRISA4_bit
0x0F92       [0]    TRISA0_bit
0x0F93       [0]    TRISB1_bit
0x0F93       [0]    TRISB0_bit
0x0F93       [0]    TRISB3_bit
0x0F93       [1]    TRISB
0x0F93       [0]    TRISB6_bit
0x0F93       [0]    TRISB7_bit
0x0F93       [0]    TRISB4_bit
0x0F93       [0]    TRISB2_bit
0x0F93       [0]    TRISB5_bit
0x0F94       [1]    TRISC
0x0F94       [0]    TRISC4_bit
0x0F94       [0]    TRISC1_bit
0x0F94       [0]    TRISC2_bit
0x0F94       [0]    TRISC3_bit
0x0F94       [0]    TRISC6_bit
0x0F94       [0]    TRISC7_bit
0x0F94       [0]    TRISC5_bit
0x0F94       [0]    TRISC0_bit
0x0F95       [0]    TRISD5_bit
0x0F95       [0]    TRISD6_bit
0x0F95       [0]    TRISD0_bit
0x0F95       [0]    TRISD3_bit
0x0F95       [0]    TRISD1_bit
0x0F95       [0]    TRISD7_bit
0x0F95       [0]    TRISD2_bit
0x0F95       [1]    TRISD
0x0F95       [0]    TRISD4_bit
0x0F96       [0]    OBF_TRISE_bit
0x0F96       [0]    IBOV_TRISE_bit
0x0F96       [0]    PSPMODE_TRISE_bit
0x0F96       [0]    TRISE2_bit
0x0F96       [0]    TRISE1_bit
0x0F96       [0]    TRISE0_bit
0x0F96       [0]    IBF_TRISE_bit
0x0F96       [1]    TRISE
0x0F9B       [1]    OSCTUNE
0x0F9B       [0]    TUN2_bit
0x0F9B       [0]    TUN3_bit
0x0F9B       [0]    TUN4_bit
0x0F9B       [0]    TUN1_bit
0x0F9B       [0]    PLLEN_bit
0x0F9B       [0]    INTSRC_bit
0x0F9B       [0]    TUN0_bit
0x0F9D       [0]    RCIE_bit
0x0F9D       [0]    TXIE_bit
0x0F9D       [0]    PSPIE_bit
0x0F9D       [0]    ADIE_bit
0x0F9D       [0]    SSPIE_bit
0x0F9D       [0]    TMR2IE_bit
0x0F9D       [0]    TMR1IE_bit
0x0F9D       [1]    PIE1
0x0F9D       [0]    CCP1IE_bit
0x0F9E       [0]    RCIF_bit
0x0F9E       [0]    TXIF_bit
0x0F9E       [0]    PSPIF_bit
0x0F9E       [0]    ADIF_bit
0x0F9E       [0]    SSPIF_bit
0x0F9E       [0]    TMR1IF_bit
0x0F9E       [1]    PIR1
0x0F9E       [0]    CCP1IF_bit
0x0F9E       [0]    TMR2IF_bit
0x0F9F       [0]    ADIP_bit
0x0F9F       [0]    RCIP_bit
0x0F9F       [1]    IPR1
0x0F9F       [0]    PSPIP_bit
0x0F9F       [0]    TXIP_bit
0x0F9F       [0]    TMR2IP_bit
0x0F9F       [0]    TMR1IP_bit
0x0F9F       [0]    SSPIP_bit
0x0F9F       [0]    CCP1IP_bit
0x0FA0       [0]    BCLIE_bit
0x0FA0       [0]    EEIE_bit
0x0FA0       [0]    OSCFIE_bit
0x0FA0       [0]    CMIE_bit
0x0FA0       [0]    TMR3IE_bit
0x0FA0       [0]    CCP2IE_bit
0x0FA0       [0]    HLVDIE_bit
0x0FA0       [1]    PIE2
0x0FA0       [0]    LVDIE_bit
0x0FA1       [0]    EEIF_bit
0x0FA1       [0]    BCLIF_bit
0x0FA1       [0]    LVDIF_bit
0x0FA1       [1]    PIR2
0x0FA1       [0]    CMIF_bit
0x0FA1       [0]    OSCFIF_bit
0x0FA1       [0]    HLVDIF_bit
0x0FA1       [0]    TMR3IF_bit
0x0FA1       [0]    CCP2IF_bit
0x0FA2       [1]    IPR2
0x0FA2       [0]    CCP2IP_bit
0x0FA2       [0]    HLVDIP_bit
0x0FA2       [0]    TMR3IP_bit
0x0FA2       [0]    LVDIP_bit
0x0FA2       [0]    BCLIP_bit
0x0FA2       [0]    EEIP_bit
0x0FA2       [0]    CMIP_bit
0x0FA2       [0]    OSCFIP_bit
0x0FA6       [0]    CFGS_bit
0x0FA6       [1]    EECON1
0x0FA6       [0]    FREE_bit
0x0FA6       [0]    RD_EECON1_bit
0x0FA6       [0]    WREN_bit
0x0FA6       [0]    WRERR_bit
0x0FA6       [0]    WR_EECON1_bit
0x0FA6       [0]    EEPGD_bit
0x0FA7       [1]    EECON2
0x0FA8       [1]    EEDATA
0x0FA9       [1]    EEADR
0x0FAA       [1]    EEADRH
0x0FAB       [1]    RCSTA
0x0FAB       [0]    ADEN_bit
0x0FAB       [0]    SPEN_bit
0x0FAB       [0]    RX9_bit
0x0FAB       [0]    SREN_bit
0x0FAB       [0]    OERR_bit
0x0FAB       [0]    CREN_bit
0x0FAB       [0]    ADDEN_bit
0x0FAB       [0]    FERR_bit
0x0FAB       [0]    RX9D_bit
0x0FAC       [0]    TX9_bit
0x0FAC       [0]    CSRC_bit
0x0FAC       [0]    SYNC_bit
0x0FAC       [0]    TXEN_bit
0x0FAC       [0]    TRMT_bit
0x0FAC       [0]    SENDB_bit
0x0FAC       [0]    TX9D_bit
0x0FAC       [1]    TXSTA
0x0FAC       [0]    BRGH_bit
0x0FAD       [1]    TXREG
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FB0       [1]    SPBRGH
0x0FB1       [0]    NOT_T3SYNC_bit
0x0FB1       [0]    T3CCP1_bit
0x0FB1       [0]    TMR3CS_bit
0x0FB1       [0]    T3SYNC_bit
0x0FB1       [0]    T3CCP2_bit
0x0FB1       [0]    T3CKPS1_bit
0x0FB1       [0]    T3CKPS0_bit
0x0FB1       [0]    RD16_bit
0x0FB1       [0]    TMR3ON_bit
0x0FB1       [1]    T3CON
0x0FB2       [1]    TMR3L
0x0FB3       [1]    TMR3H
0x0FB4       [0]    C1OUT_bit
0x0FB4       [0]    C2OUT_bit
0x0FB4       [0]    C2INV_bit
0x0FB4       [0]    CM0_bit
0x0FB4       [0]    CM1_bit
0x0FB4       [1]    CMCON
0x0FB4       [0]    CIS_bit
0x0FB4       [0]    C1INV_bit
0x0FB4       [0]    CM2_bit
0x0FB5       [0]    CVR0_bit
0x0FB5       [0]    CVROE_bit
0x0FB5       [0]    CVREN_bit
0x0FB5       [0]    CVR3_bit
0x0FB5       [0]    CVRSS_bit
0x0FB5       [1]    CVRCON
0x0FB5       [0]    CVR1_bit
0x0FB5       [0]    CVR2_bit
0x0FB5       [0]    CVRR_bit
0x0FB6       [0]    ECCPAS0_bit
0x0FB6       [0]    PSSAC1_bit
0x0FB6       [0]    ECCPAS2_bit
0x0FB6       [0]    ECCPAS1_bit
0x0FB6       [0]    PSSAC0_bit
0x0FB6       [0]    ECCPASE_bit
0x0FB6       [1]    ECCP1AS
0x0FB6       [0]    PSSBD1_bit
0x0FB6       [0]    PSSBD0_bit
0x0FB7       [0]    PDC3_bit
0x0FB7       [0]    PDC2_bit
0x0FB7       [0]    PDC1_bit
0x0FB7       [0]    PDC6_bit
0x0FB7       [0]    PDC5_bit
0x0FB7       [0]    PDC4_bit
0x0FB7       [0]    PDC0_bit
0x0FB7       [1]    PWM1CON
0x0FB7       [0]    PRSEN_bit
0x0FB8       [0]    RCIDL_bit
0x0FB8       [0]    RXDTP_bit
0x0FB8       [0]    TXCKP_bit
0x0FB8       [0]    RCMT_bit
0x0FB8       [0]    ABDOVF_bit
0x0FB8       [0]    SCKP_bit
0x0FB8       [0]    RXCKP_bit
0x0FB8       [1]    BAUDCON
0x0FB8       [1]    BAUDCTL
0x0FB8       [0]    ABDEN_bit
0x0FB8       [0]    BRG16_bit
0x0FB8       [0]    WUE_bit
0x0FBA       [0]    CCP2Y_bit
0x0FBA       [0]    CCP2M3_bit
0x0FBA       [0]    CCP2X_bit
0x0FBA       [0]    DC2B1_bit
0x0FBA       [0]    DC2B0_bit
0x0FBA       [0]    CCP2M0_bit
0x0FBA       [1]    CCP2CON
0x0FBA       [0]    CCP2M2_bit
0x0FBA       [0]    CCP2M1_bit
0x0FBB       [1]    CCPR2L
0x0FBB       [2]    CCPR2
0x0FBC       [1]    CCPR2H
0x0FBD       [1]    CCP1CON
0x0FBD       [0]    CCP1X_bit
0x0FBD       [0]    CCP1Y_bit
0x0FBD       [0]    P1M1_bit
0x0FBD       [0]    P1M0_bit
0x0FBD       [0]    CCP1M1_bit
0x0FBD       [0]    CCP1M0_bit
0x0FBD       [0]    CCP1M3_bit
0x0FBD       [0]    CCP1M2_bit
0x0FBD       [0]    DC1B1_bit
0x0FBD       [0]    DC1B0_bit
0x0FBE       [1]    CCPR1L
0x0FBE       [2]    CCPR1
0x0FBF       [1]    CCPR1H
0x0FC0       [0]    ACQT1_bit
0x0FC0       [0]    ACQT0_bit
0x0FC0       [0]    ADCS2_bit
0x0FC0       [0]    ACQT2_bit
0x0FC0       [0]    ADFM_bit
0x0FC0       [0]    ADCS0_bit
0x0FC0       [1]    ADCON2
0x0FC0       [0]    ADCS1_bit
0x0FC1       [0]    PCFG3_bit
0x0FC1       [0]    VCFG0_bit
0x0FC1       [0]    VCFG1_bit
0x0FC1       [1]    ADCON1
0x0FC1       [0]    PCFG0_bit
0x0FC1       [0]    PCFG1_bit
0x0FC1       [0]    PCFG2_bit
0x0FC2       [0]    CHS3_bit
0x0FC2       [0]    CHS2_bit
0x0FC2       [0]    DONE_bit
0x0FC2       [0]    GO_DONE_bit
0x0FC2       [0]    NOT_DONE_bit
0x0FC2       [0]    GO_NOT_DONE_bit
0x0FC2       [0]    ADON_bit
0x0FC2       [0]    GO_bit
0x0FC2       [0]    CHS1_bit
0x0FC2       [0]    CHS0_bit
0x0FC2       [1]    ADCON0
0x0FC3       [1]    ADRESL
0x0FC3       [2]    ADRES
0x0FC4       [1]    ADRESH
0x0FC5       [0]    ACKDT_bit
0x0FC5       [1]    SSPCON2
0x0FC5       [0]    GCEN_bit
0x0FC5       [0]    ACKSTAT_bit
0x0FC5       [0]    ACKEN_bit
0x0FC5       [0]    PEN_bit
0x0FC5       [0]    RCEN_bit
0x0FC5       [0]    RSEN_bit
0x0FC5       [0]    SEN_bit
0x0FC6       [0]    SSPM1_bit
0x0FC6       [0]    SSPM0_bit
0x0FC6       [0]    SSPM3_bit
0x0FC6       [0]    SSPM2_bit
0x0FC6       [0]    SSPEN_bit
0x0FC6       [0]    CKP_bit
0x0FC6       [0]    WCOL_bit
0x0FC6       [0]    SSPOV_bit
0x0FC6       [1]    SSPCON1
0x0FC7       [0]    D_NOT_A_bit
0x0FC7       [0]    CKE_bit
0x0FC7       [0]    SMP_bit
0x0FC7       [0]    R_NOT_W_bit
0x0FC7       [0]    UA_bit
0x0FC7       [0]    P_bit
0x0FC7       [0]    S_bit
0x0FC7       [0]    D_A_bit
0x0FC7       [0]    R_W_bit
0x0FC7       [0]    NOT_ADDRESS_bit
0x0FC7       [0]    NOT_WRITE_bit
0x0FC7       [0]    D_bit
0x0FC7       [0]    R_bit
0x0FC7       [0]    NOT_A_bit
0x0FC7       [0]    NOT_W_bit
0x0FC7       [0]    BF_bit
0x0FC7       [1]    SSPSTAT
0x0FC8       [1]    SSPADD
0x0FC9       [1]    SSPBUF
0x0FCA       [1]    T2CON
0x0FCA       [0]    T2OUTPS1_bit
0x0FCA       [0]    T2OUTPS2_bit
0x0FCA       [0]    T2OUTPS0_bit
0x0FCA       [0]    T2CKPS0_bit
0x0FCA       [0]    TMR2ON_bit
0x0FCA       [0]    T2CKPS1_bit
0x0FCA       [0]    T2OUTPS3_bit
0x0FCB       [1]    PR2
0x0FCC       [1]    TMR2
0x0FCD       [0]    T1CKPS1_bit
0x0FCD       [0]    T1CKPS0_bit
0x0FCD       [0]    TMR1CS_bit
0x0FCD       [1]    T1CON
0x0FCD       [0]    NOT_T1SYNC_bit
0x0FCD       [0]    T1SYNC_bit
0x0FCD       [0]    RD16_T1CON_bit
0x0FCD       [0]    T1OSCEN_bit
0x0FCD       [0]    T1RUN_bit
0x0FCD       [0]    TMR1ON_bit
0x0FCE       [1]    TMR1L
0x0FCF       [1]    TMR1H
0x0FD0       [0]    NOT_TO_bit
0x0FD0       [0]    NOT_RI_bit
0x0FD0       [0]    SBOREN_bit
0x0FD0       [0]    NOT_BOR_bit
0x0FD0       [0]    NOT_POR_bit
0x0FD0       [0]    NOT_PD_bit
0x0FD0       [0]    IPEN_bit
0x0FD0       [0]    TO__bit
0x0FD0       [1]    RCON
0x0FD0       [0]    RI_bit
0x0FD0       [0]    BOR_bit
0x0FD0       [0]    POR_bit
0x0FD0       [0]    PD_bit
0x0FD1       [0]    SWDTE_bit
0x0FD1       [0]    SWDTEN_bit
0x0FD1       [1]    WDTCON
0x0FD2       [1]    HLVDCON
0x0FD2       [0]    LVDL1_bit
0x0FD2       [0]    HLVDL0_bit
0x0FD2       [0]    LVDL3_bit
0x0FD2       [1]    LVDCON
0x0FD2       [0]    LVDL2_bit
0x0FD2       [0]    LVDL0_bit
0x0FD2       [0]    HLVDL2_bit
0x0FD2       [0]    HLVDEN_bit
0x0FD2       [0]    IVRST_bit
0x0FD2       [0]    HLVDL3_bit
0x0FD2       [0]    VDIRMAG_bit
0x0FD2       [0]    HLVDL1_bit
0x0FD2       [0]    LVDEN_bit
0x0FD2       [0]    LVV1_bit
0x0FD2       [0]    IRVST_bit
0x0FD2       [0]    LVV0_bit
0x0FD2       [0]    LVV2_bit
0x0FD2       [0]    BGST_bit
0x0FD2       [0]    LVV3_bit
0x0FD3       [0]    OSTS_bit
0x0FD3       [0]    SCS0_bit
0x0FD3       [0]    IOFS_bit
0x0FD3       [0]    IDLEN_bit
0x0FD3       [0]    IRCF0_bit
0x0FD3       [0]    SCS1_bit
0x0FD3       [1]    OSCCON
0x0FD3       [0]    IRCF1_bit
0x0FD3       [0]    IRCF2_bit
0x0FD5       [0]    T0SE_bit
0x0FD5       [0]    PSA_bit
0x0FD5       [0]    T016BIT_bit
0x0FD5       [0]    T0PS0_bit
0x0FD5       [1]    T0CON
0x0FD5       [0]    TMR0ON_bit
0x0FD5       [0]    T0PS1_bit
0x0FD5       [0]    T0CS_bit
0x0FD5       [0]    T0PS2_bit
0x0FD5       [0]    T08BIT_bit
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [1]    STATUS
0x0FD8       [0]    Z_bit
0x0FD8       [0]    C_bit
0x0FD8       [0]    DC_bit
0x0FD8       [0]    OV_bit
0x0FD8       [0]    N_bit
0x0FD9       [1]    FSR2L
0x0FD9       [2]    FSR2
0x0FD9       [2]    FSR2PTR
0x0FDA       [1]    FSR2H
0x0FDB       [1]    PLUSW2
0x0FDC       [1]    PREINC2
0x0FDD       [1]    POSTDEC2
0x0FDE       [1]    POSTINC2
0x0FDF       [1]    INDF2
0x0FE0       [1]    BSR
0x0FE1       [2]    FSR1PTR
0x0FE1       [1]    FSR1L
0x0FE1       [2]    FSR1
0x0FE2       [1]    FSR1H
0x0FE3       [1]    PLUSW1
0x0FE4       [1]    PREINC1
0x0FE5       [1]    POSTDEC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [2]    FSR0
0x0FE9       [2]    FSR0PTR
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEB       [1]    PLUSW0
0x0FEC       [1]    PREINC0
0x0FED       [1]    POSTDEC0
0x0FEE       [1]    POSTINC0
0x0FEF       [1]    INDF0
0x0FF0       [0]    INT2E_bit
0x0FF0       [0]    INT1E_bit
0x0FF0       [0]    INT2F_bit
0x0FF0       [1]    INTCON3
0x0FF0       [0]    INT2P_bit
0x0FF0       [0]    INT1P_bit
0x0FF0       [0]    INT1F_bit
0x0FF0       [0]    INT1IE_bit
0x0FF0       [0]    INT2IF_bit
0x0FF0       [0]    INT1IF_bit
0x0FF0       [0]    INT2IP_bit
0x0FF0       [0]    INT1IP_bit
0x0FF0       [0]    INT2IE_bit
0x0FF1       [1]    INTCON2
0x0FF1       [0]    RBIP_bit
0x0FF1       [0]    NOT_RBPU_bit
0x0FF1       [0]    TMR0IP_bit
0x0FF1       [0]    INTEDG1_bit
0x0FF1       [0]    INTEDG2_bit
0x0FF1       [0]    INTEDG0_bit
0x0FF1       [0]    RBPU_bit
0x0FF2       [0]    TMR0IF_bit
0x0FF2       [0]    PEIE_bit
0x0FF2       [0]    T0IF_bit
0x0FF2       [0]    RBIF_bit
0x0FF2       [0]    INT0IF_bit
0x0FF2       [0]    GIEH_bit
0x0FF2       [0]    T0IE_bit
0x0FF2       [0]    INT0E_bit
0x0FF2       [0]    RBIE_bit
0x0FF2       [1]    INTCON
0x0FF2       [0]    INT0F_bit
0x0FF2       [0]    TMR0IE_bit
0x0FF2       [0]    GIE_GIEH_bit
0x0FF2       [0]    GIE_bit
0x0FF2       [0]    PEIE_GIEL_bit
0x0FF2       [0]    INT0IE_bit
0x0FF2       [0]    GIEL_bit
0x0FF3       [2]    PROD
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [3]    TBLPTR
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
0x0FF8       [0]    TBLPTRU3_bit
0x0FF8       [0]    TBLPTRU4_bit
0x0FF8       [0]    TBLPTRU2_bit
0x0FF8       [0]    TBLPTRU1_bit
0x0FF8       [0]    ACSS_bit
0x0FF8       [0]    TBLPTRU0_bit
0x0FF9       [1]    PCL
0x0FF9       [1]    PC
0x0FFA       [1]    PCLATH
0x0FFB       [0]    PCU3_bit
0x0FFB       [0]    PCU4_bit
0x0FFB       [1]    PCLATU
0x0FFB       [0]    PCU0_bit
0x0FFB       [0]    PCU1_bit
0x0FFB       [0]    PCU2_bit
0x0FFC       [0]    STKOVF_bit
0x0FFC       [0]    SP0_bit
0x0FFC       [1]    STKPTR
0x0FFC       [0]    STKPTR4_bit
0x0FFC       [0]    SP3_bit
0x0FFC       [0]    SP4_bit
0x0FFC       [0]    SP1_bit
0x0FFC       [0]    SP2_bit
0x0FFC       [0]    STKPTR0_bit
0x0FFC       [0]    STKFUL_bit
0x0FFC       [0]    STKUNF_bit
0x0FFC       [0]    STKPTR2_bit
0x0FFC       [0]    STKPTR3_bit
0x0FFC       [0]    STKPTR1_bit
0x0FFD       [1]    TOSL
0x0FFE       [1]    TOSH
0x0FFF       [1]    TOSU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x8594      [17]    ?ICS?lstr69_FirmV_0_7_0
0x85A5      [17]    ?ICS?lstr70_FirmV_0_7_0
0x85B6      [17]    ?ICS?lstr71_FirmV_0_7_0
0x85C7      [17]    ?ICS?lstr72_FirmV_0_7_0
0x85D8      [17]    ?ICS?lstr73_FirmV_0_7_0
0x85E9      [17]    ?ICS?lstr74_FirmV_0_7_0
0x85FA      [17]    ?ICS?lstr75_FirmV_0_7_0
0x860B      [17]    ?ICS?lstr76_FirmV_0_7_0
0x861C      [17]    ?ICS?lstr77_FirmV_0_7_0
0x862D      [17]    ?ICS?lstr78_FirmV_0_7_0
0x863E      [17]    ?ICS?lstr79_FirmV_0_7_0
0x864F      [17]    ?ICS?lstr80_FirmV_0_7_0
0x8660      [17]    ?ICS?lstr81_FirmV_0_7_0
0x8671       [7]    ?ICS?lstr82_FirmV_0_7_0
0x8678       [7]    ?ICS?lstr83_FirmV_0_7_0
0x867F      [17]    ?ICS?lstr84_FirmV_0_7_0
0x8690       [7]    ?ICS?lstr85_FirmV_0_7_0
0x8697       [7]    ?ICS?lstr86_FirmV_0_7_0
0x869E      [17]    ?ICS?lstr87_FirmV_0_7_0
0x86AF      [17]    ?ICS?lstr88_FirmV_0_7_0
0x86C0      [17]    ?ICS?lstr89_FirmV_0_7_0
0x86D1      [17]    ?ICS?lstr90_FirmV_0_7_0
0x86E2      [17]    ?ICS?lstr91_FirmV_0_7_0
0x86F3      [17]    ?ICS?lstr92_FirmV_0_7_0
0x8704       [8]    ?ICS?lstr93_FirmV_0_7_0
0x870C       [9]    ?ICS?lstr94_FirmV_0_7_0
0x8715      [17]    ?ICS?lstr95_FirmV_0_7_0
0x8726       [8]    ?ICS?lstr96_FirmV_0_7_0
0x872E       [9]    ?ICS?lstr97_FirmV_0_7_0
0x8737      [17]    ?ICS?lstr98_FirmV_0_7_0
0x8748       [8]    ?ICS?lstr99_FirmV_0_7_0
0x8750       [9]    ?ICS?lstr100_FirmV_0_7_0
0x8759      [17]    ?ICS?lstr101_FirmV_0_7_0
0x876A       [8]    ?ICS?lstr102_FirmV_0_7_0
0x8772       [9]    ?ICS?lstr103_FirmV_0_7_0
0x877B      [17]    ?ICS?lstr104_FirmV_0_7_0
0x878C      [17]    ?ICS?lstr105_FirmV_0_7_0
0x879D      [17]    ?ICS?lstr106_FirmV_0_7_0
0x87AE       [1]    ?ICS_OverloadSens2
0x87AF       [1]    ?ICS_LCDFlashFlag
0x87B0       [1]    ?ICS_LongBuzzFlag
0x87B1       [1]    ?ICS_LCDFlash
0x87B2       [1]    ?ICS_MenuPointer
0x87B3       [1]    ?ICS_LearningMode
0x87B4       [1]    ?ICS_OverloadSens1
0x87B5       [1]    ?ICS__AC
0x87B6       [1]    ?ICS_ms20A
0x87B7       [1]    ?ICS_msCounter
0x87B8       [1]    ?ICS_Flag20ms
0x87B9       [1]    ?ICS_RemotePulse1
0x87BA       [1]    ?ICS_ZCCounter
0x87BB       [1]    ?ICS_RemotePulse2
0x87BC       [1]    ?ICS_BuzzCounter
0x87BD       [1]    ?ICS_Flag500ms
0x87BE       [1]    ?ICS_PhotocellCount
0x87BF       [1]    ?ICS_RemoteAFlag
0x87C0       [1]    ?ICS_RemoteBFlag
0x87C1       [1]    ?ICS_Pressed
0x87C2      [96]    ?ICS_crypto
0x8822       [1]    ?ICS_AboutCounter
0x8823       [1]    ?ICS_DebouncingDelay
0x8824       [1]    ?ICS_KeyFlag
0x8825      [17]    ?ICS__Blank
0x8836       [1]    ?ICS_LCDUpdateFlag
0x8837      [17]    ?ICS_LCDLine2
0x8848       [1]    ?ICS_LCDLines
0x8849       [1]    ?ICS_Motor1FullSpeed
0x884A       [1]    ?ICS_OverloadCheckFlag2
0x884B       [1]    ?ICS_M2isSlow
0x884C       [1]    ?ICS_Motor2FullSpeed
0x884D       [1]    ?ICS_OverloadCheckFlag1
0x884E       [1]    ?ICS_M1isSlow
0x884F       [1]    ?ICSGetKeysState_RepeatSpeed_L0
0x8850       [1]    ?ICS_FlashFlag
0x8851      [17]    ?ICS_LCDLine1
0x8862      [17]    ?ICS__opening
0x8873       [1]    ?ICS_Motor1Start
0x8874       [1]    ?ICS_Motor2Start
0x8875       [1]    ?ICS_OpenDone
0x8876      [17]    ?ICS__autoclose
0x8887      [17]    ?ICS__closing
0x8898       [4]    ?ICS_ms500
0x889C       [1]    ?ICS_PassFlag
0x889D      [17]    ?ICS__open
0x88AE       [2]    ?ICS_OverloadCounter2
0x88B0       [1]    ?ICS_BuzzFlag
0x88B1       [2]    ?ICS_OverloadCounter1
0x88B3       [1]    ?ICS_CloseDone
0x88B4       [1]    ?ICS_PhotocellOpenFlag
0x88B5      [17]    ?ICS__close
0x88C6       [1]    ?ICS_ActiveDoors
0x88C7      [17]    ?ICS__errPhoto
0x88D8       [1]    ?ICS_State
0x88D9      [17]    ?ICS__errOverload
0x88EA      [17]    ?ICS__stop
0x88FB      [17]    ?ICS__errRemote
0x890C      [17]    ?ICS__errLimit
0x891D      [15]    ?ICS?lstr7_FirmV_0_7_0
0x892C      [15]    ?ICS?lstr8_FirmV_0_7_0
0x893B      [15]    ?ICS?lstr9_FirmV_0_7_0
0x894A      [15]    ?ICS?lstr10_FirmV_0_7_0
0x8959      [15]    ?ICS?lstr11_FirmV_0_7_0
0x8968      [15]    ?ICS?lstr12_FirmV_0_7_0
0x8977      [22]    ?ICS?lstr13_FirmV_0_7_0
0x898D      [22]    ?ICS?lstr14_FirmV_0_7_0
0x89A3      [15]    ?ICS?lstr15_FirmV_0_7_0
0x89B2      [15]    ?ICS?lstr16_FirmV_0_7_0
0x89C1      [20]    ?ICS?lstr17_FirmV_0_7_0
0x89D5      [20]    ?ICS?lstr18_FirmV_0_7_0
0x89E9      [17]    ?ICS?lstr19_FirmV_0_7_0
0x89FA      [17]    ?ICS?lstr20_FirmV_0_7_0
0x8A0B      [23]    ?ICS?lstr21_FirmV_0_7_0
0x8A22      [21]    ?ICS?lstr22_FirmV_0_7_0
0x8A37      [15]    ?ICS?lstr23_FirmV_0_7_0
0x8A46      [15]    ?ICS?lstr24_FirmV_0_7_0
0x8A55      [21]    ?ICS?lstr25_FirmV_0_7_0
0x8A6A      [21]    ?ICS?lstr26_FirmV_0_7_0
0x8A7F      [15]    ?ICS?lstr27_FirmV_0_7_0
0x8A8E      [17]    ?ICS?lstr28_FirmV_0_7_0
0x8A9F      [15]    ?ICS?lstr29_FirmV_0_7_0
0x8AAE      [17]    ?ICS?lstr30_FirmV_0_7_0
0x8ABF      [13]    ?ICS?lstr31_FirmV_0_7_0
0x8ACC      [13]    ?ICS?lstr32_FirmV_0_7_0
0x8AD9      [17]    ?ICS?lstr33_FirmV_0_7_0
0x8AEA      [17]    ?ICS?lstr34_FirmV_0_7_0
0x8AFB      [17]    ?ICS?lstr35_FirmV_0_7_0
0x8B0C      [21]    ?ICS?lstr36_FirmV_0_7_0
0x8B21      [18]    ?ICS?lstr37_FirmV_0_7_0
0x8B33      [21]    ?ICS?lstr38_FirmV_0_7_0
0x8B48      [15]    ?ICS?lstr57_FirmV_0_7_0
0x8B57      [15]    ?ICS?lstr58_FirmV_0_7_0
0x8B66      [22]    ?ICS?lstr59_FirmV_0_7_0
0x8B7C      [22]    ?ICS?lstr60_FirmV_0_7_0
0x8B92      [15]    ?ICS?lstr61_FirmV_0_7_0
0x8BA1      [15]    ?ICS?lstr62_FirmV_0_7_0
0x8BB0      [15]    ?ICS?lstr63_FirmV_0_7_0
0x8BBF      [15]    ?ICS?lstr64_FirmV_0_7_0
0x8BCE      [17]    ?ICS?lstr65_FirmV_0_7_0
0x8BDF      [26]    ?ICS?lstr66_FirmV_0_7_0
0x8BF9      [21]    ?ICS?lstr67_FirmV_0_7_0
0x8C0E      [21]    ?ICS?lstr68_FirmV_0_7_0
0x8C23      [15]    ?ICS?lstr45_FirmV_0_7_0
0x8C32      [15]    ?ICS?lstr46_FirmV_0_7_0
0x8C41      [21]    ?ICS?lstr47_FirmV_0_7_0
0x8C56      [21]    ?ICS?lstr48_FirmV_0_7_0
0x8C6B      [15]    ?ICS?lstr49_FirmV_0_7_0
0x8C7A      [15]    ?ICS?lstr50_FirmV_0_7_0
0x8C89      [13]    ?ICS?lstr51_FirmV_0_7_0
0x8C96      [13]    ?ICS?lstr52_FirmV_0_7_0
0x8CA3      [17]    ?ICS?lstr53_FirmV_0_7_0
0x8CB4      [18]    ?ICS?lstr54_FirmV_0_7_0
0x8CC6      [21]    ?ICS?lstr55_FirmV_0_7_0
0x8CDB      [21]    ?ICS?lstr56_FirmV_0_7_0
0x8CF0      [12]    ?ICS?lstr3_FirmV_0_7_0
0x8CFC      [22]    ?ICS?lstr4_FirmV_0_7_0
0x8D12      [16]    ?ICS?lstr5_FirmV_0_7_0
0x8D22      [16]    ?ICS?lstr6_FirmV_0_7_0
0x8D32       [1]    ?ICSState2_delay_L0
0x8D33       [1]    ?ICSState2_PrevAC_L0
0x8D34      [22]    ?ICS?lstr42_FirmV_0_7_0
0x8D4A      [16]    ?ICS?lstr43_FirmV_0_7_0
0x8D5A      [16]    ?ICS?lstr44_FirmV_0_7_0
0x8D6A       [1]    ?ICSState6_delay_L0
0x8D6B      [22]    ?ICS?lstr39_FirmV_0_7_0
0x8D81      [16]    ?ICS?lstr40_FirmV_0_7_0
0x8D91      [16]    ?ICS?lstr41_FirmV_0_7_0
0x8DA1       [1]    ?ICSState5_delay_L0
0x8DA2      [17]    ?ICS?lstr109_FirmV_0_7_0
0x8DB3      [17]    ?ICS?lstr110_FirmV_0_7_0
0x8DC4      [17]    ?ICS?lstr107_FirmV_0_7_0
0x8DD5      [17]    ?ICS?lstr108_FirmV_0_7_0
//** Label List: ** 
//----------------------------------------------
  L_LCD_Init0
  L_LCD_Init1
  L_LCD_Init2
  L_LCD_Init3
  L_SetContrast4
  L_LCD_Putch5
  L_LCD_Putch6
  L_LCD_Putch7
  L_LCD_out8
  L_LCD_out9
  L_LCD_out10
  L_LCD_out11
  L_LCD_out12
  L_LCD_out13
  L_LCD_out14
  L__LCD_out15
  _LCD_Init
  _SetContrast
  _LCD_Putch
  _LCD_out
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_interrupt4
  L_interrupt5
  L_interrupt6
  L_interrupt7
  L_interrupt8
  L_interrupt9
  L_interrupt10
  L_interrupt11
  L_interrupt12
  L_interrupt13
  L_interrupt14
  L_interrupt15
  L_interrupt16
  L_interrupt17
  L_interrupt18
  L_interrupt19
  L_interrupt20
  L_interrupt21
  L_interrupt22
  L_interrupt23
  L_interrupt24
  L_interrupt25
  L_interrupt26
  L_interrupt27
  L_interrupt28
  L_interrupt29
  L_interrupt30
  L_interrupt31
  L_interrupt32
  L_interrupt33
  L_Logger34
  L_main35
  L_main36
  L_main37
  L_main38
  L_main39
  L_main40
  L_main41
  L_main42
  L_main43
  L_main44
  L_main45
  L_main46
  L_main47
  L_main48
  L_main49
  L_main50
  L_main51
  L_main52
  L_main53
  L_main54
  L_main55
  L_main56
  L_main57
  L_main58
  L_main59
  L_main60
  L_StateManager61
  L_StateManager62
  L_StateManager63
  L_StateManager64
  L_StateManager65
  L_StateManager66
  L_StateManager67
  L_StateManager68
  L_StateManager69
  L_StateManager70
  L_StateManager71
  L_StateManager72
  L_StateManager73
  L_StateManager74
  L_StateManager75
  L_StateManager76
  L_StateManager77
  L_StateManager78
  L_StateManager79
  L_StateTest80
  L_StateTest81
  L_State0082
  L_State183
  L_State184
  L_State185
  L_State186
  L_State187
  L_State188
  L_State189
  L_State190
  L_State191
  L_State192
  L_State193
  L_State194
  L_State195
  L_State296
  L_State297
  L_State298
  L_State299
  L_State2100
  L_State2101
  L_State2102
  L_State2103
  L_State2104
  L_State2105
  L_State2106
  L_State2107
  L_State2108
  L_State2109
  L_State2110
  L_State2111
  L_State2112
  L_State2113
  L_State2114
  L_State2115
  L_State2116
  L_State2117
  L_State2118
  L_State2119
  L_State2120
  L_State2121
  L_State2122
  L_State2123
  L_State2124
  L_State2125
  L_State2126
  L_State3127
  L_State3128
  L_State3129
  L_State3130
  L_State3131
  L_State3132
  L_State3133
  L_State3134
  L_State3135
  L_State3136
  L_State3137
  L_State3138
  L_State3139
  L_State3140
  L_State3141
  L_State3142
  L_State3143
  L_State3144
  L_State3145
  L_State3146
  L_State3147
  L_State3148
  L_State3149
  L_State3150
  L_State3151
  L_State3152
  L_State3153
  L_State3154
  L_State3155
  L_State3156
  L_State3157
  L_State3158
  L_State3159
  L_State3160
  L_State3161
  L_State4162
  L_State4163
  L_State4164
  L_State4165
  L_State4166
  L_State4167
  L_State4168
  L_State4169
  L_State4170
  L_State4171
  L_State4172
  L_State4173
  L_State4174
  L_State4175
  L_State4176
  L_State4177
  L_State4178
  L_State4179
  L_State4180
  L_State4181
  L_State4182
  L_State4183
  L_State4184
  L_State4185
  L_State4186
  L_State4187
  L_State4188
  L_State4189
  L_State4190
  L_State4191
  L_State4192
  L_State4193
  L_State4194
  L_State5195
  L_State5196
  L_State5197
  L_State5198
  L_State5199
  L_State5200
  L_State5201
  L_State5202
  L_State5203
  L_State5204
  L_State5205
  L_State5206
  L_State5207
  L_State5208
  L_State5209
  L_State5210
  L_State5211
  L_State6212
  L_State6213
  L_State6214
  L_State6215
  L_State6216
  L_State6217
  L_State6218
  L_State6219
  L_State6220
  L_State6221
  L_State6222
  L_State6223
  L_State6224
  L_State6225
  L_State6226
  L_State6227
  L_State6228
  L_State6229
  L_State6230
  L_State7231
  L_State7232
  L_State7233
  L_State7234
  L_State7235
  L_State7236
  L_State7237
  L_State7238
  L_State7239
  L_State7240
  L_State7241
  L_State7242
  L_State7243
  L_State7244
  L_State7245
  L_State7246
  L_State7247
  L_State7248
  L_State7249
  L_State7250
  L_State7251
  L_State7252
  L_State7253
  L_State7254
  L_State7255
  L_State7256
  L_State7257
  L_State7258
  L_State7259
  L_State7260
  L_State7261
  L_State7262
  L_State7263
  L_State7264
  L_State7265
  L_State7266
  L_State7267
  L_State8268
  L_State8269
  L_State8270
  L_State8271
  L_State8272
  L_State8273
  L_State8274
  L_State8275
  L_State8276
  L_State8277
  L_State8278
  L_State8279
  L_State8280
  L_State8281
  L_State8282
  L_State8283
  L_State8284
  L_State8285
  L_State8286
  L_State8287
  L_State8288
  L_State8289
  L_State8290
  L_State8291
  L_State8292
  L_State8293
  L_State8294
  L_State8295
  L_State8296
  L_State8297
  L_State8298
  L_State8299
  L_State8300
  L_State8301
  L_State8302
  L_State8303
  L_State8304
  L_State8305
  L_State8306
  L_LCDUpdater307
  L_LCDUpdater308
  L_LCDUpdater309
  L_LCDUpdater310
  L_LCDUpdater311
  L_LCDUpdater312
  L_LCDUpdater313
  L_LCDUpdater314
  L_LCDUpdater315
  L_LCDUpdater316
  L_LCDUpdater317
  L_LCDUpdater318
  L_LCDUpdater319
  L_LCDUpdater320
  L_LCDUpdater321
  L_LCDUpdater322
  L_LCDUpdater323
  L_LCDUpdater324
  L_LCDUpdater325
  L_LCDUpdater326
  L_Init327
  L_Init328
  L_Init329
  L_Init330
  L_Init331
  L_TaskManager332
  L_TaskManager333
  L_TaskManager334
  L_TaskManager335
  L_TaskManager336
  L_TaskManager337
  L_AddTask338
  L_AddTask339
  L_AddTask340
  L_AddTask341
  L_EventHandler342
  L_EventHandler343
  L_EventHandler344
  L_EventHandler345
  L_EventHandler346
  L_EventHandler347
  L_EventHandler348
  L_EventHandler349
  L_EventHandler350
  L_EventHandler351
  L_EventHandler352
  L_GetKeysState353
  L_GetKeysState354
  L_GetKeysState355
  L_GetKeysState356
  L_GetKeysState357
  L_GetKeysState358
  L_GetKeysState359
  L_GetKeysState360
  L_GetKeysState361
  L_GetKeysState362
  L_GetKeysState363
  L_GetKeysState364
  L_GetKeysState365
  L_GetKeysState366
  L_GetKeysState367
  L_GetKeysState368
  L_GetKeysState369
  L_GetKeysState370
  L_GetKeysState371
  L_GetKeysState372
  L_GetKeysState373
  L_GetExternalKeysState374
  L_GetExternalKeysState375
  L_GetLimitSwitchState376
  L_GetLimitSwitchState377
  L_GetLimitSwitchState378
  L_GetLimitSwitchState379
  L_GetRemoteState380
  L_GetOverloadState381
  L_GetOverloadState382
  L_GetOverloadState383
  L_GetOverloadState384
  L_GetOverloadState385
  L_GetOverloadState386
  L_GetOverloadState387
  L_GetOverloadState388
  L_GetOverloadState389
  L_GetOverloadState390
  L_GetOverloadState391
  L_GetOverloadState392
  L_GetOverloadState393
  L_GetOverloadState394
  L_GetOverloadState395
  L_GetOverloadState396
  L_GetPhotocellState397
  L_GetPhotocellState398
  L_GetPhotocellState399
  L_GetPhotocellState400
  L_GetPhotocellState401
  L_SetMotorSpeed402
  L_SetMotorSpeed403
  L_SetMotorSpeed404
  L_SetMotorSpeed405
  L_OverloadInit406
  L_OverloadInit407
  L_StartMotor408
  L_StartMotor409
  L_StartMotor410
  L_StartMotor411
  L_StopMotor412
  L_StopMotor413
  L_CheckTask414
  L_CheckTask415
  L_CheckTask416
  L_ReturnAutoclose417
  L_ReturnAutoclose418
  L_ReturnAutoclose419
  L_ReturnAutoclose420
  L_ReturnAutoclose421
  L_ReturnAutoclose422
  L_ReturnAutoclose423
  L_ReturnAutoclose424
  L_GetAutocloseTime425
  L_GetAutocloseTime426
  L_GetAutocloseTime427
  L_GetAutocloseTime428
  L_GetAutocloseTime429
  L_GetAutocloseTime430
  L_GetAutocloseTime431
  L_ClearTasks432
  L_ClearTasks433
  L_ClearTasks434
  L_ClearTasks435
  L_ClearTasks436
  L_ClearTasks437
  L_Menu0438
  L_Menu0439
  L_Menu0440
  L_Menu0441
  L_Menu0442
  L_Menu0443
  L_Menu0444
  L_Menu0445
  L_Menu0446
  L_Menu0447
  L_Menu0448
  L_Menu0449
  L_Menu0450
  L_Menu0451
  L_Menu0452
  L_Menu0453
  L_Menu0454
  L_Menu0455
  L_Menu0456
  L_Menu0457
  L_Menu0458
  L_Menu0459
  L_Menu0460
  L_Menu0461
  L_Menu0462
  L_Menu0463
  L_Menu0464
  L_Menu0465
  L_Menu0466
  L_Menu0467
  L_Menu0468
  L_Menu0469
  L_Menu0470
  L_Menu0471
  L_Menu0472
  L_Menu0473
  L_Menu0474
  L_About475
  L_About476
  L_About477
  L_About478
  L_Menu1479
  L_Menu1480
  L_Menu1481
  L_Menu1482
  L_Menu1483
  L_Menu1484
  L_Menu1485
  L_Menu1486
  L_Menu2487
  L_Menu2488
  L_Menu2489
  L_Menu2490
  L_Menu2491
  L_Menu2492
  L_Menu2493
  L_Menu2494
  L_Menu2495
  L_Menu2496
  L_Menu2497
  L_Menu2498
  L_Menu2499
  L_Menu2500
  L_Menu2501
  L_Menu2502
  L_Menu2503
  L_Menu2504
  L_Menu2505
  L_Menu2506
  L_Menu2507
  L_Menu2508
  L_Menu2509
  L_Menu2510
  L_Menu2511
  L_Menu2512
  L_Menu2513
  L_Menu2514
  L_Menu2515
  L_Menu2516
  L_Menu2517
  L_Menu2518
  L_Menu2519
  L_Menu2520
  L_Menu2521
  L_Menu2522
  L_Menu2523
  L_Menu2524
  L_Menu2525
  L_Menu2526
  L_Menu2527
  L_Menu2528
  L_Menu2529
  L_Menu2530
  L_Menu2531
  L_Menu2532
  L_Menu2533
  L_Menu2534
  L_Menu2535
  L_Menu2536
  L_Menu2537
  L_Menu2538
  L_Menu2539
  L_Menu2540
  L_Menu2541
  L_Menu2542
  L_Menu2543
  L_Menu2544
  L_Menu2545
  L_Menu2546
  L_Menu2547
  L_Menu2548
  L_Menu2549
  L_Menu2550
  L_Menu2551
  L_Menu2552
  L_Menu2553
  L_Menu2554
  L_Menu2555
  L_Menu2556
  L_Menu2557
  L_Menu2558
  L_Menu2559
  L_Menu2560
  L_Menu2561
  L_Menu2562
  L_Menu2563
  L_Menu2564
  L_Menu2565
  L_Menu2566
  L_Menu2567
  L_Menu2568
  L_Menu2569
  L_Menu2570
  L_Menu2571
  L_Menu2572
  L_Menu2573
  L_Menu2574
  L_Menu2575
  L_Menu2576
  L_Menu2577
  L_Menu2578
  L_Menu2579
  L_Menu2580
  L_Menu2581
  L_Menu2582
  L_Menu2583
  L_Menu2584
  L_Menu2585
  L_Menu2586
  L_Menu2587
  L_Menu2588
  L_Menu2589
  L_Menu2590
  L_Menu2591
  L_Menu2592
  L_Menu2593
  L_Menu2594
  L_Menu2595
  L_Menu2596
  L_Menu2597
  L_Menu2598
  L_Menu2599
  L_Menu2600
  L_Menu2601
  L_Menu2602
  L_Menu2603
  L_Menu2604
  L_Menu2605
  L_Menu2606
  L_Menu2607
  L_Menu2608
  L_Menu2609
  L_Menu2610
  L_Menu2611
  L_Menu2612
  L_Menu2613
  L_Menu2614
  L_Menu2615
  L_Menu2616
  L_Menu2617
  L_Menu2618
  L_Menu2619
  L_Menu2620
  L_Menu2621
  L_Menu2622
  L_Menu2623
  L_Menu2624
  L_Menu2625
  L_Menu2626
  L_Menu2627
  L_Menu2628
  L_Menu2629
  L_Menu2630
  L_Menu2631
  L_Menu2632
  L_Menu2633
  L_Menu2634
  L_Menu2635
  L_LearnAuto636
  L_LearnAuto637
  L_LearnAuto638
  L_LearnAuto639
  L_LearnAuto640
  L_LearnAuto641
  L_LearnAuto642
  L_LearnAuto643
  L_LearnAuto644
  L_LearnAuto645
  L_LearnAuto646
  L_LearnAuto647
  L_LearnAuto648
  L_LearnAuto649
  L_LearnAuto650
  L_LearnAuto651
  L_LearnAuto652
  L_LearnAuto653
  L_LearnAuto654
  L_LearnAuto655
  L_LearnAuto656
  L_LearnAuto657
  L_LearnAuto658
  L_LearnAuto659
  L_LearnAuto660
  L_LearnAuto661
  L_LearnAuto662
  L_LearnAuto663
  L_LearnAuto664
  L_LearnAuto665
  L_LearnAuto666
  L_LearnAuto667
  L_LearnAuto668
  L_LearnAuto669
  L_LearnAuto670
  L_LearnAuto671
  L_LearnAuto672
  L_LearnAuto673
  L_LearnAuto674
  L_LearnAuto675
  L_LearnAuto676
  L_LearnAuto677
  L_LearnAuto678
  L_LearnAuto679
  L_SaveLearnData680
  L_SaveLearnData681
  L_LearnManual682
  L_LearnManual683
  L_LearnManual684
  L_LearnManual685
  L_LearnManual686
  L_LearnManual687
  L_LearnManual688
  L_LearnManual689
  L_LearnManual690
  L_LearnManual691
  L_LearnManual692
  L_LearnManual693
  L_LearnManual694
  L_LearnManual695
  L_LearnManual696
  L_LearnManual697
  L_LearnManual698
  L_LearnManual699
  L_LearnManual700
  L_LearnManual701
  L_LearnManual702
  L_LearnManual703
  L_LearnManual704
  L_LearnManual705
  L_LearnManual706
  L_LearnManual707
  L_LearnManual708
  L_LearnManual709
  L_LearnManual710
  L_LearnManual711
  L_LearnManual712
  L_LearnManual713
  L_LearnManual714
  L_LearnManual715
  L_LearnManual716
  L_LearnManual717
  L_LearnManual718
  L_LearnManual719
  L_LearnManual720
  L_LearnManual721
  L_LearnManual722
  L_LearnManual723
  L_LearnManual724
  L_LearnManual725
  L_LearnManual726
  L_LearnManual727
  L_LearnManual728
  L_LearnManual729
  L_LearnManual730
  L_LearnManual731
  L_LearnManual732
  L_LearnManual733
  L_charValueToStr734
  L_charValueToStr735
  L_intValueToStr736
  L_intValueToStr737
  L_SetOverloadParams738
  L_SetOverloadParams739
  L_SetOverloadParams740
  L_SetOverloadParams741
  L_SetOverloadParams742
  L_SetOverloadParams743
  L_SetOverloadParams744
  L_SetOverloadParams745
  L_SetOverloadParams746
  L_SetOverloadParams747
  L_SetOverloadParams748
  L_SetOverloadParams749
  L_SetOverloadParams750
  L_SetOverloadParams751
  L_SetOverloadParams752
  L_SetOverloadParams753
  L_SetOverloadParams754
  L_SetOverloadParams755
  L_SetOverloadParams756
  L_SetOverloadParams757
  L_SetOverloadParams758
  L_SetOverloadParams759
  L_SetOverloadParams760
  L_SetOverloadParams761
  L_SetOverloadParams762
  L_SetOverloadParams763
  L_SetOverloadParams764
  L_SetOverloadParams765
  L_SetOverloadParams766
  L_SetOverloadParams767
  L_SetOverloadParams768
  L_SetOverloadParams769
  L_SetOverloadParams770
  L_SetOverloadParams771
  L_SetOverloadParams772
  L_SetOverloadParams773
  L_SetOverloadParams774
  L_SetOverloadParams775
  L_SetOverloadParams776
  L_SetOverloadParams777
  L_SetOverloadParams778
  L_SetOverloadParams779
  L_SetOverloadParams780
  L_SetOverloadParams781
  L_SetOverloadParams782
  L_SetOverloadParams783
  L_SetOverloadParams784
  L_SetOverloadParams785
  L_SetOverloadParams786
  L_SetOverloadParams787
  L_SetOverloadParams788
  L_SetOverloadParams789
  L_SetOverloadParams790
  L_SetOverloadParams791
  L_SetOverloadParams792
  L_SetOverloadParams793
  L_SetOverloadParams794
  L_SetOverloadParams795
  L_SetOverloadParams796
  L_SetOverloadParams797
  L_SetOverloadParams798
  L_SetOverloadParams799
  L_TorqueLogger800
  L_TorqueLogger801
  L_TorqueLogger802
  L_TorqueLogger803
  L_TorqueLogger804
  L_TorqueLogger805
  L_TorqueLogger806
  L__interrupt807
  L__interrupt808
  L__main809
  L__main810
  L__main811
  L__main812
  L__main813
  L__main814
  L__State1815
  L__State2816
  L__State2817
  L__State2818
  L__State2819
  L__State2820
  L__State3821
  L__State3822
  L__State3823
  L__State3824
  L__State3825
  L__State3826
  L__State4827
  L__State4828
  L__State4829
  L__State4830
  L__State4831
  L__State5832
  L__State5833
  L__State5834
  L__State5835
  L__State5836
  L__State6837
  L__State6838
  L__State6839
  L__State6840
  L__State6841
  L__State7842
  L__State7843
  L__State7844
  L__State7845
  L__State7846
  L__State7847
  L__State7848
  L__State7849
  L__State7850
  L__State8851
  L__State8852
  L__State8853
  L__State8854
  L__State8855
  L__State8856
  L__State8857
  L__State8858
  L__State8859
  L__State8860
  L__LCDUpdater861
  L__LCDUpdater862
  L__LCDUpdater863
  L__LCDUpdater864
  L__LCDUpdater865
  L__LCDUpdater866
  L__TaskManager867
  L__EventHandler868
  L__GetKeysState869
  L__GetKeysState870
  L__GetKeysState871
  L__GetKeysState872
  L__GetKeysState873
  L__GetLimitSwitchState874
  L__SetMotorSpeed875
  L__ReturnAutoclose876
  L__GetAutocloseTime877
  L__ClearTasks878
  L__Menu2879
  L__Menu2880
  L__Menu2881
  L__Menu2882
  L__Menu2883
  L__Menu2884
  L__Menu2885
  L__Menu2886
  L__Menu2887
  L__Menu2888
  L__Menu2889
  L__Menu2890
  L__Menu2891
  L__Menu2892
  L__Menu2893
  L__Menu2894
  L__Menu2895
  L__Menu2896
  L__Menu2897
  L__Menu2898
  L__Menu2899
  L__Menu2900
  L__Menu2901
  L__Menu2902
  L__Menu2903
  L__Menu2904
  L__Menu2905
  L__Menu2906
  L__Menu2907
  L__Menu2908
  L__Menu2909
  L__Menu2910
  L__Menu2911
  L__Menu2912
  L__Menu2913
  L__Menu2914
  L__Menu2915
  L__Menu2916
  L__Menu2917
  L__Menu2918
  L__LearnAuto919
  L__LearnAuto920
  L__LearnAuto921
  L__LearnAuto922
  L__LearnAuto923
  L__LearnAuto924
  L__LearnManual925
  L__LearnManual926
  _interrupt
  L__interrupt927
  _ResetTaskEvents
  _Decrypt
  _Logger
  _main
  _StateManager
  _StateTest
  _State00
  _State1
  L__State1928
  _State2
  L__State2929
  L__State2930
  _State3
  L__State3931
  _State4
  L__State4932
  _State5
  L__State5933
  L__State5934
  _State6
  L__State6935
  L__State6936
  _State7
  L__State7937
  _State8
  L__State8938
  _LCDUpdater
  _Init
  _TaskManager
  L__TaskManager939
  _AddTask
  _EventHandler
  _GetKeysState
  L__GetKeysState940
  L__GetKeysState941
  L__GetKeysState942
  L__GetKeysState943
  L__GetKeysState944
  L__GetKeysState945
  L__GetKeysState946
  _GetExternalKeysState
  _GetLimitSwitchState
  _GetRemoteState
  L__GetRemoteState947
  L__GetRemoteState948
  L__GetRemoteState949
  L__GetRemoteState950
  L__GetRemoteState951
  L__GetRemoteState952
  L__GetRemoteState953
  L__GetRemoteState954
  _GetOverloadState
  L__GetOverloadState955
  L__GetOverloadState956
  L__GetOverloadState957
  L__GetOverloadState958
  L__GetOverloadState959
  L__GetOverloadState960
  L__GetOverloadState961
  L__GetOverloadState962
  _GetPhotocellState
  _SetMotorSpeed
  _OverloadInit
  _SaveConfigs
  _LoadConfigs
  _FactorySettings
  _StartMotor
  L__StartMotor963
  L__StartMotor964
  L__StartMotor965
  L__StartMotor966
  _StopMotor
  _CheckTask
  _ReturnAutoclose
  _GetAutocloseTime
  _ClearTasks
  _Menu0
  _About
  _Menu1
  _Menu2
  L__Menu2967
  L__Menu2968
  _Menu3
  _LearnAuto
  _AutoLearnCalculator
  _SaveLearnData
  _LearnManual
  _charValueToStr
  _charValueToStr_AC
  _intValueToStr
  L__intValueToStr969
  _SetOverloadParams
  _TorqueLogger
  L_ADC_Get_Sample0
  L_ADC_Get_Sample1
  L_ADC_Read2
  L_ADC_Read3
  L_end_ADC_Init
  _ADC_Init
  L_end_ADC_Get_Sample
  _ADC_Get_Sample
  L_end_ADC_Read
  _ADC_Read
  L_ByteToStr0
  L_ByteToStr1
  L_ByteToStr2
  L_ByteToStr3
  L_ByteToStr4
  L_ByteToStr5
  L_WordToStr6
  L_WordToStr7
  L_WordToStr8
  L_WordToStr9
  L_WordToStr10
  L_WordToStr11
  L_WordToStrWithZeros12
  L_WordToStrWithZeros13
  L_WordToStrWithZeros14
  L_WordToStrWithZeros15
  L_WordToStrWithZeros16
  L_ShortToStr17
  L_ShortToStr18
  L_ShortToStr19
  L_ShortToStr20
  L_ShortToStr21
  L_ShortToStr22
  L_IntToStr23
  L_IntToStr24
  L_IntToStr25
  L_IntToStr26
  L_IntToStr27
  L_IntToStr28
  L_IntToStrWithZeros29
  L_IntToStrWithZeros30
  L_IntToStrWithZeros31
  L_IntToStrWithZeros32
  L_IntToStrWithZeros33
  L_IntToStrWithZeros34
  L_IntToStrWithZeros35
  L_IntToStrWithZeros36
  L_IntToStrWithZeros37
  L_LongWordToStr38
  L_LongWordToStr39
  L_LongWordToStr40
  L_LongWordToStr41
  L_LongWordToStr42
  L_LongWordToStr43
  L_LongWordToStrWithZeros44
  L_LongWordToStrWithZeros45
  L_LongWordToStrWithZeros46
  L_LongWordToStrWithZeros47
  L_LongWordToStrWithZeros48
  L_LongToStr49
  L_LongToStr50
  L_LongToStr51
  L_LongToStr52
  L_LongToStr53
  L_LongToStr54
  L_LongIntToStrWithZeros55
  L_LongIntToStrWithZeros56
  L_LongIntToStrWithZeros57
  L_LongIntToStrWithZeros58
  L_LongIntToStrWithZeros59
  L_LongIntToStrWithZeros60
  L_LongIntToStrWithZeros61
  L_LongIntToStrWithZeros62
  L_LongIntToStrWithZeros63
  L_Dec2Bcd64
  L_Dec2Bcd65
  L_Rtrim66
  L_Rtrim67
  L_Rtrim68
  L_Rtrim69
  L_Ltrim70
  L_Ltrim71
  L_Ltrim72
  L_Ltrim73
  L_Ltrim74
  L_Ltrim75
  L_FloatToStr76
  L_FloatToStr77
  L_FloatToStr78
  L_FloatToStr79
  L_FloatToStr80
  L_FloatToStr81
  L_FloatToStr82
  L_FloatToStr83
  L_FloatToStr84
  L_FloatToStr85
  L_FloatToStr86
  L_FloatToStr87
  L_FloatToStr88
  L_FloatToStr89
  L_FloatToStr90
  L_FloatToStr91
  L_FloatToStr92
  L_FloatToStr93
  L_FloatToStr94
  L_FloatToStr95
  L_FloatToStr96
  L_FloatToStr97
  L__Rtrim98
  L__Ltrim99
  L__FloatToStr100
  L_end_ByteToHex
  _ByteToHex
  L_end_ShortToHex
  _ShortToHex
  L_end_WordToHex
  _WordToHex
  L_end_IntToHex
  _IntToHex
  L_end_LongWordToHex
  _LongWordToHex
  L_end_LongIntToHex
  _LongIntToHex
  L_end_ByteToStr
  _ByteToStr
  L_end_WordToStr
  _WordToStr
  L__WordToStr109
  L_end_WordToStrWithZeros
  _WordToStrWithZeros
  L__WordToStrWithZeros111
  L_end_ShortToStr
  _ShortToStr
  L__ShortToStr113
  L_end_IntToStr
  _IntToStr
  L__IntToStr115
  L__IntToStr116
  L_end_IntToStrWithZeros
  _IntToStrWithZeros
  L__IntToStrWithZeros118
  L__IntToStrWithZeros119
  L__IntToStrWithZeros120
  L_end_LongWordToStr
  _LongWordToStr
  L__LongWordToStr122
  L__LongWordToStr123
  L_end_LongWordToStrWithZeros
  _LongWordToStrWithZeros
  L__LongWordToStrWithZeros125
  L_end_LongToStr
  _LongToStr
  L__LongToStr127
  L__LongToStr128
  L_end_LongIntToStrWithZeros
  _LongIntToStrWithZeros
  L__LongIntToStrWithZeros130
  L__LongIntToStrWithZeros131
  L__LongIntToStrWithZeros132
  L_end_Dec2Bcd
  _Dec2Bcd
  L_end_Bcd2Dec
  _Bcd2Dec
  L_end_Bcd2Dec16
  _Bcd2Dec16
  L__Bcd2Dec16136
  L__Bcd2Dec16137
  L_end_Dec2Bcd16
  _Dec2Bcd16
  L__Dec2Bcd16139
  L__Dec2Bcd16140
  L_end_Rtrim
  _Rtrim
  L__Rtrim142
  L_end_Ltrim
  _Ltrim
  L_end_FloatToStr
  _FloatToStr
  L__FloatToStr145
  L__FloatToStr146
  L__FloatToStr147
  L__FloatToStr148
  L__FloatToStr149
  L_memchr0
  L_memchr1
  L_memchr2
  L_memchr3
  L_memcmp4
  L_memcmp5
  L_memcmp6
  L_memcpy7
  L_memcpy8
  L_memmove9
  L_memmove10
  L_memmove11
  L_memmove12
  L_memmove13
  L_memmove14
  L_memmove15
  L_memmove16
  L_memmove17
  L_memmove18
  L_memmove19
  L_memset20
  L_memset21
  L_strcat22
  L_strcat23
  L_strcat24
  L_strcat25
  L_strchr26
  L_strchr27
  L_strchr28
  L_strchr29
  L_strcmp30
  L_strcmp31
  L_strcmp32
  L_strcmp33
  L_strcpy34
  L_strcpy35
  L_strlen36
  L_strlen37
  L_strncat38
  L_strncat39
  L_strncat40
  L_strncat41
  L_strncat42
  L_strncat43
  L_strncat44
  L_strncpy45
  L_strncpy46
  L_strncpy47
  L_strncpy48
  L_strncpy49
  L_strspn50
  L_strspn51
  L_strspn52
  L_strspn53
  L_strcspn54
  L_strcspn55
  L_strcspn56
  L_strcspn57
  L_strncmp58
  L_strncmp59
  L_strncmp60
  L_strncmp61
  L_strncmp62
  L_strpbrk63
  L_strpbrk64
  L_strpbrk65
  L_strrchr66
  L_strrchr67
  L_strrchr68
  L_strrchr69
  L_strstr70
  L_strstr71
  L_strstr72
  L_strstr73
  L_strstr74
  L_strtok75
  L_strtok76
  L_strtok77
  L_strtok78
  L_strtok79
  L__memmove80
  L__strcmp81
  L__strncat82
  L__strspn83
  L__strcspn84
  L__strncmp85
  L__strstr86
  L_end_memchr
  _memchr
  L_end_memcmp
  _memcmp
  L__memcmp89
  L_end_memcpy
  _memcpy
  L_end_memmove
  _memmove
  L__memmove92
  L__memmove93
  L_end_memset
  _memset
  L_end_strcat
  _strcat
  L_end_strchr
  _strchr
  L_end_strcmp
  _strcmp
  L_end_strcpy
  _strcpy
  L_end_strlen
  _strlen
  L_end_strncat
  _strncat
  L__strncat101
  L_end_strncpy
  _strncpy
  L_end_strspn
  _strspn
  L__strspn104
  L_end_strcspn
  _strcspn
  L__strcspn106
  L_end_strncmp
  _strncmp
  L_end_strpbrk
  _strpbrk
  L_end_strrchr
  _strrchr
  L__strrchr110
  L_end_strstr
  _strstr
  L__strstr112
  L__strstr113
  L_end_strtok
  _strtok
  L__strtok115
  L_Delay_1us0
  L_Delay_10us1
  L_Delay_22us2
  L_Delay_50us3
  L_Delay_80us4
  L_Delay_500us5
  L_Delay_5500us6
  L_Delay_1ms7
  L_Delay_5ms8
  L_Delay_8ms9
  L_Delay_100ms10
  L_Delay_10ms11
  L_Delay_1sec12
  L____Boot_Delay4k13
  L____Boot_Delay8k14
  L____Boot_Delay12k15
  L____Boot_Delay16k16
  L____Boot_Delay24k17
  L____Boot_Delay32k18
  L____Boot_Delay48k19
  L____Boot_Delay64k20
  L____Boot_Delay128k21
  L_Delay_Cyc22
  L_Delay_Cyc23
  L_VDelay_ms24
  L_VDelay_ms25
  L_VDelay_ms26
  L_VDelay_Advanced_ms27
  L_VDelay_Advanced_ms28
  L_VDelay_Advanced_ms29
  _Get_Fosc_kHz
  _Delay_1us
  _Delay_10us
  _Delay_22us
  _Delay_50us
  _Delay_80us
  _Delay_500us
  _Delay_5500us
  _Delay_1ms
  _Delay_5ms
  _Delay_8ms
  _Delay_100ms
  _Delay_10ms
  _Delay_1sec
  ____Boot_Delay4k
  ____Boot_Delay8k
  ____Boot_Delay12k
  ____Boot_Delay16k
  ____Boot_Delay24k
  ____Boot_Delay32k
  ____Boot_Delay48k
  ____Boot_Delay64k
  ____Boot_Delay128k
  _Delay_Cyc
  _VDelay_ms
  L__VDelay_ms30
  L__VDelay_ms31
  L__VDelay_ms32
  _VDelay_Advanced_ms
  L__VDelay_Advanced_ms33
  L__VDelay_Advanced_ms34
  L__VDelay_Advanced_ms35
  L_EEPROM_Write0
  L_EEPROM_Write1
  L_end_EEPROM_Read
  _EEPROM_Read
  L_end_EEPROM_Write
  _EEPROM_Write
  L__EEPROM_Write4
  L__EEPROM_Write5
  L_I2C1_Is_Idle0
  L_I2C1_Is_Idle1
  L_I2C1_Start2
  L_I2C1_Start3
  L_I2C1_Start4
  L_I2C1_Start5
  L_I2C1_Start6
  L_I2C1_Start7
  L_I2C1_Start8
  L_I2C1_Start9
  L_I2C1_Repeated_Start10
  L_I2C1_Repeated_Start11
  L_I2C1_Rd12
  L_I2C1_Rd13
  L_I2C1_Rd14
  L_I2C1_Rd15
  L_I2C1_Rd16
  L_I2C1_Rd17
  L_I2C1_Wr18
  L_I2C1_Wr19
  L_I2C1_Wr20
  L_I2C1_Wr21
  L_I2C1_Wr22
  L_I2C1_Wr23
  L_end_I2C1_Init
  _I2C1_Init
  L_end_I2C1_Is_Idle
  _I2C1_Is_Idle
  L_end_I2C1_Start
  _I2C1_Start
  L__I2C1_Start27
  L__I2C1_Start28
  L_end_I2C1_Repeated_Start
  _I2C1_Repeated_Start
  L_end_I2C1_Rd
  _I2C1_Rd
  L_end_I2C1_Wr
  _I2C1_Wr
  L_end_I2C1_Stop
  _I2C1_Stop
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  L_end_Div_8x8_U
  _Div_8x8_U
  L_end_Div_16x16_U
  _Div_16x16_U
  L_end_Div_16x16_S_L
  _Div_16x16_S_L
  L_end_Div_16x16_S
  _Div_16x16_S
  L_end_Div_8x8_S
  _Div_8x8_S
  L_end_Mul_8x8_S
  _Mul_8x8_S
  L_end_Mul_16x16_U
  _Mul_16x16_U
  L_end_Mul_16x16_S
  _Mul_16x16_S
  L_end_SDIV3232L
  _SDIV3232L
  L_end_COMFREM
  _COMFREM
  L_end_Div_32x32_S
  _Div_32x32_S
  L_end_Div_32x32_U
  _Div_32x32_U
  L_end_Mul_32x32_U
  _Mul_32x32_U
  L_end_Mul_32x32_S
  _Mul_32x32_S
  L_SPI1_Init_Advanced0
  L_SPI1_Init_Advanced1
  L_SPI1_Init_Advanced2
  L_SPI1_Init_Advanced3
  L_SPI1_Init_Advanced4
  L_SPI1_Init_Advanced5
  L_SPI1_Read6
  L_SPI1_Read7
  L_SPI1_Write8
  L_SPI1_Write9
  L_end_SPI1_Init
  _SPI1_Init
  L_end_SPI1_Init_Advanced
  _SPI1_Init_Advanced
  L_end_SPI1_Read
  _SPI1_Read
  L_end_SPI1_Write
  _SPI1_Write
  L_end_SPI_Set_Active
  _SPI_Set_Active
  L_end_SPI_Read
  _SPI_Read
  L_end_SPI_Write
  _SPI_Write
  _CC2D_Loop1
  _CC2DL_Loop1
  L_loopCA2AWs
  L_loopCCA2AWs
  L_loopCS2Ss
  L_CS2Send
  L_loopCCS2Ss
  L_CCS2Send
  L_loopFZinSWs
  L_longjmp7
  L_end___CC2D
  ___CC2D
  L_end___CC2DW
  ___CC2DW
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end_____DoIFC
  _____DoIFC
  L_end_Swap
  _Swap
  L_end_setjmp
  _setjmp
  L_end_longjmp
  _longjmp
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  L_UART_Write_Text16
  L_UART_Write_Text17
  L_UART_Read_Text18
  L_UART_Read_Text19
  L_UART_Read_Text20
  L_UART_Read_Text21
  L_UART_Read_Text22
  L_UART_Read_Text23
  L_UART_Read_Text24
  L_UART_Read_Text25
  L_UART_Read_Text26
  L_end_UART1_Init
  _UART1_Init
  L_end_UART1_Data_Ready
  _UART1_Data_Ready
  L_end_UART1_Read
  _UART1_Read
  L_end_UART1_Tx_Idle
  _UART1_Tx_Idle
  L_end_UART1_Write
  _UART1_Write
  L_end_UART1_Write_Text
  _UART1_Write_Text
  L_end_UART1_Read_Text
  _UART1_Read_Text
  L_end_UART_Set_Active
  _UART_Set_Active
  L_end_UART_Write
  _UART_Write
  L_end_UART_Write_Text
  _UART_Write_Text
  L_end_UART_Read
  _UART_Read
  L_end_UART_Data_Ready
  _UART_Data_Ready
  L_end_UART_Read_Text
  _UART_Read_Text
  L_end_UART_Tx_Idle
  _UART_Tx_Idle
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_interrupt4
  L_interrupt5
  L_interrupt6
  L_interrupt7
  L_interrupt8
  L_interrupt9
  L_interrupt10
  L_interrupt11
  L_interrupt12
  L_interrupt13
  L_interrupt14
  L_interrupt15
  L_interrupt16
  L_interrupt17
  L_interrupt18
  L_interrupt19
  L_interrupt20
  L_interrupt21
  L_interrupt22
  L_interrupt23
  L_interrupt24
  L_interrupt25
  L_interrupt26
  L_interrupt27
  L_interrupt28
  L_interrupt29
  L_interrupt30
  L_interrupt31
  L_interrupt32
  L_interrupt33
  L_Logger34
  L_main35
  L_main36
  L_main37
  L_main38
  L_main39
  L_main40
  L_main41
  L_main42
  L_main43
  L_main44
  L_main45
  L_main46
  L_main47
  L_main48
  L_main49
  L_main50
  L_main51
  L_main52
  L_main53
  L_main54
  L_main55
  L_main56
  L_main57
  L_main58
  L_main59
  L_main60
  L_StateManager61
  L_StateManager62
  L_StateManager63
  L_StateManager64
  L_StateManager65
  L_StateManager66
  L_StateManager67
  L_StateManager68
  L_StateManager69
  L_StateManager70
  L_StateManager71
  L_StateManager72
  L_StateManager73
  L_StateManager74
  L_StateManager75
  L_StateManager76
  L_StateManager77
  L_StateManager78
  L_StateManager79
  L_StateTest80
  L_StateTest81
  L_State0082
  L_State183
  L_State184
  L_State185
  L_State186
  L_State187
  L_State188
  L_State189
  L_State190
  L_State191
  L_State192
  L_State193
  L_State194
  L_State195
  L_State296
  L_State297
  L_State298
  L_State299
  L_State2100
  L_State2101
  L_State2102
  L_State2103
  L_State2104
  L_State2105
  L_State2106
  L_State2107
  L_State2108
  L_State2109
  L_State2110
  L_State2111
  L_State2112
  L_State2113
  L_State2114
  L_State2115
  L_State2116
  L_State2117
  L_State2118
  L_State2119
  L_State2120
  L_State2121
  L_State2122
  L_State2123
  L_State2124
  L_State2125
  L_State2126
  L_State3127
  L_State3128
  L_State3129
  L_State3130
  L_State3131
  L_State3132
  L_State3133
  L_State3134
  L_State3135
  L_State3136
  L_State3137
  L_State3138
  L_State3139
  L_State3140
  L_State3141
  L_State3142
  L_State3143
  L_State3144
  L_State3145
  L_State3146
  L_State3147
  L_State3148
  L_State3149
  L_State3150
  L_State3151
  L_State3152
  L_State3153
  L_State3154
  L_State3155
  L_State3156
  L_State3157
  L_State3158
  L_State3159
  L_State3160
  L_State3161
  L_State4162
  L_State4163
  L_State4164
  L_State4165
  L_State4166
  L_State4167
  L_State4168
  L_State4169
  L_State4170
  L_State4171
  L_State4172
  L_State4173
  L_State4174
  L_State4175
  L_State4176
  L_State4177
  L_State4178
  L_State4179
  L_State4180
  L_State4181
  L_State4182
  L_State4183
  L_State4184
  L_State4185
  L_State4186
  L_State4187
  L_State4188
  L_State4189
  L_State4190
  L_State4191
  L_State4192
  L_State4193
  L_State4194
  L_State5195
  L_State5196
  L_State5197
  L_State5198
  L_State5199
  L_State5200
  L_State5201
  L_State5202
  L_State5203
  L_State5204
  L_State5205
  L_State5206
  L_State5207
  L_State5208
  L_State5209
  L_State5210
  L_State5211
  L_State6212
  L_State6213
  L_State6214
  L_State6215
  L_State6216
  L_State6217
  L_State6218
  L_State6219
  L_State6220
  L_State6221
  L_State6222
  L_State6223
  L_State6224
  L_State6225
  L_State6226
  L_State6227
  L_State6228
  L_State6229
  L_State6230
  L_State7231
  L_State7232
  L_State7233
  L_State7234
  L_State7235
  L_State7236
  L_State7237
  L_State7238
  L_State7239
  L_State7240
  L_State7241
  L_State7242
  L_State7243
  L_State7244
  L_State7245
  L_State7246
  L_State7247
  L_State7248
  L_State7249
  L_State7250
  L_State7251
  L_State7252
  L_State7253
  L_State7254
  L_State7255
  L_State7256
  L_State7257
  L_State7258
  L_State7259
  L_State7260
  L_State7261
  L_State7262
  L_State7263
  L_State7264
  L_State7265
  L_State7266
  L_State7267
  L_State8268
  L_State8269
  L_State8270
  L_State8271
  L_State8272
  L_State8273
  L_State8274
  L_State8275
  L_State8276
  L_State8277
  L_State8278
  L_State8279
  L_State8280
  L_State8281
  L_State8282
  L_State8283
  L_State8284
  L_State8285
  L_State8286
  L_State8287
  L_State8288
  L_State8289
  L_State8290
  L_State8291
  L_State8292
  L_State8293
  L_State8294
  L_State8295
  L_State8296
  L_State8297
  L_State8298
  L_State8299
  L_State8300
  L_State8301
  L_State8302
  L_State8303
  L_State8304
  L_State8305
  L_State8306
  L_LCDUpdater307
  L_LCDUpdater308
  L_LCDUpdater309
  L_LCDUpdater310
  L_LCDUpdater311
  L_LCDUpdater312
  L_LCDUpdater313
  L_LCDUpdater314
  L_LCDUpdater315
  L_LCDUpdater316
  L_LCDUpdater317
  L_LCDUpdater318
  L_LCDUpdater319
  L_LCDUpdater320
  L_LCDUpdater321
  L_LCDUpdater322
  L_LCDUpdater323
  L_LCDUpdater324
  L_LCDUpdater325
  L_LCDUpdater326
  L_Init327
  L_Init328
  L_Init329
  L_Init330
  L_Init331
  L_TaskManager332
  L_TaskManager333
  L_TaskManager334
  L_TaskManager335
  L_TaskManager336
  L_TaskManager337
  L_AddTask338
  L_AddTask339
  L_AddTask340
  L_AddTask341
  L_EventHandler342
  L_EventHandler343
  L_EventHandler344
  L_EventHandler345
  L_EventHandler346
  L_EventHandler347
  L_EventHandler348
  L_EventHandler349
  L_EventHandler350
  L_EventHandler351
  L_EventHandler352
  L_GetKeysState353
  L_GetKeysState354
  L_GetKeysState355
  L_GetKeysState356
  L_GetKeysState357
  L_GetKeysState358
  L_GetKeysState359
  L_GetKeysState360
  L_GetKeysState361
  L_GetKeysState362
  L_GetKeysState363
  L_GetKeysState364
  L_GetKeysState365
  L_GetKeysState366
  L_GetKeysState367
  L_GetKeysState368
  L_GetKeysState369
  L_GetKeysState370
  L_GetKeysState371
  L_GetKeysState372
  L_GetKeysState373
  L_GetExternalKeysState374
  L_GetExternalKeysState375
  L_GetLimitSwitchState376
  L_GetLimitSwitchState377
  L_GetLimitSwitchState378
  L_GetLimitSwitchState379
  L_GetRemoteState380
  L_GetOverloadState381
  L_GetOverloadState382
  L_GetOverloadState383
  L_GetOverloadState384
  L_GetOverloadState385
  L_GetOverloadState386
  L_GetOverloadState387
  L_GetOverloadState388
  L_GetOverloadState389
  L_GetOverloadState390
  L_GetOverloadState391
  L_GetOverloadState392
  L_GetOverloadState393
  L_GetOverloadState394
  L_GetOverloadState395
  L_GetOverloadState396
  L_GetPhotocellState397
  L_GetPhotocellState398
  L_GetPhotocellState399
  L_GetPhotocellState400
  L_GetPhotocellState401
  L_SetMotorSpeed402
  L_SetMotorSpeed403
  L_SetMotorSpeed404
  L_SetMotorSpeed405
  L_OverloadInit406
  L_OverloadInit407
  L_StartMotor408
  L_StartMotor409
  L_StartMotor410
  L_StartMotor411
  L_StopMotor412
  L_StopMotor413
  L_CheckTask414
  L_CheckTask415
  L_CheckTask416
  L_ReturnAutoclose417
  L_ReturnAutoclose418
  L_ReturnAutoclose419
  L_ReturnAutoclose420
  L_ReturnAutoclose421
  L_ReturnAutoclose422
  L_ReturnAutoclose423
  L_ReturnAutoclose424
  L_GetAutocloseTime425
  L_GetAutocloseTime426
  L_GetAutocloseTime427
  L_GetAutocloseTime428
  L_GetAutocloseTime429
  L_GetAutocloseTime430
  L_GetAutocloseTime431
  L_ClearTasks432
  L_ClearTasks433
  L_ClearTasks434
  L_ClearTasks435
  L_ClearTasks436
  L_ClearTasks437
  L_Menu0438
  L_Menu0439
  L_Menu0440
  L_Menu0441
  L_Menu0442
  L_Menu0443
  L_Menu0444
  L_Menu0445
  L_Menu0446
  L_Menu0447
  L_Menu0448
  L_Menu0449
  L_Menu0450
  L_Menu0451
  L_Menu0452
  L_Menu0453
  L_Menu0454
  L_Menu0455
  L_Menu0456
  L_Menu0457
  L_Menu0458
  L_Menu0459
  L_Menu0460
  L_Menu0461
  L_Menu0462
  L_Menu0463
  L_Menu0464
  L_Menu0465
  L_Menu0466
  L_Menu0467
  L_Menu0468
  L_Menu0469
  L_Menu0470
  L_Menu0471
  L_Menu0472
  L_Menu0473
  L_Menu0474
  L_About475
  L_About476
  L_About477
  L_About478
  L_Menu1479
  L_Menu1480
  L_Menu1481
  L_Menu1482
  L_Menu1483
  L_Menu1484
  L_Menu1485
  L_Menu1486
  L_Menu2487
  L_Menu2488
  L_Menu2489
  L_Menu2490
  L_Menu2491
  L_Menu2492
  L_Menu2493
  L_Menu2494
  L_Menu2495
  L_Menu2496
  L_Menu2497
  L_Menu2498
  L_Menu2499
  L_Menu2500
  L_Menu2501
  L_Menu2502
  L_Menu2503
  L_Menu2504
  L_Menu2505
  L_Menu2506
  L_Menu2507
  L_Menu2508
  L_Menu2509
  L_Menu2510
  L_Menu2511
  L_Menu2512
  L_Menu2513
  L_Menu2514
  L_Menu2515
  L_Menu2516
  L_Menu2517
  L_Menu2518
  L_Menu2519
  L_Menu2520
  L_Menu2521
  L_Menu2522
  L_Menu2523
  L_Menu2524
  L_Menu2525
  L_Menu2526
  L_Menu2527
  L_Menu2528
  L_Menu2529
  L_Menu2530
  L_Menu2531
  L_Menu2532
  L_Menu2533
  L_Menu2534
  L_Menu2535
  L_Menu2536
  L_Menu2537
  L_Menu2538
  L_Menu2539
  L_Menu2540
  L_Menu2541
  L_Menu2542
  L_Menu2543
  L_Menu2544
  L_Menu2545
  L_Menu2546
  L_Menu2547
  L_Menu2548
  L_Menu2549
  L_Menu2550
  L_Menu2551
  L_Menu2552
  L_Menu2553
  L_Menu2554
  L_Menu2555
  L_Menu2556
  L_Menu2557
  L_Menu2558
  L_Menu2559
  L_Menu2560
  L_Menu2561
  L_Menu2562
  L_Menu2563
  L_Menu2564
  L_Menu2565
  L_Menu2566
  L_Menu2567
  L_Menu2568
  L_Menu2569
  L_Menu2570
  L_Menu2571
  L_Menu2572
  L_Menu2573
  L_Menu2574
  L_Menu2575
  L_Menu2576
  L_Menu2577
  L_Menu2578
  L_Menu2579
  L_Menu2580
  L_Menu2581
  L_Menu2582
  L_Menu2583
  L_Menu2584
  L_Menu2585
  L_Menu2586
  L_Menu2587
  L_Menu2588
  L_Menu2589
  L_Menu2590
  L_Menu2591
  L_Menu2592
  L_Menu2593
  L_Menu2594
  L_Menu2595
  L_Menu2596
  L_Menu2597
  L_Menu2598
  L_Menu2599
  L_Menu2600
  L_Menu2601
  L_Menu2602
  L_Menu2603
  L_Menu2604
  L_Menu2605
  L_Menu2606
  L_Menu2607
  L_Menu2608
  L_Menu2609
  L_Menu2610
  L_Menu2611
  L_Menu2612
  L_Menu2613
  L_Menu2614
  L_Menu2615
  L_Menu2616
  L_Menu2617
  L_Menu2618
  L_Menu2619
  L_Menu2620
  L_Menu2621
  L_Menu2622
  L_Menu2623
  L_Menu2624
  L_Menu2625
  L_Menu2626
  L_Menu2627
  L_Menu2628
  L_Menu2629
  L_Menu2630
  L_Menu2631
  L_Menu2632
  L_Menu2633
  L_Menu2634
  L_Menu2635
  L_LearnAuto636
  L_LearnAuto637
  L_LearnAuto638
  L_LearnAuto639
  L_LearnAuto640
  L_LearnAuto641
  L_LearnAuto642
  L_LearnAuto643
  L_LearnAuto644
  L_LearnAuto645
  L_LearnAuto646
  L_LearnAuto647
  L_LearnAuto648
  L_LearnAuto649
  L_LearnAuto650
  L_LearnAuto651
  L_LearnAuto652
  L_LearnAuto653
  L_LearnAuto654
  L_LearnAuto655
  L_LearnAuto656
  L_LearnAuto657
  L_LearnAuto658
  L_LearnAuto659
  L_LearnAuto660
  L_LearnAuto661
  L_LearnAuto662
  L_LearnAuto663
  L_LearnAuto664
  L_LearnAuto665
  L_LearnAuto666
  L_LearnAuto667
  L_LearnAuto668
  L_LearnAuto669
  L_LearnAuto670
  L_LearnAuto671
  L_LearnAuto672
  L_LearnAuto673
  L_LearnAuto674
  L_LearnAuto675
  L_LearnAuto676
  L_LearnAuto677
  L_LearnAuto678
  L_LearnAuto679
  L_SaveLearnData680
  L_SaveLearnData681
  L_LearnManual682
  L_LearnManual683
  L_LearnManual684
  L_LearnManual685
  L_LearnManual686
  L_LearnManual687
  L_LearnManual688
  L_LearnManual689
  L_LearnManual690
  L_LearnManual691
  L_LearnManual692
  L_LearnManual693
  L_LearnManual694
  L_LearnManual695
  L_LearnManual696
  L_LearnManual697
  L_LearnManual698
  L_LearnManual699
  L_LearnManual700
  L_LearnManual701
  L_LearnManual702
  L_LearnManual703
  L_LearnManual704
  L_LearnManual705
  L_LearnManual706
  L_LearnManual707
  L_LearnManual708
  L_LearnManual709
  L_LearnManual710
  L_LearnManual711
  L_LearnManual712
  L_LearnManual713
  L_LearnManual714
  L_LearnManual715
  L_LearnManual716
  L_LearnManual717
  L_LearnManual718
  L_LearnManual719
  L_LearnManual720
  L_LearnManual721
  L_LearnManual722
  L_LearnManual723
  L_LearnManual724
  L_LearnManual725
  L_LearnManual726
  L_LearnManual727
  L_LearnManual728
  L_LearnManual729
  L_LearnManual730
  L_LearnManual731
  L_LearnManual732
  L_LearnManual733
  L_charValueToStr734
  L_charValueToStr735
  L_intValueToStr736
  L_intValueToStr737
  L_SetOverloadParams738
  L_SetOverloadParams739
  L_SetOverloadParams740
  L_SetOverloadParams741
  L_SetOverloadParams742
  L_SetOverloadParams743
  L_SetOverloadParams744
  L_SetOverloadParams745
  L_SetOverloadParams746
  L_SetOverloadParams747
  L_SetOverloadParams748
  L_SetOverloadParams749
  L_SetOverloadParams750
  L_SetOverloadParams751
  L_SetOverloadParams752
  L_SetOverloadParams753
  L_SetOverloadParams754
  L_SetOverloadParams755
  L_SetOverloadParams756
  L_SetOverloadParams757
  L_SetOverloadParams758
  L_SetOverloadParams759
  L_SetOverloadParams760
  L_SetOverloadParams761
  L_SetOverloadParams762
  L_SetOverloadParams763
  L_SetOverloadParams764
  L_SetOverloadParams765
  L_SetOverloadParams766
  L_SetOverloadParams767
  L_SetOverloadParams768
  L_SetOverloadParams769
  L_SetOverloadParams770
  L_SetOverloadParams771
  L_SetOverloadParams772
  L_SetOverloadParams773
  L_SetOverloadParams774
  L_SetOverloadParams775
  L_SetOverloadParams776
  L_SetOverloadParams777
  L_SetOverloadParams778
  L_SetOverloadParams779
  L_SetOverloadParams780
  L_SetOverloadParams781
  L_SetOverloadParams782
  L_SetOverloadParams783
  L_SetOverloadParams784
  L_SetOverloadParams785
  L_SetOverloadParams786
  L_SetOverloadParams787
  L_SetOverloadParams788
  L_SetOverloadParams789
  L_SetOverloadParams790
  L_SetOverloadParams791
  L_SetOverloadParams792
  L_SetOverloadParams793
  L_SetOverloadParams794
  L_SetOverloadParams795
  L_SetOverloadParams796
  L_SetOverloadParams797
  L_SetOverloadParams798
  L_SetOverloadParams799
  L_TorqueLogger800
  L_TorqueLogger801
  L_TorqueLogger802
  L_TorqueLogger803
  L_TorqueLogger804
  L_TorqueLogger805
  L_TorqueLogger806
  L__interrupt807
  L__interrupt808
  L__main809
  L__main810
  L__main811
  L__main812
  L__main813
  L__main814
  L__State1815
  L__State2816
  L__State2817
  L__State2818
  L__State2819
  L__State2820
  L__State3821
  L__State3822
  L__State3823
  L__State3824
  L__State3825
  L__State3826
  L__State4827
  L__State4828
  L__State4829
  L__State4830
  L__State4831
  L__State5832
  L__State5833
  L__State5834
  L__State5835
  L__State5836
  L__State6837
  L__State6838
  L__State6839
  L__State6840
  L__State6841
  L__State7842
  L__State7843
  L__State7844
  L__State7845
  L__State7846
  L__State7847
  L__State7848
  L__State7849
  L__State7850
  L__State8851
  L__State8852
  L__State8853
  L__State8854
  L__State8855
  L__State8856
  L__State8857
  L__State8858
  L__State8859
  L__State8860
  L__LCDUpdater861
  L__LCDUpdater862
  L__LCDUpdater863
  L__LCDUpdater864
  L__LCDUpdater865
  L__LCDUpdater866
  L__TaskManager867
  L__EventHandler868
  L__GetKeysState869
  L__GetKeysState870
  L__GetKeysState871
  L__GetKeysState872
  L__GetKeysState873
  L__GetLimitSwitchState874
  L__SetMotorSpeed875
  L__ReturnAutoclose876
  L__GetAutocloseTime877
  L__ClearTasks878
  L__Menu2879
  L__Menu2880
  L__Menu2881
  L__Menu2882
  L__Menu2883
  L__Menu2884
  L__Menu2885
  L__Menu2886
  L__Menu2887
  L__Menu2888
  L__Menu2889
  L__Menu2890
  L__Menu2891
  L__Menu2892
  L__Menu2893
  L__Menu2894
  L__Menu2895
  L__Menu2896
  L__Menu2897
  L__Menu2898
  L__Menu2899
  L__Menu2900
  L__Menu2901
  L__Menu2902
  L__Menu2903
  L__Menu2904
  L__Menu2905
  L__Menu2906
  L__Menu2907
  L__Menu2908
  L__Menu2909
  L__Menu2910
  L__Menu2911
  L__Menu2912
  L__Menu2913
  L__Menu2914
  L__Menu2915
  L__Menu2916
  L__Menu2917
  L__Menu2918
  L__LearnAuto919
  L__LearnAuto920
  L__LearnAuto921
  L__LearnAuto922
  L__LearnAuto923
  L__LearnAuto924
  L__LearnManual925
  L__LearnManual926
  _interrupt
  L__interrupt927
  _ResetTaskEvents
  _Decrypt
  _Logger
  _main
  _StateManager
  _StateTest
  _State00
  _State1
  L__State1928
  _State2
  L__State2929
  L__State2930
  _State3
  L__State3931
  _State4
  L__State4932
  _State5
  L__State5933
  L__State5934
  _State6
  L__State6935
  L__State6936
  _State7
  L__State7937
  _State8
  L__State8938
  _LCDUpdater
  _Init
  _TaskManager
  L__TaskManager939
  _AddTask
  _EventHandler
  _GetKeysState
  L__GetKeysState940
  L__GetKeysState941
  L__GetKeysState942
  L__GetKeysState943
  L__GetKeysState944
  L__GetKeysState945
  L__GetKeysState946
  _GetExternalKeysState
  _GetLimitSwitchState
  _GetRemoteState
  L__GetRemoteState947
  L__GetRemoteState948
  L__GetRemoteState949
  L__GetRemoteState950
  L__GetRemoteState951
  L__GetRemoteState952
  L__GetRemoteState953
  L__GetRemoteState954
  _GetOverloadState
  L__GetOverloadState955
  L__GetOverloadState956
  L__GetOverloadState957
  L__GetOverloadState958
  L__GetOverloadState959
  L__GetOverloadState960
  L__GetOverloadState961
  L__GetOverloadState962
  _GetPhotocellState
  _SetMotorSpeed
  _OverloadInit
  _SaveConfigs
  _LoadConfigs
  _FactorySettings
  _StartMotor
  L__StartMotor963
  L__StartMotor964
  L__StartMotor965
  L__StartMotor966
  _StopMotor
  _CheckTask
  _ReturnAutoclose
  _GetAutocloseTime
  _ClearTasks
  _Menu0
  _About
  _Menu1
  _Menu2
  L__Menu2967
  L__Menu2968
  _Menu3
  _LearnAuto
  _AutoLearnCalculator
  _SaveLearnData
  _LearnManual
  _charValueToStr
  _charValueToStr_AC
  _intValueToStr
  L__intValueToStr969
  _SetOverloadParams
  _TorqueLogger
